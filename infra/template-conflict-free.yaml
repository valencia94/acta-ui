AWSTemplateFormatVersion: '2010-09-09'
Description: "ACTA-UI Minimal Conflict-Free Stack â€” No Anchors, All Integrations"

Parameters:
  ExistingApiId:
    Type: String
    Description: "Pre-existing REST API ID"
  ExistingApiRootResourceId:
    Type: String
    Description: "API root resource ID"
  ProjectMetadataEnricherArn:
    Type: String
    Description: "Lambda ARN to route all endpoints to"
  ProjectMetadataEnricherFunctionName:
    Type: String
    Description: "Function name for permissions"
  DeploymentTimestamp:
    Type: String
    Description: "Forces new deployment (use current timestamp)"

Resources:

  # /projects
  ProjectsResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId:  !Ref ExistingApiId
      ParentId:   !Ref ExistingApiRootResourceId
      PathPart:   projects

  ProjectsGetMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:      !Ref ExistingApiId
      ResourceId:     !Ref ProjectsResource
      HttpMethod:     GET
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Ref ProjectMetadataEnricherArn

  ProjectsOptionsMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:      !Ref ExistingApiId
      ResourceId:     !Ref ProjectsResource
      HttpMethod:     OPTIONS
      AuthorizationType: NONE
      Integration:
        Type: MOCK
        RequestTemplates: { "application/json": "{\"statusCode\": 200}" }
        IntegrationResponses:
          - StatusCode: 200
            ResponseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'GET,HEAD,OPTIONS'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type'"
      MethodResponses:
        - StatusCode: 200
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Headers: true

  # /pm-projects
  PMProjectsResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId:  !Ref ExistingApiId
      ParentId:   !Ref ExistingApiRootResourceId
      PathPart:   pm-projects

  PMProjectsAllResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId:  !Ref ExistingApiId
      ParentId:   !Ref PMProjectsResource
      PathPart:   all-projects

  PMProjectsAllGetMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:      !Ref ExistingApiId
      ResourceId:     !Ref PMProjectsAllResource
      HttpMethod:     GET
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Ref ProjectMetadataEnricherArn

  PMProjectsAllOptionsMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:      !Ref ExistingApiId
      ResourceId:     !Ref PMProjectsAllResource
      HttpMethod:     OPTIONS
      AuthorizationType: NONE
      Integration:
        Type: MOCK
        RequestTemplates: { "application/json": "{\"statusCode\": 200}" }
        IntegrationResponses:
          - StatusCode: 200
            ResponseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'GET,HEAD,OPTIONS'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type'"
      MethodResponses:
        - StatusCode: 200
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Headers: true

  PMProjectsEmailResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId:  !Ref ExistingApiId
      ParentId:   !Ref PMProjectsResource
      PathPart:   '{pmEmail}'

  PMProjectsEmailGetMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:      !Ref ExistingApiId
      ResourceId:     !Ref PMProjectsEmailResource
      HttpMethod:     GET
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Ref ProjectMetadataEnricherArn

  PMProjectsEmailOptionsMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:      !Ref ExistingApiId
      ResourceId:     !Ref PMProjectsEmailResource
      HttpMethod:     OPTIONS
      AuthorizationType: NONE
      Integration:
        Type: MOCK
        RequestTemplates: { "application/json": "{\"statusCode\": 200}" }
        IntegrationResponses:
          - StatusCode: 200
            ResponseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'GET,HEAD,OPTIONS'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type'"
      MethodResponses:
        - StatusCode: 200
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Headers: true

  # /check-document
  CheckDocRootResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId:  !Ref ExistingApiId
      ParentId:   !Ref ExistingApiRootResourceId
      PathPart:   check-document

  CheckDocIdResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId:  !Ref ExistingApiId
      ParentId:   !Ref CheckDocRootResource
      PathPart:   '{projectId}'

  CheckDocGetMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:      !Ref ExistingApiId
      ResourceId:     !Ref CheckDocIdResource
      HttpMethod:     GET
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Ref ProjectMetadataEnricherArn

  CheckDocHeadMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:      !Ref ExistingApiId
      ResourceId:     !Ref CheckDocIdResource
      HttpMethod:     HEAD
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Ref ProjectMetadataEnricherArn

  CheckDocIdOptionsMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:      !Ref ExistingApiId
      ResourceId:     !Ref CheckDocIdResource
      HttpMethod:     OPTIONS
      AuthorizationType: NONE
      Integration:
        Type: MOCK
        RequestTemplates: { "application/json": "{\"statusCode\": 200}" }
        IntegrationResponses:
          - StatusCode: 200
            ResponseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'GET,HEAD,OPTIONS'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type'"
      MethodResponses:
        - StatusCode: 200
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Headers: true

###############################################################################
# Lambda invoke permissions
###############################################################################
  ProjectsPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref ProjectMetadataEnricherFunctionName
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ExistingApiId}/*/GET/projects

  PMProjectsAllPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref ProjectMetadataEnricherFunctionName
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ExistingApiId}/*/GET/pm-projects/all-projects

  PMProjectsEmailPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref ProjectMetadataEnricherFunctionName
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ExistingApiId}/*/GET/pm-projects/*

  CheckDocGetPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref ProjectMetadataEnricherFunctionName
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ExistingApiId}/*/GET/check-document/*

  CheckDocHeadPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref ProjectMetadataEnricherFunctionName
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ExistingApiId}/*/HEAD/check-document/*

###############################################################################
# Deployment & Stage
###############################################################################
  ConflictFreeApiGatewayDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn:
      - ProjectsGetMethod
      - ProjectsOptionsMethod
      - PMProjectsAllGetMethod
      - PMProjectsAllOptionsMethod
      - PMProjectsEmailGetMethod
      - PMProjectsEmailOptionsMethod
      - CheckDocGetMethod
      - CheckDocHeadMethod
      - CheckDocIdOptionsMethod
    Properties:
      RestApiId: !Ref ExistingApiId
      Description: !Sub "Conflict-free deployment ${DeploymentTimestamp}"

  ConflictFreeProdStage:
    Type: AWS::ApiGateway::Stage
    Properties:
      RestApiId:    !Ref ExistingApiId
      DeploymentId: !Ref ConflictFreeApiGatewayDeployment
      StageName:    prod
      Description:  !Sub "Prod stage â€“ ${DeploymentTimestamp}"

Outputs:
  ProjectsEndpoint:
    Value: !Sub "https://${ExistingApiId}.execute-api.${AWS::Region}.amazonaws.com/prod/projects"
  PMProjectsAllEndpoint:
    Value: !Sub "https://${ExistingApiId}.execute-api.${AWS::Region}.amazonaws.com/prod/pm-projects/all-projects"
  PMProjectsByEmailEndpoint:
    Value: !Sub "https://${ExistingApiId}.execute-api.${AWS::Region}.amazonaws.com/prod/pm-projects/{pmEmail}"
  CheckDocumentEndpoint:
    Value: !Sub "https://${ExistingApiId}.execute-api.${AWS::Region}.amazonaws.com/prod/check-document/{projectId}"
