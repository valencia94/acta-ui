AWSTemplateFormatVersion: '2010-09-09'
Description: Conflict-free wiring – route PM endpoints to projectMetadataEnricher

###############################################################################
# Parameters
###############################################################################
Parameters:
  ExistingApiId:
    Type: String
    Default: q2b9avfwv5
  ExistingApiRootResourceId:
    Type: String
    Default: kw8f8zihjg
  ProjectMetadataEnricherArn:
    Type: String
    Default: arn:aws:lambda:us-east-2:703671891952:function:projectMetadataEnricher
  ProjectMetadataEnricherFunctionName:
    Type: String
    Default: projectMetadataEnricher
  DeploymentTimestamp:
    Type: String
    Default: "20250629-110500"

###############################################################################
# Re-usable YAML pieces (anchors **without dots**)
###############################################################################
# — Lambda proxy integration props —
LambdaProxyProps: &LambdaProxyProps
  AuthorizationType: NONE
  Integration:
    Type: AWS_PROXY
    IntegrationHttpMethod: POST
    Uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ProjectMetadataEnricherArn}/invocations

# — CORS OPTIONS mock props —
CorsOptionsProps: &CorsOptionsProps
  AuthorizationType: NONE
  HttpMethod: OPTIONS
  Integration:
    Type: MOCK
    RequestTemplates:
      application/json: '{"statusCode":200}'
    IntegrationResponses:
      - StatusCode: 200
        ResponseParameters:
          method.response.header.Access-Control-Allow-Origin:  "'*'"
          method.response.header.Access-Control-Allow-Headers: "'*'"
          method.response.header.Access-Control-Allow-Methods: "'GET,HEAD,OPTIONS'"
  MethodResponses:
    - StatusCode: 200
      ResponseParameters:
        method.response.header.Access-Control-Allow-Origin:  true
        method.response.header.Access-Control-Allow-Headers: true
        method.response.header.Access-Control-Allow-Methods: true

###############################################################################
# Resources
###############################################################################
Resources:

# ─── /projects ───────────────────────────────────────────────────────────────
  ProjectsAliasResource:
    Type: AWS::ApiGateway::Resource
    Properties: { RestApiId: !Ref ExistingApiId, ParentId: !Ref ExistingApiRootResourceId, PathPart: projects }

  ProjectsAliasMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      <<: *LambdaProxyProps
      RestApiId: !Ref ExistingApiId
      ResourceId: !Ref ProjectsAliasResource
      HttpMethod: GET

  ProjectsAliasOptions:
    Type: AWS::ApiGateway::Method
    Properties:
      <<: *CorsOptionsProps
      RestApiId: !Ref ExistingApiId
      ResourceId: !Ref ProjectsAliasResource

# ─── /pm-manager roots ───────────────────────────────────────────────────────
  PMManagerResource:
    Type: AWS::ApiGateway::Resource
    Properties: { RestApiId: !Ref ExistingApiId, ParentId: !Ref ExistingApiRootResourceId, PathPart: pm-manager }

  PMManagerOptionsMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      <<: *CorsOptionsProps
      RestApiId: !Ref ExistingApiId
      ResourceId: !Ref PMManagerResource

  PMManagerAllProjectsResource:
    Type: AWS::ApiGateway::Resource
    Properties: { RestApiId: !Ref ExistingApiId, ParentId: !Ref PMManagerResource, PathPart: all-projects }

  PMManagerAllProjectsMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      <<: *LambdaProxyProps
      RestApiId: !Ref ExistingApiId
      ResourceId: !Ref PMManagerAllProjectsResource
      HttpMethod: GET

  PMManagerAllProjectsOptionsMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      <<: *CorsOptionsProps
      RestApiId: !Ref ExistingApiId
      ResourceId: !Ref PMManagerAllProjectsResource

  PMManagerByEmailResource:
    Type: AWS::ApiGateway::Resource
    Properties: { RestApiId: !Ref ExistingApiId, ParentId: !Ref PMManagerResource, PathPart: '{pmEmail}' }

  PMManagerByEmailMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      <<: *LambdaProxyProps
      RestApiId: !Ref ExistingApiId
      ResourceId: !Ref PMManagerByEmailResource
      HttpMethod: GET

  PMManagerByEmailOptionsMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      <<: *CorsOptionsProps
      RestApiId: !Ref ExistingApiId
      ResourceId: !Ref PMManagerByEmailResource

# ─── /document-validator ────────────────────────────────────────────────────
  DocumentValidatorResource:
    Type: AWS::ApiGateway::Resource
    Properties: { RestApiId: !Ref ExistingApiId, ParentId: !Ref ExistingApiRootResourceId, PathPart: document-validator }

  DocumentValidatorOptionsMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      <<: *CorsOptionsProps
      RestApiId: !Ref ExistingApiId
      ResourceId: !Ref DocumentValidatorResource

  DocumentValidatorIdResource:
    Type: AWS::ApiGateway::Resource
    Properties: { RestApiId: !Ref ExistingApiId, ParentId: !Ref DocumentValidatorResource, PathPart: '{projectId}' }

  DocumentValidatorGetMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      <<: *LambdaProxyProps
      RestApiId: !Ref ExistingApiId
      ResourceId: !Ref DocumentValidatorIdResource
      HttpMethod: GET

  DocumentValidatorHeadMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      <<: *LambdaProxyProps
      RestApiId: !Ref ExistingApiId
      ResourceId: !Ref DocumentValidatorIdResource
      HttpMethod: HEAD

  DocumentValidatorIdOptionsMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      <<: *CorsOptionsProps
      RestApiId: !Ref ExistingApiId
      ResourceId: !Ref DocumentValidatorIdResource

# ─── /projectMetadataEnricher passthrough ───────────────────────────────────
  ProjectMetadataEnricherResource:
    Type: AWS::ApiGateway::Resource
    Properties: { RestApiId: !Ref ExistingApiId, ParentId: !Ref ExistingApiRootResourceId, PathPart: projectMetadataEnricher }

  ProjectMetadataEnricherMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      <<: *LambdaProxyProps
      RestApiId: !Ref ExistingApiId
      ResourceId: !Ref ProjectMetadataEnricherResource
      HttpMethod: ANY

  ProjectMetadataEnricherOptionsMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      <<: *CorsOptionsProps
      RestApiId: !Ref ExistingApiId
      ResourceId: !Ref ProjectMetadataEnricherResource

###############################################################################
# Lambda permissions (6)
###############################################################################
  PMManagerAllProjectsPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref ProjectMetadataEnricherFunctionName
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ExistingApiId}/*/GET/pm-manager/all-projects

  PMManagerByEmailPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref ProjectMetadataEnricherFunctionName
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ExistingApiId}/*/GET/pm-manager/*

  ProjectsManagerPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref ProjectMetadataEnricherFunctionName
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ExistingApiId}/*/GET/projects

  DocumentValidatorGetPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref ProjectMetadataEnricherFunctionName
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ExistingApiId}/*/GET/document-validator/*

  DocumentValidatorHeadPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref ProjectMetadataEnricherFunctionName
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ExistingApiId}/*/HEAD/document-validator/*

  ProjectMetadataEnricherPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref ProjectMetadataEnricherFunctionName
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ExistingApiId}/*/*/projectMetadataEnricher

###############################################################################
# Deployment & Stage
###############################################################################
  ConflictFreeApiGatewayDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn:
      - PMManagerAllProjectsMethod
      - PMManagerByEmailMethod
      - ProjectsAliasMethod
      - DocumentValidatorGetMethod
      - DocumentValidatorHeadMethod
      - ProjectMetadataEnricherMethod
      - PMManagerOptionsMethod
      - PMManagerAllProjectsOptionsMethod
      - PMManagerByEmailOptionsMethod
      - ProjectsAliasOptions
      - DocumentValidatorOptionsMethod
      - DocumentValidatorIdOptionsMethod
      - ProjectMetadataEnricherOptionsMethod
    Properties:
      RestApiId: !Ref ExistingApiId
      Description: !Sub "Conflict-free deployment ${DeploymentTimestamp}"

  ConflictFreeProdStage:
    Type: AWS::ApiGateway::Stage
    Properties:
      DeploymentId: !Ref ConflictFreeApiGatewayDeployment
      RestApiId:    !Ref ExistingApiId
      StageName:    prod
      Description:  !Sub "Prod stage ${DeploymentTimestamp}"

###############################################################################
# Outputs
###############################################################################
Outputs:
  APIGatewayId:            { Value: !Ref ExistingApiId }
  DeploymentId:            { Value: !Ref ConflictFreeApiGatewayDeployment }
  StageId:                 { Value: !Ref ConflictFreeProdStage }
  HealthEndpoint:          { Value: !Sub "https://${ExistingApiId}.execute-api.${AWS::Region}.amazonaws.com/prod/health" }
  MetadataEnricherEndpoint:{ Value: !Sub "https://${ExistingApiId}.execute-api.${AWS::Region}.amazonaws.com/prod/projectMetadataEnricher" }
