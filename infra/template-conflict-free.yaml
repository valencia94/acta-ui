AWSTemplateFormatVersion: '2010-09-09'
Description: Conflict-free API – PM & alias paths

Parameters:
  ExistingApiId:                 { Type: String, Default: q2b9avfwv5 }
  ExistingApiRootResourceId:     { Type: String, Default: kw8f8zihjg }
  ProjectMetadataEnricherArn:    { Type: String, Default: arn:aws:lambda:us-east-2:703671891952:function:projectMetadataEnricher }
  ProjectMetadataEnricherFunctionName: { Type: String, Default: projectMetadataEnricher }
  DeploymentTimestamp:           { Type: String, Default: "20250629-000000" }

###############################################################################
# Resources – Core & Alias paths
###############################################################################
Resources:
  # ─── core resources
  PMManagerResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId:  !Ref ExistingApiId
      ParentId:   !Ref ExistingApiRootResourceId
      PathPart:   pm-manager

  PMManagerAllProjectsResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId:  !Ref ExistingApiId
      ParentId:   !Ref PMManagerResource
      PathPart:   all-projects

  PMManagerByEmailResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId:  !Ref ExistingApiId
      ParentId:   !Ref PMManagerResource
      PathPart:   '{pmEmail}'

  DocumentValidatorResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId:  !Ref ExistingApiId
      ParentId:   !Ref ExistingApiRootResourceId
      PathPart:   document-validator

  DocumentValidatorIdResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId:  !Ref ExistingApiId
      ParentId:   !Ref DocumentValidatorResource
      PathPart:   '{projectId}'

  ProjectsManagerResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId:  !Ref ExistingApiId
      ParentId:   !Ref ExistingApiRootResourceId
      PathPart:   projects-manager

  ProjectMetadataEnricherResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId:  !Ref ExistingApiId
      ParentId:   !Ref ExistingApiRootResourceId
      PathPart:   projectMetadataEnricher

  # ─── alias resources
  ProjectsAliasResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId:  !Ref ExistingApiId
      ParentId:   !Ref ExistingApiRootResourceId
      PathPart:   projects

  PMProjectsRootResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId:  !Ref ExistingApiId
      ParentId:   !Ref ExistingApiRootResourceId
      PathPart:   pm-projects

  PMProjectsAllAliasResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId:  !Ref ExistingApiId
      ParentId:   !Ref PMProjectsRootResource
      PathPart:   all-projects

  PMProjectsByEmailAliasResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId:  !Ref ExistingApiId
      ParentId:   !Ref PMProjectsRootResource
      PathPart:   '{pmEmail}'

  CheckDocRootAliasResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId:  !Ref ExistingApiId
      ParentId:   !Ref ExistingApiRootResourceId
      PathPart:   check-document

  CheckDocIdAliasResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId:  !Ref ExistingApiId
      ParentId:   !Ref CheckDocRootAliasResource
      PathPart:   '{projectId}'

###############################################################################
# Lambda-proxy methods  (12)  – block style Integration
###############################################################################
  PMManagerAllProjectsMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:  !Ref ExistingApiId
      ResourceId: !Ref PMManagerAllProjectsResource
      HttpMethod: GET
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub >
          arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ProjectMetadataEnricherArn}/invocations

  PMManagerByEmailMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:  !Ref ExistingApiId
      ResourceId: !Ref PMManagerByEmailResource
      HttpMethod: GET
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub >
          arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ProjectMetadataEnricherArn}/invocations

  ProjectsManagerMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:  !Ref ExistingApiId
      ResourceId: !Ref ProjectsManagerResource
      HttpMethod: GET
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub >
          arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ProjectMetadataEnricherArn}/invocations

  DocumentValidatorGetMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:  !Ref ExistingApiId
      ResourceId: !Ref DocumentValidatorIdResource
      HttpMethod: GET
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub >
          arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ProjectMetadataEnricherArn}/invocations

  DocumentValidatorHeadMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:  !Ref ExistingApiId
      ResourceId: !Ref DocumentValidatorIdResource
      HttpMethod: HEAD
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub >
          arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ProjectMetadataEnricherArn}/invocations

  ProjectMetadataEnricherMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:  !Ref ExistingApiId
      ResourceId: !Ref ProjectMetadataEnricherResource
      HttpMethod: ANY
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub >
          arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ProjectMetadataEnricherArn}/invocations

  # ── alias proxy (5) ─────────────────────────────────────────────
  ProjectsAliasMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:  !Ref ExistingApiId
      ResourceId: !Ref ProjectsAliasResource
      HttpMethod: GET
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub >
          arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ProjectMetadataEnricherArn}/invocations

  PMProjectsAllAliasMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:  !Ref ExistingApiId
      ResourceId: !Ref PMProjectsAllAliasResource
      HttpMethod: GET
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub >
          arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ProjectMetadataEnricherArn}/invocations

  PMProjectsByEmailAliasMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:  !Ref ExistingApiId
      ResourceId: !Ref PMProjectsByEmailAliasResource
      HttpMethod: GET
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub >
          arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ProjectMetadataEnricherArn}/invocations

  CheckDocGetAliasMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:  !Ref ExistingApiId
      ResourceId: !Ref CheckDocIdAliasResource
      HttpMethod: GET
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub >
          arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ProjectMetadataEnricherArn}/invocations

  CheckDocHeadAliasMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:  !Ref ExistingApiId
      ResourceId: !Ref CheckDocIdAliasResource
      HttpMethod: HEAD
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub >
          arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ProjectMetadataEnricherArn}/invocations

###############################################################################
# OPTIONS (CORS) – anchor & 17 definitions (block style)
###############################################################################
  # First OPTIONS method defines &CorsProps anchor
  PMManagerOptionsMethod:
    Type: AWS::ApiGateway::Method
    Properties: &CorsProps
      RestApiId:  !Ref ExistingApiId
      ResourceId: !Ref PMManagerResource
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        Type: MOCK
        RequestTemplates:
          application/json: '{"statusCode": 200}'
        IntegrationResponses:
          - StatusCode: 200
            ResponseParameters:
              method.response.header.Access-Control-Allow-Origin:  "'*'"
              method.response.header.Access-Control-Allow-Methods: "'GET,HEAD,OPTIONS'"
              method.response.header.Access-Control-Allow-Headers: "'*'"
      MethodResponses:
        - StatusCode: 200
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin:  true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Headers: true

  PMManagerAllProjectsOptionsMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      <<: *CorsProps
      ResourceId: !Ref PMManagerAllProjectsResource

  PMManagerByEmailOptionsMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      <<: *CorsProps
      ResourceId: !Ref PMManagerByEmailResource

  DocumentValidatorOptionsMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      <<: *CorsProps
      ResourceId: !Ref DocumentValidatorResource

  DocumentValidatorIdOptionsMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      <<: *CorsProps
      ResourceId: !Ref DocumentValidatorIdResource

  ProjectsManagerOptionsMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      <<: *CorsProps
      ResourceId: !Ref ProjectsManagerResource

  ProjectMetadataEnricherOptionsMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      <<: *CorsProps
      ResourceId: !Ref ProjectMetadataEnricherResource

  # alias OPTIONS (10)
  ProjectsAliasOptions:
    Type: AWS::ApiGateway::Method
    Properties:
      <<: *CorsProps
      ResourceId: !Ref ProjectsAliasResource

  PMProjectsRootOptions:
    Type: AWS::ApiGateway::Method
    Properties:
      <<: *CorsProps
      ResourceId: !Ref PMProjectsRootResource

  PMProjectsAllAliasOptions:
    Type: AWS::ApiGateway::Method
    Properties:
      <<: *CorsProps
      ResourceId: !Ref PMProjectsAllAliasResource

  PMProjectsByEmailAliasOptions:
    Type: AWS::ApiGateway::Method
    Properties:
      <<: *CorsProps
      ResourceId: !Ref PMProjectsByEmailAliasResource

  CheckDocRootAliasOptions:
    Type: AWS::ApiGateway::Method
    Properties:
      <<: *CorsProps
      ResourceId: !Ref CheckDocRootAliasResource

  CheckDocAliasOptions:
    Type: AWS::ApiGateway::Method
    Properties:
      <<: *CorsProps
      ResourceId: !Ref CheckDocIdAliasResource

###############################################################################
# Lambda permissions (12)  – unchanged from previous version
#  ‣ PMManagerAllProjectsPermission
#  ‣ ...
#  ‣ CheckDocHeadAliasPermission
###############################################################################
  PMManagerAllProjectsPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref ProjectMetadataEnricherFunctionName
      Action:       lambda:InvokeFunction
      Principal:    apigateway.amazonaws.com
      SourceArn:    !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ExistingApiId}/*/GET/pm-manager/all-projects

  PMManagerByEmailPermission:
    Type: AWS::Lambda::Permission
    Properties:
      <<: *PMManagerAllProjectsPermission.Properties
      SourceArn:    !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ExistingApiId}/*/GET/pm-manager/*

  ProjectsManagerPermission:
    Type: AWS::Lambda::Permission
    Properties:
      <<: *PMManagerAllProjectsPermission.Properties
      SourceArn:    !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ExistingApiId}/*/GET/projects-manager

  DocumentValidatorGetPermission:
    Type: AWS::Lambda::Permission
    Properties:
      <<: *PMManagerAllProjectsPermission.Properties
      SourceArn:    !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ExistingApiId}/*/GET/document-validator/*

  DocumentValidatorHeadPermission:
    Type: AWS::Lambda::Permission
    Properties:
      <<: *PMManagerAllProjectsPermission.Properties
      SourceArn:    !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ExistingApiId}/*/HEAD/document-validator/*

  ProjectMetadataEnricherPermission:
    Type: AWS::Lambda::Permission
    Properties:
      <<: *PMManagerAllProjectsPermission.Properties
      SourceArn:    !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ExistingApiId}/*/*/projectMetadataEnricher

  ProjectsAliasPermission:
    Type: AWS::Lambda::Permission
    Properties:
      <<: *PMManagerAllProjectsPermission.Properties
      SourceArn:    !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ExistingApiId}/*/GET/projects

  PMProjectsAllAliasPermission:
    Type: AWS::Lambda::Permission
    Properties:
      <<: *PMManagerAllProjectsPermission.Properties
      SourceArn:    !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ExistingApiId}/*/GET/pm-projects/all-projects

  PMProjectsByEmailAliasPermission:
    Type: AWS::Lambda::Permission
    Properties:
      <<: *PMManagerAllProjectsPermission.Properties
      SourceArn:    !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ExistingApiId}/*/GET/pm-projects/*

  CheckDocGetAliasPermission:
    Type: AWS::Lambda::Permission
    Properties:
      <<: *PMManagerAllProjectsPermission.Properties
      SourceArn:    !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ExistingApiId}/*/GET/check-document/*

  CheckDocHeadAliasPermission:
    Type: AWS::Lambda::Permission
    Properties:
      <<: *PMManagerAllProjectsPermission.Properties
      SourceArn:    !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ExistingApiId}/*/HEAD/check-document/*

###############################################################################
# Deployment, Stage, Outputs – unchanged
###############################################################################
  ConflictFreeApiGatewayDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn:
      # 12 proxy
      - PMManagerAllProjectsMethod
      - PMManagerByEmailMethod
      - ProjectsManagerMethod
      - DocumentValidatorGetMethod
      - DocumentValidatorHeadMethod
      - ProjectMetadataEnricherMethod
      - ProjectsAliasMethod
      - PMProjectsAllAliasMethod
      - PMProjectsByEmailAliasMethod
      - CheckDocGetAliasMethod
      - CheckDocHeadAliasMethod
      # 17 OPTIONS
      - PMManagerOptionsMethod
      - PMManagerAllProjectsOptionsMethod
      - PMManagerByEmailOptionsMethod
      - DocumentValidatorOptionsMethod
      - DocumentValidatorIdOptionsMethod
      - ProjectsManagerOptionsMethod
      - ProjectMetadataEnricherOptionsMethod
      - ProjectsAliasOptions
      - PMProjectsRootOptions
      - PMProjectsAllAliasOptions
      - PMProjectsByEmailAliasOptions
      - CheckDocRootAliasOptions
      - CheckDocAliasOptions
    Properties:
      RestApiId: !Ref ExistingApiId
      Description: !Sub "Conflict-free deployment ${DeploymentTimestamp}"

  ConflictFreeProdStage:
    Type: AWS::ApiGateway::Stage
    Properties:
      DeploymentId: !Ref ConflictFreeApiGatewayDeployment
      RestApiId:    !Ref ExistingApiId
      StageName:    prod
      Description:  !Sub "Prod stage ${DeploymentTimestamp}"

Outputs:
  APIGatewayId:      { Value: !Ref ExistingApiId }
  DeploymentId:      { Value: !Ref ConflictFreeApiGatewayDeployment }
  StageId:           { Value: !Ref ConflictFreeProdStage }
  ProjectsEndpoint:  { Value: !Sub "https://${ExistingApiId}.execute-api.${AWS::Region}.amazonaws.com/prod/projects" }
  PMProjectsAll:     { Value: !Sub "https://${ExistingApiId}.execute-api.${AWS::Region}.amazonaws.com/prod/pm-projects/all-projects" }
  CheckDocEndpoint:  { Value: !Sub "https://${ExistingApiId}.execute-api.${AWS::Region}.amazonaws.com/prod/check-document/{projectId}" }
