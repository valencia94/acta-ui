AWSTemplateFormatVersion: '2010-09-09'
Description: Acta Backend API Gateway Integration (stable self-referenced)

Resources:
  # ─── Lambda Functions ─────────────────────────────────────────────
  GetTimelineFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: GetTimelineFunction
      Handler: handler.timeline
      Runtime: nodejs18.x
      Role: arn:aws:iam::703671891952:role/lambda-role
      Code:
        S3Bucket: your-code-bucket
        S3Key: get-timeline.zip

  GetDownloadActaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: GetDownloadActaFunction
      Handler: handler.download
      Runtime: nodejs18.x
      Role: arn:aws:iam::703671891952:role/lambda-role
      Code:
        S3Bucket: your-code-bucket
        S3Key: download-acta.zip

  GetProjectSummaryFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: GetProjectSummaryFunction
      Handler: handler.summary
      Runtime: nodejs18.x
      Role: arn:aws:iam::703671891952:role/lambda-role
      Code:
        S3Bucket: your-code-bucket
        S3Key: get-project-summary.zip

  SendApprovalEmailFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: SendApprovalEmailFunction
      Handler: handler.sendEmail
      Runtime: nodejs18.x
      Role: arn:aws:iam::703671891952:role/lambda-role
      Code:
        S3Bucket: your-code-bucket
        S3Key: send-approval-email.zip

  ProjectPlaceDataExtractorFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: ProjectPlaceDataExtractorFunction
      Handler: handler.extract
      Runtime: nodejs18.x
      Role: arn:aws:iam::703671891952:role/lambda-role
      Code:
        S3Bucket: your-code-bucket
        S3Key: extract-project-place.zip

  HealthCheckFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: HealthCheckFunction
      Handler: handler.health
      Runtime: nodejs18.x
      Role: arn:aws:iam::703671891952:role/lambda-role
      Code:
        S3Bucket: your-code-bucket
        S3Key: health-check.zip

  # ─── API Gateway ──────────────────────────────────────────────────
  ActaBackendApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: acta-backend-staging
      StageName: prod
      DefinitionBody:
        swagger: 2.0
        info:
          title: Acta API
          version: 1.0
        paths:
          /timeline/{id}:
            get:
              x-amazon-apigateway-integration:
                uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetTimelineFunction.Arn}/invocations
                httpMethod: POST
                type: aws_proxy
              responses: {}
              parameters:
                - name: id
                  in: path
                  required: true
                  type: string

          /download-acta/{id}:
            get:
              x-amazon-apigateway-integration:
                uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetDownloadActaFunction.Arn}/invocations
                httpMethod: POST
                type: aws_proxy
              responses: {}
              parameters:
                - name: id
                  in: path
                  required: true
                  type: string

          /project-summary/{id}:
            get:
              x-amazon-apigateway-integration:
                uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetProjectSummaryFunction.Arn}/invocations
                httpMethod: POST
                type: aws_proxy
              responses: {}
              parameters:
                - name: id
                  in: path
                  required: true
                  type: string

          /send-approval-email:
            post:
              x-amazon-apigateway-integration:
                uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${SendApprovalEmailFunction.Arn}/invocations
                httpMethod: POST
                type: aws_proxy
              responses: {}

          /extract-project-place/{id}:
            post:
              x-amazon-apigateway-integration:
                uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ProjectPlaceDataExtractorFunction.Arn}/invocations
                httpMethod: POST
                type: aws_proxy
              responses: {}
              parameters:
                - name: id
                  in: path
                  required: true
                  type: string

          /health:
            get:
              x-amazon-apigateway-integration:
                uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${HealthCheckFunction.Arn}/invocations
                httpMethod: POST
                type: aws_proxy
              responses: {}

Outputs:
  ApiURL:
    Description: Base URL for the Acta platform
    Value: !Sub https://${ActaBackendApi}.execute-api.${AWS::Region}.amazonaws.com/prod/
