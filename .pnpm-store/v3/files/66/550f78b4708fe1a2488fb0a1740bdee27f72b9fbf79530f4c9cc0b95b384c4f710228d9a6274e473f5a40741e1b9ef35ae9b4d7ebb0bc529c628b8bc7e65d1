import type { AlertTokens } from './alert';
import type { AIConversationTokens } from './aiConversation';
import type { AutocompleteTokens } from './autocomplete';
import type { AuthenticatorTokens } from './authenticator';
import type { AvatarTokens } from './avatar';
import type { BadgeTokens } from './badge';
import type { BreadcrumbsTokens } from './breadcrumbs';
import type { ButtonTokens } from './button';
import type { CardTokens } from './card';
import type { CheckboxTokens } from './checkbox';
import type { CheckboxFieldTokens } from './checkboxField';
import type { CollectionTokens } from './collection';
import type { CopyTokens } from './copy';
import type { DialCodeSelectTokens } from './dialCodeSelect';
import type { DividerTokens } from './divider';
import type { DropZoneTokens } from './dropZone';
import type { AccordionTokens } from './accordion';
import type { FieldTokens } from './field';
import type { FieldControlTokens } from './fieldControl';
import type { FieldGroupTokens } from './fieldGroup';
import type { FieldsetTokens } from './fieldset';
import type { FieldMessagesTokens } from './fieldMessages';
import type { FileUploaderTokens } from './fileuploader';
import type { FlexTokens } from './flex';
import type { HeadingTokens } from './heading';
import type { HighlightMatchTokens } from './highlightMatch';
import type { IconTokens } from './icon';
import type { InputTokens } from './input';
import type { ImageTokens } from './image';
import type { InAppMessagingTokens } from './inAppMessaging';
import type { LinkTokens } from './link';
import type { LivenessTokens } from './liveness';
import type { LoaderTokens } from './loader';
import type { MenuTokens } from './menu';
import type { MessageTokens } from './message';
import type { PaginationTokens } from './pagination';
import type { PasswordFieldTokens } from './passwordField';
import type { PhoneNumberFieldTokens } from './phoneNumberField';
import type { PlaceholderTokens } from './placeholder';
import type { RadioTokens } from './radio';
import type { RadioGroupTokens } from './radioGroup';
import type { RatingTokens } from './rating';
import type { SearchFieldTokens } from './searchField';
import type { SelectTokens } from './select';
import type { SelectFieldTokens } from './selectField';
import type { SliderFieldTokens } from './sliderField';
import type { StepperFieldTokens } from './stepperField';
import type { StorageManagerTokens } from './storagemanager';
import type { SwitchFieldTokens } from './switchField';
import type { TableTokens } from './table';
import type { TabsTokens } from './tabs';
import type { TextTokens } from './text';
import type { TextAreaFieldTokens } from './textAreaField';
import type { TextFieldTokens } from './textField';
import type { ToggleButtonTokens } from './toggleButton';
import type { ToggleButtonGroupTokens } from './toggleButtonGroup';
import type { OutputVariantKey } from '../types/designToken';
type BaseComponentTokens<Output extends OutputVariantKey> = {
    accordion?: AccordionTokens<Output>;
    aiConversation?: AIConversationTokens<Output>;
    alert?: AlertTokens<Output>;
    authenticator?: AuthenticatorTokens<Output>;
    autocomplete?: AutocompleteTokens<Output>;
    avatar?: AvatarTokens<Output>;
    badge?: BadgeTokens<Output>;
    breadcrumbs?: BreadcrumbsTokens<Output>;
    button?: ButtonTokens<Output>;
    card?: CardTokens<Output>;
    checkbox?: CheckboxTokens<Output>;
    checkboxfield?: CheckboxFieldTokens<Output>;
    collection?: CollectionTokens<Output>;
    copy?: CopyTokens<Output>;
    countrycodeselect?: DialCodeSelectTokens<Output>;
    divider?: DividerTokens<Output>;
    dropzone?: DropZoneTokens<Output>;
    field?: FieldTokens<Output>;
    fieldset?: FieldsetTokens<Output>;
    fieldcontrol?: FieldControlTokens<Output>;
    fieldgroup?: FieldGroupTokens<Output>;
    fieldmessages?: FieldMessagesTokens<Output>;
    fileuploader?: FileUploaderTokens<Output>;
    flex?: FlexTokens<Output>;
    heading?: HeadingTokens<Output>;
    highlightmatch?: HighlightMatchTokens<Output>;
    icon?: IconTokens<Output>;
    image?: ImageTokens<Output>;
    inappmessaging?: InAppMessagingTokens<Output>;
    input?: InputTokens<Output>;
    link?: LinkTokens<Output>;
    liveness?: LivenessTokens<Output>;
    loader?: LoaderTokens<Output>;
    menu?: MenuTokens<Output>;
    message?: MessageTokens<Output>;
    pagination?: PaginationTokens<Output>;
    passwordfield?: PasswordFieldTokens<Output>;
    phonenumberfield?: PhoneNumberFieldTokens<Output>;
    placeholder?: PlaceholderTokens<Output>;
    radio?: RadioTokens<Output>;
    radiogroup?: RadioGroupTokens<Output>;
    rating?: RatingTokens<Output>;
    searchfield?: SearchFieldTokens<Output>;
    select?: SelectTokens<Output>;
    selectfield?: SelectFieldTokens<Output>;
    sliderfield?: SliderFieldTokens<Output>;
    stepperfield?: StepperFieldTokens<Output>;
    storagemanager?: StorageManagerTokens<Output>;
    switchfield?: SwitchFieldTokens<Output>;
    table?: TableTokens<Output>;
    tabs?: TabsTokens<Output>;
    text?: TextTokens<Output>;
    textareafield?: TextAreaFieldTokens<Output>;
    textfield?: TextFieldTokens<Output>;
    togglebutton?: ToggleButtonTokens<Output>;
    togglebuttongroup?: ToggleButtonGroupTokens<Output>;
};
export type ComponentTokens = BaseComponentTokens<'optional'>;
export type DefaultComponentTokens = Required<{
    [Key in keyof ComponentTokens]: Required<BaseComponentTokens<'default'>[Key]>;
}>;
export type WebComponentTokens = Required<{
    [Key in keyof ComponentTokens]: Required<BaseComponentTokens<'required'>[Key]>;
}>;
export declare const components: DefaultComponentTokens;
export {};
