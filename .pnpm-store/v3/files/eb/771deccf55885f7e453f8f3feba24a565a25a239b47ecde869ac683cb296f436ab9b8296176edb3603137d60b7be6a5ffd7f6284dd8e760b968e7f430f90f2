import { AWSAppSyncRealTimeProvider, GraphQLOperation, GraphQLOptions, GraphQLResult, OperationTypeNode, GraphQLQuery, GraphQLSubscription } from '@aws-amplify/api-graphql';
import { CustomUserAgentDetails } from '@aws-amplify/core/internals/utils';
import { Observable } from 'rxjs';
/**
 * @deprecated
 * Use RestApi or GraphQLAPI to reduce your application bundle size
 * Export Cloud Logic APIs
 */
export declare class InternalAPIClass {
    /**
     * Initialize API with AWS configuration
     * @param {Object} options - Configuration object for API
     */
    private _options;
    private _graphqlApi;
    Cache: import("@aws-amplify/core/lib-esm/Cache/StorageCache").StorageCache;
    /**
     * Initialize API with AWS configuration
     * @param {Object} options - Configuration object for API
     */
    constructor(options: any);
    getModuleName(): string;
    /**
     * to get the operation type
     * @param operation
     */
    getGraphqlOperationType(operation: GraphQLOperation): OperationTypeNode;
    /**
     * Executes a GraphQL operation
     *
     * @param options - GraphQL Options
     * @param [additionalHeaders] - headers to merge in after any `graphql_headers` set in the config
     * @returns An Observable if queryType is 'subscription', else a promise of the graphql result from the query.
     */
    graphql<T>(options: GraphQLOptions, additionalHeaders?: {
        [key: string]: string;
    }, customUserAgentDetails?: CustomUserAgentDetails): T extends GraphQLQuery<T> ? Promise<GraphQLResult<T>> : T extends GraphQLSubscription<T> ? Observable<{
        provider: AWSAppSyncRealTimeProvider;
        value: GraphQLResult<T>;
    }> : Promise<GraphQLResult<any>> | Observable<object>;
}
export declare const InternalAPI: InternalAPIClass;
