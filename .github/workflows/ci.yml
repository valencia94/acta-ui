name: CI

on:
  push:
    branches: [develop, main, master]
  pull_request:

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    # ‚Ü≥ allow future OIDC deploy steps if you add them
    permissions:
      id-token: write
      contents: read

    steps:
      # 1) Checkout
      - uses: actions/checkout@v4

      # 2) Node 20
      - name: üü¢  Setup Node 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # 3) pnpm 9 + cache + install
      - name: ‚ôªÔ∏è  pnpm cache & install
        uses: pnpm/action-setup@v2
        with:
          version: 9
          run_install: |
            args: [--frozen-lockfile]
        env:
          CI: true
      - name: Restore pnpm store
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      # 4) Export backend URL for Vite build
      - name: Inject API base URL
        run: echo "VITE_API_BASE_URL=${{ secrets.VITE_API_BASE_URL }}" >> "$GITHUB_ENV"

      # 5) Lint, test, type-check
      - name: üîç  Lint
        run: pnpm lint

      - name: üß™  Unit tests
        run: pnpm test

      - name: Deploy API
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          aws cloudformation deploy \
            --stack-name acta-api \
            --template-file infra/template.yaml \
            --capabilities CAPABILITY_IAM || true
          n=1
          while aws cloudformation describe-stacks --stack-name acta-api | grep -q UPDATE_IN_PROGRESS; do
            sleep $((n*10))
            n=$((n+1))
            [ $n -gt 6 ] && exit 1
          done

      - name: üé®  Format check
        run: pnpm format --check

      - name: ‚úÖ  Env-schema check
        run: pnpm run check:env

      # 6) Build once (production bundle)
      - name: üèóÔ∏è  Build bundle
        run: pnpm run build

      # ---------- OIDC credentials ----------
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}

      # ---------- Deploy ----------
      - name: Deploy to S3 + invalidate CloudFront
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
          CLOUDFRONT_DIST_ID: ${{ secrets.CLOUDFRONT_DIST_ID }}
        run: |
          chmod +x scripts/deploy-to-s3.sh
          ./scripts/deploy-to-s3.sh

      - name: API smoke tests
        env:
          API_BASE: ${{ secrets.VITE_API_BASE_URL }}
        run: |
          curl -sf "$API_BASE/health"
