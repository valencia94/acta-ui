name: Deploy Lambda Function Fixes

on:
  workflow_dispatch:
    inputs:
      deploy_functions:
        description: 'Deploy Lambda function fixes'
        required: true
        default: true
        type: boolean
      deploy_frontend:
        description: 'Deploy updated frontend'
        required: true
        default: true
        type: boolean

permissions:
  id-token: write
  contents: read

jobs:
  deploy-lambda-fixes:
    if: ${{ inputs.deploy_functions }}
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔐 Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.OIDC_AWS_ROLE_ARN }}
          aws-region: us-east-2

      - name: 🔧 Deploy Lambda function fixes
        run: |
          echo "🔧 Deploying Lambda function fixes for button issues..."
          chmod +x fix-lambda-functions.sh
          ./fix-lambda-functions.sh

      - name: 🧪 Test Lambda functions after deployment
        run: |
          echo "🧪 Testing Lambda functions after fixes..."
          chmod +x test-complete-system.sh
          ./test-complete-system.sh

  deploy-frontend:
    if: ${{ inputs.deploy_frontend }}
    runs-on: ubuntu-latest
    needs: deploy-lambda-fixes

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🟣 Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          standalone: true
          run_install: false

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🧪 Run CI checks
        run: pnpm run ci

      - name: 🔨 Build frontend with API fixes
        run: pnpm run build

      - name: 🔐 Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.OIDC_AWS_ROLE_ARN }}
          aws-region: us-east-2

      - name: 🚀 Deploy to S3
        run: |
          echo "🚀 Deploying updated frontend to S3..."
          aws s3 sync dist/ s3://acta-ui-bucket --delete

      - name: 🔄 Invalidate CloudFront
        run: |
          echo "🔄 Invalidating CloudFront cache..."
          aws cloudfront create-invalidation \
            --distribution-id E1ABCDEFGHIJKL \
            --paths "/*" || echo "⚠️ CloudFront invalidation failed - check distribution ID"

  test-complete-system:
    runs-on: ubuntu-latest
    needs: [deploy-lambda-fixes, deploy-frontend]

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🧪 Run comprehensive system test
        run: |
          echo "🧪 Running final system test..."
          chmod +x test-complete-system.sh
          ./test-complete-system.sh

      - name: 📊 Create deployment summary
        run: |
          echo "📊 DEPLOYMENT SUMMARY" | tee deployment-summary.md
          echo "====================" | tee -a deployment-summary.md
          echo "" | tee -a deployment-summary.md
          echo "✅ Lambda function fixes deployed" | tee -a deployment-summary.md
          echo "✅ Frontend updated with API endpoint fixes" | tee -a deployment-summary.md  
          echo "✅ System testing completed" | tee -a deployment-summary.md
          echo "" | tee -a deployment-summary.md
          echo "🎯 EXPECTED RESULTS:" | tee -a deployment-summary.md
          echo "- Project Summary button: 502 → 200" | tee -a deployment-summary.md
          echo "- Timeline button: 502 → 200" | tee -a deployment-summary.md
          echo "- Download buttons: 502 → 302/404" | tee -a deployment-summary.md
          echo "- Send Approval button: 400 → 200" | tee -a deployment-summary.md
          echo "- Admin/PM project lists: Working with auth" | tee -a deployment-summary.md
          echo "" | tee -a deployment-summary.md
          echo "🚀 Ready for production testing with authentication!" | tee -a deployment-summary.md

      - name: 🗂 Upload deployment summary
        uses: actions/upload-artifact@v3
        with:
          name: deployment-summary
          path: deployment-summary.md
