name: Build and Deploy

on:
  push:
    branches: [develop]       # automatic deploys from develop
  pull_request:               # PRs still run lint/tests
  workflow_dispatch:          # manual button

jobs:
  build_deploy:
    runs-on: ubuntu-latest
    environment: prod          
    permissions:
      id-token: write          
      contents: read

    steps:
    # ───── 0) Checkout ────────────────────────────────────────────
    - uses: actions/checkout@v4

    # ───── 1) pnpm + Node cache & install ─────────────────────────
    - name: ♻️  pnpm cache & install
      uses: pnpm/action-setup@v2
      with:
        version: 9
        run_install: |
          args: [--no-frozen-lockfile]
      env:
        CI: true              # prevents scripts/prepare from running

    - name: 🟢  Setup Node 20
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: pnpm

    # ───── 2) Lint / type-check / unit tests ──────────────────────
    - name: 🔍  Lint & type-check
      run: pnpm lint

    - name: 🧪  Unit tests
      run: pnpm run test:vitest

    # ───── 3) Configure AWS credentials (OIDC) ────────────────────
    - name: Configure AWS credentials (OIDC)
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}    
        aws-region:     ${{ secrets.AWS_REGION }}

    # ───── 4) Deploy/update backend stack ─────────────────────────
    - name: ☁️  Deploy API (CloudFormation)
      if: ${{ github.ref == 'refs/heads/develop' && (github.event_name == 'push' || github.event_name == 'workflow_dispatch') }}
      run: |
        attempts=0
        until [ $attempts -ge 5 ]; do
          aws cloudformation deploy \
            --stack-name acta-backend-staging \
            --template-file infra/template.yaml \
            --capabilities CAPABILITY_IAM \
            --no-fail-on-empty-changeset && break
          status=$(aws cloudformation describe-stacks \
                     --stack-name acta-backend-staging \
                     --query "Stacks[0].StackStatus" --output text || echo "")
          if [ "$status" = "UPDATE_IN_PROGRESS" ]; then
            sleep "$((2 ** attempts))"
            attempts=$((attempts + 1))
          else
            exit 1
          fi
        done

    # ───── 5) Backend smoke test ──────────────────────────────────
    - name: API smoke test
      if: ${{ github.ref == 'refs/heads/develop' && (github.event_name == 'push' || github.event_name == 'workflow_dispatch') }}
      env:
        API_BASE: ${{ secrets.VITE_API_BASE_URL }}
      run: curl -sf "$API_BASE/health"

    # ───── 6) Build UI ────────────────────────────────────────────
    - name: Inject API base URL
      run: echo "VITE_API_BASE_URL=${{ secrets.VITE_API_BASE_URL }}" >> "$GITHUB_ENV"

    - name: 🏗️  Build UI
      run: pnpm run build

    # ───── 7) Playwright E2E ──────────────────────────────────────
    - name: E2E tests
      run: |
        pnpm exec playwright install --with-deps
        pnpm exec playwright test || true   # don't block deploy on flake

    # ───── 8) Deploy UI bundle ────────────────────────────────────
    - name: 🚀  Deploy UI to S3 + invalidate CloudFront
      if: ${{ github.ref == 'refs/heads/develop' && (github.event_name == 'push' || github.event_name == 'workflow_dispatch') }}
      env:
        S3_BUCKET_NAME:     ${{ secrets.S3_BUCKET_NAME }}
        CLOUDFRONT_DIST_ID: ${{ secrets.CLOUDFRONT_DIST_ID }}
      run: |
        chmod +x scripts/deploy-to-s3.sh
        ./scripts/deploy-to-s3.sh

    # ───── 9) Front-end smoke test (CloudFront) ───────────────────
    - name: Smoke Test (UI via CloudFront)
      if: ${{ github.ref == 'refs/heads/develop' && (github.event_name == 'push' || github.event_name == 'workflow_dispatch') }}
      env:
        CLOUDFRONT_DOMAIN: ${{ secrets.DISTRIBUTION_DOMAIN_NAME }}
      run: |
        echo "🔧 Checking CloudFront /health"
        for n in {1..5}; do
          echo "Attempt $n..."
          curl -f -s "https://$CLOUDFRONT_DOMAIN/health" && { echo "UI live ✅"; exit 0; }
          echo "Not healthy yet. Sleeping 15 s…"
          sleep 15
        done
        echo "❌ UI health endpoint failed after multiple attempts." >&2
        exit 1

    # ───── 10) Upload Playwright report ───────────────────────────
    - name: 📦  Upload Playwright report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: playwright-report
        path: playwright-report
        retention-days: 3
