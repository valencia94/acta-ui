# .github/workflows/build_deploy.yml
name: Build and Deploy

on:
  push:
    branches: [develop]
  workflow_dispatch: {}

jobs:
  build_deploy:
    runs-on: ubuntu-latest
    environment: prod
    permissions:
      id-token: write # OIDC for AWS
      contents: read

    steps:
      # ───── 0) Checkout ──────────────────────────────────────────
      - uses: actions/checkout@v4

      # ───── 0.1) Ensure /health exists before build ─────────────
      - name: 💚 add static /health
        run: |
          mkdir -p public
          echo '{"status":"ok"}' > public/health

      # ───── 1) Install deps (pnpm → Node cache) ─────────────────
      - uses: pnpm/action-setup@v2
        with:
          version: 9

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      # ───── 1.1)  Install project deps (prettier lives here) ────
      - run: pnpm install --no-frozen-lockfile

      # ───── 1.2)  Prettier – auto-fix everything except workflows
      - name: 🧼  format
        run: |
          pnpm exec prettier --write "**/*.{js,ts,tsx,css,md,yaml,yml,json}" \
            "!.github/workflows/**/*.yml"

      # ───── 2) Lint  &  unit tests ──────────────────────────────
      - name: 🔍  ESLint & type check
        run: pnpm lint
      - name: 🧪  Vitest
        run: pnpm run test:vitest

      # ───── 3) Build UI (dist/) ─────────────────────────────────
      - name: Inject API base URL
        run: echo "VITE_API_BASE_URL=${{ secrets.VITE_API_BASE_URL }}" >> "$GITHUB_ENV"

      - name: 🏗️  build (Vite)
        run: pnpm run build # → dist/

      - name: Copy SPA client routes
        run: bash scripts/push-spa-routes.sh

      # ───── 4) Local smoke check (HTML returns 200) ─────────────
      - name: 🌐  local preview smoke
        run: |
          pnpm exec vite preview --port 4173 --strictPort & SERVER=$!
          sleep 4
          curl -sf http://localhost:4173/           # 200 or curls exits 22
          kill $SERVER

      # ───── 5) AWS creds (OIDC) ─────────────────────────────────
      - uses: aws-actions/configure-aws-credentials@v4
        if: github.ref == 'refs/heads/develop' || github.event_name == 'workflow_dispatch'
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}

      # ───── 6) Deploy UI ────────────────────────────────────────
      - name: 🚀 deploy UI
        if: github.ref == 'refs/heads/develop' || github.event_name == 'workflow_dispatch'
        env:
          DEPLOY_BUCKET: ${{ secrets.S3_BUCKET_NAME }}
          CF_DIST_ID: ${{ secrets.CLOUDFRONT_DIST_ID }}
        run: |
          set -eux
          aws s3 sync dist/ "s3://$DEPLOY_BUCKET" --delete
          bash scripts/push-spa-routes.sh
          INV=$(aws cloudfront create-invalidation --distribution-id "$CF_DIST_ID" --paths '/index.html' '/login' '/login/index.html' '/dashboard' '/dashboard/index.html' --query 'Invalidation.Id' --output text)
          aws cloudfront wait invalidation-completed --distribution-id "$CF_DIST_ID" --id "$INV"
