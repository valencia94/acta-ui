name: Build and Deploy

on:
  push:
    branches: [develop]
  workflow_dispatch:

jobs:
  build_deploy:
    runs-on: ubuntu-latest
    environment: prod

    # üëá Required so GitHub issues an OIDC token the AWS action can exchange
    permissions:
      id-token: write      # needed for OIDC
      contents: read       # allows actions/checkout

    steps:
      # 1Ô∏è‚É£  Checkout code
      - uses: actions/checkout@v4

      # 2Ô∏è‚É£  Set up PNPM
      - uses: pnpm/action-setup@v2
        with:
          version: 9
          run_install: |
            args: [--no-frozen-lockfile]

      # 3Ô∏è‚É£  Set up Node
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      # 4Ô∏è‚É£  Install dependencies
      - name: Install deps
        run: pnpm install --no-frozen-lockfile

      # 5Ô∏è‚É£  Build the UI
      - name: Build UI
        env:
          VITE_API_BASE_URL: ${{ secrets.VITE_API_BASE_URL }}
        run: pnpm run build

      # 6Ô∏è‚É£  Configure AWS credentials (OIDC)
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region:     ${{ secrets.AWS_REGION }}

      # 7Ô∏è‚É£  Deploy API CloudFormation stack
      - name: Deploy API
        run: |
          aws cloudformation deploy \
            --stack-name acta-api \
            --template-file infra/template.yaml \
            --capabilities CAPABILITY_IAM

      # 8Ô∏è‚É£  Deploy UI bundle to S3 + invalidate CloudFront
      - name: Deploy UI to S3
        env:
          S3_BUCKET_NAME:      ${{ secrets.S3_BUCKET_NAME }}
          CLOUDFRONT_DIST_ID:  ${{ secrets.CLOUDFRONT_DIST_ID }}
        run: |
          chmod +x scripts/deploy-to-s3.sh
          ./scripts/deploy-to-s3.sh
