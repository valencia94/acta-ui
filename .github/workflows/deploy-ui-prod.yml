name: 🚀 Deploy ACTA-UI to S3 + CloudFront

on:
  push:
    branches: [develop, main]

# ---------- Global environment ----------
env:
  AWS_REGION: us-east-2
  S3_BUCKET: acta-ui-frontend-prod
  CLOUDFRONT_DISTRIBUTION_ID: ${{ secrets.CLOUDFRONT_DIST_ID }}
  NODE_VERSION: 20
  API_ID:      ${{ secrets.ACTA_API_ID }}
  API_ROOT_ID: ${{ secrets.ACTA_API_ROOT_ID }}
  API_STAGE:   prod
# ----------------------------------------

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write   # OIDC role for AWS

    steps:
      - uses: actions/checkout@v4                               # 1️⃣

      - name: 🟣 Set up PNPM                                     # 2️⃣
        uses: pnpm/action-setup@v4
        with:
          standalone: true
          run_install: false

      - name: 🔧 Set up Node ${{ env.NODE_VERSION }}             # 3️⃣
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: pnpm

      - name: 📦 Install deps                                    # 4️⃣
        run: pnpm install --frozen-lockfile

      - name: 🔒 Configure AWS credentials                       # 5️⃣
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.OIDC_AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
          # If you still rely on static keys, uncomment below:
          # aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          # aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: ✅ Guard required env vars                         # 6️⃣
        run: |
          for var in API_ID CLOUDFRONT_DISTRIBUTION_ID; do
            if [ -z "${!var}" ]; then
              echo "❌ $var is empty – aborting" >&2
              exit 1
            fi
          done

      - name: ⚙️ Enable CORS on API Gateway                      # 7️⃣
        run: node scripts/enable-cors.js

      - name: 🏗️ Build                                           # 8️⃣
        run: pnpm run build

      - name: 📤 Sync to S3                                      # 9️⃣
        run: aws s3 sync dist/ "s3://$S3_BUCKET/" --delete --region "$AWS_REGION"

      - name: 🚀 Invalidate CloudFront                           # 🔟
        run: aws cloudfront create-invalidation \
             --distribution-id "$CLOUDFRONT_DISTRIBUTION_ID" \
             --paths '/*'
