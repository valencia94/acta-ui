name: 🚀 Deploy ACTA-UI to S3 + CloudFront
on:
  push:
    branches: [develop, main]

env:
  AWS_REGION: us-east-2
  S3_BUCKET: acta-ui-frontend-prod
  CLOUDFRONT_DISTRIBUTION_ID: EPQU7PVDLQXUA
  NODE_VERSION: 20
  API_ID: ${{ secrets.PROD_REST_API_ID }}   # <- ensures env always set
  API_STAGE: prod

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      # 1️⃣ Checkout
      - uses: actions/checkout@v4

      # 2️⃣ PNPM first
      - name: 🟣 Set up PNPM
        uses: pnpm/action-setup@v4
        with:
          standalone: true
          run_install: false

      # 3️⃣ Node with pnpm cache
      - name: 🔧 Set up Node ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: pnpm

      # 4️⃣ Install deps
      - run: pnpm install --frozen-lockfile
        name: 📦 Install deps

      # 5️⃣ AWS creds **before** any SDK/CLI use
      - name: 🔒 Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.OIDC_AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
          # If you use static keys instead, uncomment:
          # aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          # aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # 6️⃣ Enable CORS (now has creds + API_ID)
      - name: ⚙️ Enable CORS on API Gateway (idempotent)
        run: node scripts/enable-cors.js

      # 7️⃣ Build
      - name: 🏗️ Build
        run: pnpm run build

      # 8️⃣ Deploy static site
      - name: 📤 Sync to S3
        run: aws s3 sync dist/ s3://$S3_BUCKET/ --delete --region $AWS_REGION

      - name: 🚀 Invalidate CloudFront
        run: aws cloudfront create-invalidation \
             --distribution-id $CLOUDFRONT_DISTRIBUTION_ID \
             --paths '/*'
