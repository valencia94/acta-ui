# ====================================================================
#  ACTA-UI POST-DEPLOY AUDIT
#  Validates build integrity + production health after each deploy.
#  Author: AIGOR | CVDex Tech Solutions
# ====================================================================

name: ACTA-UI Post-Deploy Audit

# ── Triggers ─────────────────────────────────────────────────────────
on:
  # 1️⃣  Runs automatically when the deploy workflow finishes.
  workflow_run:
    workflows: ["Deploy ACTA-UI"]   # ← name of your deploy workflow
    types: [completed]

  # 2️⃣  Can be started manually from Actions tab.
  workflow_dispatch: {}

# ── Global env ───────────────────────────────────────────────────────
env:
  AWS_REGION: us-east-2
  CLOUDFRONT_DOMAIN: d7t9x3j66yd8k.cloudfront.net
  HEALTH_URL: https://d7t9x3j66yd8k.cloudfront.net/health   # simple /health route

permissions:
  contents: read
  id-token: write               # required for OIDC → AWS STS

concurrency:
  group: post-deploy-audit
  cancel-in-progress: true

jobs:
  audit:
    runs-on: ubuntu-latest
    timeout-minutes: 25

    steps:
    # ── 1 Checkout ───────────────────────────────────────────────────
    - uses: actions/checkout@v4

    # ── 2 Node + pnpm toolchain ──────────────────────────────────────
    - uses: actions/setup-node@v3
      with:
        node-version: 18          # keep in sync with local dev
        cache: pnpm               # speeds up subsequent runs

    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 9                # matches packageManager field
        run_install: false        # we install in next step

    # ── 3 Dependencies ───────────────────────────────────────────────
    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    # ── 4 Static Quality Gates ───────────────────────────────────────
    - name: Run CI checks
      run: pnpm run ci

    - name: Build (Vite prod)
      run: pnpm run build

    # ── 5 AWS OIDC (optional but handy for S3/DDB checks) ────────────
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume:  ${{ secrets.OIDC_AWS_ROLE_ARN }}
        aws-region:      ${{ env.AWS_REGION }}

    # ── 6 Production Smoke - CloudFront health-check ────────────────
    - name: Verify CloudFront health endpoint
      run: |
        echo "🔎 Checking $HEALTH_URL"
        status=$(curl -s -o /dev/null -w '%{http_code}' "$HEALTH_URL")
        if [ "$status" != "200" ]; then
          echo "::error::Health check failed – HTTP $status"
          exit 1
        fi
        echo "✅ CloudFront health OK (200)"

    # ── 7 Success banner ─────────────────────────────────────────────
    - name: Report success
      if: success()
      run: echo "🎉 Post-deploy audit passed – all gates green!"
