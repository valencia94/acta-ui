version: 0.2

# AWS CodeBuild specification for ACTA-UI Lambda Function Fixes
# This buildspec deploys the missing Lambda functions to fix 502 errors

phases:
  install:
    runtime-versions:
      nodejs: 18
    commands:
      - echo "🚀 ACTA-UI Lambda Function Fix Deployment"
      - echo "========================================"
      - aws --version
      - node --version
      
  pre_build:
    commands:
      - echo "🔐 Verifying AWS credentials and permissions..."
      - aws sts get-caller-identity
      - echo "📋 Current AWS Identity confirmed"
      
      - echo "🔍 Checking existing Lambda functions..."
      - aws lambda list-functions --query 'Functions[].FunctionName' --output table || echo "No Lambda access yet"
      
      - echo "📦 Verifying Lambda function packages..."
      - ls -la lambda-functions/fixed/
      
  build:
    commands:
      - echo "🛠️ Deploying Lambda Functions"
      - echo "=============================="
      
      # Lambda execution role ARN
      - LAMBDA_ROLE="arn:aws:iam::703671891952:role/acta-ui-lambda-execution-role"
      - API_GATEWAY_ARN="arn:aws:execute-api:us-east-2:703671891952:q2b9avfwv5/*"
      
      - echo "🔧 Deploying GetProjectSummary..."
      - |
        if aws lambda get-function --function-name GetProjectSummary >/dev/null 2>&1; then
          echo "📦 Updating existing function..."
          aws lambda update-function-code \
            --function-name GetProjectSummary \
            --zip-file fileb://lambda-functions/fixed/GetProjectSummary.js.zip
        else
          echo "🆕 Creating new function..."
          aws lambda create-function \
            --function-name GetProjectSummary \
            --runtime nodejs18.x \
            --role $LAMBDA_ROLE \
            --handler index.handler \
            --zip-file fileb://lambda-functions/fixed/GetProjectSummary.js.zip \
            --timeout 30 \
            --memory-size 256 \
            --environment Variables='{
              "TABLE_NAME":"acta-ui-projects",
              "S3_BUCKET":"acta-ui-documents"
            }'
        fi
      
      - echo "🔗 Adding API Gateway permissions for GetProjectSummary..."
      - |
        aws lambda add-permission \
          --function-name GetProjectSummary \
          --statement-id api-gateway-invoke \
          --action lambda:InvokeFunction \
          --principal apigateway.amazonaws.com \
          --source-arn $API_GATEWAY_ARN \
          2>/dev/null || echo "⚠️ Permission already exists"
      
      - echo "🔧 Deploying GetTimeline..."
      - |
        if aws lambda get-function --function-name GetTimeline >/dev/null 2>&1; then
          echo "📦 Updating existing function..."
          aws lambda update-function-code \
            --function-name GetTimeline \
            --zip-file fileb://lambda-functions/fixed/GetTimeline.js.zip
        else
          echo "🆕 Creating new function..."
          aws lambda create-function \
            --function-name GetTimeline \
            --runtime nodejs18.x \
            --role $LAMBDA_ROLE \
            --handler index.handler \
            --zip-file fileb://lambda-functions/fixed/GetTimeline.js.zip \
            --timeout 30 \
            --memory-size 256 \
            --environment Variables='{
              "TABLE_NAME":"acta-ui-projects"
            }'
        fi
      
      - echo "🔗 Adding API Gateway permissions for GetTimeline..."
      - |
        aws lambda add-permission \
          --function-name GetTimeline \
          --statement-id api-gateway-invoke \
          --action lambda:InvokeFunction \
          --principal apigateway.amazonaws.com \
          --source-arn $API_GATEWAY_ARN \
          2>/dev/null || echo "⚠️ Permission already exists"
      
      - echo "🔧 Deploying GetDownloadActa..."
      - |
        if aws lambda get-function --function-name GetDownloadActa >/dev/null 2>&1; then
          echo "📦 Updating existing function..."
          aws lambda update-function-code \
            --function-name GetDownloadActa \
            --zip-file fileb://lambda-functions/fixed/GetDownloadActa.js.zip
        else
          echo "🆕 Creating new function..."
          aws lambda create-function \
            --function-name GetDownloadActa \
            --runtime nodejs18.x \
            --role $LAMBDA_ROLE \
            --handler index.handler \
            --zip-file fileb://lambda-functions/fixed/GetDownloadActa.js.zip \
            --timeout 30 \
            --memory-size 256 \
            --environment Variables='{
              "S3_BUCKET":"acta-ui-documents"
            }'
        fi
      
      - echo "🔗 Adding API Gateway permissions for GetDownloadActa..."
      - |
        aws lambda add-permission \
          --function-name GetDownloadActa \
          --statement-id api-gateway-invoke \
          --action lambda:InvokeFunction \
          --principal apigateway.amazonaws.com \
          --source-arn $API_GATEWAY_ARN \
          2>/dev/null || echo "⚠️ Permission already exists"
      
      - echo "🔧 Deploying SendApprovalEmail..."
      - |
        if aws lambda get-function --function-name SendApprovalEmail >/dev/null 2>&1; then
          echo "📦 Updating existing function..."
          aws lambda update-function-code \
            --function-name SendApprovalEmail \
            --zip-file fileb://lambda-functions/fixed/SendApprovalEmail.js.zip
        else
          echo "🆕 Creating new function..."
          aws lambda create-function \
            --function-name SendApprovalEmail \
            --runtime nodejs18.x \
            --role $LAMBDA_ROLE \
            --handler index.handler \
            --zip-file fileb://lambda-functions/fixed/SendApprovalEmail.js.zip \
            --timeout 30 \
            --memory-size 256 \
            --environment Variables='{
              "SES_SOURCE_EMAIL":"noreply@acta-ui.com"
            }'
        fi
      
      - echo "🔗 Adding API Gateway permissions for SendApprovalEmail..."
      - |
        aws lambda add-permission \
          --function-name SendApprovalEmail \
          --statement-id api-gateway-invoke \
          --action lambda:InvokeFunction \
          --principal apigateway.amazonaws.com \
          --source-arn $API_GATEWAY_ARN \
          2>/dev/null || echo "⚠️ Permission already exists"
  
  post_build:
    commands:
      - echo "🔍 Verifying deployment..."
      - echo "========================="
      
      - echo "📋 Listing all Lambda functions:"
      - aws lambda list-functions --query 'Functions[].FunctionName' --output table
      
      - echo "🧪 Testing Lambda functions..."
      - |
        for func in GetProjectSummary GetTimeline GetDownloadActa SendApprovalEmail; do
          echo -n "Testing $func... "
          test_event='{"httpMethod":"GET","path":"/test","pathParameters":{"project_id":"test"},"queryStringParameters":{"format":"pdf"},"body":null}'
          if aws lambda invoke --function-name $func --payload "$test_event" /tmp/test-response.json >/dev/null 2>&1; then
            echo "✅ OK"
          else
            echo "❌ Failed"
          fi
        done
      
      - echo "🌐 Running comprehensive system test..."
      - chmod +x test-complete-system.sh
      - ./test-complete-system.sh
      
      - echo "🎉 DEPLOYMENT COMPLETE!"
      - echo "======================"
      - echo "✅ All Lambda functions deployed"
      - echo "✅ API Gateway permissions configured"  
      - echo "✅ System test completed"
      - echo "🔗 API Gateway URL: https://q2b9avfwv5.execute-api.us-east-2.amazonaws.com/prod"

artifacts:
  files:
    - 'test-complete-system.sh'
    - 'DEPLOYMENT_READY_STATUS.md'
    - 'lambda-functions/fixed/*.zip'
  name: acta-ui-lambda-fixes
