const __vite__mapDeps = (
  i,
  m = __vite__mapDeps,
  d = m.f ||
    (m.f = [
      "assets/PDFPreview-BSAO70O6.js",
      "assets/chunk-D8vxuQkl.js",
      "assets/chunk-ch2AWsgG.js",
    ]),
) => i.map((i) => d[i]);
var bw = Object.defineProperty;
var xw = (e, t, n) =>
  t in e
    ? bw(e, t, { enumerable: !0, configurable: !0, writable: !0, value: n })
    : (e[t] = n);
var Oe = (e, t, n) => xw(e, typeof t != "symbol" ? t + "" : t, n);
import {
  r as x,
  R as _a,
  j as y,
  g as Sw,
  c as Ct,
  a as Le,
} from "./chunk-D8vxuQkl.js";
import { r as ww } from "./chunk-UNRytOZD.js";
import {
  G as ag,
  S as Aa,
  M as Cw,
  U as Ew,
  L as Iw,
  a as uu,
  R as Qi,
  F as du,
  C as by,
  b as xy,
  m as pn,
  D as Na,
  c as Rw,
  d as kw,
  A as Pw,
  e as Tw,
  f as Ow,
} from "./chunk-ch2AWsgG.js";
(function () {
  const t = document.createElement("link").relList;
  if (t && t.supports && t.supports("modulepreload")) return;
  for (const o of document.querySelectorAll('link[rel="modulepreload"]')) r(o);
  new MutationObserver((o) => {
    for (const i of o)
      if (i.type === "childList")
        for (const s of i.addedNodes)
          s.tagName === "LINK" && s.rel === "modulepreload" && r(s);
  }).observe(document, { childList: !0, subtree: !0 });
  function n(o) {
    const i = {};
    return (
      o.integrity && (i.integrity = o.integrity),
      o.referrerPolicy && (i.referrerPolicy = o.referrerPolicy),
      o.crossOrigin === "use-credentials"
        ? (i.credentials = "include")
        : o.crossOrigin === "anonymous"
          ? (i.credentials = "omit")
          : (i.credentials = "same-origin"),
      i
    );
  }
  function r(o) {
    if (o.ep) return;
    o.ep = !0;
    const i = n(o);
    fetch(o.href, i);
  }
})();
const _w = "modulepreload",
  Aw = function (e) {
    return "/" + e;
  },
  lg = {},
  Sy = function (t, n, r) {
    let o = Promise.resolve();
    if (n && n.length > 0) {
      document.getElementsByTagName("link");
      const s = document.querySelector("meta[property=csp-nonce]"),
        a =
          (s == null ? void 0 : s.nonce) ||
          (s == null ? void 0 : s.getAttribute("nonce"));
      o = Promise.allSettled(
        n.map((l) => {
          if (((l = Aw(l)), l in lg)) return;
          lg[l] = !0;
          const c = l.endsWith(".css"),
            u = c ? '[rel="stylesheet"]' : "";
          if (document.querySelector(`link[href="${l}"]${u}`)) return;
          const d = document.createElement("link");
          if (
            ((d.rel = c ? "stylesheet" : _w),
            c || (d.as = "script"),
            (d.crossOrigin = ""),
            (d.href = l),
            a && d.setAttribute("nonce", a),
            document.head.appendChild(d),
            c)
          )
            return new Promise((f, g) => {
              (d.addEventListener("load", f),
                d.addEventListener("error", () =>
                  g(new Error(`Unable to preload CSS for ${l}`)),
                ));
            });
        }),
      );
    }
    function i(s) {
      const a = new Event("vite:preloadError", { cancelable: !0 });
      if (((a.payload = s), window.dispatchEvent(a), !a.defaultPrevented))
        throw s;
    }
    return o.then((s) => {
      for (const a of s || []) a.status === "rejected" && i(a.reason);
      return t().catch(i);
    });
  },
  wy = "https://q2b9avfwv5.execute-api.us-east-2.amazonaws.com/prod",
  jo = !1,
  Nw = "Logging",
  Vw = "NoHubcallbackProvidedException";
var Mt;
(function (e) {
  ((e.DEBUG = "DEBUG"),
    (e.ERROR = "ERROR"),
    (e.INFO = "INFO"),
    (e.WARN = "WARN"),
    (e.VERBOSE = "VERBOSE"),
    (e.NONE = "NONE"));
})(Mt || (Mt = {}));
const cg = { VERBOSE: 1, DEBUG: 2, INFO: 3, WARN: 4, ERROR: 5, NONE: 6 };
class Ut {
  constructor(t, n = Mt.WARN) {
    ((this.name = t), (this.level = n), (this._pluggables = []));
  }
  _padding(t) {
    return t < 10 ? "0" + t : "" + t;
  }
  _ts() {
    const t = new Date();
    return (
      [this._padding(t.getMinutes()), this._padding(t.getSeconds())].join(":") +
      "." +
      t.getMilliseconds()
    );
  }
  configure(t) {
    return t ? ((this._config = t), this._config) : this._config;
  }
  _log(t, ...n) {
    let r = this.level;
    (Ut.LOG_LEVEL && (r = Ut.LOG_LEVEL),
      typeof window < "u" && window.LOG_LEVEL && (r = window.LOG_LEVEL));
    const o = cg[r];
    if (!(cg[t] >= o)) return;
    let s = console.log.bind(console);
    (t === Mt.ERROR && console.error && (s = console.error.bind(console)),
      t === Mt.WARN && console.warn && (s = console.warn.bind(console)),
      Ut.BIND_ALL_LOG_LEVELS &&
        (t === Mt.INFO && console.info && (s = console.info.bind(console)),
        t === Mt.DEBUG && console.debug && (s = console.debug.bind(console))));
    const a = `[${t}] ${this._ts()} ${this.name}`;
    let l = "";
    if (n.length === 1 && typeof n[0] == "string")
      ((l = `${a} - ${n[0]}`), s(l));
    else if (n.length === 1) ((l = `${a} ${n[0]}`), s(a, n[0]));
    else if (typeof n[0] == "string") {
      let c = n.slice(1);
      (c.length === 1 && (c = c[0]),
        (l = `${a} - ${n[0]} ${c}`),
        s(`${a} - ${n[0]}`, c));
    } else ((l = `${a} ${n}`), s(a, n));
    for (const c of this._pluggables) {
      const u = { message: l, timestamp: Date.now() };
      c.pushLogs([u]);
    }
  }
  log(...t) {
    this._log(Mt.INFO, ...t);
  }
  info(...t) {
    this._log(Mt.INFO, ...t);
  }
  warn(...t) {
    this._log(Mt.WARN, ...t);
  }
  error(...t) {
    this._log(Mt.ERROR, ...t);
  }
  debug(...t) {
    this._log(Mt.DEBUG, ...t);
  }
  verbose(...t) {
    this._log(Mt.VERBOSE, ...t);
  }
  addPluggable(t) {
    t &&
      t.getCategoryName() === Nw &&
      (this._pluggables.push(t), t.configure(this._config));
  }
  listPluggables() {
    return this._pluggables;
  }
}
Ut.LOG_LEVEL = null;
Ut.BIND_ALL_LOG_LEVELS = !1;
class At extends Error {
  constructor({
    message: t,
    name: n,
    recoverySuggestion: r,
    underlyingError: o,
    metadata: i,
  }) {
    if (
      (super(t),
      (this.name = n),
      (this.underlyingError = o),
      (this.recoverySuggestion = r),
      i)
    ) {
      const { extendedRequestId: s, httpStatusCode: a, requestId: l } = i;
      this.metadata = { extendedRequestId: s, httpStatusCode: a, requestId: l };
    }
    ((this.constructor = At), Object.setPrototypeOf(this, At.prototype));
  }
}
var kr;
(function (e) {
  ((e.NoEndpointId = "NoEndpointId"),
    (e.PlatformNotSupported = "PlatformNotSupported"),
    (e.Unknown = "Unknown"),
    (e.NetworkError = "NetworkError"));
})(kr || (kr = {}));
const vd =
    (e, t = At) =>
    (n, r, o) => {
      const { message: i, recoverySuggestion: s } = e[r];
      if (!n)
        throw new t({
          name: r,
          message: o ? `${i} ${o}` : i,
          recoverySuggestion: s,
        });
    },
  io = typeof Symbol < "u" ? Symbol("amplify_default") : "@@amplify_default",
  Si = new Ut("Hub");
class Cy {
  constructor(t) {
    ((this.listeners = new Map()),
      (this.protectedChannels = [
        "core",
        "auth",
        "api",
        "analytics",
        "interactions",
        "pubsub",
        "storage",
        "ui",
        "xr",
      ]),
      (this.name = t));
  }
  _remove(t, n) {
    const r = this.listeners.get(t);
    if (!r) {
      Si.warn(`No listeners for ${t}`);
      return;
    }
    this.listeners.set(t, [...r.filter(({ callback: o }) => o !== n)]);
  }
  dispatch(t, n, r, o) {
    typeof t == "string" &&
      this.protectedChannels.indexOf(t) > -1 &&
      (o === io ||
        Si.warn(
          `WARNING: ${t} is protected and dispatching on it can have unintended consequences`,
        ));
    const i = { channel: t, payload: { ...n }, source: r, patternInfo: [] };
    try {
      this._toListeners(i);
    } catch (s) {
      Si.error(s);
    }
  }
  listen(t, n, r = "noname") {
    let o;
    if (typeof n != "function")
      throw new At({ name: Vw, message: "No callback supplied to Hub" });
    o = n;
    let i = this.listeners.get(t);
    return (
      i || ((i = []), this.listeners.set(t, i)),
      i.push({ name: r, callback: o }),
      () => {
        this._remove(t, o);
      }
    );
  }
  _toListeners(t) {
    const { channel: n, payload: r } = t,
      o = this.listeners.get(n);
    o &&
      o.forEach((i) => {
        Si.debug(`Dispatching to ${n} with `, r);
        try {
          i.callback(t);
        } catch (s) {
          Si.error(s);
        }
      });
  }
}
const Uo = new Cy("__default__"),
  Va = new Cy("internal-hub"),
  Fw = () => {
    if (typeof window == "object" && typeof window.crypto == "object")
      return window.crypto;
    if (typeof crypto == "object") return crypto;
    throw new At({
      name: "MissingPolyfill",
      message: "Cannot resolve the `crypto` function from the environment.",
    });
  },
  Dw = () => {
    if (typeof window < "u" && typeof window.btoa == "function")
      return window.btoa;
    if (typeof btoa == "function") return btoa;
    throw new At({
      name: "Base64EncoderError",
      message: "Cannot resolve the `btoa` function from the environment.",
    });
  },
  $w = () => {
    if (typeof window < "u" && typeof window.atob == "function")
      return window.atob;
    if (typeof atob == "function") return atob;
    throw new At({
      name: "Base64EncoderError",
      message: "Cannot resolve the `atob` function from the environment.",
    });
  },
  yd = {
    convert(e, t) {
      let n = e;
      return (
        t != null && t.urlSafe && (n = n.replace(/-/g, "+").replace(/_/g, "/")),
        $w()(n)
      );
    },
  };
var Vn;
(function (e) {
  ((e.AuthTokenConfigException = "AuthTokenConfigException"),
    (e.AuthUserPoolAndIdentityPoolException =
      "AuthUserPoolAndIdentityPoolException"),
    (e.AuthUserPoolException = "AuthUserPoolException"),
    (e.InvalidIdentityPoolIdException = "InvalidIdentityPoolIdException"),
    (e.OAuthNotConfigureException = "OAuthNotConfigureException"));
})(Vn || (Vn = {}));
const Mw = {
    [Vn.AuthTokenConfigException]: {
      message: "Auth Token Provider not configured.",
      recoverySuggestion: "Make sure to call Amplify.configure in your app.",
    },
    [Vn.AuthUserPoolAndIdentityPoolException]: {
      message: "Auth UserPool or IdentityPool not configured.",
      recoverySuggestion:
        "Make sure to call Amplify.configure in your app with UserPoolId and IdentityPoolId.",
    },
    [Vn.AuthUserPoolException]: {
      message: "Auth UserPool not configured.",
      recoverySuggestion:
        "Make sure to call Amplify.configure in your app with userPoolId and userPoolClientId.",
    },
    [Vn.InvalidIdentityPoolIdException]: {
      message: "Invalid identity pool id provided.",
      recoverySuggestion:
        "Make sure a valid identityPoolId is given in the config.",
    },
    [Vn.OAuthNotConfigureException]: {
      message: "oauth param not configured.",
      recoverySuggestion:
        "Make sure to call Amplify.configure with oauth parameter in your app.",
    },
  },
  bd = vd(Mw);
function Se(e) {
  let t = !0;
  (e ? (t = !!e.userPoolId && !!e.userPoolClientId) : (t = !1),
    bd(t, Vn.AuthUserPoolException));
}
function Ey(e) {
  var n, r, o, i, s, a, l, c;
  const t =
    !!(
      (r = (n = e == null ? void 0 : e.loginWith) == null ? void 0 : n.oauth) !=
        null && r.domain
    ) &&
    !!(
      (i = (o = e == null ? void 0 : e.loginWith) == null ? void 0 : o.oauth) !=
        null && i.redirectSignOut
    ) &&
    !!(
      (a = (s = e == null ? void 0 : e.loginWith) == null ? void 0 : s.oauth) !=
        null && a.redirectSignIn
    ) &&
    !!(
      (c = (l = e == null ? void 0 : e.loginWith) == null ? void 0 : l.oauth) !=
        null && c.responseType
    );
  bd(t, Vn.OAuthNotConfigureException);
}
function sa(e) {
  const t = !!(e != null && e.identityPoolId);
  bd(t, Vn.InvalidIdentityPoolIdException);
}
function so(e) {
  const t = e.split(".");
  if (t.length !== 3) throw new Error("Invalid token");
  try {
    const r = t[1].replace(/-/g, "+").replace(/_/g, "/"),
      o = decodeURIComponent(
        yd
          .convert(r)
          .split("")
          .map((s) => `%${`00${s.charCodeAt(0).toString(16)}`.slice(-2)}`)
          .join(""),
      ),
      i = JSON.parse(o);
    return { toString: () => e, payload: i };
  } catch {
    throw new Error("Invalid token payload");
  }
}
const Iy = (e) => {
    const t = Reflect.ownKeys(e);
    for (const n of t) {
      const r = e[n];
      ((r && typeof r == "object") || typeof r == "function") && Iy(r);
    }
    return Object.freeze(e);
  },
  Lw = new Ut("parseAWSExports"),
  zw = {
    API_KEY: "apiKey",
    AWS_IAM: "iam",
    AMAZON_COGNITO_USER_POOLS: "userPool",
    OPENID_CONNECT: "oidc",
    NONE: "none",
    AWS_LAMBDA: "lambda",
    LAMBDA: "lambda",
  },
  Bw = (e = {}) => {
    var Te, De, ft, ze, L, M;
    if (!Object.prototype.hasOwnProperty.call(e, "aws_project_region"))
      throw new At({
        name: "InvalidParameterException",
        message: "Invalid config parameter.",
        recoverySuggestion:
          "Ensure passing the config object imported from  `amplifyconfiguration.json`.",
      });
    const {
        aws_appsync_apiKey: t,
        aws_appsync_authenticationType: n,
        aws_appsync_graphqlEndpoint: r,
        aws_appsync_region: o,
        aws_bots_config: i,
        aws_cognito_identity_pool_id: s,
        aws_cognito_sign_up_verification_method: a,
        aws_cognito_mfa_configuration: l,
        aws_cognito_mfa_types: c,
        aws_cognito_password_protection_settings: u,
        aws_cognito_verification_mechanisms: d,
        aws_cognito_signup_attributes: f,
        aws_cognito_social_providers: g,
        aws_cognito_username_attributes: h,
        aws_mandatory_sign_in: p,
        aws_mobile_analytics_app_id: v,
        aws_mobile_analytics_app_region: b,
        aws_user_files_s3_bucket: S,
        aws_user_files_s3_bucket_region: w,
        aws_user_files_s3_dangerously_connect_to_http_endpoint_for_testing: E,
        aws_user_pools_id: R,
        aws_user_pools_web_client_id: N,
        geo: I,
        oauth: T,
        predictions: k,
        aws_cloud_logic_custom: m,
        Notifications: A,
        modelIntrospection: V,
      } = e,
      P = {};
    v && (P.Analytics = { Pinpoint: { appId: v, region: b } });
    const { InAppMessaging: F, Push: $ } = A ?? {};
    if ((F != null && F.AWSPinpoint) || ($ != null && $.AWSPinpoint)) {
      if (F != null && F.AWSPinpoint) {
        const { appId: Y, region: ne } = F.AWSPinpoint;
        P.Notifications = {
          InAppMessaging: { Pinpoint: { appId: Y, region: ne } },
        };
      }
      if ($ != null && $.AWSPinpoint) {
        const { appId: Y, region: ne } = $.AWSPinpoint;
        P.Notifications = {
          ...P.Notifications,
          PushNotification: { Pinpoint: { appId: Y, region: ne } },
        };
      }
    }
    if (
      (Array.isArray(i) &&
        (P.Interactions = {
          LexV1: Object.fromEntries(i.map((Y) => [Y.name, Y])),
        }),
      r)
    ) {
      const Y = zw[n];
      (Y || Lw.debug(`Invalid authentication type ${n}. Falling back to IAM.`),
        (P.API = {
          GraphQL: {
            endpoint: r,
            apiKey: t,
            region: o,
            defaultAuthMode: Y ?? "iam",
          },
        }),
        V && (P.API.GraphQL.modelIntrospection = V));
    }
    const H = l
        ? {
            status: l && l.toLowerCase(),
            totpEnabled: (c == null ? void 0 : c.includes("TOTP")) ?? !1,
            smsEnabled: (c == null ? void 0 : c.includes("SMS")) ?? !1,
          }
        : void 0,
      B = u
        ? {
            minLength: u.passwordPolicyMinLength,
            requireLowercase:
              ((Te = u.passwordPolicyCharacters) == null
                ? void 0
                : Te.includes("REQUIRES_LOWERCASE")) ?? !1,
            requireUppercase:
              ((De = u.passwordPolicyCharacters) == null
                ? void 0
                : De.includes("REQUIRES_UPPERCASE")) ?? !1,
            requireNumbers:
              ((ft = u.passwordPolicyCharacters) == null
                ? void 0
                : ft.includes("REQUIRES_NUMBERS")) ?? !1,
            requireSpecialCharacters:
              ((ze = u.passwordPolicyCharacters) == null
                ? void 0
                : ze.includes("REQUIRES_SYMBOLS")) ?? !1,
          }
        : void 0,
      G = Array.from(new Set([...(d ?? []), ...(f ?? [])])).reduce(
        (Y, ne) => ({ ...Y, [ne.toLowerCase()]: { required: !0 } }),
        {},
      ),
      ee = (h == null ? void 0 : h.includes("EMAIL")) ?? !1,
      ae = (h == null ? void 0 : h.includes("PHONE_NUMBER")) ?? !1;
    (s || R) &&
      (P.Auth = {
        Cognito: {
          identityPoolId: s,
          allowGuestAccess: p !== "enable",
          signUpVerificationMethod: a,
          userAttributes: G,
          userPoolClientId: N,
          userPoolId: R,
          mfa: H,
          passwordFormat: B,
          loginWith: { username: !(ee || ae), email: ee, phone: ae },
        },
      });
    const K = T ? Object.keys(T).length > 0 : !1,
      we = g ? g.length > 0 : !1;
    if (
      (P.Auth &&
        K &&
        (P.Auth.Cognito.loginWith = {
          ...P.Auth.Cognito.loginWith,
          oauth: { ...jw(T), ...(we && { providers: Uw(g) }) },
        }),
      S &&
        (P.Storage = {
          S3: {
            bucket: S,
            region: w,
            dangerouslyConnectToHttpEndpointForTesting: E,
          },
        }),
      I)
    ) {
      const { amazon_location_service: Y } = I;
      P.Geo = {
        LocationService: {
          maps: Y.maps,
          geofenceCollections: Y.geofenceCollections,
          searchIndices: Y.search_indices,
          region: Y.region,
        },
      };
    }
    if (
      (m &&
        (P.API = {
          ...P.API,
          REST: m.reduce((Y, ne) => {
            const { name: ue, endpoint: ye, region: Ae, service: et } = ne;
            return {
              ...Y,
              [ue]: {
                endpoint: ye,
                ...(et ? { service: et } : void 0),
                ...(Ae ? { region: Ae } : void 0),
              },
            };
          }, {}),
        }),
      k)
    ) {
      const { VoiceId: Y } =
        ((M =
          (L = k == null ? void 0 : k.convert) == null
            ? void 0
            : L.speechGenerator) == null
          ? void 0
          : M.defaults) ?? {};
      P.Predictions = Y
        ? {
            ...k,
            convert: {
              ...k.convert,
              speechGenerator: {
                ...k.convert.speechGenerator,
                defaults: { voiceId: Y },
              },
            },
          }
        : k;
    }
    return P;
  },
  ug = (e) => (e == null ? void 0 : e.split(",")) ?? [],
  jw = ({
    domain: e,
    scope: t,
    redirectSignIn: n,
    redirectSignOut: r,
    responseType: o,
  }) => ({
    domain: e,
    scopes: t,
    redirectSignIn: ug(n),
    redirectSignOut: ug(r),
    responseType: o,
  }),
  Uw = (e) =>
    e.map((t) => {
      const n = t.toLowerCase();
      return n.charAt(0).toUpperCase() + n.slice(1);
    }),
  Ww = Symbol("oauth-listener"),
  gt = [];
for (let e = 0; e < 256; ++e) gt.push((e + 256).toString(16).slice(1));
function Hw(e, t = 0) {
  return (
    gt[e[t + 0]] +
    gt[e[t + 1]] +
    gt[e[t + 2]] +
    gt[e[t + 3]] +
    "-" +
    gt[e[t + 4]] +
    gt[e[t + 5]] +
    "-" +
    gt[e[t + 6]] +
    gt[e[t + 7]] +
    "-" +
    gt[e[t + 8]] +
    gt[e[t + 9]] +
    "-" +
    gt[e[t + 10]] +
    gt[e[t + 11]] +
    gt[e[t + 12]] +
    gt[e[t + 13]] +
    gt[e[t + 14]] +
    gt[e[t + 15]]
  ).toLowerCase();
}
let Rc;
const Gw = new Uint8Array(16);
function Kw() {
  if (!Rc) {
    if (typeof crypto > "u" || !crypto.getRandomValues)
      throw new Error(
        "crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported",
      );
    Rc = crypto.getRandomValues.bind(crypto);
  }
  return Rc(Gw);
}
const qw =
    typeof crypto < "u" && crypto.randomUUID && crypto.randomUUID.bind(crypto),
  dg = { randomUUID: qw };
function Yw(e, t, n) {
  var o;
  if (dg.randomUUID && !t && !e) return dg.randomUUID();
  e = e || {};
  const r = e.random ?? ((o = e.rng) == null ? void 0 : o.call(e)) ?? Kw();
  if (r.length < 16) throw new Error("Random bytes length must be >= 16");
  if (((r[6] = (r[6] & 15) | 64), (r[8] = (r[8] & 63) | 128), t)) {
    if (((n = n || 0), n < 0 || n + 16 > t.length))
      throw new RangeError(
        `UUID byte range ${n}:${n + 15} is out of buffer bounds`,
      );
    for (let i = 0; i < 16; ++i) t[n + i] = r[i];
    return t;
  }
  return Hw(r);
}
function Xw(e) {
  const { version: t } = e;
  return t ? t.startsWith("1") : !1;
}
function Jw(e) {
  if (!e) return;
  const { bucket_name: t, aws_region: n, buckets: r } = e;
  return { S3: { bucket: t, region: n, buckets: r && lC(r) } };
}
function Qw(e) {
  if (!e) return;
  const {
      user_pool_id: t,
      user_pool_client_id: n,
      identity_pool_id: r,
      password_policy: o,
      mfa_configuration: i,
      mfa_methods: s,
      unauthenticated_identities_enabled: a,
      oauth: l,
      username_attributes: c,
      standard_required_attributes: u,
      groups: d,
    } = e,
    f = { Cognito: { userPoolId: t, userPoolClientId: n, groups: d } };
  return (
    r && (f.Cognito = { ...f.Cognito, identityPoolId: r }),
    o &&
      (f.Cognito.passwordFormat = {
        requireLowercase: o.require_lowercase,
        requireNumbers: o.require_numbers,
        requireUppercase: o.require_uppercase,
        requireSpecialCharacters: o.require_symbols,
        minLength: o.min_length ?? 6,
      }),
    i &&
      (f.Cognito.mfa = {
        status: aC(i),
        smsEnabled: s == null ? void 0 : s.includes("SMS"),
        totpEnabled: s == null ? void 0 : s.includes("TOTP"),
      }),
    a && (f.Cognito.allowGuestAccess = a),
    l &&
      (f.Cognito.loginWith = {
        oauth: {
          domain: l.domain,
          redirectSignIn: l.redirect_sign_in_uri,
          redirectSignOut: l.redirect_sign_out_uri,
          responseType: l.response_type === "token" ? "token" : "code",
          scopes: l.scopes,
          providers: sC(l.identity_providers),
        },
      }),
    c &&
      (f.Cognito.loginWith = {
        ...f.Cognito.loginWith,
        email: c.includes("email"),
        phone: c.includes("phone_number"),
        username: c.includes("username"),
      }),
    u &&
      (f.Cognito.userAttributes = u.reduce(
        (g, h) => ({ ...g, [h]: { required: !0 } }),
        {},
      )),
    f
  );
}
function Zw(e) {
  if (!(e != null && e.amazon_pinpoint)) return;
  const { amazon_pinpoint: t } = e;
  return { Pinpoint: { appId: t.app_id, region: t.aws_region } };
}
function eC(e) {
  if (!e) return;
  const {
    aws_region: t,
    geofence_collections: n,
    maps: r,
    search_indices: o,
  } = e;
  return {
    LocationService: {
      region: t,
      searchIndices: o,
      geofenceCollections: n,
      maps: r,
    },
  };
}
function tC(e) {
  if (!e) return;
  const {
    aws_region: t,
    default_authorization_type: n,
    url: r,
    api_key: o,
    model_introspection: i,
  } = e;
  return {
    GraphQL: {
      endpoint: r,
      defaultAuthMode: Ry(n),
      region: t,
      apiKey: o,
      modelIntrospection: i,
    },
  };
}
function nC(e) {
  if (!(e != null && e.events)) return;
  const {
    url: t,
    aws_region: n,
    api_key: r,
    default_authorization_type: o,
  } = e.events;
  return {
    Events: { endpoint: t, defaultAuthMode: Ry(o), region: n, apiKey: r },
  };
}
function rC(e) {
  if (!e) return;
  const { aws_region: t, channels: n, amazon_pinpoint_app_id: r } = e,
    o = n.includes("IN_APP_MESSAGING"),
    i = n.includes("APNS") || n.includes("FCM");
  if (!(o || i)) return;
  const s = {};
  return (
    o && (s.InAppMessaging = { Pinpoint: { appId: r, region: t } }),
    i && (s.PushNotification = { Pinpoint: { appId: r, region: t } }),
    s
  );
}
function oC(e) {
  const t = {};
  if (
    (e.storage && (t.Storage = Jw(e.storage)),
    e.auth && (t.Auth = Qw(e.auth)),
    e.analytics && (t.Analytics = Zw(e.analytics)),
    e.geo && (t.Geo = eC(e.geo)),
    e.data && (t.API = tC(e.data)),
    e.custom)
  ) {
    const n = nC(e.custom);
    n && "Events" in n && (t.API = { ...t.API, ...n });
  }
  return (e.notifications && (t.Notifications = rC(e.notifications)), t);
}
const iC = {
  AMAZON_COGNITO_USER_POOLS: "userPool",
  API_KEY: "apiKey",
  AWS_IAM: "iam",
  AWS_LAMBDA: "lambda",
  OPENID_CONNECT: "oidc",
};
function Ry(e) {
  return iC[e];
}
const fg = {
  GOOGLE: "Google",
  LOGIN_WITH_AMAZON: "Amazon",
  FACEBOOK: "Facebook",
  SIGN_IN_WITH_APPLE: "Apple",
};
function sC(e = []) {
  return e.reduce((t, n) => (fg[n] !== void 0 && t.push(fg[n]), t), []);
}
function aC(e) {
  return e === "OPTIONAL" ? "optional" : e === "REQUIRED" ? "on" : "off";
}
function lC(e) {
  const t = {};
  return (
    e.forEach(({ name: n, bucket_name: r, aws_region: o, paths: i }) => {
      if (n in t)
        throw new Error(
          `Duplicate friendly name found: ${n}. Name must be unique.`,
        );
      const s = i
        ? Object.entries(i).reduce(
            (a, [l, c]) => (c !== void 0 && (a[l] = c), a),
            {},
          )
        : void 0;
      t[n] = { bucketName: r, region: o, paths: s };
    }),
    t
  );
}
const ky = (e) =>
  Object.keys(e).some((t) => t.startsWith("aws_")) ? Bw(e) : Xw(e) ? oC(e) : e;
function cC(e, t, n, r) {
  function o(i) {
    return i instanceof n
      ? i
      : new n(function (s) {
          s(i);
        });
  }
  return new (n || (n = Promise))(function (i, s) {
    function a(u) {
      try {
        c(r.next(u));
      } catch (d) {
        s(d);
      }
    }
    function l(u) {
      try {
        c(r.throw(u));
      } catch (d) {
        s(d);
      }
    }
    function c(u) {
      u.done ? i(u.value) : o(u.value).then(a, l);
    }
    c((r = r.apply(e, t || [])).next());
  });
}
function uC(e, t) {
  var n = {
      label: 0,
      sent: function () {
        if (i[0] & 1) throw i[1];
        return i[1];
      },
      trys: [],
      ops: [],
    },
    r,
    o,
    i,
    s = Object.create(
      (typeof Iterator == "function" ? Iterator : Object).prototype,
    );
  return (
    (s.next = a(0)),
    (s.throw = a(1)),
    (s.return = a(2)),
    typeof Symbol == "function" &&
      (s[Symbol.iterator] = function () {
        return this;
      }),
    s
  );
  function a(c) {
    return function (u) {
      return l([c, u]);
    };
  }
  function l(c) {
    if (r) throw new TypeError("Generator is already executing.");
    for (; s && ((s = 0), c[0] && (n = 0)), n; )
      try {
        if (
          ((r = 1),
          o &&
            (i =
              c[0] & 2
                ? o.return
                : c[0]
                  ? o.throw || ((i = o.return) && i.call(o), 0)
                  : o.next) &&
            !(i = i.call(o, c[1])).done)
        )
          return i;
        switch (((o = 0), i && (c = [c[0] & 2, i.value]), c[0])) {
          case 0:
          case 1:
            i = c;
            break;
          case 4:
            return (n.label++, { value: c[1], done: !1 });
          case 5:
            (n.label++, (o = c[1]), (c = [0]));
            continue;
          case 7:
            ((c = n.ops.pop()), n.trys.pop());
            continue;
          default:
            if (
              ((i = n.trys),
              !(i = i.length > 0 && i[i.length - 1]) &&
                (c[0] === 6 || c[0] === 2))
            ) {
              n = 0;
              continue;
            }
            if (c[0] === 3 && (!i || (c[1] > i[0] && c[1] < i[3]))) {
              n.label = c[1];
              break;
            }
            if (c[0] === 6 && n.label < i[1]) {
              ((n.label = i[1]), (i = c));
              break;
            }
            if (i && n.label < i[2]) {
              ((n.label = i[2]), n.ops.push(c));
              break;
            }
            (i[2] && n.ops.pop(), n.trys.pop());
            continue;
        }
        c = t.call(e, n);
      } catch (u) {
        ((c = [6, u]), (o = 0));
      } finally {
        r = i = 0;
      }
    if (c[0] & 5) throw c[1];
    return { value: c[0] ? c[1] : void 0, done: !0 };
  }
}
var Qt = 64,
  dC = 32,
  fC = new Uint32Array([
    1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993,
    2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987,
    1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774,
    264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986,
    2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711,
    113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291,
    1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411,
    3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344,
    430227734, 506948616, 659060556, 883997877, 958139571, 1322822218,
    1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424,
    2428436474, 2756734187, 3204031479, 3329325298,
  ]),
  gC = [
    1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924,
    528734635, 1541459225,
  ],
  hC = Math.pow(2, 53) - 1,
  aa = (function () {
    function e() {
      ((this.state = Int32Array.from(gC)),
        (this.temp = new Int32Array(64)),
        (this.buffer = new Uint8Array(64)),
        (this.bufferLength = 0),
        (this.bytesHashed = 0),
        (this.finished = !1));
    }
    return (
      (e.prototype.update = function (t) {
        if (this.finished)
          throw new Error("Attempted to update an already finished hash.");
        var n = 0,
          r = t.byteLength;
        if (((this.bytesHashed += r), this.bytesHashed * 8 > hC))
          throw new Error("Cannot hash more than 2^53 - 1 bits");
        for (; r > 0; )
          ((this.buffer[this.bufferLength++] = t[n++]),
            r--,
            this.bufferLength === Qt &&
              (this.hashBuffer(), (this.bufferLength = 0)));
      }),
      (e.prototype.digest = function () {
        if (!this.finished) {
          var t = this.bytesHashed * 8,
            n = new DataView(
              this.buffer.buffer,
              this.buffer.byteOffset,
              this.buffer.byteLength,
            ),
            r = this.bufferLength;
          if ((n.setUint8(this.bufferLength++, 128), r % Qt >= Qt - 8)) {
            for (var o = this.bufferLength; o < Qt; o++) n.setUint8(o, 0);
            (this.hashBuffer(), (this.bufferLength = 0));
          }
          for (var o = this.bufferLength; o < Qt - 8; o++) n.setUint8(o, 0);
          (n.setUint32(Qt - 8, Math.floor(t / 4294967296), !0),
            n.setUint32(Qt - 4, t),
            this.hashBuffer(),
            (this.finished = !0));
        }
        for (var i = new Uint8Array(dC), o = 0; o < 8; o++)
          ((i[o * 4] = (this.state[o] >>> 24) & 255),
            (i[o * 4 + 1] = (this.state[o] >>> 16) & 255),
            (i[o * 4 + 2] = (this.state[o] >>> 8) & 255),
            (i[o * 4 + 3] = (this.state[o] >>> 0) & 255));
        return i;
      }),
      (e.prototype.hashBuffer = function () {
        for (
          var t = this,
            n = t.buffer,
            r = t.state,
            o = r[0],
            i = r[1],
            s = r[2],
            a = r[3],
            l = r[4],
            c = r[5],
            u = r[6],
            d = r[7],
            f = 0;
          f < Qt;
          f++
        ) {
          if (f < 16)
            this.temp[f] =
              ((n[f * 4] & 255) << 24) |
              ((n[f * 4 + 1] & 255) << 16) |
              ((n[f * 4 + 2] & 255) << 8) |
              (n[f * 4 + 3] & 255);
          else {
            var g = this.temp[f - 2],
              h =
                ((g >>> 17) | (g << 15)) ^
                ((g >>> 19) | (g << 13)) ^
                (g >>> 10);
            g = this.temp[f - 15];
            var p =
              ((g >>> 7) | (g << 25)) ^ ((g >>> 18) | (g << 14)) ^ (g >>> 3);
            this.temp[f] =
              ((h + this.temp[f - 7]) | 0) + ((p + this.temp[f - 16]) | 0);
          }
          var v =
              ((((((l >>> 6) | (l << 26)) ^
                ((l >>> 11) | (l << 21)) ^
                ((l >>> 25) | (l << 7))) +
                ((l & c) ^ (~l & u))) |
                0) +
                ((d + ((fC[f] + this.temp[f]) | 0)) | 0)) |
              0,
            b =
              ((((o >>> 2) | (o << 30)) ^
                ((o >>> 13) | (o << 19)) ^
                ((o >>> 22) | (o << 10))) +
                ((o & i) ^ (o & s) ^ (i & s))) |
              0;
          ((d = u),
            (u = c),
            (c = l),
            (l = (a + v) | 0),
            (a = s),
            (s = i),
            (i = o),
            (o = (v + b) | 0));
        }
        ((r[0] += o),
          (r[1] += i),
          (r[2] += s),
          (r[3] += a),
          (r[4] += l),
          (r[5] += c),
          (r[6] += u),
          (r[7] += d));
      }),
      e
    );
  })();
const pC = (e) => new TextEncoder().encode(e);
var mC =
  typeof Buffer < "u" && Buffer.from
    ? function (e) {
        return Buffer.from(e, "utf8");
      }
    : pC;
function Py(e) {
  return e instanceof Uint8Array
    ? e
    : typeof e == "string"
      ? mC(e)
      : ArrayBuffer.isView(e)
        ? new Uint8Array(
            e.buffer,
            e.byteOffset,
            e.byteLength / Uint8Array.BYTES_PER_ELEMENT,
          )
        : new Uint8Array(e);
}
function vC(e) {
  return typeof e == "string" ? e.length === 0 : e.byteLength === 0;
}
var Fa = (function () {
  function e(t) {
    ((this.secret = t), (this.hash = new aa()), this.reset());
  }
  return (
    (e.prototype.update = function (t) {
      if (!(vC(t) || this.error))
        try {
          this.hash.update(Py(t));
        } catch (n) {
          this.error = n;
        }
    }),
    (e.prototype.digestSync = function () {
      if (this.error) throw this.error;
      return this.outer
        ? (this.outer.finished || this.outer.update(this.hash.digest()),
          this.outer.digest())
        : this.hash.digest();
    }),
    (e.prototype.digest = function () {
      return cC(this, void 0, void 0, function () {
        return uC(this, function (t) {
          return [2, this.digestSync()];
        });
      });
    }),
    (e.prototype.reset = function () {
      if (((this.hash = new aa()), this.secret)) {
        this.outer = new aa();
        var t = yC(this.secret),
          n = new Uint8Array(Qt);
        n.set(t);
        for (var r = 0; r < Qt; r++) ((t[r] ^= 54), (n[r] ^= 92));
        (this.hash.update(t), this.outer.update(n));
        for (var r = 0; r < t.byteLength; r++) t[r] = 0;
      }
    }),
    e
  );
})();
function yC(e) {
  var t = Py(e);
  if (t.byteLength > Qt) {
    var n = new aa();
    (n.update(t), (t = n.digest()));
  }
  var r = new Uint8Array(Qt);
  return (r.set(t), r);
}
for (let e = 0; e < 256; e++) {
  let t = e.toString(16).toLowerCase();
  t.length === 1 && (t = `0${t}`);
}
var Ke;
(function (e) {
  ((e.WebUnknown = "0"),
    (e.React = "1"),
    (e.NextJs = "2"),
    (e.Angular = "3"),
    (e.VueJs = "4"),
    (e.Nuxt = "5"),
    (e.Svelte = "6"),
    (e.ServerSideUnknown = "100"),
    (e.ReactSSR = "101"),
    (e.NextJsSSR = "102"),
    (e.AngularSSR = "103"),
    (e.VueJsSSR = "104"),
    (e.NuxtSSR = "105"),
    (e.SvelteSSR = "106"),
    (e.ReactNative = "201"),
    (e.Expo = "202"));
})(Ke || (Ke = {}));
var fu;
(function (e) {
  ((e.AI = "ai"),
    (e.API = "api"),
    (e.Auth = "auth"),
    (e.Analytics = "analytics"),
    (e.DataStore = "datastore"),
    (e.Geo = "geo"),
    (e.InAppMessaging = "inappmessaging"),
    (e.Interactions = "interactions"),
    (e.Predictions = "predictions"),
    (e.PubSub = "pubsub"),
    (e.PushNotification = "pushnotification"),
    (e.Storage = "storage"));
})(fu || (fu = {}));
var gg;
(function (e) {
  ((e.CreateConversation = "1"),
    (e.GetConversation = "2"),
    (e.ListConversations = "3"),
    (e.DeleteConversation = "4"),
    (e.SendMessage = "5"),
    (e.ListMessages = "6"),
    (e.OnMessage = "7"),
    (e.Generation = "8"),
    (e.UpdateConversation = "9"));
})(gg || (gg = {}));
var hg;
(function (e) {
  ((e.Record = "1"), (e.IdentifyUser = "2"));
})(hg || (hg = {}));
var pg;
(function (e) {
  ((e.GraphQl = "1"),
    (e.Get = "2"),
    (e.Post = "3"),
    (e.Put = "4"),
    (e.Patch = "5"),
    (e.Del = "6"),
    (e.Head = "7"));
})(pg || (pg = {}));
var Nt;
(function (e) {
  ((e.SignUp = "1"),
    (e.ConfirmSignUp = "2"),
    (e.ResendSignUpCode = "3"),
    (e.SignIn = "4"),
    (e.FetchMFAPreference = "6"),
    (e.UpdateMFAPreference = "7"),
    (e.SetUpTOTP = "10"),
    (e.VerifyTOTPSetup = "11"),
    (e.ConfirmSignIn = "12"),
    (e.DeleteUserAttributes = "15"),
    (e.DeleteUser = "16"),
    (e.UpdateUserAttributes = "17"),
    (e.FetchUserAttributes = "18"),
    (e.ConfirmUserAttribute = "22"),
    (e.SignOut = "26"),
    (e.UpdatePassword = "27"),
    (e.ResetPassword = "28"),
    (e.ConfirmResetPassword = "29"),
    (e.FederatedSignIn = "30"),
    (e.RememberDevice = "32"),
    (e.ForgetDevice = "33"),
    (e.FetchDevices = "34"),
    (e.SendUserAttributeVerificationCode = "35"),
    (e.SignInWithRedirect = "36"),
    (e.StartWebAuthnRegistration = "37"),
    (e.CompleteWebAuthnRegistration = "38"),
    (e.ListWebAuthnCredentials = "39"),
    (e.DeleteWebAuthnCredential = "40"));
})(Nt || (Nt = {}));
var mg;
(function (e) {
  ((e.Subscribe = "1"), (e.GraphQl = "2"));
})(mg || (mg = {}));
var vg;
(function (e) {
  ((e.SearchByText = "0"),
    (e.SearchByCoordinates = "1"),
    (e.SearchForSuggestions = "2"),
    (e.SearchByPlaceId = "3"),
    (e.SaveGeofences = "4"),
    (e.GetGeofence = "5"),
    (e.ListGeofences = "6"),
    (e.DeleteGeofences = "7"));
})(vg || (vg = {}));
var yg;
(function (e) {
  ((e.SyncMessages = "1"),
    (e.IdentifyUser = "2"),
    (e.NotifyMessageInteraction = "3"));
})(yg || (yg = {}));
var bg;
(function (e) {
  e.None = "0";
})(bg || (bg = {}));
var xg;
(function (e) {
  ((e.Convert = "1"), (e.Identify = "2"), (e.Interpret = "3"));
})(xg || (xg = {}));
var Sg;
(function (e) {
  e.Subscribe = "1";
})(Sg || (Sg = {}));
var wg;
(function (e) {
  ((e.InitializePushNotifications = "1"), (e.IdentifyUser = "2"));
})(wg || (wg = {}));
var Cg;
(function (e) {
  ((e.UploadData = "1"),
    (e.DownloadData = "2"),
    (e.List = "3"),
    (e.Copy = "4"),
    (e.Remove = "5"),
    (e.GetProperties = "6"),
    (e.GetUrl = "7"),
    (e.GetDataAccess = "8"),
    (e.ListCallerAccessGrants = "9"));
})(Cg || (Cg = {}));
const bC = "6.15.3",
  al = () => typeof global < "u",
  ti = () => typeof window < "u",
  Ty = () => typeof document < "u",
  xd = () => typeof process < "u",
  Zi = (e, t) => !!Object.keys(e).find((n) => n.startsWith(t));
var Eg = {};
function xC() {
  const e = (r) => r.startsWith("_react") || r.startsWith("__react"),
    t = (r) => Object.keys(r).find(e),
    n = () => Array.from(document.querySelectorAll("[id]"));
  return Ty() && n().some(t);
}
function SC() {
  return (
    xd() &&
    typeof Eg < "u" &&
    !!Object.keys(Eg).find((e) => e.includes("react"))
  );
}
function wC() {
  return ti() && Zi(window, "__VUE");
}
function CC() {
  return al() && Zi(global, "__VUE");
}
var Ig = {};
function EC() {
  return ti() && Zi(window, "__SVELTE");
}
function IC() {
  return (
    xd() &&
    typeof Ig < "u" &&
    !!Object.keys(Ig).find((e) => e.includes("svelte"))
  );
}
function RC() {
  return ti() && window.next && typeof window.next == "object";
}
function kC() {
  return al() && (Zi(global, "__next") || Zi(global, "__NEXT"));
}
function PC() {
  return ti() && (window.__NUXT__ !== void 0 || window.$nuxt !== void 0);
}
function TC() {
  return al() && typeof global.__NUXT_PATHS__ < "u";
}
var Rg = {};
function OC() {
  const e = !!(Ty() && document.querySelector("[ng-version]")),
    t = !!(ti() && typeof window.ng < "u");
  return e || t;
}
function _C() {
  var e;
  return (
    (xd() &&
      typeof Rg == "object" &&
      ((e = Rg.npm_lifecycle_script) == null ? void 0 : e.startsWith("ng "))) ||
    !1
  );
}
function AC() {
  return (
    typeof navigator < "u" &&
    typeof navigator.product < "u" &&
    navigator.product === "ReactNative"
  );
}
function NC() {
  return al() && typeof global.expo < "u";
}
function VC() {
  return ti();
}
const FC = [
  { platform: Ke.Expo, detectionMethod: NC },
  { platform: Ke.ReactNative, detectionMethod: AC },
  { platform: Ke.NextJs, detectionMethod: RC },
  { platform: Ke.Nuxt, detectionMethod: PC },
  { platform: Ke.Angular, detectionMethod: OC },
  { platform: Ke.React, detectionMethod: xC },
  { platform: Ke.VueJs, detectionMethod: wC },
  { platform: Ke.Svelte, detectionMethod: EC },
  { platform: Ke.WebUnknown, detectionMethod: VC },
  { platform: Ke.NextJsSSR, detectionMethod: kC },
  { platform: Ke.NuxtSSR, detectionMethod: TC },
  { platform: Ke.ReactSSR, detectionMethod: SC },
  { platform: Ke.VueJsSSR, detectionMethod: CC },
  { platform: Ke.AngularSSR, detectionMethod: _C },
  { platform: Ke.SvelteSSR, detectionMethod: IC },
];
function DC() {
  var e;
  return (
    ((e = FC.find((t) => t.detectionMethod())) == null ? void 0 : e.platform) ||
    Ke.ServerSideUnknown
  );
}
let ji;
const kc = [];
let gu = !1;
const $C = 10,
  MC = 10,
  LC = 1e3,
  Oy = () => {
    var e;
    if (!ji) {
      if (((ji = DC()), gu)) for (; kc.length; ) (e = kc.pop()) == null || e();
      else
        kc.forEach((t) => {
          t();
        });
      (kg(Ke.ServerSideUnknown, $C), kg(Ke.WebUnknown, MC));
    }
    return ji;
  };
function zC() {
  ji = void 0;
}
function kg(e, t) {
  ji === e &&
    !gu &&
    setTimeout(() => {
      (zC(), (gu = !0), setTimeout(Oy, LC));
    }, t);
}
const BC = {},
  jC = (e, t) => {
    var n, r;
    return (r = (n = BC[e]) == null ? void 0 : n[t]) == null
      ? void 0
      : r.additionalDetails;
  },
  UC = "aws-amplify",
  WC = (e) => e.replace(/\+.*/, ""),
  HC = ({ category: e, action: t } = {}) => {
    const n = [[UC, WC(bC)]];
    if ((e && n.push([e, t]), n.push(["framework", Oy()]), e && t)) {
      const r = jC(e, t);
      r &&
        r.forEach((o) => {
          n.push(o);
        });
    }
    return n;
  },
  ll = (e) =>
    HC(e)
      .map(([r, o]) => (r && o ? `${r}/${o}` : r))
      .join(" "),
  _y = () => typeof window < "u" && typeof window.document < "u",
  Pg = new Ut("Auth");
class GC {
  configure(t, n) {
    var r, o;
    ((this.authConfig = t),
      (this.authOptions = n),
      t &&
        (r = t.Cognito) != null &&
        r.userPoolEndpoint &&
        Pg.warn(Tg("Amazon Cognito User Pool")),
      t &&
        (o = t.Cognito) != null &&
        o.identityPoolEndpoint &&
        Pg.warn(Tg("Amazon Cognito Identity Pool")));
  }
  async fetchAuthSession(t = {}) {
    var i, s, a, l, c, u;
    let n, r;
    const o = await this.getTokens(t);
    return (
      o
        ? ((r =
            (s = (i = o.accessToken) == null ? void 0 : i.payload) == null
              ? void 0
              : s.sub),
          (n = await ((l =
            (a = this.authOptions) == null ? void 0 : a.credentialsProvider) ==
          null
            ? void 0
            : l.getCredentialsAndIdentityId({
                authConfig: this.authConfig,
                tokens: o,
                authenticated: !0,
                forceRefresh: t.forceRefresh,
              }))))
        : (n = await ((u =
            (c = this.authOptions) == null ? void 0 : c.credentialsProvider) ==
          null
            ? void 0
            : u.getCredentialsAndIdentityId({
                authConfig: this.authConfig,
                authenticated: !1,
                forceRefresh: t.forceRefresh,
              }))),
      {
        tokens: o,
        credentials: n == null ? void 0 : n.credentials,
        identityId: n == null ? void 0 : n.identityId,
        userSub: r,
      }
    );
  }
  async clearCredentials() {
    var t, n;
    await ((n =
      (t = this.authOptions) == null ? void 0 : t.credentialsProvider) == null
      ? void 0
      : n.clearCredentialsAndIdentityId());
  }
  async getTokens(t) {
    var n, r;
    return (
      (await ((r = (n = this.authOptions) == null ? void 0 : n.tokenProvider) ==
      null
        ? void 0
        : r.getTokens(t))) ?? void 0
    );
  }
}
const Tg = (e) =>
  `You are using a custom Amazon ${e} endpoint, ensure the endpoint is correct.`;
class KC {
  constructor() {
    ((this.oAuthListener = void 0),
      (this.isConfigured = !1),
      (this.resourcesConfig = {}),
      (this.libraryOptions = {}),
      (this.Auth = new GC()));
  }
  configure(t, n) {
    const r = ky(t);
    ((this.resourcesConfig = r),
      n && (this.libraryOptions = n),
      (this.resourcesConfig = Iy(this.resourcesConfig)),
      this.Auth.configure(this.resourcesConfig.Auth, this.libraryOptions.Auth),
      Uo.dispatch(
        "core",
        { event: "configure", data: this.resourcesConfig },
        "Configure",
        io,
      ),
      this.notifyOAuthListener(),
      (this.isConfigured = !0));
  }
  getConfig() {
    return (
      this.isConfigured ||
        console.warn(
          "Amplify has not been configured. Please call Amplify.configure() before using this service.",
        ),
      this.resourcesConfig
    );
  }
  [Ww](t) {
    var n, r, o;
    (r =
      (n = this.resourcesConfig.Auth) == null ? void 0 : n.Cognito.loginWith) !=
      null && r.oauth
      ? t((o = this.resourcesConfig.Auth) == null ? void 0 : o.Cognito)
      : (this.oAuthListener = t);
  }
  notifyOAuthListener() {
    var t, n, r;
    !(
      (n =
        (t = this.resourcesConfig.Auth) == null
          ? void 0
          : t.Cognito.loginWith) != null && n.oauth
    ) ||
      !this.oAuthListener ||
      (this.oAuthListener(
        (r = this.resourcesConfig.Auth) == null ? void 0 : r.Cognito,
      ),
      (this.oAuthListener = void 0));
  }
}
const Fe = new KC(),
  qC = (e, t) => e.Auth.fetchAuthSession(t),
  hs = (e) => qC(Fe, e);
function Ay() {
  return Fe.Auth.clearCredentials();
}
const cl = (e) => {
    const { headers: t, statusCode: n } = e;
    return {
      ...(YC(e) ? e.$metadata : {}),
      httpStatusCode: n,
      requestId:
        t["x-amzn-requestid"] ??
        t["x-amzn-request-id"] ??
        t["x-amz-request-id"],
      extendedRequestId: t["x-amz-id-2"],
      cfId: t["x-amz-cf-id"],
    };
  },
  YC = (e) => typeof (e == null ? void 0 : e.$metadata) == "object",
  ni = async (e) => {
    if (!e || e.statusCode < 300) return;
    const t = await ps(e),
      r = ((s) => {
        const [a] = s.toString().split(/[,:]+/);
        return a.includes("#") ? a.split("#")[1] : a;
      })(e.headers["x-amzn-errortype"] ?? t.code ?? t.__type ?? "UnknownError"),
      o = t.message ?? t.Message ?? "Unknown error",
      i = new Error(o);
    return Object.assign(i, { name: r, $metadata: cl(e) });
  },
  ps = async (e) => {
    if (!e.body) throw new Error("Missing response payload");
    const t = await e.body.json();
    return Object.assign(t, { $metadata: cl(e) });
  },
  sn = (e, t, n, r) => async (o, i) => {
    const s = { ...r, ...o },
      a = await s.endpointResolver(s, i),
      l = await t(i, a),
      c = await e(l, { ...s });
    return n(c);
  },
  XC = 5 * 60 * 1e3;
function JC(e = XC) {
  return (r) => {
    const o = 2 ** r * 100 + 100 * Math.random();
    return o > e ? !1 : o;
  };
}
const Ny = 3,
  Og = "amz-sdk-invocation-id",
  QC = "amz-sdk-request",
  _g = 5 * 60 * 1e3,
  Vy = (e) => {
    const n = JC(_g)(e);
    return n === !1 ? _g : n;
  },
  ZC = [
    "AuthFailure",
    "InvalidSignatureException",
    "RequestExpired",
    "RequestInTheFuture",
    "RequestTimeTooSkewed",
    "SignatureDoesNotMatch",
    "BadRequestException",
  ],
  eE = (e) => !!e && ZC.includes(e),
  Fy = (e) => async (t, n) => {
    const r = n ?? (await e(t)) ?? void 0,
      o = (r == null ? void 0 : r.code) || (r == null ? void 0 : r.name),
      i = t == null ? void 0 : t.statusCode;
    return { retryable: oE(n) || rE(i, o) || eE(o) || iE(i, o) };
  },
  tE = [
    "BandwidthLimitExceeded",
    "EC2ThrottledException",
    "LimitExceededException",
    "PriorRequestNotComplete",
    "ProvisionedThroughputExceededException",
    "RequestLimitExceeded",
    "RequestThrottled",
    "RequestThrottledException",
    "SlowDown",
    "ThrottledException",
    "Throttling",
    "ThrottlingException",
    "TooManyRequestsException",
  ],
  nE = ["TimeoutError", "RequestTimeout", "RequestTimeoutException"],
  rE = (e, t) => e === 429 || (!!t && tE.includes(t)),
  oE = (e) =>
    [kr.NetworkError, "ERR_NETWORK"].includes(e == null ? void 0 : e.name),
  iE = (e, t) =>
    (!!e && [500, 502, 503, 504].includes(e)) || (!!t && nE.includes(t)),
  Dy = "cognito-identity",
  $y = {
    service: Dy,
    retryDecider: Fy(ni),
    computeDelay: Vy,
    cache: "no-store",
  },
  sE = ({
    maxAttempts: e = Ny,
    retryDecider: t,
    computeDelay: n,
    abortSignal: r,
  }) => {
    if (e < 1) throw new Error("maxAttempts must be greater than 0");
    return (o, i) =>
      async function (a) {
        let l,
          c = i.attemptsCount ?? 0,
          u;
        const d = () => {
          if (u) return (Ag(u, c), u);
          throw (Ag(l, c), l);
        };
        for (; !(r != null && r.aborted) && c < e; ) {
          try {
            ((u = await o(a)), (l = void 0));
          } catch (h) {
            ((l = h), (u = void 0));
          }
          ((c = (i.attemptsCount ?? 0) > c ? (i.attemptsCount ?? 0) : c + 1),
            (i.attemptsCount = c));
          const { isCredentialsExpiredError: f, retryable: g } = await t(
            u,
            l,
            i,
          );
          if (g) {
            if (
              ((i.isCredentialsExpired = !!f),
              !(r != null && r.aborted) && c < e)
            ) {
              const h = n(c);
              await aE(h, r);
            }
            continue;
          } else return d();
        }
        if (r != null && r.aborted) throw new Error("Request aborted.");
        return d();
      };
  },
  aE = (e, t) => {
    if (t != null && t.aborted) return Promise.resolve();
    let n, r;
    const o = new Promise((i) => {
      ((r = i), (n = setTimeout(i, e)));
    });
    return (
      t == null ||
        t.addEventListener("abort", function i(s) {
          (clearTimeout(n),
            t == null || t.removeEventListener("abort", i),
            r());
        }),
      o
    );
  },
  Ag = (e, t) => {
    Object.prototype.toString.call(e) === "[object Object]" &&
      (e.$metadata = { ...(e.$metadata ?? {}), attempts: t });
  },
  lE = Yw,
  cE = () => (e) =>
    async function (n) {
      return (n.headers[Og] || (n.headers[Og] = lE()), e(n));
    },
  uE =
    ({ maxAttempts: e = Ny }) =>
    (t, n) =>
      async function (o) {
        const i = n.attemptsCount ?? 0;
        return ((o.headers[QC] = `attempt=${i + 1}; max=${e}`), t(o));
      },
  dE =
    ({ userAgentHeader: e = "x-amz-user-agent", userAgentValue: t = "" }) =>
    (n) =>
      async function (o) {
        if (t.trim().length === 0) return await n(o);
        {
          const i = e.toLowerCase();
          return (
            (o.headers[i] = o.headers[i] ? `${o.headers[i]} ${t}` : t),
            await n(o)
          );
        }
      },
  Sd = (e, t) => (n, r) => {
    const o = {};
    let i = (s) => e(s, r);
    for (let s = t.length - 1; s >= 0; s--) {
      const a = t[s];
      i = a(r)(i, o);
    }
    return i(n);
  },
  Pc = (e) => {
    let t;
    return () => (t || (t = e()), t);
  },
  fE = (e) => !["HEAD", "GET", "DELETE"].includes(e.toUpperCase()),
  gE = async (
    { url: e, method: t, headers: n, body: r },
    { abortSignal: o, cache: i, withCrossDomainCredentials: s },
  ) => {
    var d;
    let a;
    try {
      a = await fetch(e, {
        method: t,
        headers: n,
        body: fE(t) ? r : void 0,
        signal: o,
        cache: i,
        credentials: s ? "include" : "same-origin",
      });
    } catch (f) {
      throw f instanceof TypeError
        ? new At({
            name: kr.NetworkError,
            message: "A network error has occurred.",
            underlyingError: f,
          })
        : f;
    }
    const l = {};
    (d = a.headers) == null ||
      d.forEach((f, g) => {
        l[g.toLowerCase()] = f;
      });
    const c = { statusCode: a.status, headers: l, body: null },
      u = Object.assign(a.body ?? {}, {
        text: Pc(() => a.text()),
        blob: Pc(() => a.blob()),
        json: Pc(() => a.json()),
      });
    return { ...c, body: u };
  },
  My = Sd(gE, [dE, cE, sE, uE]),
  hE = () => (e) =>
    async function (n) {
      return ((n.headers["cache-control"] = "no-store"), e(n));
    },
  Ly = Sd(My, [hE]),
  zy = (e) => (t, n) => {
    const r = pE(e),
      o = JSON.stringify(t);
    return mE(n, r, o);
  },
  pE = (e) => ({
    "content-type": "application/x-amz-json-1.1",
    "x-amz-target": `AWSCognitoIdentityService.${e}`,
  }),
  mE = ({ url: e }, t, n) => ({ headers: t, url: e, body: n, method: "POST" }),
  Ng = (e) =>
    sn(Ly, zy("GetCredentialsForIdentity"), vE, {
      ...$y,
      ...e,
      userAgentValue: ll(),
    }),
  vE = async (e) => {
    if (e.statusCode >= 300) throw await ni(e);
    const t = await ps(e);
    return {
      IdentityId: t.IdentityId,
      Credentials: yE(t.Credentials),
      $metadata: cl(e),
    };
  },
  yE = ({ Expiration: e, ...t } = {}) => ({
    ...t,
    Expiration: e && new Date(e * 1e3),
  }),
  bE = (e) => sn(Ly, zy("GetId"), xE, { ...$y, ...e, userAgentValue: ll() }),
  xE = async (e) => {
    if (e.statusCode >= 300) throw await ni(e);
    return { IdentityId: (await ps(e)).IdentityId, $metadata: cl(e) };
  },
  By = {
    id: "aws",
    outputs: { dnsSuffix: "amazonaws.com" },
    regionRegex: "^(us|eu|ap|sa|ca|me|af)\\-\\w+\\-\\d+$",
    regions: ["aws-global"],
  },
  SE = {
    partitions: [
      By,
      {
        id: "aws-cn",
        outputs: { dnsSuffix: "amazonaws.com.cn" },
        regionRegex: "^cn\\-\\w+\\-\\d+$",
        regions: ["aws-cn-global"],
      },
    ],
  },
  jy = (e) => {
    const { partitions: t } = SE;
    for (const { regions: n, outputs: r, regionRegex: o } of t) {
      const i = new RegExp(o);
      if (n.includes(e) || i.test(e)) return r.dnsSuffix;
    }
    return By.outputs.dnsSuffix;
  },
  ms = URL,
  wE = ({ region: e }) => ({ url: new ms(`https://${Dy}.${e}.${jy(e)}`) });
class Ni extends At {
  constructor() {
    super({
      name: kr.PlatformNotSupported,
      message: "Function not supported on current platform",
    });
  }
}
class Uy {
  constructor(t) {
    this.storage = t;
  }
  async setItem(t, n) {
    if (!this.storage) throw new Ni();
    this.storage.setItem(t, n);
  }
  async getItem(t) {
    if (!this.storage) throw new Ni();
    return this.storage.getItem(t);
  }
  async removeItem(t) {
    if (!this.storage) throw new Ni();
    this.storage.removeItem(t);
  }
  async clear() {
    if (!this.storage) throw new Ni();
    this.storage.clear();
  }
}
class Wy {
  constructor() {
    this.storage = new Map();
  }
  get length() {
    return this.storage.size;
  }
  key(t) {
    return t > this.length - 1 ? null : Array.from(this.storage.keys())[t];
  }
  setItem(t, n) {
    this.storage.set(t, n);
  }
  getItem(t) {
    return this.storage.get(t) ?? null;
  }
  removeItem(t) {
    this.storage.delete(t);
  }
  clear() {
    this.storage.clear();
  }
}
const Hy = new Ut("CoreStorageUtils"),
  CE = () => {
    try {
      if (typeof window < "u" && window.localStorage)
        return window.localStorage;
    } catch {
      Hy.info("localStorage not found. InMemoryStorage is used as a fallback.");
    }
    return new Wy();
  },
  Gy = () => {
    try {
      if (typeof window < "u" && window.sessionStorage)
        return (window.sessionStorage.getItem("test"), window.sessionStorage);
      throw new Error("sessionStorage is not defined");
    } catch {
      return (
        Hy.info(
          "sessionStorage not found. InMemoryStorage is used as a fallback.",
        ),
        new Wy()
      );
    }
  };
class EE extends Uy {
  constructor() {
    super(CE());
  }
}
class IE extends Uy {
  constructor() {
    super(Gy());
  }
}
class RE {
  constructor(t) {
    this._storage = t;
  }
  get storage() {
    if (!this._storage) throw new Ni();
    return this._storage;
  }
  setItem(t, n) {
    this.storage.setItem(t, n);
  }
  getItem(t) {
    return this.storage.getItem(t);
  }
  removeItem(t) {
    this.storage.removeItem(t);
  }
  clear() {
    this.storage.clear();
  }
}
class kE extends RE {
  constructor() {
    super(Gy());
  }
}
/*! js-cookie v3.0.5 | MIT */ function Ds(e) {
  for (var t = 1; t < arguments.length; t++) {
    var n = arguments[t];
    for (var r in n) e[r] = n[r];
  }
  return e;
}
var PE = {
  read: function (e) {
    return (
      e[0] === '"' && (e = e.slice(1, -1)),
      e.replace(/(%[\dA-F]{2})+/gi, decodeURIComponent)
    );
  },
  write: function (e) {
    return encodeURIComponent(e).replace(
      /%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g,
      decodeURIComponent,
    );
  },
};
function hu(e, t) {
  function n(o, i, s) {
    if (!(typeof document > "u")) {
      ((s = Ds({}, t, s)),
        typeof s.expires == "number" &&
          (s.expires = new Date(Date.now() + s.expires * 864e5)),
        s.expires && (s.expires = s.expires.toUTCString()),
        (o = encodeURIComponent(o)
          .replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent)
          .replace(/[()]/g, escape)));
      var a = "";
      for (var l in s)
        s[l] &&
          ((a += "; " + l), s[l] !== !0 && (a += "=" + s[l].split(";")[0]));
      return (document.cookie = o + "=" + e.write(i, o) + a);
    }
  }
  function r(o) {
    if (!(typeof document > "u" || (arguments.length && !o))) {
      for (
        var i = document.cookie ? document.cookie.split("; ") : [],
          s = {},
          a = 0;
        a < i.length;
        a++
      ) {
        var l = i[a].split("="),
          c = l.slice(1).join("=");
        try {
          var u = decodeURIComponent(l[0]);
          if (((s[u] = e.read(c, u)), o === u)) break;
        } catch {}
      }
      return o ? s[o] : s;
    }
  }
  return Object.create(
    {
      set: n,
      get: r,
      remove: function (o, i) {
        n(o, "", Ds({}, i, { expires: -1 }));
      },
      withAttributes: function (o) {
        return hu(this.converter, Ds({}, this.attributes, o));
      },
      withConverter: function (o) {
        return hu(Ds({}, this.converter, o), this.attributes);
      },
    },
    {
      attributes: { value: Object.freeze(t) },
      converter: { value: Object.freeze(e) },
    },
  );
}
var $s = hu(PE, { path: "/" });
class TE {
  constructor(t = {}) {
    const { path: n, domain: r, expires: o, sameSite: i, secure: s } = t;
    if (
      ((this.domain = r),
      (this.path = n || "/"),
      (this.expires = Object.prototype.hasOwnProperty.call(t, "expires")
        ? o
        : 365),
      (this.secure = Object.prototype.hasOwnProperty.call(t, "secure")
        ? s
        : !0),
      Object.prototype.hasOwnProperty.call(t, "sameSite"))
    ) {
      if (!i || !["strict", "lax", "none"].includes(i))
        throw new Error(
          'The sameSite value of cookieStorage must be "lax", "strict" or "none".',
        );
      if (i === "none" && !this.secure)
        throw new Error(
          "sameSite = None requires the Secure attribute in latest browser versions.",
        );
      this.sameSite = i;
    }
  }
  async setItem(t, n) {
    $s.set(t, n, this.getData());
  }
  async getItem(t) {
    return $s.get(t) ?? null;
  }
  async removeItem(t) {
    $s.remove(t, this.getData());
  }
  async clear() {
    const t = $s.get(),
      n = Object.keys(t).map((r) => this.removeItem(r));
    await Promise.all(n);
  }
  getData() {
    return {
      path: this.path,
      expires: this.expires,
      domain: this.domain,
      secure: this.secure,
      ...(this.sameSite && { sameSite: this.sameSite }),
    };
  }
}
const vs = new EE();
new IE();
const nr = new kE(),
  OE = (e) => {
    let t;
    return async (...n) =>
      t ||
      ((t = new Promise((r, o) => {
        e(...n)
          .then((i) => {
            r(i);
          })
          .catch((i) => {
            o(i);
          })
          .finally(() => {
            t = void 0;
          });
      })),
      t);
  };
function Vg({ expiresAt: e, clockDrift: t, tolerance: n = 5e3 }) {
  return Date.now() + t + n > e;
}
const _E = async () => {
  const { userAgentData: e } = navigator;
  if (!e) return navigator.userAgent;
  const {
      platform: t = "",
      platformVersion: n = "",
      model: r = "",
      architecture: o = "",
      fullVersionList: i = [],
    } = await e.getHighEntropyValues([
      "platform",
      "platformVersion",
      "architecture",
      "model",
      "fullVersionList",
    ]),
    s = i.map((l) => `${l.brand}/${l.version}`).join(";");
  return [t, n, o, r, t, s].filter((l) => l).join(" ") || navigator.userAgent;
};
function AE(e) {
  return Array.from(e, (t) => String.fromCodePoint(t)).join("");
}
const es = {
  convert(e, t = { urlSafe: !1, skipPadding: !1 }) {
    const n = typeof e == "string" ? e : AE(e);
    let r = Dw()(n);
    return (
      t.urlSafe && (r = r.replace(/\+/g, "-").replace(/\//g, "_")),
      t.skipPadding && (r = r.replace(/=/g, "")),
      r
    );
  },
};
function NE() {
  return Fw().getRandomValues(new Uint32Array(1))[0];
}
function VE(e) {
  const { words: t } = e,
    { sigBytes: n } = e,
    r = [];
  for (let o = 0; o < n; o++) {
    const i = (t[o >>> 2] >>> (24 - (o % 4) * 8)) & 255;
    (r.push((i >>> 4).toString(16)), r.push((i & 15).toString(16)));
  }
  return r.join("");
}
class wd {
  constructor(t, n) {
    this.words = [];
    let r = t;
    ((r = this.words = r || []),
      n !== void 0 ? (this.sigBytes = n) : (this.sigBytes = r.length * 4));
  }
  random(t) {
    const n = [];
    for (let r = 0; r < t; r += 4) n.push(NE());
    return new wd(n, t);
  }
  toString() {
    return VE(this);
  }
}
var fe;
(function (e) {
  ((e.EmptySignInUsername = "EmptySignInUsername"),
    (e.EmptySignInPassword = "EmptySignInPassword"),
    (e.CustomAuthSignInPassword = "CustomAuthSignInPassword"),
    (e.EmptySignUpUsername = "EmptySignUpUsername"),
    (e.EmptySignUpPassword = "EmptySignUpPassword"),
    (e.EmptyConfirmSignUpUsername = "EmptyConfirmSignUpUsername"),
    (e.EmptyConfirmSignUpCode = "EmptyConfirmSignUpCode"),
    (e.EmptyResendSignUpCodeUsername = "EmptyresendSignUpCodeUsername"),
    (e.EmptyChallengeResponse = "EmptyChallengeResponse"),
    (e.EmptyConfirmResetPasswordUsername = "EmptyConfirmResetPasswordUsername"),
    (e.EmptyConfirmResetPasswordNewPassword =
      "EmptyConfirmResetPasswordNewPassword"),
    (e.EmptyConfirmResetPasswordConfirmationCode =
      "EmptyConfirmResetPasswordConfirmationCode"),
    (e.EmptyResetPasswordUsername = "EmptyResetPasswordUsername"),
    (e.EmptyVerifyTOTPSetupCode = "EmptyVerifyTOTPSetupCode"),
    (e.EmptyConfirmUserAttributeCode = "EmptyConfirmUserAttributeCode"),
    (e.IncorrectMFAMethod = "IncorrectMFAMethod"),
    (e.EmptyUpdatePassword = "EmptyUpdatePassword"));
})(fe || (fe = {}));
const Ky = {
  [fe.EmptyChallengeResponse]: {
    message: "challengeResponse is required to confirmSignIn",
  },
  [fe.EmptyConfirmResetPasswordUsername]: {
    message: "username is required to confirmResetPassword",
  },
  [fe.EmptyConfirmSignUpCode]: { message: "code is required to confirmSignUp" },
  [fe.EmptyConfirmSignUpUsername]: {
    message: "username is required to confirmSignUp",
  },
  [fe.EmptyConfirmResetPasswordConfirmationCode]: {
    message: "confirmationCode is required to confirmResetPassword",
  },
  [fe.EmptyConfirmResetPasswordNewPassword]: {
    message: "newPassword is required to confirmResetPassword",
  },
  [fe.EmptyResendSignUpCodeUsername]: {
    message: "username is required to confirmSignUp",
  },
  [fe.EmptyResetPasswordUsername]: {
    message: "username is required to resetPassword",
  },
  [fe.EmptySignInPassword]: { message: "password is required to signIn" },
  [fe.EmptySignInUsername]: { message: "username is required to signIn" },
  [fe.EmptySignUpPassword]: { message: "password is required to signUp" },
  [fe.EmptySignUpUsername]: { message: "username is required to signUp" },
  [fe.CustomAuthSignInPassword]: {
    message: "A password is not needed when signing in with CUSTOM_WITHOUT_SRP",
    recoverySuggestion: "Do not include a password in your signIn call.",
  },
  [fe.IncorrectMFAMethod]: {
    message:
      "Incorrect MFA method was chosen. It should be either SMS, TOTP, or EMAIL",
    recoverySuggestion:
      "Try to pass SMS, TOTP, or EMAIL as the challengeResponse",
  },
  [fe.EmptyVerifyTOTPSetupCode]: {
    message: "code is required to verifyTotpSetup",
  },
  [fe.EmptyUpdatePassword]: {
    message: "oldPassword and newPassword are required to changePassword",
  },
  [fe.EmptyConfirmUserAttributeCode]: {
    message: "confirmation code is required to confirmUserAttribute",
  },
};
var Fg;
(function (e) {
  ((e.DEFAULT_MSG = "Authentication Error"),
    (e.EMPTY_EMAIL = "Email cannot be empty"),
    (e.EMPTY_PHONE = "Phone number cannot be empty"),
    (e.EMPTY_USERNAME = "Username cannot be empty"),
    (e.INVALID_USERNAME =
      "The username should either be a string or one of the sign in types"),
    (e.EMPTY_PASSWORD = "Password cannot be empty"),
    (e.EMPTY_CODE = "Confirmation code cannot be empty"),
    (e.SIGN_UP_ERROR = "Error creating account"),
    (e.NO_MFA = "No valid MFA method provided"),
    (e.INVALID_MFA = "Invalid MFA type"),
    (e.EMPTY_CHALLENGE = "Challenge response cannot be empty"),
    (e.NO_USER_SESSION = "Failed to get the session because the user is empty"),
    (e.NETWORK_ERROR = "Network Error"),
    (e.DEVICE_CONFIG =
      "Device tracking has not been configured in this User Pool"),
    (e.AUTOSIGNIN_ERROR = "Please use your credentials to sign in"),
    (e.OAUTH_ERROR =
      "Couldn't finish OAuth flow, check your User Pool HostedUI settings"));
})(Fg || (Fg = {}));
var Wo;
(function (e) {
  ((e.SignInException = "SignInException"),
    (e.OAuthSignInError = "OAuthSignInException"));
})(Wo || (Wo = {}));
class le extends At {
  constructor(t) {
    (super(t),
      (this.constructor = le),
      Object.setPrototypeOf(this, le.prototype));
  }
}
function lt(e, t) {
  const { message: n, recoverySuggestion: r } = Ky[t];
  if (!e) throw new le({ name: t, message: n, recoverySuggestion: r });
}
function ct(e) {
  const t = e == null ? void 0 : e.split("_")[0];
  if (!e || e.indexOf("_") < 0 || !t || typeof t != "string")
    throw new le({
      name: "InvalidUserPoolId",
      message: "Invalid user pool id provided.",
    });
  return t;
}
function pu(e) {
  if (!e || !e.includes(":"))
    throw new le({
      name: "InvalidIdentityPoolIdException",
      message: "Invalid identity pool id provided.",
      recoverySuggestion:
        "Make sure a valid identityPoolId is given in the config.",
    });
  return e.split(":")[0];
}
function Dg(e) {
  return Object.entries(e).map(([t, n]) => ({ Name: t, Value: n }));
}
var $g;
(function (e) {
  ((e.ConcurrentModificationException = "ConcurrentModificationException"),
    (e.ForbiddenException = "ForbiddenException"),
    (e.InternalErrorException = "InternalErrorException"),
    (e.InvalidParameterException = "InvalidParameterException"),
    (e.NotAuthorizedException = "NotAuthorizedException"),
    (e.ResourceNotFoundException = "ResourceNotFoundException"),
    (e.SoftwareTokenMFANotFoundException =
      "SoftwareTokenMFANotFoundException"));
})($g || ($g = {}));
var Mg;
(function (e) {
  ((e.ForbiddenException = "ForbiddenException"),
    (e.InternalErrorException = "InternalErrorException"),
    (e.InvalidParameterException = "InvalidParameterException"),
    (e.InvalidPasswordException = "InvalidPasswordException"),
    (e.LimitExceededException = "LimitExceededException"),
    (e.NotAuthorizedException = "NotAuthorizedException"),
    (e.PasswordResetRequiredException = "PasswordResetRequiredException"),
    (e.ResourceNotFoundException = "ResourceNotFoundException"),
    (e.TooManyRequestsException = "TooManyRequestsException"),
    (e.UserNotConfirmedException = "UserNotConfirmedException"),
    (e.UserNotFoundException = "UserNotFoundException"));
})(Mg || (Mg = {}));
var Lg;
(function (e) {
  ((e.ForbiddenException = "ForbiddenException"),
    (e.InternalErrorException = "InternalErrorException"),
    (e.InvalidLambdaResponseException = "InvalidLambdaResponseException"),
    (e.InvalidParameterException = "InvalidParameterException"),
    (e.InvalidPasswordException = "InvalidPasswordException"),
    (e.InvalidUserPoolConfigurationException =
      "InvalidUserPoolConfigurationException"),
    (e.NotAuthorizedException = "NotAuthorizedException"),
    (e.PasswordResetRequiredException = "PasswordResetRequiredException"),
    (e.ResourceNotFoundException = "ResourceNotFoundException"),
    (e.TooManyRequestsException = "TooManyRequestsException"),
    (e.UsernameExistsException = "UsernameExistsException"),
    (e.UserNotConfirmedException = "UserNotConfirmedException"),
    (e.UserNotFoundException = "UserNotFoundException"));
})(Lg || (Lg = {}));
var zg;
(function (e) {
  ((e.CodeMismatchException = "CodeMismatchException"),
    (e.ExpiredCodeException = "ExpiredCodeException"),
    (e.ForbiddenException = "ForbiddenException"),
    (e.InternalErrorException = "InternalErrorException"),
    (e.InvalidLambdaResponseException = "InvalidLambdaResponseException"),
    (e.InvalidParameterException = "InvalidParameterException"),
    (e.InvalidPasswordException = "InvalidPasswordException"),
    (e.LimitExceededException = "LimitExceededException"),
    (e.NotAuthorizedException = "NotAuthorizedException"),
    (e.ResourceNotFoundException = "ResourceNotFoundException"),
    (e.TooManyFailedAttemptsException = "TooManyFailedAttemptsException"),
    (e.TooManyRequestsException = "TooManyRequestsException"),
    (e.UnexpectedLambdaException = "UnexpectedLambdaException"),
    (e.UserLambdaValidationException = "UserLambdaValidationException"),
    (e.UserNotConfirmedException = "UserNotConfirmedException"),
    (e.UserNotFoundException = "UserNotFoundException"));
})(zg || (zg = {}));
var Bg;
(function (e) {
  ((e.AliasExistsException = "AliasExistsException"),
    (e.CodeMismatchException = "CodeMismatchException"),
    (e.ExpiredCodeException = "ExpiredCodeException"),
    (e.ForbiddenException = "ForbiddenException"),
    (e.InternalErrorException = "InternalErrorException"),
    (e.InvalidLambdaResponseException = "InvalidLambdaResponseException"),
    (e.InvalidParameterException = "InvalidParameterException"),
    (e.LimitExceededException = "LimitExceededException"),
    (e.NotAuthorizedException = "NotAuthorizedException"),
    (e.ResourceNotFoundException = "ResourceNotFoundException"),
    (e.TooManyFailedAttemptsException = "TooManyFailedAttemptsException"),
    (e.TooManyRequestsException = "TooManyRequestsException"),
    (e.UnexpectedLambdaException = "UnexpectedLambdaException"),
    (e.UserLambdaValidationException = "UserLambdaValidationException"),
    (e.UserNotFoundException = "UserNotFoundException"));
})(Bg || (Bg = {}));
var jg;
(function (e) {
  ((e.ForbiddenException = "ForbiddenException"),
    (e.InternalErrorException = "InternalErrorException"),
    (e.InvalidParameterException = "InvalidParameterException"),
    (e.NotAuthorizedException = "NotAuthorizedException"),
    (e.PasswordResetRequiredException = "PasswordResetRequiredException"),
    (e.ResourceNotFoundException = "ResourceNotFoundException"),
    (e.TooManyRequestsException = "TooManyRequestsException"),
    (e.UserNotConfirmedException = "UserNotConfirmedException"),
    (e.UserNotFoundException = "UserNotFoundException"));
})(jg || (jg = {}));
var Ug;
(function (e) {
  ((e.ForbiddenException = "ForbiddenException"),
    (e.InternalErrorException = "InternalErrorException"),
    (e.InvalidParameterException = "InvalidParameterException"),
    (e.NotAuthorizedException = "NotAuthorizedException"),
    (e.PasswordResetRequiredException = "PasswordResetRequiredException"),
    (e.ResourceNotFoundException = "ResourceNotFoundException"),
    (e.TooManyRequestsException = "TooManyRequestsException"),
    (e.UserNotConfirmedException = "UserNotConfirmedException"),
    (e.UserNotFoundException = "UserNotFoundException"));
})(Ug || (Ug = {}));
var Wg;
(function (e) {
  ((e.ForbiddenException = "ForbiddenException"),
    (e.InternalErrorException = "InternalErrorException"),
    (e.InvalidParameterException = "InvalidParameterException"),
    (e.InvalidUserPoolConfigurationException =
      "InvalidUserPoolConfigurationException"),
    (e.NotAuthorizedException = "NotAuthorizedException"),
    (e.PasswordResetRequiredException = "PasswordResetRequiredException"),
    (e.ResourceNotFoundException = "ResourceNotFoundException"),
    (e.TooManyRequestsException = "TooManyRequestsException"),
    (e.UserNotConfirmedException = "UserNotConfirmedException"),
    (e.UserNotFoundException = "UserNotFoundException"));
})(Wg || (Wg = {}));
var Hg;
(function (e) {
  ((e.CodeDeliveryFailureException = "CodeDeliveryFailureException"),
    (e.ForbiddenException = "ForbiddenException"),
    (e.InternalErrorException = "InternalErrorException"),
    (e.InvalidEmailRoleAccessPolicyException =
      "InvalidEmailRoleAccessPolicyException"),
    (e.InvalidLambdaResponseException = "InvalidLambdaResponseException"),
    (e.InvalidParameterException = "InvalidParameterException"),
    (e.InvalidSmsRoleAccessPolicyException =
      "InvalidSmsRoleAccessPolicyException"),
    (e.InvalidSmsRoleTrustRelationshipException =
      "InvalidSmsRoleTrustRelationshipException"),
    (e.LimitExceededException = "LimitExceededException"),
    (e.NotAuthorizedException = "NotAuthorizedException"),
    (e.ResourceNotFoundException = "ResourceNotFoundException"),
    (e.TooManyRequestsException = "TooManyRequestsException"),
    (e.UnexpectedLambdaException = "UnexpectedLambdaException"),
    (e.UserLambdaValidationException = "UserLambdaValidationException"),
    (e.UserNotFoundException = "UserNotFoundException"));
})(Hg || (Hg = {}));
var Gg;
(function (e) {
  ((e.ForbiddenException = "ForbiddenException"),
    (e.InternalErrorException = "InternalErrorException"),
    (e.InvalidParameterException = "InvalidParameterException"),
    (e.NotAuthorizedException = "NotAuthorizedException"),
    (e.PasswordResetRequiredException = "PasswordResetRequiredException"),
    (e.ResourceNotFoundException = "ResourceNotFoundException"),
    (e.TooManyRequestsException = "TooManyRequestsException"),
    (e.UserNotConfirmedException = "UserNotConfirmedException"),
    (e.UserNotFoundException = "UserNotFoundException"));
})(Gg || (Gg = {}));
var Kg;
(function (e) {
  ((e.ExternalServiceException = "ExternalServiceException"),
    (e.InternalErrorException = "InternalErrorException"),
    (e.InvalidParameterException = "InvalidParameterException"),
    (e.LimitExceededException = "LimitExceededException"),
    (e.NotAuthorizedException = "NotAuthorizedException"),
    (e.ResourceConflictException = "ResourceConflictException"),
    (e.ResourceNotFoundException = "ResourceNotFoundException"),
    (e.TooManyRequestsException = "TooManyRequestsException"));
})(Kg || (Kg = {}));
var qg;
(function (e) {
  ((e.ExternalServiceException = "ExternalServiceException"),
    (e.InternalErrorException = "InternalErrorException"),
    (e.InvalidIdentityPoolConfigurationException =
      "InvalidIdentityPoolConfigurationException"),
    (e.InvalidParameterException = "InvalidParameterException"),
    (e.NotAuthorizedException = "NotAuthorizedException"),
    (e.ResourceConflictException = "ResourceConflictException"),
    (e.ResourceNotFoundException = "ResourceNotFoundException"),
    (e.TooManyRequestsException = "TooManyRequestsException"));
})(qg || (qg = {}));
var Yg;
(function (e) {
  ((e.CodeDeliveryFailureException = "CodeDeliveryFailureException"),
    (e.ForbiddenException = "ForbiddenException"),
    (e.InternalErrorException = "InternalErrorException"),
    (e.InvalidEmailRoleAccessPolicyException =
      "InvalidEmailRoleAccessPolicyException"),
    (e.InvalidLambdaResponseException = "InvalidLambdaResponseException"),
    (e.InvalidParameterException = "InvalidParameterException"),
    (e.InvalidSmsRoleAccessPolicyException =
      "InvalidSmsRoleAccessPolicyException"),
    (e.InvalidSmsRoleTrustRelationshipException =
      "InvalidSmsRoleTrustRelationshipException"),
    (e.LimitExceededException = "LimitExceededException"),
    (e.NotAuthorizedException = "NotAuthorizedException"),
    (e.PasswordResetRequiredException = "PasswordResetRequiredException"),
    (e.ResourceNotFoundException = "ResourceNotFoundException"),
    (e.TooManyRequestsException = "TooManyRequestsException"),
    (e.UnexpectedLambdaException = "UnexpectedLambdaException"),
    (e.UserLambdaValidationException = "UserLambdaValidationException"),
    (e.UserNotConfirmedException = "UserNotConfirmedException"),
    (e.UserNotFoundException = "UserNotFoundException"));
})(Yg || (Yg = {}));
var Xg;
(function (e) {
  ((e.ForbiddenException = "ForbiddenException"),
    (e.InternalErrorException = "InternalErrorException"),
    (e.InvalidParameterException = "InvalidParameterException"),
    (e.NotAuthorizedException = "NotAuthorizedException"),
    (e.PasswordResetRequiredException = "PasswordResetRequiredException"),
    (e.ResourceNotFoundException = "ResourceNotFoundException"),
    (e.TooManyRequestsException = "TooManyRequestsException"),
    (e.UserNotConfirmedException = "UserNotConfirmedException"));
})(Xg || (Xg = {}));
var Da;
(function (e) {
  ((e.PasswordResetRequiredException = "PasswordResetRequiredException"),
    (e.ForbiddenException = "ForbiddenException"),
    (e.InternalErrorException = "InternalErrorException"),
    (e.InvalidLambdaResponseException = "InvalidLambdaResponseException"),
    (e.InvalidParameterException = "InvalidParameterException"),
    (e.InvalidSmsRoleAccessPolicyException =
      "InvalidSmsRoleAccessPolicyException"),
    (e.InvalidSmsRoleTrustRelationshipException =
      "InvalidSmsRoleTrustRelationshipException"),
    (e.InvalidUserPoolConfigurationException =
      "InvalidUserPoolConfigurationException"),
    (e.NotAuthorizedException = "NotAuthorizedException"),
    (e.ResourceNotFoundException = "ResourceNotFoundException"),
    (e.TooManyRequestsException = "TooManyRequestsException"),
    (e.UnexpectedLambdaException = "UnexpectedLambdaException"),
    (e.UserLambdaValidationException = "UserLambdaValidationException"),
    (e.UserNotConfirmedException = "UserNotConfirmedException"),
    (e.UserNotFoundException = "UserNotFoundException"));
})(Da || (Da = {}));
var Jg;
(function (e) {
  ((e.CodeDeliveryFailureException = "CodeDeliveryFailureException"),
    (e.ForbiddenException = "ForbiddenException"),
    (e.InternalErrorException = "InternalErrorException"),
    (e.InvalidEmailRoleAccessPolicyException =
      "InvalidEmailRoleAccessPolicyException"),
    (e.InvalidLambdaResponseException = "InvalidLambdaResponseException"),
    (e.InvalidParameterException = "InvalidParameterException"),
    (e.InvalidSmsRoleAccessPolicyException =
      "InvalidSmsRoleAccessPolicyException"),
    (e.InvalidSmsRoleTrustRelationshipException =
      "InvalidSmsRoleTrustRelationshipException"),
    (e.LimitExceededException = "LimitExceededException"),
    (e.NotAuthorizedException = "NotAuthorizedException"),
    (e.ResourceNotFoundException = "ResourceNotFoundException"),
    (e.TooManyRequestsException = "TooManyRequestsException"),
    (e.UnexpectedLambdaException = "UnexpectedLambdaException"),
    (e.UserLambdaValidationException = "UserLambdaValidationException"),
    (e.UserNotFoundException = "UserNotFoundException"));
})(Jg || (Jg = {}));
var Qg;
(function (e) {
  ((e.AliasExistsException = "AliasExistsException"),
    (e.CodeMismatchException = "CodeMismatchException"),
    (e.ExpiredCodeException = "ExpiredCodeException"),
    (e.ForbiddenException = "ForbiddenException"),
    (e.InternalErrorException = "InternalErrorException"),
    (e.InvalidLambdaResponseException = "InvalidLambdaResponseException"),
    (e.InvalidParameterException = "InvalidParameterException"),
    (e.InvalidPasswordException = "InvalidPasswordException"),
    (e.InvalidSmsRoleAccessPolicyException =
      "InvalidSmsRoleAccessPolicyException"),
    (e.InvalidSmsRoleTrustRelationshipException =
      "InvalidSmsRoleTrustRelationshipException"),
    (e.InvalidUserPoolConfigurationException =
      "InvalidUserPoolConfigurationException"),
    (e.MFAMethodNotFoundException = "MFAMethodNotFoundException"),
    (e.NotAuthorizedException = "NotAuthorizedException"),
    (e.PasswordResetRequiredException = "PasswordResetRequiredException"),
    (e.ResourceNotFoundException = "ResourceNotFoundException"),
    (e.SoftwareTokenMFANotFoundException = "SoftwareTokenMFANotFoundException"),
    (e.TooManyRequestsException = "TooManyRequestsException"),
    (e.UnexpectedLambdaException = "UnexpectedLambdaException"),
    (e.UserLambdaValidationException = "UserLambdaValidationException"),
    (e.UserNotConfirmedException = "UserNotConfirmedException"),
    (e.UserNotFoundException = "UserNotFoundException"));
})(Qg || (Qg = {}));
var Zg;
(function (e) {
  ((e.ForbiddenException = "ForbiddenException"),
    (e.InternalErrorException = "InternalErrorException"),
    (e.InvalidParameterException = "InvalidParameterException"),
    (e.NotAuthorizedException = "NotAuthorizedException"),
    (e.PasswordResetRequiredException = "PasswordResetRequiredException"),
    (e.ResourceNotFoundException = "ResourceNotFoundException"),
    (e.UserNotConfirmedException = "UserNotConfirmedException"),
    (e.UserNotFoundException = "UserNotFoundException"));
})(Zg || (Zg = {}));
var mu;
(function (e) {
  ((e.CodeDeliveryFailureException = "CodeDeliveryFailureException"),
    (e.InternalErrorException = "InternalErrorException"),
    (e.InvalidEmailRoleAccessPolicyException =
      "InvalidEmailRoleAccessPolicyException"),
    (e.InvalidLambdaResponseException = "InvalidLambdaResponseException"),
    (e.InvalidParameterException = "InvalidParameterException"),
    (e.InvalidPasswordException = "InvalidPasswordException"),
    (e.InvalidSmsRoleAccessPolicyException =
      "InvalidSmsRoleAccessPolicyException"),
    (e.InvalidSmsRoleTrustRelationshipException =
      "InvalidSmsRoleTrustRelationshipException"),
    (e.NotAuthorizedException = "NotAuthorizedException"),
    (e.ResourceNotFoundException = "ResourceNotFoundException"),
    (e.TooManyRequestsException = "TooManyRequestsException"),
    (e.UnexpectedLambdaException = "UnexpectedLambdaException"),
    (e.UserLambdaValidationException = "UserLambdaValidationException"),
    (e.UsernameExistsException = "UsernameExistsException"));
})(mu || (mu = {}));
var eh;
(function (e) {
  ((e.AliasExistsException = "AliasExistsException"),
    (e.CodeDeliveryFailureException = "CodeDeliveryFailureException"),
    (e.CodeMismatchException = "CodeMismatchException"),
    (e.ExpiredCodeException = "ExpiredCodeException"),
    (e.ForbiddenException = "ForbiddenException"),
    (e.InternalErrorException = "InternalErrorException"),
    (e.InvalidEmailRoleAccessPolicyException =
      "InvalidEmailRoleAccessPolicyException"),
    (e.InvalidLambdaResponseException = "InvalidLambdaResponseException"),
    (e.InvalidParameterException = "InvalidParameterException"),
    (e.InvalidSmsRoleAccessPolicyException =
      "InvalidSmsRoleAccessPolicyException"),
    (e.InvalidSmsRoleTrustRelationshipException =
      "InvalidSmsRoleTrustRelationshipException"),
    (e.NotAuthorizedException = "NotAuthorizedException"),
    (e.PasswordResetRequiredException = "PasswordResetRequiredException"),
    (e.ResourceNotFoundException = "ResourceNotFoundException"),
    (e.TooManyRequestsException = "TooManyRequestsException"),
    (e.UnexpectedLambdaException = "UnexpectedLambdaException"),
    (e.UserLambdaValidationException = "UserLambdaValidationException"),
    (e.UserNotConfirmedException = "UserNotConfirmedException"),
    (e.UserNotFoundException = "UserNotFoundException"));
})(eh || (eh = {}));
var th;
(function (e) {
  ((e.CodeMismatchException = "CodeMismatchException"),
    (e.EnableSoftwareTokenMFAException = "EnableSoftwareTokenMFAException"),
    (e.ForbiddenException = "ForbiddenException"),
    (e.InternalErrorException = "InternalErrorException"),
    (e.InvalidParameterException = "InvalidParameterException"),
    (e.InvalidUserPoolConfigurationException =
      "InvalidUserPoolConfigurationException"),
    (e.NotAuthorizedException = "NotAuthorizedException"),
    (e.PasswordResetRequiredException = "PasswordResetRequiredException"),
    (e.ResourceNotFoundException = "ResourceNotFoundException"),
    (e.SoftwareTokenMFANotFoundException = "SoftwareTokenMFANotFoundException"),
    (e.TooManyRequestsException = "TooManyRequestsException"),
    (e.UserNotConfirmedException = "UserNotConfirmedException"),
    (e.UserNotFoundException = "UserNotFoundException"));
})(th || (th = {}));
var nh;
(function (e) {
  ((e.AliasExistsException = "AliasExistsException"),
    (e.CodeMismatchException = "CodeMismatchException"),
    (e.ExpiredCodeException = "ExpiredCodeException"),
    (e.ForbiddenException = "ForbiddenException"),
    (e.InternalErrorException = "InternalErrorException"),
    (e.InvalidParameterException = "InvalidParameterException"),
    (e.LimitExceededException = "LimitExceededException"),
    (e.NotAuthorizedException = "NotAuthorizedException"),
    (e.PasswordResetRequiredException = "PasswordResetRequiredException"),
    (e.ResourceNotFoundException = "ResourceNotFoundException"),
    (e.TooManyRequestsException = "TooManyRequestsException"),
    (e.UserNotConfirmedException = "UserNotConfirmedException"),
    (e.UserNotFoundException = "UserNotFoundException"));
})(nh || (nh = {}));
var rh;
(function (e) {
  ((e.ForbiddenException = "ForbiddenException"),
    (e.InternalErrorException = "InternalErrorException"),
    (e.InvalidParameterException = "InvalidParameterException"),
    (e.InvalidUserPoolConfigurationException =
      "InvalidUserPoolConfigurationException"),
    (e.NotAuthorizedException = "NotAuthorizedException"),
    (e.PasswordResetRequiredException = "PasswordResetRequiredException"),
    (e.ResourceNotFoundException = "ResourceNotFoundException"),
    (e.TooManyRequestsException = "TooManyRequestsException"),
    (e.UserNotConfirmedException = "UserNotConfirmedException"),
    (e.UserNotFoundException = "UserNotFoundException"));
})(rh || (rh = {}));
var oh;
(function (e) {
  ((e.ForbiddenException = "ForbiddenException"),
    (e.InternalErrorException = "InternalErrorException"),
    (e.InvalidParameterException = "InvalidParameterException"),
    (e.InvalidUserPoolConfigurationException =
      "InvalidUserPoolConfigurationException"),
    (e.NotAuthorizedException = "NotAuthorizedException"),
    (e.PasswordResetRequiredException = "PasswordResetRequiredException"),
    (e.ResourceNotFoundException = "ResourceNotFoundException"),
    (e.TooManyRequestsException = "TooManyRequestsException"),
    (e.UserNotConfirmedException = "UserNotConfirmedException"),
    (e.UserNotFoundException = "UserNotFoundException"));
})(oh || (oh = {}));
const ul = "UserUnAuthenticatedException",
  FE = "UserAlreadyAuthenticatedException",
  DE = "DeviceMetadataNotFoundException",
  $E = "InvalidRedirectException",
  ME = "InvalidAppSchemeException",
  LE = "InvalidPreferredRedirectUrlException",
  zE = new le({
    name: $E,
    message:
      "signInRedirect or signOutRedirect had an invalid format or was not found.",
    recoverySuggestion:
      "Please make sure the signIn/Out redirect in your oauth config is valid.",
  });
new le({
  name: ME,
  message: "A valid non-http app scheme was not found in the config.",
  recoverySuggestion:
    "Please make sure a valid custom app scheme is present in the config.",
});
const BE = new le({
    name: LE,
    message:
      "The given preferredRedirectUrl does not match any items in the redirectSignOutUrls array from the config.",
    recoverySuggestion:
      "Please make sure a matching preferredRedirectUrl is provided.",
  }),
  jE = "InvalidOriginException",
  UE = new le({
    name: jE,
    message:
      "redirect is coming from a different origin. The oauth flow needs to be initiated from the same origin",
    recoverySuggestion: "Please call signInWithRedirect from the same origin.",
  }),
  WE = "OAuthSignOutException",
  HE = "TokenRefreshException",
  GE = "UnexpectedSignInInterruptionException";
function qy(e) {
  if (!e || !e.accessToken)
    throw new le({
      name: ul,
      message: "User needs to be authenticated to call this API.",
      recoverySuggestion: "Sign in before calling this API again.",
    });
}
function KE(e) {
  if (!e || !e.idToken)
    throw new le({
      name: ul,
      message: "User needs to be authenticated to call this API.",
      recoverySuggestion: "Sign in before calling this API again.",
    });
}
const qE = new le({
    name: HE,
    message: `Token refresh is not supported when authenticated with the 'implicit grant' (token) oauth flow. 
	Please change your oauth configuration to use 'code grant' flow.`,
    recoverySuggestion: `Please logout and change your Amplify configuration to use "code grant" flow. 
	E.g { responseType: 'code' }`,
  }),
  YE = new le({
    name: ul,
    message: "User needs to be authenticated to call this API.",
    recoverySuggestion: "Sign in before calling this API again.",
  });
function Yy(e) {
  if (QE(e)) throw qE;
  if (!JE(e)) throw YE;
}
function Xy(e) {
  if (!e || !e.deviceKey || !e.deviceGroupKey || !e.randomPassword)
    throw new le({
      name: DE,
      message:
        "Either deviceKey, deviceGroupKey or secretPassword were not found during the sign-in process.",
      recoverySuggestion:
        "Make sure to not clear storage after calling the signIn API.",
    });
}
const XE = {
  inflightOAuth: "inflightOAuth",
  oauthSignIn: "oauthSignIn",
  oauthPKCE: "oauthPKCE",
  oauthState: "oauthState",
};
function Jy(e) {
  return (
    (e == null ? void 0 : e.accessToken) || (e == null ? void 0 : e.idToken)
  );
}
function JE(e) {
  return Jy(e) && (e == null ? void 0 : e.refreshToken);
}
function QE(e) {
  return Jy(e) && !(e != null && e.refreshToken);
}
const ZE = async (e) => {
  var a, l;
  const t = (a = e.getConfig().Auth) == null ? void 0 : a.Cognito;
  Se(t);
  const n = await e.Auth.getTokens({ forceRefresh: !1 });
  qy(n);
  const { "cognito:username": r, sub: o } =
      ((l = n.idToken) == null ? void 0 : l.payload) ?? {},
    i = { username: r, userId: o },
    s = eI(n);
  return (s && (i.signInDetails = s), i);
};
function eI(e) {
  return e == null ? void 0 : e.signInDetails;
}
const Cd = async () => ZE(Fe),
  an = (e, t) => ll({ category: fu.Auth, action: e, ...t }),
  Bn = (e) => (t, n) => {
    const r = tI(e),
      o = JSON.stringify(t);
    return nI(n, r, o);
  },
  tI = (e) => ({
    "content-type": "application/x-amz-json-1.1",
    "x-amz-target": `AWSCognitoIdentityProviderService.${e}`,
  }),
  nI = ({ url: e }, t, n) => ({ headers: t, url: e, body: n, method: "POST" });
function Sn(e) {
  if (!e || e.name === "Error" || e instanceof TypeError)
    throw new le({
      name: kr.Unknown,
      message: "An unknown error has occurred.",
      underlyingError: e,
    });
}
const hr = () => async (e) => {
    if (e.statusCode >= 300) {
      const t = await ni(e);
      throw (
        Sn(t),
        new le({ name: t.name, message: t.message, metadata: t.$metadata })
      );
    }
    return ps(e);
  },
  rI = () => (e, t) =>
    async function (r) {
      return ((r.headers["cache-control"] = "no-store"), e(r));
    },
  jn = Sd(My, [rI]),
  Qy = "cognito-idp",
  Un = {
    service: Qy,
    retryDecider: Fy(ni),
    computeDelay: Vy,
    get userAgentValue() {
      return ll();
    },
    cache: "no-store",
  },
  ri = (e) => sn(jn, Bn("InitiateAuth"), hr(), { ...Un, ...e }),
  dl = (e) => sn(jn, Bn("RespondToAuthChallenge"), hr(), { ...Un, ...e }),
  oI = (e) => sn(jn, Bn("AssociateSoftwareToken"), hr(), { ...Un, ...e }),
  iI = ({ region: e }) => ({ url: new ms(`https://${Qy}.${e}.${jy(e)}`) }),
  ut =
    ({ endpointOverride: e }) =>
    (t) =>
      e ? { url: new ms(e) } : iI(t);
function ln({ username: e, userPoolId: t, userPoolClientId: n }) {
  if (typeof window > "u") return;
  const r = window.AmazonCognitoAdvancedSecurityData;
  if (typeof r > "u") return;
  const o = r.getData(e, t, n);
  return o ? { EncodedData: o } : {};
}
const sI = async ({ tokens: e, authConfig: t, username: n }) => {
    var v;
    Se(t == null ? void 0 : t.Cognito);
    const {
        userPoolId: r,
        userPoolClientId: o,
        userPoolEndpoint: i,
      } = t.Cognito,
      s = ct(r);
    Yy(e);
    const a = e.refreshToken,
      l = { REFRESH_TOKEN: a };
    (v = e.deviceMetadata) != null &&
      v.deviceKey &&
      (l.DEVICE_KEY = e.deviceMetadata.deviceKey);
    const c = ln({ username: n, userPoolId: r, userPoolClientId: o }),
      u = ri({ endpointResolver: ut({ endpointOverride: i }) }),
      { AuthenticationResult: d } = await u(
        { region: s },
        {
          ClientId: o,
          AuthFlow: "REFRESH_TOKEN_AUTH",
          AuthParameters: l,
          UserContextData: c,
        },
      ),
      f = so((d == null ? void 0 : d.AccessToken) ?? ""),
      g = d != null && d.IdToken ? so(d.IdToken) : void 0,
      { iat: h } = f.payload;
    if (!h)
      throw new le({
        name: "iatNotFoundException",
        message: "iat not found in access token",
      });
    const p = h * 1e3 - new Date().getTime();
    return {
      accessToken: f,
      idToken: g,
      clockDrift: p,
      refreshToken: a,
      username: n,
    };
  },
  aI = OE(sI),
  lI = {
    accessToken: "accessToken",
    idToken: "idToken",
    oidcProvider: "oidcProvider",
    clockDrift: "clockDrift",
    refreshToken: "refreshToken",
    deviceKey: "deviceKey",
    randomPasswordKey: "randomPasswordKey",
    deviceGroupKey: "deviceGroupKey",
    signInDetails: "signInDetails",
    oauthMetadata: "oauthMetadata",
  };
var $a;
(function (e) {
  e.InvalidAuthTokens = "InvalidAuthTokens";
})($a || ($a = {}));
const cI = {
    [$a.InvalidAuthTokens]: {
      message: "Invalid tokens.",
      recoverySuggestion: "Make sure the tokens are valid.",
    },
  },
  uI = vd(cI),
  ih = "CognitoIdentityServiceProvider";
class dI {
  getKeyValueStorage() {
    if (!this.keyValueStorage)
      throw new le({
        name: "KeyValueStorageNotFoundException",
        message: "KeyValueStorage was not found in TokenStore",
      });
    return this.keyValueStorage;
  }
  setKeyValueStorage(t) {
    this.keyValueStorage = t;
  }
  setAuthConfig(t) {
    this.authConfig = t;
  }
  async loadTokens() {
    try {
      const t = await this.getAuthKeys(),
        n = await this.getKeyValueStorage().getItem(t.accessToken);
      if (!n)
        throw new le({
          name: "NoSessionFoundException",
          message: "Auth session was not found. Make sure to call signIn.",
        });
      const r = so(n),
        o = await this.getKeyValueStorage().getItem(t.idToken),
        i = o ? so(o) : void 0,
        s = (await this.getKeyValueStorage().getItem(t.refreshToken)) ?? void 0,
        a = (await this.getKeyValueStorage().getItem(t.clockDrift)) ?? "0",
        l = Number.parseInt(a),
        c = await this.getKeyValueStorage().getItem(t.signInDetails),
        u = {
          accessToken: r,
          idToken: i,
          refreshToken: s,
          deviceMetadata: (await this.getDeviceMetadata()) ?? void 0,
          clockDrift: l,
          username: await this.getLastAuthUser(),
        };
      return (c && (u.signInDetails = JSON.parse(c)), u);
    } catch {
      return null;
    }
  }
  async storeTokens(t) {
    uI(t !== void 0, $a.InvalidAuthTokens);
    const n = t.username;
    await this.getKeyValueStorage().setItem(this.getLastAuthUserKey(), n);
    const r = await this.getAuthKeys();
    (await this.getKeyValueStorage().setItem(
      r.accessToken,
      t.accessToken.toString(),
    ),
      t.idToken
        ? await this.getKeyValueStorage().setItem(
            r.idToken,
            t.idToken.toString(),
          )
        : await this.getKeyValueStorage().removeItem(r.idToken),
      t.refreshToken
        ? await this.getKeyValueStorage().setItem(
            r.refreshToken,
            t.refreshToken,
          )
        : await this.getKeyValueStorage().removeItem(r.refreshToken),
      t.deviceMetadata &&
        (t.deviceMetadata.deviceKey &&
          (await this.getKeyValueStorage().setItem(
            r.deviceKey,
            t.deviceMetadata.deviceKey,
          )),
        t.deviceMetadata.deviceGroupKey &&
          (await this.getKeyValueStorage().setItem(
            r.deviceGroupKey,
            t.deviceMetadata.deviceGroupKey,
          )),
        await this.getKeyValueStorage().setItem(
          r.randomPasswordKey,
          t.deviceMetadata.randomPassword,
        )),
      t.signInDetails
        ? await this.getKeyValueStorage().setItem(
            r.signInDetails,
            JSON.stringify(t.signInDetails),
          )
        : await this.getKeyValueStorage().removeItem(r.signInDetails),
      await this.getKeyValueStorage().setItem(r.clockDrift, `${t.clockDrift}`));
  }
  async clearTokens() {
    const t = await this.getAuthKeys();
    await Promise.all([
      this.getKeyValueStorage().removeItem(t.accessToken),
      this.getKeyValueStorage().removeItem(t.idToken),
      this.getKeyValueStorage().removeItem(t.clockDrift),
      this.getKeyValueStorage().removeItem(t.refreshToken),
      this.getKeyValueStorage().removeItem(t.signInDetails),
      this.getKeyValueStorage().removeItem(this.getLastAuthUserKey()),
      this.getKeyValueStorage().removeItem(t.oauthMetadata),
    ]);
  }
  async getDeviceMetadata(t) {
    const n = await this.getAuthKeys(t),
      r = await this.getKeyValueStorage().getItem(n.deviceKey),
      o = await this.getKeyValueStorage().getItem(n.deviceGroupKey),
      i = await this.getKeyValueStorage().getItem(n.randomPasswordKey);
    return i && o && r
      ? { deviceKey: r, deviceGroupKey: o, randomPassword: i }
      : null;
  }
  async clearDeviceMetadata(t) {
    const n = await this.getAuthKeys(t);
    await Promise.all([
      this.getKeyValueStorage().removeItem(n.deviceKey),
      this.getKeyValueStorage().removeItem(n.deviceGroupKey),
      this.getKeyValueStorage().removeItem(n.randomPasswordKey),
    ]);
  }
  async getAuthKeys(t) {
    var r;
    Se((r = this.authConfig) == null ? void 0 : r.Cognito);
    const n = t ?? (await this.getLastAuthUser());
    return fI(ih, `${this.authConfig.Cognito.userPoolClientId}.${n}`);
  }
  getLastAuthUserKey() {
    var n;
    Se((n = this.authConfig) == null ? void 0 : n.Cognito);
    const t = this.authConfig.Cognito.userPoolClientId;
    return `${ih}.${t}.LastAuthUser`;
  }
  async getLastAuthUser() {
    return (
      (await this.getKeyValueStorage().getItem(this.getLastAuthUserKey())) ??
      "username"
    );
  }
  async setOAuthMetadata(t) {
    const { oauthMetadata: n } = await this.getAuthKeys();
    await this.getKeyValueStorage().setItem(n, JSON.stringify(t));
  }
  async getOAuthMetadata() {
    const { oauthMetadata: t } = await this.getAuthKeys(),
      n = await this.getKeyValueStorage().getItem(t);
    return n && JSON.parse(n);
  }
}
const fI = (e, t) => Ed(lI)(`${e}`, t);
function Ed(e) {
  const t = Object.values({ ...e });
  return (n, r) => t.reduce((o, i) => ({ ...o, [i]: `${n}.${r}.${i}` }), {});
}
const sh = "amplify-signin-with-hostedUI",
  Rn = "CognitoIdentityServiceProvider";
class Zy {
  constructor(t) {
    this.keyValueStorage = t;
  }
  async clearOAuthInflightData() {
    Se(this.cognitoConfig);
    const t = kn(Rn, this.cognitoConfig.userPoolClientId);
    await Promise.all([
      this.keyValueStorage.removeItem(t.inflightOAuth),
      this.keyValueStorage.removeItem(t.oauthPKCE),
      this.keyValueStorage.removeItem(t.oauthState),
    ]);
  }
  async clearOAuthData() {
    Se(this.cognitoConfig);
    const t = kn(Rn, this.cognitoConfig.userPoolClientId);
    return (
      await this.clearOAuthInflightData(),
      await this.keyValueStorage.removeItem(sh),
      this.keyValueStorage.removeItem(t.oauthSignIn)
    );
  }
  loadOAuthState() {
    Se(this.cognitoConfig);
    const t = kn(Rn, this.cognitoConfig.userPoolClientId);
    return this.keyValueStorage.getItem(t.oauthState);
  }
  storeOAuthState(t) {
    Se(this.cognitoConfig);
    const n = kn(Rn, this.cognitoConfig.userPoolClientId);
    return this.keyValueStorage.setItem(n.oauthState, t);
  }
  loadPKCE() {
    Se(this.cognitoConfig);
    const t = kn(Rn, this.cognitoConfig.userPoolClientId);
    return this.keyValueStorage.getItem(t.oauthPKCE);
  }
  storePKCE(t) {
    Se(this.cognitoConfig);
    const n = kn(Rn, this.cognitoConfig.userPoolClientId);
    return this.keyValueStorage.setItem(n.oauthPKCE, t);
  }
  setAuthConfig(t) {
    this.cognitoConfig = t;
  }
  async loadOAuthInFlight() {
    Se(this.cognitoConfig);
    const t = kn(Rn, this.cognitoConfig.userPoolClientId);
    return (await this.keyValueStorage.getItem(t.inflightOAuth)) === "true";
  }
  async storeOAuthInFlight(t) {
    Se(this.cognitoConfig);
    const n = kn(Rn, this.cognitoConfig.userPoolClientId);
    await this.keyValueStorage.setItem(n.inflightOAuth, `${t}`);
  }
  async loadOAuthSignIn() {
    var i;
    Se(this.cognitoConfig);
    const t = kn(Rn, this.cognitoConfig.userPoolClientId),
      n = await this.keyValueStorage.getItem(sh),
      [r, o] =
        ((i = await this.keyValueStorage.getItem(t.oauthSignIn)) == null
          ? void 0
          : i.split(",")) ?? [];
    return {
      isOAuthSignIn: r === "true" || n === "true",
      preferPrivateSession: o === "true",
    };
  }
  async storeOAuthSignIn(t, n = !1) {
    Se(this.cognitoConfig);
    const r = kn(Rn, this.cognitoConfig.userPoolClientId);
    await this.keyValueStorage.setItem(r.oauthSignIn, `${t},${n}`);
  }
}
const kn = (e, t) => Ed(XE)(e, t),
  ah = new Zy(vs);
class gI {
  constructor() {
    this.waitForInflightOAuth = _y()
      ? async () => {
          if (await ah.loadOAuthInFlight())
            return this.inflightPromise
              ? this.inflightPromise
              : ((this.inflightPromise = new Promise((t, n) => {})),
                this.inflightPromise);
        }
      : async () => {};
  }
  setAuthConfig(t) {
    (ah.setAuthConfig(t.Cognito), (this.authConfig = t));
  }
  setTokenRefresher(t) {
    this.tokenRefresher = t;
  }
  setAuthTokenStore(t) {
    this.tokenStore = t;
  }
  getTokenStore() {
    if (!this.tokenStore)
      throw new le({
        name: "EmptyTokenStoreException",
        message: "TokenStore not set",
      });
    return this.tokenStore;
  }
  getTokenRefresher() {
    if (!this.tokenRefresher)
      throw new le({
        name: "EmptyTokenRefresherException",
        message: "TokenRefresher not set",
      });
    return this.tokenRefresher;
  }
  async getTokens(t) {
    var s, a, l, c, u;
    let n;
    try {
      Se((s = this.authConfig) == null ? void 0 : s.Cognito);
    } catch {
      return null;
    }
    (await this.waitForInflightOAuth(),
      (this.inflightPromise = void 0),
      (n = await this.getTokenStore().loadTokens()));
    const r = await this.getTokenStore().getLastAuthUser();
    if (n === null) return null;
    const o =
        !!(n != null && n.idToken) &&
        Vg({
          expiresAt:
            (((l = (a = n.idToken) == null ? void 0 : a.payload) == null
              ? void 0
              : l.exp) ?? 0) * 1e3,
          clockDrift: n.clockDrift ?? 0,
        }),
      i = Vg({
        expiresAt:
          (((u = (c = n.accessToken) == null ? void 0 : c.payload) == null
            ? void 0
            : u.exp) ?? 0) * 1e3,
        clockDrift: n.clockDrift ?? 0,
      });
    return ((t != null && t.forceRefresh) || o || i) &&
      ((n = await this.refreshTokens({ tokens: n, username: r })), n === null)
      ? null
      : {
          accessToken: n == null ? void 0 : n.accessToken,
          idToken: n == null ? void 0 : n.idToken,
          signInDetails: n == null ? void 0 : n.signInDetails,
        };
  }
  async refreshTokens({ tokens: t, username: n }) {
    try {
      const { signInDetails: r } = t,
        o = await this.getTokenRefresher()({
          tokens: t,
          authConfig: this.authConfig,
          username: n,
        });
      return (
        (o.signInDetails = r),
        await this.setTokens({ tokens: o }),
        Uo.dispatch("auth", { event: "tokenRefresh" }, "Auth", io),
        o
      );
    } catch (r) {
      return this.handleErrors(r);
    }
  }
  handleErrors(t) {
    if (
      (Sn(t),
      t.name !== kr.NetworkError && this.clearTokens(),
      Uo.dispatch(
        "auth",
        { event: "tokenRefresh_failure", data: { error: t } },
        "Auth",
        io,
      ),
      t.name.startsWith("NotAuthorizedException"))
    )
      return null;
    throw t;
  }
  async setTokens({ tokens: t }) {
    return this.getTokenStore().storeTokens(t);
  }
  async clearTokens() {
    return this.getTokenStore().clearTokens();
  }
  getDeviceMetadata(t) {
    return this.getTokenStore().getDeviceMetadata(t);
  }
  clearDeviceMetadata(t) {
    return this.getTokenStore().clearDeviceMetadata(t);
  }
  setOAuthMetadata(t) {
    return this.getTokenStore().setOAuthMetadata(t);
  }
  getOAuthMetadata() {
    return this.getTokenStore().getOAuthMetadata();
  }
}
class hI {
  constructor() {
    ((this.authTokenStore = new dI()),
      this.authTokenStore.setKeyValueStorage(vs),
      (this.tokenOrchestrator = new gI()),
      this.tokenOrchestrator.setAuthTokenStore(this.authTokenStore),
      this.tokenOrchestrator.setTokenRefresher(aI));
  }
  getTokens({ forceRefresh: t } = { forceRefresh: !1 }) {
    return this.tokenOrchestrator.getTokens({ forceRefresh: t });
  }
  setKeyValueStorage(t) {
    this.authTokenStore.setKeyValueStorage(t);
  }
  setAuthConfig(t) {
    (this.authTokenStore.setAuthConfig(t),
      this.tokenOrchestrator.setAuthConfig(t));
  }
}
const Vi = new hI(),
  { tokenOrchestrator: Kt } = Vi;
async function oi(e) {
  if (e.AccessToken) {
    const t = so(e.AccessToken),
      n = (t.payload.iat || 0) * 1e3,
      r = new Date().getTime(),
      o = n > 0 ? n - r : 0;
    let i, s, a;
    (e.RefreshToken && (s = e.RefreshToken),
      e.IdToken && (i = so(e.IdToken)),
      e != null && e.NewDeviceMetadata && (a = e.NewDeviceMetadata));
    const l = {
      accessToken: t,
      idToken: i,
      refreshToken: s,
      clockDrift: o,
      deviceMetadata: a,
      username: e.username,
    };
    (e != null && e.signInDetails && (l.signInDetails = e.signInDetails),
      await Kt.setTokens({ tokens: l }));
  } else
    throw new At({
      message: "Invalid tokens",
      name: "InvalidTokens",
      recoverySuggestion: "Check Cognito UserPool settings",
    });
}
const pI = "Unable to get user session following successful sign-in.",
  ii = async () => {
    try {
      Uo.dispatch("auth", { event: "signedIn", data: await Cd() }, "Auth", io);
    } catch (e) {
      throw e.name === ul
        ? new le({
            name: GE,
            message: pI,
            recoverySuggestion:
              "This most likely is due to auth tokens not being persisted. If you are using cookie store, please ensure cookies can be correctly set from your server.",
          })
        : e;
    }
  };
function e0() {
  return { active: !1 };
}
const mI = (e, t) => {
    switch (t.type) {
      case "SET_USERNAME":
        return { ...e, username: t.value };
      case "SET_SESSION":
        return { ...e, session: t.value };
      case "START":
        return { ...e, active: !0 };
      case "RESET":
        return e0();
      default:
        return e;
    }
  },
  vI = (e) => {
    let t = e(e0(), { type: "RESET" });
    return {
      getState: () => t,
      dispatch: (n) => {
        t = e(t, n);
      },
    };
  },
  wr = vI(mI),
  yI = 3 * 60 * 1e3,
  Ms = "CognitoSignInState",
  rr = {
    username: `${Ms}.username`,
    challengeName: `${Ms}.challengeName`,
    signInSession: `${Ms}.signInSession`,
    expiry: `${Ms}.expiry`,
  },
  bI = (e, t) => {
    switch (t.type) {
      case "SET_SIGN_IN_SESSION":
        return (
          Ls({ signInSession: t.value }),
          { ...e, signInSession: t.value }
        );
      case "SET_SIGN_IN_STATE":
        return (Ls(t.value), { ...t.value });
      case "SET_CHALLENGE_NAME":
        return (
          Ls({ challengeName: t.value }),
          { ...e, challengeName: t.value }
        );
      case "SET_USERNAME":
        return (Ls({ username: t.value }), { ...e, username: t.value });
      case "SET_INITIAL_STATE":
        return SI();
      case "RESET_STATE":
        return (t0(), Id());
      default:
        return e;
    }
  },
  xI = (e) => {
    const t = Number(e),
      n = Date.now();
    return t <= n;
  },
  Ln = () => {
    Pr.dispatch({ type: "RESET_STATE" });
  },
  t0 = () => {
    for (const e of Object.values(rr)) nr.removeItem(e);
  },
  Id = () => ({
    username: void 0,
    challengeName: void 0,
    signInSession: void 0,
  }),
  SI = () => {
    const e = nr.getItem(rr.expiry);
    if (!e || xI(e)) return (t0(), Id());
    const t = nr.getItem(rr.username) ?? void 0,
      n = nr.getItem(rr.challengeName) ?? void 0,
      r = nr.getItem(rr.signInSession) ?? void 0;
    return { username: t, challengeName: n, signInSession: r };
  },
  wI = (e) => {
    let t = e(Id(), { type: "SET_INITIAL_STATE" });
    return {
      getState: () => t,
      dispatch: (n) => {
        t = e(t, n);
      },
    };
  },
  Pr = wI(bI);
function si(e) {
  Pr.dispatch({ type: "SET_SIGN_IN_STATE", value: e });
}
const Ls = ({ challengeName: e, signInSession: t, username: n }) => {
  (n && nr.setItem(rr.username, n),
    e && nr.setItem(rr.challengeName, e),
    t &&
      (nr.setItem(rr.signInSession, t),
      nr.setItem(rr.expiry, String(Date.now() + yI))));
};
class ir extends At {
  constructor(t) {
    (super(t),
      (this.constructor = ir),
      Object.setPrototypeOf(this, ir.prototype));
  }
}
var je;
(function (e) {
  ((e.PasskeyNotSupported = "PasskeyNotSupported"),
    (e.PasskeyAlreadyExists = "PasskeyAlreadyExists"),
    (e.InvalidPasskeyRegistrationOptions = "InvalidPasskeyRegistrationOptions"),
    (e.InvalidPasskeyAuthenticationOptions =
      "InvalidPasskeyAuthenticationOptions"),
    (e.RelyingPartyMismatch = "RelyingPartyMismatch"),
    (e.PasskeyRegistrationFailed = "PasskeyRegistrationFailed"),
    (e.PasskeyRetrievalFailed = "PasskeyRetrievalFailed"),
    (e.PasskeyRegistrationCanceled = "PasskeyRegistrationCanceled"),
    (e.PasskeyAuthenticationCanceled = "PasskeyAuthenticationCanceled"),
    (e.PasskeyOperationAborted = "PasskeyOperationAborted"));
})(je || (je = {}));
const lh =
    "Passkeys may not be supported on this device. Ensure your application is running in a secure context (HTTPS) and Web Authentication API is supported.",
  Tc =
    "User may have canceled the ceremony or another interruption has occurred. Check underlying error for details.",
  ch =
    "Ensure your user pool is configured to support the WEB_AUTHN as an authentication factor.",
  Ma = {
    [je.PasskeyNotSupported]: {
      message: "Passkeys may not be supported on this device.",
      recoverySuggestion: lh,
    },
    [je.InvalidPasskeyRegistrationOptions]: {
      message: "Invalid passkey registration options.",
      recoverySuggestion: ch,
    },
    [je.InvalidPasskeyAuthenticationOptions]: {
      message: "Invalid passkey authentication options.",
      recoverySuggestion: ch,
    },
    [je.PasskeyRegistrationFailed]: {
      message: "Device failed to create passkey.",
      recoverySuggestion: lh,
    },
    [je.PasskeyRetrievalFailed]: {
      message: "Device failed to retrieve passkey.",
      recoverySuggestion:
        "Passkeys may not be available on this device. Try an alternative authentication factor like PASSWORD, EMAIL_OTP, or SMS_OTP.",
    },
    [je.PasskeyAlreadyExists]: {
      message: "Passkey already exists in authenticator.",
      recoverySuggestion:
        "Proceed with existing passkey or try again after deleting the credential.",
    },
    [je.PasskeyRegistrationCanceled]: {
      message: "Passkey registration ceremony has been canceled.",
      recoverySuggestion: Tc,
    },
    [je.PasskeyAuthenticationCanceled]: {
      message: "Passkey authentication ceremony has been canceled.",
      recoverySuggestion: Tc,
    },
    [je.PasskeyOperationAborted]: {
      message: "Passkey operation has been aborted.",
      recoverySuggestion: Tc,
    },
    [je.RelyingPartyMismatch]: {
      message: "Relying party does not match current domain.",
      recoverySuggestion:
        "Ensure relying party identifier matches current domain.",
    },
  },
  Rd = vd(Ma, ir),
  CI = (e) => {
    if (e instanceof ir) return e;
    if (e instanceof Error && e.name === "NotAllowedError") {
      const { message: t, recoverySuggestion: n } =
        Ma[je.PasskeyAuthenticationCanceled];
      return new ir({
        name: je.PasskeyAuthenticationCanceled,
        message: t,
        recoverySuggestion: n,
        underlyingError: e,
      });
    }
    return EI(e);
  },
  EI = (e) => {
    if (e instanceof Error) {
      if (e.name === "AbortError") {
        const { message: t, recoverySuggestion: n } =
          Ma[je.PasskeyOperationAborted];
        return new ir({
          name: je.PasskeyOperationAborted,
          message: t,
          recoverySuggestion: n,
          underlyingError: e,
        });
      }
      if (e.name === "SecurityError") {
        const { message: t, recoverySuggestion: n } =
          Ma[je.RelyingPartyMismatch];
        return new ir({
          name: je.RelyingPartyMismatch,
          message: t,
          recoverySuggestion: n,
          underlyingError: e,
        });
      }
    }
    return new ir({
      name: kr.Unknown,
      message: "An unknown error has occurred.",
      underlyingError: e,
    });
  },
  II = () =>
    _y() &&
    window.isSecureContext &&
    "credentials" in navigator &&
    typeof window.PublicKeyCredential == "function",
  wi = (e) => es.convert(new Uint8Array(e), { urlSafe: !0, skipPadding: !0 }),
  uh = (e) =>
    Uint8Array.from(yd.convert(e, { urlSafe: !0 }), (t) => t.charCodeAt(0))
      .buffer,
  RI = (e) => {
    const t = uh(e.challenge),
      n = (e.allowCredentials || []).map((r) => ({ ...r, id: uh(r.id) }));
    return { ...e, challenge: t, allowCredentials: n };
  },
  kI = (e) => {
    const t = {
      clientDataJSON: wi(e.response.clientDataJSON),
      authenticatorData: wi(e.response.authenticatorData),
      signature: wi(e.response.signature),
    };
    e.response.userHandle && (t.userHandle = wi(e.response.userHandle));
    const n = {
      id: e.id,
      rawId: wi(e.rawId),
      type: e.type,
      clientExtensionResults: e.getClientExtensionResults(),
      response: t,
    };
    return (
      e.authenticatorAttachment &&
        (n.authenticatorAttachment = e.authenticatorAttachment),
      n
    );
  };
function PI(e) {
  Rd(
    e &&
      e instanceof PublicKeyCredential &&
      e.response instanceof AuthenticatorAssertionResponse,
    je.PasskeyRetrievalFailed,
  );
}
const TI = async (e) => {
    try {
      const t = II();
      Rd(t, je.PasskeyNotSupported);
      const n = RI(e),
        r = await navigator.credentials.get({ publicKey: n });
      return (PI(r), kI(r));
    } catch (t) {
      throw CI(t);
    }
  },
  OI = (e) => sn(jn, Bn("ConfirmDevice"), hr(), { ...Un, ...e }),
  la = {
    convert(e) {
      return new TextEncoder().encode(e);
    },
  };
function J(e, t) {
  e != null && this.fromString(e, t);
}
function Et() {
  return new J(null, null);
}
let Rr;
const _I = 0xdeadbeefcafe,
  dh = (_I & 16777215) === 15715070;
function AI(e, t, n, r, o, i) {
  for (; --i >= 0; ) {
    const s = t * this[e++] + n[r] + o;
    ((o = Math.floor(s / 67108864)), (n[r++] = s & 67108863));
  }
  return o;
}
function NI(e, t, n, r, o, i) {
  const s = t & 32767,
    a = t >> 15;
  for (; --i >= 0; ) {
    let l = this[e] & 32767;
    const c = this[e++] >> 15,
      u = a * l + c * s;
    ((l = s * l + ((u & 32767) << 15) + n[r] + (o & 1073741823)),
      (o = (l >>> 30) + (u >>> 15) + a * c + (o >>> 30)),
      (n[r++] = l & 1073741823));
  }
  return o;
}
function VI(e, t, n, r, o, i) {
  const s = t & 16383,
    a = t >> 14;
  for (; --i >= 0; ) {
    let l = this[e] & 16383;
    const c = this[e++] >> 14,
      u = a * l + c * s;
    ((l = s * l + ((u & 16383) << 14) + n[r] + o),
      (o = (l >> 28) + (u >> 14) + a * c),
      (n[r++] = l & 268435455));
  }
  return o;
}
const fh = typeof navigator < "u";
fh && dh && navigator.appName === "Microsoft Internet Explorer"
  ? ((J.prototype.am = NI), (Rr = 30))
  : fh && dh && navigator.appName !== "Netscape"
    ? ((J.prototype.am = AI), (Rr = 26))
    : ((J.prototype.am = VI), (Rr = 28));
J.prototype.DB = Rr;
J.prototype.DM = (1 << Rr) - 1;
J.prototype.DV = 1 << Rr;
const kd = 52;
J.prototype.FV = Math.pow(2, kd);
J.prototype.F1 = kd - Rr;
J.prototype.F2 = 2 * Rr - kd;
const FI = "0123456789abcdefghijklmnopqrstuvwxyz",
  fl = [];
let ai, nn;
ai = 48;
for (nn = 0; nn <= 9; ++nn) fl[ai++] = nn;
ai = 97;
for (nn = 10; nn < 36; ++nn) fl[ai++] = nn;
ai = 65;
for (nn = 10; nn < 36; ++nn) fl[ai++] = nn;
function gh(e) {
  return FI.charAt(e);
}
function DI(e, t) {
  const n = fl[e.charCodeAt(t)];
  return n ?? -1;
}
function $I(e) {
  for (let t = this.t - 1; t >= 0; --t) e[t] = this[t];
  ((e.t = this.t), (e.s = this.s));
}
function MI(e) {
  ((this.t = 1),
    (this.s = e < 0 ? -1 : 0),
    e > 0 ? (this[0] = e) : e < -1 ? (this[0] = e + this.DV) : (this.t = 0));
}
function Pd(e) {
  const t = Et();
  return (t.fromInt(e), t);
}
function LI(e, t) {
  let n;
  if (t === 16) n = 4;
  else if (t === 8) n = 3;
  else if (t === 2) n = 1;
  else if (t === 32) n = 5;
  else if (t === 4) n = 2;
  else throw new Error("Only radix 2, 4, 8, 16, 32 are supported");
  ((this.t = 0), (this.s = 0));
  let r = e.length,
    o = !1,
    i = 0;
  for (; --r >= 0; ) {
    const s = DI(e, r);
    if (s < 0) {
      e.charAt(r) === "-" && (o = !0);
      continue;
    }
    ((o = !1),
      i === 0
        ? (this[this.t++] = s)
        : i + n > this.DB
          ? ((this[this.t - 1] |= (s & ((1 << (this.DB - i)) - 1)) << i),
            (this[this.t++] = s >> (this.DB - i)))
          : (this[this.t - 1] |= s << i),
      (i += n),
      i >= this.DB && (i -= this.DB));
  }
  (this.clamp(), o && J.ZERO.subTo(this, this));
}
function zI() {
  const e = this.s & this.DM;
  for (; this.t > 0 && this[this.t - 1] == e; ) --this.t;
}
function BI(e) {
  if (this.s < 0) return "-" + this.negate().toString(e);
  let t;
  if (e == 16) t = 4;
  else if (e === 8) t = 3;
  else if (e === 2) t = 1;
  else if (e === 32) t = 5;
  else if (e === 4) t = 2;
  else throw new Error("Only radix 2, 4, 8, 16, 32 are supported");
  const n = (1 << t) - 1;
  let r,
    o = !1,
    i = "",
    s = this.t,
    a = this.DB - ((s * this.DB) % t);
  if (s-- > 0)
    for (
      a < this.DB && (r = this[s] >> a) > 0 && ((o = !0), (i = gh(r)));
      s >= 0;

    )
      (a < t
        ? ((r = (this[s] & ((1 << a) - 1)) << (t - a)),
          (r |= this[--s] >> (a += this.DB - t)))
        : ((r = (this[s] >> (a -= t)) & n), a <= 0 && ((a += this.DB), --s)),
        r > 0 && (o = !0),
        o && (i += gh(r)));
  return o ? i : "0";
}
function jI() {
  const e = Et();
  return (J.ZERO.subTo(this, e), e);
}
function UI() {
  return this.s < 0 ? this.negate() : this;
}
function WI(e) {
  let t = this.s - e.s;
  if (t != 0) return t;
  let n = this.t;
  if (((t = n - e.t), t != 0)) return this.s < 0 ? -t : t;
  for (; --n >= 0; ) if ((t = this[n] - e[n]) != 0) return t;
  return 0;
}
function Td(e) {
  let t = 1,
    n;
  return (
    (n = e >>> 16) !== 0 && ((e = n), (t += 16)),
    (n = e >> 8) !== 0 && ((e = n), (t += 8)),
    (n = e >> 4) !== 0 && ((e = n), (t += 4)),
    (n = e >> 2) !== 0 && ((e = n), (t += 2)),
    (n = e >> 1) !== 0 && ((e = n), (t += 1)),
    t
  );
}
function HI() {
  return this.t <= 0
    ? 0
    : this.DB * (this.t - 1) + Td(this[this.t - 1] ^ (this.s & this.DM));
}
function GI(e, t) {
  let n;
  for (n = this.t - 1; n >= 0; --n) t[n + e] = this[n];
  for (n = e - 1; n >= 0; --n) t[n] = 0;
  ((t.t = this.t + e), (t.s = this.s));
}
function KI(e, t) {
  for (let n = e; n < this.t; ++n) t[n - e] = this[n];
  ((t.t = Math.max(this.t - e, 0)), (t.s = this.s));
}
function qI(e, t) {
  const n = e % this.DB,
    r = this.DB - n,
    o = (1 << r) - 1,
    i = Math.floor(e / this.DB);
  let s = (this.s << n) & this.DM,
    a;
  for (a = this.t - 1; a >= 0; --a)
    ((t[a + i + 1] = (this[a] >> r) | s), (s = (this[a] & o) << n));
  for (a = i - 1; a >= 0; --a) t[a] = 0;
  ((t[i] = s), (t.t = this.t + i + 1), (t.s = this.s), t.clamp());
}
function YI(e, t) {
  t.s = this.s;
  const n = Math.floor(e / this.DB);
  if (n >= this.t) {
    t.t = 0;
    return;
  }
  const r = e % this.DB,
    o = this.DB - r,
    i = (1 << r) - 1;
  t[0] = this[n] >> r;
  for (let s = n + 1; s < this.t; ++s)
    ((t[s - n - 1] |= (this[s] & i) << o), (t[s - n] = this[s] >> r));
  (r > 0 && (t[this.t - n - 1] |= (this.s & i) << o),
    (t.t = this.t - n),
    t.clamp());
}
function XI(e, t) {
  let n = 0,
    r = 0;
  const o = Math.min(e.t, this.t);
  for (; n < o; )
    ((r += this[n] - e[n]), (t[n++] = r & this.DM), (r >>= this.DB));
  if (e.t < this.t) {
    for (r -= e.s; n < this.t; )
      ((r += this[n]), (t[n++] = r & this.DM), (r >>= this.DB));
    r += this.s;
  } else {
    for (r += this.s; n < e.t; )
      ((r -= e[n]), (t[n++] = r & this.DM), (r >>= this.DB));
    r -= e.s;
  }
  ((t.s = r < 0 ? -1 : 0),
    r < -1 ? (t[n++] = this.DV + r) : r > 0 && (t[n++] = r),
    (t.t = n),
    t.clamp());
}
function JI(e, t) {
  const n = this.abs(),
    r = e.abs();
  let o = n.t;
  for (t.t = o + r.t; --o >= 0; ) t[o] = 0;
  for (o = 0; o < r.t; ++o) t[o + n.t] = n.am(0, r[o], t, o, 0, n.t);
  ((t.s = 0), t.clamp(), this.s !== e.s && J.ZERO.subTo(t, t));
}
function QI(e) {
  const t = this.abs();
  let n = (e.t = 2 * t.t);
  for (; --n >= 0; ) e[n] = 0;
  for (n = 0; n < t.t - 1; ++n) {
    const r = t.am(n, t[n], e, 2 * n, 0, 1);
    (e[n + t.t] += t.am(n + 1, 2 * t[n], e, 2 * n + 1, r, t.t - n - 1)) >=
      t.DV && ((e[n + t.t] -= t.DV), (e[n + t.t + 1] = 1));
  }
  (e.t > 0 && (e[e.t - 1] += t.am(n, t[n], e, 2 * n, 0, 1)),
    (e.s = 0),
    e.clamp());
}
function ZI(e, t, n) {
  const r = e.abs();
  if (r.t <= 0) return;
  const o = this.abs();
  if (o.t < r.t) {
    (t != null && t.fromInt(0), n != null && this.copyTo(n));
    return;
  }
  n === null && (n = Et());
  const i = Et(),
    s = this.s,
    a = e.s,
    l = this.DB - Td(r[r.t - 1]);
  l > 0 ? (r.lShiftTo(l, i), o.lShiftTo(l, n)) : (r.copyTo(i), o.copyTo(n));
  const c = i.t,
    u = i[c - 1];
  if (u === 0) return;
  const d = u * (1 << this.F1) + (c > 1 ? i[c - 2] >> this.F2 : 0),
    f = this.FV / d,
    g = (1 << this.F1) / d,
    h = 1 << this.F2;
  let p = n.t,
    v = p - c;
  const b = t === null ? Et() : t;
  for (
    i.dlShiftTo(v, b),
      n.compareTo(b) >= 0 && ((n[n.t++] = 1), n.subTo(b, n)),
      J.ONE.dlShiftTo(c, b),
      b.subTo(i, i);
    i.t < c;

  )
    i[i.t++] = 0;
  for (; --v >= 0; ) {
    let S = n[--p] === u ? this.DM : Math.floor(n[p] * f + (n[p - 1] + h) * g);
    if ((n[p] += i.am(0, S, n, v, 0, c)) < S)
      for (i.dlShiftTo(v, b), n.subTo(b, n); n[p] < --S; ) n.subTo(b, n);
  }
  (t !== null && (n.drShiftTo(c, t), s !== a && J.ZERO.subTo(t, t)),
    (n.t = c),
    n.clamp(),
    l > 0 && n.rShiftTo(l, n),
    s < 0 && J.ZERO.subTo(n, n));
}
function e1(e) {
  const t = Et();
  return (
    this.abs().divRemTo(e, null, t),
    this.s < 0 && t.compareTo(J.ZERO) > 0 && e.subTo(t, t),
    t
  );
}
function t1() {
  if (this.t < 1) return 0;
  const e = this[0];
  if ((e & 1) === 0) return 0;
  let t = e & 3;
  return (
    (t = (t * (2 - (e & 15) * t)) & 15),
    (t = (t * (2 - (e & 255) * t)) & 255),
    (t = (t * (2 - (((e & 65535) * t) & 65535))) & 65535),
    (t = (t * (2 - ((e * t) % this.DV))) % this.DV),
    t > 0 ? this.DV - t : -t
  );
}
function n1(e) {
  return this.compareTo(e) === 0;
}
function r1(e, t) {
  let n = 0,
    r = 0;
  const o = Math.min(e.t, this.t);
  for (; n < o; )
    ((r += this[n] + e[n]), (t[n++] = r & this.DM), (r >>= this.DB));
  if (e.t < this.t) {
    for (r += e.s; n < this.t; )
      ((r += this[n]), (t[n++] = r & this.DM), (r >>= this.DB));
    r += this.s;
  } else {
    for (r += this.s; n < e.t; )
      ((r += e[n]), (t[n++] = r & this.DM), (r >>= this.DB));
    r += e.s;
  }
  ((t.s = r < 0 ? -1 : 0),
    r > 0 ? (t[n++] = r) : r < -1 && (t[n++] = this.DV + r),
    (t.t = n),
    t.clamp());
}
function o1(e) {
  const t = Et();
  return (this.addTo(e, t), t);
}
function i1(e) {
  const t = Et();
  return (this.subTo(e, t), t);
}
function s1(e) {
  const t = Et();
  return (this.multiplyTo(e, t), t);
}
function a1(e) {
  const t = Et();
  return (this.divRemTo(e, t, null), t);
}
function li(e) {
  ((this.m = e),
    (this.mp = e.invDigit()),
    (this.mpl = this.mp & 32767),
    (this.mph = this.mp >> 15),
    (this.um = (1 << (e.DB - 15)) - 1),
    (this.mt2 = 2 * e.t));
}
function l1(e) {
  const t = Et();
  return (
    e.abs().dlShiftTo(this.m.t, t),
    t.divRemTo(this.m, null, t),
    e.s < 0 && t.compareTo(J.ZERO) > 0 && this.m.subTo(t, t),
    t
  );
}
function c1(e) {
  const t = Et();
  return (e.copyTo(t), this.reduce(t), t);
}
function u1(e) {
  for (; e.t <= this.mt2; ) e[e.t++] = 0;
  for (let t = 0; t < this.m.t; ++t) {
    let n = e[t] & 32767;
    const r =
      (n * this.mpl +
        (((n * this.mph + (e[t] >> 15) * this.mpl) & this.um) << 15)) &
      e.DM;
    for (
      n = t + this.m.t, e[n] += this.m.am(0, r, e, t, 0, this.m.t);
      e[n] >= e.DV;

    )
      ((e[n] -= e.DV), e[++n]++);
  }
  (e.clamp(),
    e.drShiftTo(this.m.t, e),
    e.compareTo(this.m) >= 0 && e.subTo(this.m, e));
}
function d1(e, t) {
  (e.squareTo(t), this.reduce(t));
}
function f1(e, t, n) {
  (e.multiplyTo(t, n), this.reduce(n));
}
li.prototype.convert = l1;
li.prototype.revert = c1;
li.prototype.reduce = u1;
li.prototype.mulTo = f1;
li.prototype.sqrTo = d1;
function g1(e, t, n) {
  let r = e.bitLength(),
    o,
    i = Pd(1);
  const s = new li(t);
  if (r <= 0) return i;
  r < 18
    ? (o = 1)
    : r < 48
      ? (o = 3)
      : r < 144
        ? (o = 4)
        : r < 768
          ? (o = 5)
          : (o = 6);
  const a = [];
  let l = 3;
  const c = o - 1,
    u = (1 << o) - 1;
  if (((a[1] = s.convert(this)), o > 1)) {
    const b = Et();
    for (s.sqrTo(a[1], b); l <= u; )
      ((a[l] = Et()), s.mulTo(b, a[l - 2], a[l]), (l += 2));
  }
  let d = e.t - 1,
    f,
    g = !0,
    h = Et(),
    p;
  for (r = Td(e[d]) - 1; d >= 0; ) {
    for (
      r >= c
        ? (f = (e[d] >> (r - c)) & u)
        : ((f = (e[d] & ((1 << (r + 1)) - 1)) << (c - r)),
          d > 0 && (f |= e[d - 1] >> (this.DB + r - c))),
        l = o;
      (f & 1) === 0;

    )
      ((f >>= 1), --l);
    if (((r -= l) < 0 && ((r += this.DB), --d), g)) (a[f].copyTo(i), (g = !1));
    else {
      for (; l > 1; ) (s.sqrTo(i, h), s.sqrTo(h, i), (l -= 2));
      (l > 0 ? s.sqrTo(i, h) : ((p = i), (i = h), (h = p)),
        s.mulTo(h, a[f], i));
    }
    for (; d >= 0 && (e[d] & (1 << r)) === 0; )
      (s.sqrTo(i, h),
        (p = i),
        (i = h),
        (h = p),
        --r < 0 && ((r = this.DB - 1), --d));
  }
  const v = s.revert(i);
  return (n(null, v), v);
}
J.prototype.copyTo = $I;
J.prototype.fromInt = MI;
J.prototype.fromString = LI;
J.prototype.clamp = zI;
J.prototype.dlShiftTo = GI;
J.prototype.drShiftTo = KI;
J.prototype.lShiftTo = qI;
J.prototype.rShiftTo = YI;
J.prototype.subTo = XI;
J.prototype.multiplyTo = JI;
J.prototype.squareTo = QI;
J.prototype.divRemTo = ZI;
J.prototype.invDigit = t1;
J.prototype.addTo = r1;
J.prototype.toString = BI;
J.prototype.negate = jI;
J.prototype.abs = UI;
J.prototype.compareTo = WI;
J.prototype.bitLength = HI;
J.prototype.mod = e1;
J.prototype.equals = n1;
J.prototype.add = o1;
J.prototype.subtract = i1;
J.prototype.multiply = s1;
J.prototype.divide = a1;
J.prototype.modPow = g1;
J.ZERO = Pd(0);
J.ONE = Pd(1);
const h1 = async ({ a: e, g: t, k: n, x: r, B: o, N: i, U: s }) =>
    new Promise((a, l) => {
      t.modPow(r, i, (c, u) => {
        if (c) {
          l(c);
          return;
        }
        o.subtract(n.multiply(u)).modPow(e.add(s.multiply(r)), i, (d, f) => {
          if (d) {
            l(d);
            return;
          }
          a(f.mod(i));
        });
      });
    }),
  p1 =
    "FFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD129024E088A67CC74020BBEA63B139B22514A08798E3404DDEF9519B3CD3A431B302B0A6DF25F14374FE1356D6D51C245E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7EDEE386BFB5A899FA5AE9F24117C4B1FE649286651ECE45B3DC2007CB8A163BF0598DA48361C55D39A69163FA8FD24CF5F83655D23DCA3AD961C62F356208552BB9ED529077096966D670C354E4ABC9804F1746C08CA18217C32905E462E36CE3BE39E772C180E86039B2783A2EC07A28FB5C55DF06F4C52C9DE2BCBF6955817183995497CEA956AE515D2261898FA051015728E5A8AAAC42DAD33170D04507A33A85521ABDF1CBA64ECFB850458DBEF0A8AEA71575D060C7DB3970F85A6E1E4C7ABF5AE8CDB0933D71E8C94E04A25619DCEE3D2261AD2EE6BF12FFA06D98A0864D87602733EC86A64521F2B18177B200CBBE117577A615D6C770988C0BAD946E208E24FA074E5AB3143DB5BFCE0FD108E4B82D120A93AD2CAFFFFFFFFFFFFFFFF",
  n0 = {},
  vu = {};
for (let e = 0; e < 256; e++) {
  let t = e.toString(16).toLowerCase();
  (t.length === 1 && (t = `0${t}`), (n0[e] = t), (vu[t] = e));
}
const Ho = (e) => {
    if (e.length % 2 !== 0)
      throw new Error("Hex encoded strings must have an even number length");
    const t = new Uint8Array(e.length / 2);
    for (let n = 0; n < e.length; n += 2) {
      const r = e.slice(n, n + 2).toLowerCase();
      if (r in vu) t[n / 2] = vu[r];
      else
        throw new Error(
          `Cannot decode unrecognized sequence ${r} as hexadecimal`,
        );
    }
    return t;
  },
  Od = (e) => {
    let t = "";
    for (let n = 0; n < e.byteLength; n++) t += n0[e[n]];
    return t;
  },
  yu = (e) => {
    const t = new Fa();
    t.update(e);
    const n = t.digestSync(),
      r = Od(n);
    return new Array(64 - r.length).join("0") + r;
  },
  ca = (e) => yu(Ho(e)),
  m1 = /^[89a-f]/i,
  Qn = (e) => {
    if (!(e instanceof J)) throw new Error("Not a BigInteger");
    const t = e.compareTo(J.ZERO) < 0;
    let n = e.abs().toString(16);
    if (
      ((n = n.length % 2 !== 0 ? `0${n}` : n),
      (n = m1.test(n) ? `00${n}` : n),
      t)
    ) {
      const r = n
        .split("")
        .map((i) => {
          const s = ~parseInt(i, 16) & 15;
          return "0123456789ABCDEF".charAt(s);
        })
        .join("");
      ((n = new J(r, 16).add(J.ONE).toString(16)),
        n.toUpperCase().startsWith("FF8") && (n = n.substring(2)));
    }
    return n;
  },
  v1 = ({ A: e, B: t }) => {
    const n = new J(ca(Qn(e) + Qn(t)), 16);
    if (n.equals(J.ZERO)) throw new Error("U cannot be zero.");
    return n;
  },
  y1 = (e, t, n) => {
    const r = new Fa(t);
    r.update(e);
    const o = r.digestSync(),
      i = new Fa(o);
    return (i.update(n), i.digestSync().slice(0, 16));
  },
  _d = (e) => {
    const t = new wd().random(e).toString();
    return Ho(t);
  },
  b1 = () => es.convert(_d(40));
class x1 {
  constructor({ userPoolName: t, a: n, g: r, A: o, N: i }) {
    ((this.encoder = la),
      (this.userPoolName = t),
      (this.a = n),
      (this.g = r),
      (this.A = o),
      (this.N = i),
      (this.k = new J(ca(`${Qn(i)}${Qn(r)}`), 16)));
  }
  getRandomPassword() {
    if (!this.randomPassword)
      throw new le({
        name: "EmptyBigIntegerRandomPassword",
        message: "random password is empty",
      });
    return this.randomPassword;
  }
  getSaltToHashDevices() {
    if (!this.saltToHashDevices)
      throw new le({
        name: "EmptyBigIntegersaltToHashDevices",
        message: "saltToHashDevices is empty",
      });
    return this.saltToHashDevices;
  }
  getVerifierDevices() {
    if (!this.verifierDevices)
      throw new le({
        name: "EmptyBigIntegerVerifierDevices",
        message: "verifyDevices is empty",
      });
    return this.verifierDevices;
  }
  async generateHashDevice(t, n) {
    this.randomPassword = b1();
    const r = `${t}${n}:${this.randomPassword}`,
      o = yu(r),
      i = Od(_d(16));
    return (
      (this.saltToHashDevices = Qn(new J(i, 16))),
      new Promise((s, a) => {
        this.g.modPow(
          new J(ca(this.saltToHashDevices + o), 16),
          this.N,
          (l, c) => {
            if (l) {
              a(l);
              return;
            }
            ((this.verifierDevices = Qn(c)), s());
          },
        );
      })
    );
  }
  async getPasswordAuthenticationKey({
    username: t,
    password: n,
    serverBValue: r,
    salt: o,
  }) {
    if (r.mod(this.N).equals(J.ZERO)) throw new Error("B cannot be zero.");
    const i = v1({ A: this.A, B: r }),
      s = `${this.userPoolName}${t}:${n}`,
      a = yu(s),
      l = new J(ca(Qn(o) + a), 16),
      c = await h1({
        a: this.a,
        g: this.g,
        k: this.k,
        x: l,
        B: r,
        N: this.N,
        U: i,
      }),
      u = this.encoder.convert("Caldera Derived Key"),
      d = this.encoder.convert(""),
      f = new Uint8Array(u.byteLength + d.byteLength);
    return (f.set(u, 0), f.set(d, u.byteLength), y1(Ho(Qn(c)), Ho(Qn(i)), f));
  }
}
const S1 = async ({ a: e, g: t, N: n }) =>
    new Promise((r, o) => {
      t.modPow(e, n, (i, s) => {
        if (i) {
          o(i);
          return;
        }
        if (s.mod(n).equals(J.ZERO)) {
          o(new Error("Illegal parameter. A mod N cannot be 0."));
          return;
        }
        r(s);
      });
    }),
  gl = async (e) => {
    const t = new J(p1, 16),
      n = new J("2", 16),
      r = w1(),
      o = await S1({ a: r, g: n, N: t });
    return new x1({ userPoolName: e, a: r, g: n, A: o, N: t });
  },
  w1 = () => {
    const e = Od(_d(128));
    return new J(e, 16);
  };
async function ci({
  userPoolId: e,
  userPoolEndpoint: t,
  newDeviceMetadata: n,
  accessToken: r,
}) {
  if (!n) return;
  const o = e.split("_")[1] || "",
    i = await gl(o),
    s = n == null ? void 0 : n.DeviceKey,
    a = n == null ? void 0 : n.DeviceGroupKey;
  try {
    await i.generateHashDevice(a ?? "", s ?? "");
  } catch {
    return;
  }
  const l = {
      Salt: es.convert(Ho(i.getSaltToHashDevices())),
      PasswordVerifier: es.convert(Ho(i.getVerifierDevices())),
    },
    c = i.getRandomPassword();
  try {
    return (
      await OI({ endpointResolver: ut({ endpointOverride: t }) })(
        { region: ct(e) },
        {
          AccessToken: r,
          DeviceName: await _E(),
          DeviceKey: n == null ? void 0 : n.DeviceKey,
          DeviceSecretVerifierConfig: l,
        },
      ),
      { deviceKey: s, deviceGroupKey: a, randomPassword: c }
    );
  } catch {
    return;
  }
}
async function C1(e) {
  var g;
  const t = (g = Fe.getConfig().Auth) == null ? void 0 : g.Cognito;
  Se(t);
  const {
    username: n,
    signInSession: r,
    signInDetails: o,
    challengeName: i,
  } = Pr.getState();
  if (i !== "WEB_AUTHN" || !n)
    throw new le({
      name: Wo.SignInException,
      message: "Unable to proceed due to invalid sign in state.",
    });
  const { CREDENTIAL_REQUEST_OPTIONS: s } = e;
  Rd(!!s, je.InvalidPasskeyAuthenticationOptions);
  const a = await TI(JSON.parse(s)),
    l = dl({ endpointResolver: ut({ endpointOverride: t.userPoolEndpoint }) }),
    {
      ChallengeName: c,
      ChallengeParameters: u,
      AuthenticationResult: d,
      Session: f,
    } = await l(
      { region: ct(t.userPoolId), userAgentValue: an(Nt.ConfirmSignIn) },
      {
        ChallengeName: "WEB_AUTHN",
        ChallengeResponses: { USERNAME: n, CREDENTIAL: JSON.stringify(a) },
        ClientId: t.userPoolClientId,
        Session: r,
      },
    );
  if (
    (si({ signInSession: f, username: n, challengeName: c, signInDetails: o }),
    d)
  )
    return (
      await oi({
        ...d,
        username: n,
        NewDeviceMetadata: await ci({
          userPoolId: t.userPoolId,
          userPoolEndpoint: t.userPoolEndpoint,
          newDeviceMetadata: d.NewDeviceMetadata,
          accessToken: d.AccessToken,
        }),
        signInDetails: o,
      }),
      Pr.dispatch({ type: "RESET_STATE" }),
      await ii(),
      { isSignedIn: !0, nextStep: { signInStep: "DONE" } }
    );
  if (c === "WEB_AUTHN")
    throw new le({
      name: Wo.SignInException,
      message:
        "Sequential WEB_AUTHN challenges returned from underlying service cannot be handled.",
    });
  return { challengeName: c, challengeParameters: u };
}
const E1 = [
    "Jan",
    "Feb",
    "Mar",
    "Apr",
    "May",
    "Jun",
    "Jul",
    "Aug",
    "Sep",
    "Oct",
    "Nov",
    "Dec",
  ],
  I1 = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
  r0 = () => {
    const e = new Date(),
      t = I1[e.getUTCDay()],
      n = E1[e.getUTCMonth()],
      r = e.getUTCDate();
    let o = e.getUTCHours();
    o < 10 && (o = `0${o}`);
    let i = e.getUTCMinutes();
    i < 10 && (i = `0${i}`);
    let s = e.getUTCSeconds();
    s < 10 && (s = `0${s}`);
    const a = e.getUTCFullYear();
    return `${t} ${n} ${r} ${o}:${i}:${s} UTC ${a}`;
  },
  o0 = ({
    userPoolName: e,
    username: t,
    challengeParameters: n,
    dateNow: r,
    hkdf: o,
  }) => {
    const i = la.convert(e),
      s = la.convert(t),
      a = R1(n.SECRET_BLOCK),
      l = la.convert(r),
      c = new Uint8Array(
        i.byteLength + s.byteLength + a.byteLength + l.byteLength,
      );
    (c.set(i, 0),
      c.set(s, i.byteLength),
      c.set(a, i.byteLength + s.byteLength),
      c.set(l, i.byteLength + s.byteLength + a.byteLength));
    const u = new Fa(o);
    u.update(c);
    const d = u.digestSync();
    return es.convert(d);
  },
  R1 = (e) => {
    const t = "=".repeat((4 - (e.length % 4)) % 4),
      n = (e + t).replace(/-/g, "+").replace(/_/g, "/"),
      r = yd.convert(n),
      o = new Uint8Array(r.length);
    for (let i = 0; i < r.length; ++i) o[i] = r.charCodeAt(i);
    return o;
  };
async function Ad({
  username: e,
  config: t,
  clientMetadata: n,
  session: r,
  tokenOrchestrator: o,
}) {
  const { userPoolId: i, userPoolEndpoint: s } = t,
    a = t.userPoolClientId,
    l = await (o == null ? void 0 : o.getDeviceMetadata(e));
  Xy(l);
  const c = await gl(l.deviceGroupKey),
    u = { USERNAME: e, SRP_A: c.A.toString(16), DEVICE_KEY: l.deviceKey },
    d = {
      ChallengeName: "DEVICE_SRP_AUTH",
      ClientId: a,
      ChallengeResponses: u,
      ClientMetadata: n,
      Session: r,
    },
    f = dl({ endpointResolver: ut({ endpointOverride: s }) }),
    { ChallengeParameters: g, Session: h } = await f({ region: ct(i) }, d);
  return k1(e, g, n, h, c, t, o);
}
async function k1(
  e,
  t,
  n,
  r,
  o,
  { userPoolId: i, userPoolClientId: s, userPoolEndpoint: a },
  l,
) {
  const c = await (l == null ? void 0 : l.getDeviceMetadata(e));
  Xy(c);
  const u = new J(t == null ? void 0 : t.SRP_B, 16),
    d = new J(t == null ? void 0 : t.SALT, 16),
    { deviceKey: f } = c,
    { deviceGroupKey: g } = c,
    h = await o.getPasswordAuthenticationKey({
      username: c.deviceKey,
      password: c.randomPassword,
      serverBValue: u,
      salt: d,
    }),
    p = r0(),
    v = {
      USERNAME: (t == null ? void 0 : t.USERNAME) ?? e,
      PASSWORD_CLAIM_SECRET_BLOCK: t == null ? void 0 : t.SECRET_BLOCK,
      TIMESTAMP: p,
      PASSWORD_CLAIM_SIGNATURE: o0({
        username: f,
        userPoolName: g,
        challengeParameters: t,
        dateNow: p,
        hkdf: h,
      }),
      DEVICE_KEY: f,
    },
    b = ln({ username: e, userPoolId: i, userPoolClientId: s }),
    S = {
      ChallengeName: "DEVICE_PASSWORD_VERIFIER",
      ClientId: s,
      ChallengeResponses: v,
      Session: r,
      ClientMetadata: n,
      UserContextData: b,
    };
  return dl({ endpointResolver: ut({ endpointOverride: a }) })(
    { region: ct(i) },
    S,
  );
}
async function i0(e, t, n, r, o, i, s) {
  const { userPoolId: a, userPoolClientId: l, userPoolEndpoint: c } = i,
    u = (a == null ? void 0 : a.split("_")[1]) || "",
    d = new J(t == null ? void 0 : t.SRP_B, 16),
    f = new J(t == null ? void 0 : t.SALT, 16),
    g = t == null ? void 0 : t.USER_ID_FOR_SRP;
  if (!g)
    throw new le({
      name: "EmptyUserIdForSRPException",
      message: "USER_ID_FOR_SRP was not found in challengeParameters",
    });
  const h = await o.getPasswordAuthenticationKey({
      username: g,
      password: e,
      serverBValue: d,
      salt: f,
    }),
    p = r0(),
    v = {
      USERNAME: g,
      PASSWORD_CLAIM_SECRET_BLOCK: t == null ? void 0 : t.SECRET_BLOCK,
      TIMESTAMP: p,
      PASSWORD_CLAIM_SIGNATURE: o0({
        username: g,
        userPoolName: u,
        challengeParameters: t,
        dateNow: p,
        hkdf: h,
      }),
    },
    b = await s.getDeviceMetadata(g);
  b && b.deviceKey && (v.DEVICE_KEY = b.deviceKey);
  const S = ln({ username: g, userPoolId: a, userPoolClientId: l }),
    w = {
      ChallengeName: "PASSWORD_VERIFIER",
      ChallengeResponses: v,
      ClientMetadata: n,
      Session: r,
      ClientId: l,
      UserContextData: S,
    },
    R = await dl({ endpointResolver: ut({ endpointOverride: c }) })(
      { region: ct(a) },
      w,
    );
  return R.ChallengeName === "DEVICE_SRP_AUTH"
    ? Ad({
        username: g,
        config: i,
        clientMetadata: n,
        session: R.Session,
        tokenOrchestrator: s,
      })
    : R;
}
async function hl(e, t, n, r) {
  try {
    return await e(...t);
  } catch (o) {
    if (
      o instanceof le &&
      o.name === "ResourceNotFoundException" &&
      o.message.includes("Device does not exist.")
    )
      return (await r.clearDeviceMetadata(n), e(...t));
    throw o;
  }
}
function ys(e) {
  const { dispatch: t } = Pr;
  t({ type: "SET_USERNAME", value: e });
}
async function s0({
  username: e,
  password: t,
  clientMetadata: n,
  config: r,
  tokenOrchestrator: o,
  authFlow: i,
  preferredChallenge: s,
}) {
  const { userPoolId: a, userPoolClientId: l, userPoolEndpoint: c } = r,
    u = (a == null ? void 0 : a.split("_")[1]) || "",
    d = await gl(u),
    f = { USERNAME: e, SRP_A: d.A.toString(16) };
  i === "USER_AUTH" && s && (f.PREFERRED_CHALLENGE = s);
  const g = ln({ username: e, userPoolId: a, userPoolClientId: l }),
    h = {
      AuthFlow: i,
      AuthParameters: f,
      ClientMetadata: n,
      ClientId: l,
      UserContextData: g,
    },
    v = await ri({ endpointResolver: ut({ endpointOverride: c }) })(
      { region: ct(a), userAgentValue: an(Nt.SignIn) },
      h,
    ),
    { ChallengeParameters: b, Session: S } = v,
    w = (b == null ? void 0 : b.USERNAME) ?? e;
  return (
    ys(w),
    v.ChallengeName === "PASSWORD_VERIFIER"
      ? hl(i0, [t, b, n, S, d, r, o], w, o)
      : v
  );
}
const hh = "userAttributes.";
function P1(e) {
  return "isSignedIn" in e && "nextStep" in e;
}
async function T1(e, t, n, r, o) {
  var p, v;
  const { userPoolClientId: i, userPoolId: s, userPoolEndpoint: a } = r,
    l = { USERNAME: e, PASSWORD: t },
    c = await o.getDeviceMetadata(e);
  c && c.deviceKey && (l.DEVICE_KEY = c.deviceKey);
  const u = ln({ username: e, userPoolId: s, userPoolClientId: i }),
    d = {
      AuthFlow: "USER_PASSWORD_AUTH",
      AuthParameters: l,
      ClientMetadata: n,
      ClientId: i,
      UserContextData: u,
    },
    g = await ri({ endpointResolver: ut({ endpointOverride: a }) })(
      { region: ct(s), userAgentValue: an(Nt.SignIn) },
      d,
    ),
    h =
      ((p = g.ChallengeParameters) == null ? void 0 : p.USERNAME) ??
      ((v = g.ChallengeParameters) == null ? void 0 : v.USER_ID_FOR_SRP) ??
      e;
  return (
    ys(h),
    g.ChallengeName === "DEVICE_SRP_AUTH"
      ? Ad({
          username: h,
          config: r,
          clientMetadata: n,
          session: g.Session,
          tokenOrchestrator: o,
        })
      : g
  );
}
async function O1(e, t, n, r, o) {
  return s0({
    username: e,
    password: t,
    clientMetadata: n,
    config: r,
    tokenOrchestrator: o,
    authFlow: "USER_SRP_AUTH",
  });
}
async function _1(e, t, n, r) {
  var h;
  const { userPoolClientId: o, userPoolId: i, userPoolEndpoint: s } = n,
    a = { USERNAME: e },
    l = await r.getDeviceMetadata(e);
  l && l.deviceKey && (a.DEVICE_KEY = l.deviceKey);
  const c = ln({ username: e, userPoolId: i, userPoolClientId: o }),
    u = {
      AuthFlow: "CUSTOM_AUTH",
      AuthParameters: a,
      ClientMetadata: t,
      ClientId: o,
      UserContextData: c,
    },
    f = await ri({ endpointResolver: ut({ endpointOverride: s }) })(
      { region: ct(i), userAgentValue: an(Nt.SignIn) },
      u,
    ),
    g = ((h = f.ChallengeParameters) == null ? void 0 : h.USERNAME) ?? e;
  return (
    ys(g),
    f.ChallengeName === "DEVICE_SRP_AUTH"
      ? Ad({
          username: g,
          config: n,
          clientMetadata: t,
          session: f.Session,
          tokenOrchestrator: r,
        })
      : f
  );
}
async function A1(e, t, n, r, o) {
  Se(r);
  const { userPoolId: i, userPoolClientId: s, userPoolEndpoint: a } = r,
    l = (i == null ? void 0 : i.split("_")[1]) || "",
    c = await gl(l),
    u = { USERNAME: e, SRP_A: c.A.toString(16), CHALLENGE_NAME: "SRP_A" },
    d = ln({ username: e, userPoolId: i, userPoolClientId: s }),
    f = {
      AuthFlow: "CUSTOM_AUTH",
      AuthParameters: u,
      ClientMetadata: n,
      ClientId: s,
      UserContextData: d,
    },
    g = ri({ endpointResolver: ut({ endpointOverride: a }) }),
    { ChallengeParameters: h, Session: p } = await g(
      { region: ct(i), userAgentValue: an(Nt.SignIn) },
      f,
    ),
    v = (h == null ? void 0 : h.USERNAME) ?? e;
  return (ys(v), hl(i0, [t, h, n, p, c, r, o], v, o));
}
async function ui(e) {
  var i;
  const {
      challengeName: t,
      challengeParameters: n,
      availableChallenges: r,
    } = e,
    o = (i = Fe.getConfig().Auth) == null ? void 0 : i.Cognito;
  switch ((Se(o), t)) {
    case "CUSTOM_CHALLENGE":
      return {
        isSignedIn: !1,
        nextStep: {
          signInStep: "CONFIRM_SIGN_IN_WITH_CUSTOM_CHALLENGE",
          additionalInfo: n,
        },
      };
    case "MFA_SETUP": {
      const { signInSession: s, username: a } = Pr.getState(),
        l = ph(mh(n.MFAS_CAN_SETUP)) || [],
        c = D1(l),
        u = c.includes("TOTP"),
        d = c.includes("EMAIL");
      if (u && d)
        return {
          isSignedIn: !1,
          nextStep: {
            signInStep: "CONTINUE_SIGN_IN_WITH_MFA_SETUP_SELECTION",
            allowedMFATypes: c,
          },
        };
      if (d)
        return {
          isSignedIn: !1,
          nextStep: { signInStep: "CONTINUE_SIGN_IN_WITH_EMAIL_SETUP" },
        };
      if (u) {
        const f = oI({
            endpointResolver: ut({ endpointOverride: o.userPoolEndpoint }),
          }),
          { Session: g, SecretCode: h } = await f(
            { region: ct(o.userPoolId) },
            { Session: s },
          );
        return (
          Pr.dispatch({ type: "SET_SIGN_IN_SESSION", value: g }),
          {
            isSignedIn: !1,
            nextStep: {
              signInStep: "CONTINUE_SIGN_IN_WITH_TOTP_SETUP",
              totpSetupDetails: N1(h, a),
            },
          }
        );
      }
      throw new le({
        name: Wo.SignInException,
        message: `Cannot initiate MFA setup from available types: ${l}`,
      });
    }
    case "NEW_PASSWORD_REQUIRED":
      return {
        isSignedIn: !1,
        nextStep: {
          signInStep: "CONFIRM_SIGN_IN_WITH_NEW_PASSWORD_REQUIRED",
          missingAttributes: V1(n.requiredAttributes),
        },
      };
    case "SELECT_MFA_TYPE":
      return {
        isSignedIn: !1,
        nextStep: {
          signInStep: "CONTINUE_SIGN_IN_WITH_MFA_SELECTION",
          allowedMFATypes: ph(mh(n.MFAS_CAN_CHOOSE)),
        },
      };
    case "SMS_OTP":
    case "SMS_MFA":
      return {
        isSignedIn: !1,
        nextStep: {
          signInStep: "CONFIRM_SIGN_IN_WITH_SMS_CODE",
          codeDeliveryDetails: {
            deliveryMedium: n.CODE_DELIVERY_DELIVERY_MEDIUM,
            destination: n.CODE_DELIVERY_DESTINATION,
          },
        },
      };
    case "SOFTWARE_TOKEN_MFA":
      return {
        isSignedIn: !1,
        nextStep: { signInStep: "CONFIRM_SIGN_IN_WITH_TOTP_CODE" },
      };
    case "EMAIL_OTP":
      return {
        isSignedIn: !1,
        nextStep: {
          signInStep: "CONFIRM_SIGN_IN_WITH_EMAIL_CODE",
          codeDeliveryDetails: {
            deliveryMedium: n.CODE_DELIVERY_DELIVERY_MEDIUM,
            destination: n.CODE_DELIVERY_DESTINATION,
          },
        },
      };
    case "WEB_AUTHN": {
      const s = await C1(n);
      return P1(s) ? s : ui(s);
    }
    case "PASSWORD":
    case "PASSWORD_SRP":
      return {
        isSignedIn: !1,
        nextStep: { signInStep: "CONFIRM_SIGN_IN_WITH_PASSWORD" },
      };
    case "SELECT_CHALLENGE":
      return {
        isSignedIn: !1,
        nextStep: {
          signInStep: "CONTINUE_SIGN_IN_WITH_FIRST_FACTOR_SELECTION",
          availableChallenges: r,
        },
      };
  }
  throw new le({
    name: Wo.SignInException,
    message: `An error occurred during the sign in process. ${t} challengeName returned by the underlying service was not addressed.`,
  });
}
function N1(e, t) {
  return {
    sharedSecret: e,
    getSetupUri: (n, r) => {
      const o = `otpauth://totp/${n}:${r ?? t}?secret=${e}&issuer=${n}`;
      return new ms(o);
    },
  };
}
function bs(e) {
  if (e === Da.PasswordResetRequiredException)
    return { isSignedIn: !1, nextStep: { signInStep: "RESET_PASSWORD" } };
  if (e === Da.UserNotConfirmedException)
    return { isSignedIn: !1, nextStep: { signInStep: "CONFIRM_SIGN_UP" } };
}
function V1(e) {
  return e
    ? JSON.parse(e).map((n) => (n.includes(hh) ? n.replace(hh, "") : n))
    : [];
}
function F1(e) {
  if (e === "SMS_MFA") return "SMS";
  if (e === "SOFTWARE_TOKEN_MFA") return "TOTP";
  if (e === "EMAIL_OTP") return "EMAIL";
}
function ph(e) {
  if (e) return e.map(F1).filter(Boolean);
}
function mh(e) {
  return e ? JSON.parse(e) : [];
}
function D1(e) {
  return e.filter((t) => t === "EMAIL" || t === "TOTP");
}
async function $1() {
  let e;
  try {
    e = await Cd();
  } catch {}
  if (e && e.userId && e.username)
    throw new le({
      name: FE,
      message: "There is already a signed in user.",
      recoverySuggestion: "Call signOut before calling signIn again.",
    });
}
function xs(e) {
  return Pr.getState().username ?? e;
}
async function M1(e) {
  var a;
  const t = (a = Fe.getConfig().Auth) == null ? void 0 : a.Cognito;
  Se(t);
  const { username: n, password: r, options: o } = e,
    i = { loginId: n, authFlowType: "CUSTOM_WITHOUT_SRP" },
    s = o == null ? void 0 : o.clientMetadata;
  (lt(!!n, fe.EmptySignInUsername), lt(!r, fe.CustomAuthSignInPassword));
  try {
    const {
        ChallengeName: l,
        ChallengeParameters: c,
        AuthenticationResult: u,
        Session: d,
      } = await hl(_1, [n, s, t, Kt], n, Kt),
      f = xs(n);
    return (
      si({ signInSession: d, username: f, challengeName: l, signInDetails: i }),
      u
        ? (await oi({
            username: f,
            ...u,
            NewDeviceMetadata: await ci({
              userPoolId: t.userPoolId,
              userPoolEndpoint: t.userPoolEndpoint,
              newDeviceMetadata: u.NewDeviceMetadata,
              accessToken: u.AccessToken,
            }),
            signInDetails: i,
          }),
          Ln(),
          await ii(),
          { isSignedIn: !0, nextStep: { signInStep: "DONE" } })
        : ui({ challengeName: l, challengeParameters: c })
    );
  } catch (l) {
    (Ln(), Sn(l));
    const c = bs(l.name);
    if (c) return c;
    throw l;
  }
}
async function L1(e) {
  var a;
  const { username: t, password: n, options: r } = e,
    o = { loginId: t, authFlowType: "CUSTOM_WITH_SRP" },
    i = (a = Fe.getConfig().Auth) == null ? void 0 : a.Cognito;
  Se(i);
  const s = r == null ? void 0 : r.clientMetadata;
  (lt(!!t, fe.EmptySignInUsername), lt(!!n, fe.EmptySignInPassword));
  try {
    const {
        ChallengeName: l,
        ChallengeParameters: c,
        AuthenticationResult: u,
        Session: d,
      } = await A1(t, n, s, i, Kt),
      f = xs(t);
    return (
      si({ signInSession: d, username: f, challengeName: l, signInDetails: o }),
      u
        ? (await oi({
            username: f,
            ...u,
            NewDeviceMetadata: await ci({
              userPoolId: i.userPoolId,
              userPoolEndpoint: i.userPoolEndpoint,
              newDeviceMetadata: u.NewDeviceMetadata,
              accessToken: u.AccessToken,
            }),
            signInDetails: o,
          }),
          Ln(),
          await ii(),
          { isSignedIn: !0, nextStep: { signInStep: "DONE" } })
        : ui({ challengeName: l, challengeParameters: c })
    );
  } catch (l) {
    (Ln(), Sn(l));
    const c = bs(l.name);
    if (c) return c;
    throw l;
  }
}
function sr(e = !0) {
  wr.dispatch({ type: "RESET" });
}
async function vh(e) {
  var s, a;
  const { username: t, password: n } = e,
    r = (s = Fe.getConfig().Auth) == null ? void 0 : s.Cognito,
    o = { loginId: t, authFlowType: "USER_SRP_AUTH" };
  Se(r);
  const i = (a = e.options) == null ? void 0 : a.clientMetadata;
  (lt(!!t, fe.EmptySignInUsername), lt(!!n, fe.EmptySignInPassword));
  try {
    const {
        ChallengeName: l,
        ChallengeParameters: c,
        AuthenticationResult: u,
        Session: d,
      } = await O1(t, n, i, r, Kt),
      f = xs(t);
    return (
      si({ signInSession: d, username: f, challengeName: l, signInDetails: o }),
      u
        ? (await oi({
            username: f,
            ...u,
            NewDeviceMetadata: await ci({
              userPoolId: r.userPoolId,
              userPoolEndpoint: r.userPoolEndpoint,
              newDeviceMetadata: u.NewDeviceMetadata,
              accessToken: u.AccessToken,
            }),
            signInDetails: o,
          }),
          Ln(),
          await ii(),
          sr(),
          { isSignedIn: !0, nextStep: { signInStep: "DONE" } })
        : ui({ challengeName: l, challengeParameters: c })
    );
  } catch (l) {
    (Ln(), sr(), Sn(l));
    const c = bs(l.name);
    if (c) return c;
    throw l;
  }
}
async function z1(e) {
  var a;
  const { username: t, password: n, options: r } = e,
    o = (a = Fe.getConfig().Auth) == null ? void 0 : a.Cognito,
    i = { loginId: t, authFlowType: "USER_PASSWORD_AUTH" };
  Se(o);
  const s = r == null ? void 0 : r.clientMetadata;
  (lt(!!t, fe.EmptySignInUsername), lt(!!n, fe.EmptySignInPassword));
  try {
    const {
        ChallengeName: l,
        ChallengeParameters: c,
        AuthenticationResult: u,
        Session: d,
      } = await hl(T1, [t, n, s, o, Kt], t, Kt),
      f = xs(t);
    return (
      si({ signInSession: d, username: f, challengeName: l, signInDetails: i }),
      u
        ? (await oi({
            ...u,
            username: f,
            NewDeviceMetadata: await ci({
              userPoolId: o.userPoolId,
              userPoolEndpoint: o.userPoolEndpoint,
              newDeviceMetadata: u.NewDeviceMetadata,
              accessToken: u.AccessToken,
            }),
            signInDetails: i,
          }),
          Ln(),
          await ii(),
          sr(),
          { isSignedIn: !0, nextStep: { signInStep: "DONE" } })
        : ui({ challengeName: l, challengeParameters: c })
    );
  } catch (l) {
    (Ln(), sr(), Sn(l));
    const c = bs(l.name);
    if (c) return c;
    throw l;
  }
}
async function B1({
  username: e,
  clientMetadata: t,
  config: n,
  tokenOrchestrator: r,
  preferredChallenge: o,
  password: i,
  session: s,
}) {
  const { userPoolId: a, userPoolClientId: l, userPoolEndpoint: c } = n,
    u = ln({ username: e, userPoolId: a, userPoolClientId: l }),
    d = { USERNAME: e };
  if (o) {
    if (o === "PASSWORD_SRP")
      return (
        lt(!!i, fe.EmptySignInPassword),
        s0({
          username: e,
          password: i,
          clientMetadata: t,
          config: n,
          tokenOrchestrator: r,
          authFlow: "USER_AUTH",
          preferredChallenge: o,
        })
      );
    (o === "PASSWORD" && (lt(!!i, fe.EmptySignInPassword), (d.PASSWORD = i)),
      (d.PREFERRED_CHALLENGE = o));
  }
  const f = {
    AuthFlow: "USER_AUTH",
    AuthParameters: d,
    ClientMetadata: t,
    ClientId: l,
    UserContextData: u,
  };
  s && (f.Session = s);
  const h = await ri({ endpointResolver: ut({ endpointOverride: c }) })(
    { region: ct(a), userAgentValue: an(Nt.SignIn) },
    f,
  );
  return (ys(e), h);
}
async function j1(e) {
  var l;
  const { username: t, password: n, options: r } = e,
    o = (l = Fe.getConfig().Auth) == null ? void 0 : l.Cognito,
    i = { loginId: t, authFlowType: "USER_AUTH" };
  Se(o);
  const s = r == null ? void 0 : r.clientMetadata,
    a = r == null ? void 0 : r.preferredChallenge;
  lt(!!t, fe.EmptySignInUsername);
  try {
    const c = {
        username: t,
        config: o,
        tokenOrchestrator: Kt,
        clientMetadata: s,
        preferredChallenge: a,
        password: n,
      },
      u = wr.getState();
    u.active && u.username === t && (c.session = u.session);
    const d = await B1(c),
      f = xs(t);
    return (
      si({
        signInSession: d.Session,
        username: f,
        challengeName: d.ChallengeName,
        signInDetails: i,
      }),
      d.AuthenticationResult
        ? (await oi({
            username: f,
            ...d.AuthenticationResult,
            NewDeviceMetadata: await ci({
              userPoolId: o.userPoolId,
              userPoolEndpoint: o.userPoolEndpoint,
              newDeviceMetadata: d.AuthenticationResult.NewDeviceMetadata,
              accessToken: d.AuthenticationResult.AccessToken,
            }),
            signInDetails: i,
          }),
          Ln(),
          await ii(),
          sr(),
          { isSignedIn: !0, nextStep: { signInStep: "DONE" } })
        : ui({
            challengeName: d.ChallengeName,
            challengeParameters: d.ChallengeParameters,
            availableChallenges:
              "AvailableChallenges" in d ? d.AvailableChallenges : void 0,
          })
    );
  } catch (c) {
    (Ln(), sr(), Sn(c));
    const u = bs(c.name);
    if (u) return u;
    throw c;
  }
}
async function U1(e) {
  var n;
  sr(!1);
  const t = (n = e.options) == null ? void 0 : n.authFlowType;
  switch ((await $1(), t)) {
    case "USER_SRP_AUTH":
      return vh(e);
    case "USER_PASSWORD_AUTH":
      return z1(e);
    case "CUSTOM_WITHOUT_SRP":
      return M1(e);
    case "CUSTOM_WITH_SRP":
      return L1(e);
    case "USER_AUTH":
      return j1(e);
    default:
      return vh(e);
  }
}
const W1 = 3 * 60 * 1e3;
function H1(e) {
  const t = Va.listen("auth-internal", async ({ payload: r }) => {
      switch (r.event) {
        case "confirmSignUp": {
          const o = r.data;
          o != null &&
            o.isSignUpComplete &&
            (Va.dispatch("auth-internal", { event: "autoSignIn" }), t());
        }
      }
    }),
    n = setTimeout(() => {
      (t(), clearTimeout(n), sr());
    }, W1);
}
const G1 = () => async (e) => {
    if (e.statusCode >= 300) {
      const t = await ni(e);
      if (
        (Sn(t),
        t.name === mu.InvalidParameterException &&
          /'password'/.test(t.message) &&
          /Member must not be null/.test(t.message))
      ) {
        const n = fe.EmptySignUpPassword,
          { message: r, recoverySuggestion: o } = Ky[n];
        throw new le({ name: n, message: r, recoverySuggestion: o });
      }
      throw new le({ name: t.name, message: t.message });
    }
    return ps(e);
  },
  K1 = (e) => sn(jn, Bn("SignUp"), G1(), { ...Un, ...e });
async function q1(e) {
  var N;
  const { username: t, password: n, options: r } = e,
    o = (N = Fe.getConfig().Auth) == null ? void 0 : N.Cognito,
    i = (o == null ? void 0 : o.signUpVerificationMethod) ?? "code",
    { clientMetadata: s, validationData: a, autoSignIn: l } = e.options ?? {};
  (Se(o), lt(!!t, fe.EmptySignUpUsername));
  const c = typeof l != "boolean" ? l : void 0;
  c == null || c.authFlowType;
  const { userPoolId: u, userPoolClientId: d, userPoolEndpoint: f } = o,
    g = K1({ endpointResolver: ut({ endpointOverride: f }) }),
    h = {
      Username: t,
      Password: void 0,
      UserAttributes:
        (r == null ? void 0 : r.userAttributes) &&
        Dg(r == null ? void 0 : r.userAttributes),
      ClientMetadata: s,
      ValidationData: a && Dg(a),
      ClientId: d,
      UserContextData: ln({ username: t, userPoolId: u, userPoolClientId: d }),
    };
  n && (h.Password = n);
  const {
    UserSub: p,
    CodeDeliveryDetails: v,
    UserConfirmed: b,
    Session: S,
  } = await g({ region: ct(u), userAgentValue: an(Nt.SignUp) }, h);
  (c || l === !0) &&
    (wr.dispatch({ type: "START" }),
    wr.dispatch({ type: "SET_USERNAME", value: t }),
    wr.dispatch({ type: "SET_SESSION", value: S }));
  const w = {
      destination: v == null ? void 0 : v.Destination,
      deliveryMedium: v == null ? void 0 : v.DeliveryMedium,
      attributeName: v == null ? void 0 : v.AttributeName,
    },
    E = !!b,
    R = wr.getState().active;
  if (E)
    return R
      ? {
          isSignUpComplete: !0,
          nextStep: { signUpStep: "COMPLETE_AUTO_SIGN_IN" },
          userId: p,
        }
      : { isSignUpComplete: !0, nextStep: { signUpStep: "DONE" }, userId: p };
  if (R) {
    if (i === "link")
      return {
        isSignUpComplete: !1,
        nextStep: {
          signUpStep: "COMPLETE_AUTO_SIGN_IN",
          codeDeliveryDetails: w,
        },
        userId: p,
      };
    H1();
  }
  return {
    isSignUpComplete: !1,
    nextStep: { signUpStep: "CONFIRM_SIGN_UP", codeDeliveryDetails: w },
    userId: p,
  };
}
const Y1 = (e) => sn(jn, Bn("ForgotPassword"), hr(), { ...Un, ...e });
async function X1(e) {
  var d, f;
  const { username: t } = e;
  lt(!!t, fe.EmptyResetPasswordUsername);
  const n = (d = Fe.getConfig().Auth) == null ? void 0 : d.Cognito;
  Se(n);
  const { userPoolClientId: r, userPoolId: o, userPoolEndpoint: i } = n,
    s = (f = e.options) == null ? void 0 : f.clientMetadata,
    a = ln({ username: t, userPoolId: o, userPoolClientId: r }),
    u = (
      await Y1({ endpointResolver: ut({ endpointOverride: i }) })(
        { region: ct(o), userAgentValue: an(Nt.ResetPassword) },
        { Username: t, ClientMetadata: s, ClientId: r, UserContextData: a },
      )
    ).CodeDeliveryDetails;
  return {
    isPasswordReset: !1,
    nextStep: {
      resetPasswordStep: "CONFIRM_RESET_PASSWORD_WITH_CODE",
      codeDeliveryDetails: {
        deliveryMedium: u == null ? void 0 : u.DeliveryMedium,
        destination: u == null ? void 0 : u.Destination,
        attributeName: u == null ? void 0 : u.AttributeName,
      },
    },
  };
}
const J1 = (e) => sn(jn, Bn("ConfirmForgotPassword"), hr(), { ...Un, ...e });
async function Q1(e) {
  var d, f;
  const t = (d = Fe.getConfig().Auth) == null ? void 0 : d.Cognito;
  Se(t);
  const { userPoolClientId: n, userPoolId: r, userPoolEndpoint: o } = t,
    { username: i, newPassword: s } = e;
  (lt(!!i, fe.EmptyConfirmResetPasswordUsername),
    lt(!!s, fe.EmptyConfirmResetPasswordNewPassword));
  const a = e.confirmationCode;
  lt(!!a, fe.EmptyConfirmResetPasswordConfirmationCode);
  const l = (f = e.options) == null ? void 0 : f.clientMetadata,
    c = ln({ username: i, userPoolId: r, userPoolClientId: n });
  await J1({ endpointResolver: ut({ endpointOverride: o }) })(
    { region: ct(t.userPoolId), userAgentValue: an(Nt.ConfirmResetPassword) },
    {
      Username: i,
      ConfirmationCode: a,
      Password: s,
      ClientMetadata: l,
      ClientId: t.userPoolClientId,
      UserContextData: c,
    },
  );
}
const Z1 = (e) => sn(jn, Bn("ConfirmSignUp"), hr(), { ...Un, ...e });
async function eR(e) {
  var f;
  const { username: t, confirmationCode: n, options: r } = e,
    o = (f = Fe.getConfig().Auth) == null ? void 0 : f.Cognito;
  Se(o);
  const { userPoolId: i, userPoolClientId: s, userPoolEndpoint: a } = o,
    l = r == null ? void 0 : r.clientMetadata;
  (lt(!!t, fe.EmptyConfirmSignUpUsername), lt(!!n, fe.EmptyConfirmSignUpCode));
  const c = ln({ username: t, userPoolId: i, userPoolClientId: s }),
    u = Z1({ endpointResolver: ut({ endpointOverride: a }) }),
    { Session: d } = await u(
      { region: ct(o.userPoolId), userAgentValue: an(Nt.ConfirmSignUp) },
      {
        Username: t,
        ConfirmationCode: n,
        ClientMetadata: l,
        ForceAliasCreation: r == null ? void 0 : r.forceAliasCreation,
        ClientId: o.userPoolClientId,
        UserContextData: c,
      },
    );
  return new Promise((g, h) => {
    try {
      const p = { isSignUpComplete: !0, nextStep: { signUpStep: "DONE" } },
        v = wr.getState();
      if (!v.active || v.username !== t) {
        (g(p), sr());
        return;
      }
      wr.dispatch({ type: "SET_SESSION", value: d });
      const b = Va.listen("auth-internal", ({ payload: S }) => {
        switch (S.event) {
          case "autoSignIn":
            (g({
              isSignUpComplete: !0,
              nextStep: { signUpStep: "COMPLETE_AUTO_SIGN_IN" },
            }),
              b());
        }
      });
      Va.dispatch("auth-internal", { event: "confirmSignUp", data: p });
    } catch (p) {
      h(p);
    }
  });
}
function tR(e, t) {
  if (t) {
    const n = e == null ? void 0 : e.find((r) => r === t);
    if (!n) throw BE;
    return n;
  } else {
    const n =
        (e == null ? void 0 : e.find(nR)) ?? (e == null ? void 0 : e.find(rR)),
      r =
        (e == null ? void 0 : e.find(iR)) ?? (e == null ? void 0 : e.find(oR));
    if (n) return n;
    throw r ? UE : zE;
  }
}
const nR = (e) =>
    e.startsWith(
      String(window.location.origin + (window.location.pathname || "/")),
    ),
  rR = (e) => e.includes(String(window.location.hostname)),
  oR = (e) => e.startsWith("http://"),
  iR = (e) => e.startsWith("https://"),
  sR = async (e) => {
    window != null &&
      window.location &&
      (window.location.href = e.replace("http://", "https://"));
  },
  aR = async (e) => {
    (await e.clearOAuthData(),
      Kt.clearTokens(),
      await Ay(),
      Uo.dispatch("auth", { event: "signedOut" }, "Auth", io));
  },
  lR = async (e, t = !1, n) => {
    Ey(e);
    const { loginWith: r, userPoolClientId: o } = e,
      { domain: i, redirectSignOut: s } = r.oauth,
      a = tR(s, n),
      l = `https://${i}/logout?${Object.entries({
        client_id: o,
        logout_uri: encodeURIComponent(a),
      })
        .map(([c, u]) => `${c}=${u}`)
        .join("&")}`;
    return sR(l);
  },
  cR = async (e, t, n, r) => {
    const { isOAuthSignIn: o } = await t.loadOAuthSignIn(),
      i = await n.getOAuthMetadata();
    if ((await aR(t), o || (i != null && i.oauthSignIn))) return lR(e, !1, r);
  },
  uR = (e) => sn(jn, Bn("RevokeToken"), hr(), { ...Un, ...e }),
  dR = (e) => sn(jn, Bn("GlobalSignOut"), hr(), { ...Un, ...e }),
  a0 = new Ut("Auth");
async function pl(e) {
  var r, o;
  const t = (r = Fe.getConfig().Auth) == null ? void 0 : r.Cognito;
  (Se(t), e != null && e.global ? await gR(t) : await fR(t));
  let n;
  try {
    (Ey(t), (n = !0));
  } catch {
    n = !1;
  }
  if (n) {
    const i = new Zy(vs);
    i.setAuthConfig(t);
    const { type: s } =
      (await cR(
        t,
        i,
        Kt,
        (o = e == null ? void 0 : e.oauth) == null ? void 0 : o.redirectUrl,
      )) ?? {};
    if (s === "error")
      throw new le({
        name: WE,
        message:
          "An error occurred when attempting to log out from OAuth provider.",
      });
  } else
    (Kt.clearTokens(),
      await Ay(),
      Uo.dispatch("auth", { event: "signedOut" }, "Auth", io));
}
async function fR(e) {
  try {
    const { userPoolEndpoint: t, userPoolId: n, userPoolClientId: r } = e,
      o = await Kt.getTokenStore().loadTokens();
    (Yy(o),
      hR(o.accessToken) &&
        (await uR({ endpointResolver: ut({ endpointOverride: t }) })(
          { region: ct(n), userAgentValue: an(Nt.SignOut) },
          { ClientId: r, Token: o.refreshToken },
        )));
  } catch {
    a0.debug("Client signOut error caught but will proceed with token removal");
  }
}
async function gR(e) {
  try {
    const { userPoolEndpoint: t, userPoolId: n } = e,
      r = await Kt.getTokenStore().loadTokens();
    (qy(r),
      await dR({ endpointResolver: ut({ endpointOverride: t }) })(
        { region: ct(n), userAgentValue: an(Nt.SignOut) },
        { AccessToken: r.accessToken.toString() },
      ));
  } catch {
    a0.debug("Global signOut error caught but will proceed with token removal");
  }
}
const hR = (e) => {
    var t;
    return !!((t = e == null ? void 0 : e.payload) != null && t.origin_jti);
  },
  pR = { identityId: "identityId" },
  mR = new Ut("DefaultIdentityIdStore");
class l0 {
  setAuthConfig(t) {
    (sa(t.Cognito),
      (this.authConfig = t),
      (this._authKeys = vR("Cognito", t.Cognito.identityPoolId)));
  }
  constructor(t) {
    ((this._authKeys = {}),
      (this._hasGuestIdentityId = !1),
      (this.keyValueStorage = t));
  }
  async loadIdentityId() {
    var t;
    sa((t = this.authConfig) == null ? void 0 : t.Cognito);
    try {
      if (this._primaryIdentityId)
        return { id: this._primaryIdentityId, type: "primary" };
      {
        const n = await this.keyValueStorage.getItem(this._authKeys.identityId);
        return n
          ? ((this._hasGuestIdentityId = !0), { id: n, type: "guest" })
          : null;
      }
    } catch (n) {
      return (mR.log("Error getting stored IdentityId.", n), null);
    }
  }
  async storeIdentityId(t) {
    var n;
    (sa((n = this.authConfig) == null ? void 0 : n.Cognito),
      t.type === "guest"
        ? (this.keyValueStorage.setItem(this._authKeys.identityId, t.id),
          (this._primaryIdentityId = void 0),
          (this._hasGuestIdentityId = !0))
        : ((this._primaryIdentityId = t.id),
          this._hasGuestIdentityId &&
            (this.keyValueStorage.removeItem(this._authKeys.identityId),
            (this._hasGuestIdentityId = !1))));
  }
  async clearIdentityId() {
    ((this._primaryIdentityId = void 0),
      await this.keyValueStorage.removeItem(this._authKeys.identityId));
  }
}
const vR = (e, t) => Ed(pR)(`com.amplify.${e}`, t),
  bu =
    ({ endpointOverride: e }) =>
    (t) =>
      e ? { url: new ms(e) } : wE(t);
function c0(e) {
  const t = so(e).payload.iss,
    n = {};
  if (!t)
    throw new le({
      name: "InvalidIdTokenException",
      message: "Invalid Idtoken.",
    });
  const r = t.replace(/(^\w+:|^)\/\//, "");
  return ((n[r] = e), n);
}
async function yR({ tokens: e, authConfig: t, identityIdStore: n }) {
  n.setAuthConfig({ Cognito: t });
  const r = await n.loadIdentityId();
  if (r) return r.id;
  const o = e != null && e.idToken ? c0(e.idToken.toString()) : {},
    i = await bR(o, t);
  return (n.storeIdentityId({ id: i, type: e ? "primary" : "guest" }), i);
}
async function bR(e, t) {
  const n = t == null ? void 0 : t.identityPoolId,
    r = pu(n),
    o = bE({
      endpointResolver: bu({ endpointOverride: t.identityPoolEndpoint }),
    });
  let i;
  try {
    i = (await o({ region: r }, { IdentityPoolId: n, Logins: e })).IdentityId;
  } catch (s) {
    throw (Sn(s), new le(s));
  }
  if (!i)
    throw new le({
      name: "GetIdResponseException",
      message: "Received undefined response from getId operation",
      recoverySuggestion:
        "Make sure to pass a valid identityPoolId in the configuration.",
    });
  return i;
}
const zs = new Ut("CognitoCredentialsProvider"),
  yh = 50 * 60 * 1e3;
class u0 {
  constructor(t) {
    ((this._nextCredentialsRefresh = 0), (this._identityIdStore = t));
  }
  async clearCredentialsAndIdentityId() {
    (zs.debug("Clearing out credentials and identityId"),
      (this._credentialsAndIdentityId = void 0),
      await this._identityIdStore.clearIdentityId());
  }
  async clearCredentials() {
    (zs.debug("Clearing out in-memory credentials"),
      (this._credentialsAndIdentityId = void 0));
  }
  async getCredentialsAndIdentityId(t) {
    const n = t.authenticated,
      { tokens: r } = t,
      { authConfig: o } = t;
    try {
      sa(o == null ? void 0 : o.Cognito);
    } catch {
      return;
    }
    if (!n && !o.Cognito.allowGuestAccess) return;
    const { forceRefresh: i } = t,
      s = this.hasTokenChanged(r),
      a = await yR({
        tokens: r,
        authConfig: o.Cognito,
        identityIdStore: this._identityIdStore,
      });
    return (
      (i || s) && this.clearCredentials(),
      n
        ? (KE(r), this.credsForOIDCTokens(o.Cognito, r, a))
        : this.getGuestCredentials(a, o.Cognito)
    );
  }
  async getGuestCredentials(t, n) {
    var s, a;
    if (
      this._credentialsAndIdentityId &&
      !this.isPastTTL() &&
      this._credentialsAndIdentityId.isAuthenticatedCreds === !1
    )
      return (
        zs.info(
          "returning stored credentials as they neither past TTL nor expired.",
        ),
        this._credentialsAndIdentityId
      );
    this.clearCredentials();
    const r = pu(n.identityPoolId),
      o = Ng({
        endpointResolver: bu({ endpointOverride: n.identityPoolEndpoint }),
      });
    let i;
    try {
      i = await o({ region: r }, { IdentityId: t });
    } catch (l) {
      throw (Sn(l), new le(l));
    }
    if (
      (s = i == null ? void 0 : i.Credentials) != null &&
      s.AccessKeyId &&
      (a = i == null ? void 0 : i.Credentials) != null &&
      a.SecretKey
    ) {
      this._nextCredentialsRefresh = new Date().getTime() + yh;
      const l = {
        credentials: {
          accessKeyId: i.Credentials.AccessKeyId,
          secretAccessKey: i.Credentials.SecretKey,
          sessionToken: i.Credentials.SessionToken,
          expiration: i.Credentials.Expiration,
        },
        identityId: t,
      };
      return (
        i.IdentityId &&
          ((l.identityId = i.IdentityId),
          this._identityIdStore.storeIdentityId({
            id: i.IdentityId,
            type: "guest",
          })),
        (this._credentialsAndIdentityId = { ...l, isAuthenticatedCreds: !1 }),
        l
      );
    } else
      throw new le({
        name: "CredentialsNotFoundException",
        message:
          "Cognito did not respond with either Credentials, AccessKeyId or SecretKey.",
      });
  }
  async credsForOIDCTokens(t, n, r) {
    var l, c, u;
    if (
      this._credentialsAndIdentityId &&
      !this.isPastTTL() &&
      this._credentialsAndIdentityId.isAuthenticatedCreds === !0
    )
      return (
        zs.debug(
          "returning stored credentials as they neither past TTL nor expired.",
        ),
        this._credentialsAndIdentityId
      );
    this.clearCredentials();
    const o = n.idToken ? c0(n.idToken.toString()) : {},
      i = pu(t.identityPoolId),
      s = Ng({
        endpointResolver: bu({ endpointOverride: t.identityPoolEndpoint }),
      });
    let a;
    try {
      a = await s({ region: i }, { IdentityId: r, Logins: o });
    } catch (d) {
      throw (Sn(d), new le(d));
    }
    if (
      (l = a == null ? void 0 : a.Credentials) != null &&
      l.AccessKeyId &&
      (c = a == null ? void 0 : a.Credentials) != null &&
      c.SecretKey
    ) {
      this._nextCredentialsRefresh = new Date().getTime() + yh;
      const d = {
        credentials: {
          accessKeyId: a.Credentials.AccessKeyId,
          secretAccessKey: a.Credentials.SecretKey,
          sessionToken: a.Credentials.SessionToken,
          expiration: a.Credentials.Expiration,
        },
        identityId: r,
      };
      return (
        a.IdentityId &&
          ((d.identityId = a.IdentityId),
          this._identityIdStore.storeIdentityId({
            id: a.IdentityId,
            type: "primary",
          })),
        (this._credentialsAndIdentityId = {
          ...d,
          isAuthenticatedCreds: !0,
          associatedIdToken: (u = n.idToken) == null ? void 0 : u.toString(),
        }),
        d
      );
    } else
      throw new le({
        name: "CredentialsException",
        message:
          "Cognito did not respond with either Credentials, AccessKeyId or SecretKey.",
      });
  }
  isPastTTL() {
    return this._nextCredentialsRefresh === void 0
      ? !0
      : this._nextCredentialsRefresh <= Date.now();
  }
  hasTokenChanged(t) {
    var n, r;
    return (
      !!t &&
      !!((n = this._credentialsAndIdentityId) != null && n.associatedIdToken) &&
      ((r = t.idToken) == null ? void 0 : r.toString()) !==
        this._credentialsAndIdentityId.associatedIdToken
    );
  }
}
async function Nd() {
  var e, t;
  try {
    return (
      ((t = (e = (await hs()).tokens) == null ? void 0 : e.idToken) == null
        ? void 0
        : t.toString()) || null
    );
  } catch (n) {
    return (console.warn("No authentication session found:", n), null);
  }
}
async function xR(e, t) {
  typeof e == "string" || e.url;
  const n = await Nd(),
    r = new Headers(t == null ? void 0 : t.headers);
  (n && r.set("Authorization", `Bearer ${n}`),
    !r.has("Content-Type") &&
      (t == null ? void 0 : t.method) !== "GET" &&
      r.set("Content-Type", "application/json"));
  const o = { ...t, headers: r, credentials: "include" };
  console.log(`🌐 Fetching: ${e}`, {
    method: o.method || "GET",
    hasAuth: !!n,
    headers: Object.fromEntries(r.entries()),
  });
  const i = await fetch(e, o);
  if ((console.log(`📡 Response: ${i.status} ${i.statusText}`), !i.ok)) {
    let s = `HTTP ${i.status}: ${i.statusText}`;
    try {
      const a = await i.text();
      a && (s += ` - ${a}`);
    } catch {}
    throw (
      i.status === 403
        ? (s += " (Authentication required or insufficient permissions)")
        : i.status === 502
          ? (s += " (Backend Lambda function error - check CloudWatch logs)")
          : i.status === 404 &&
            (s += " (Endpoint not found - check API Gateway routes)"),
      console.error("❌ Fetch error:", s),
      new Error(s)
    );
  }
  try {
    const s = await i.json();
    return (console.log("✅ Response data:", s), s);
  } catch (s) {
    throw (
      console.error("❌ Failed to parse JSON response:", s),
      new Error("Invalid JSON response from server")
    );
  }
}
const d0 = async (e, t = "GET", n, r) => {
    var a, l;
    const { timeout: o = 3e4, headers: i = {}, skipAuth: s = !1 } = r || {};
    try {
      const c = { "Content-Type": "application/json", ...i };
      if (!s && !jo)
        try {
          const v =
            (l = (a = (await hs()).tokens) == null ? void 0 : a.idToken) == null
              ? void 0
              : l.toString();
          v &&
            ((c.Authorization = `Bearer ${v}`),
            console.log("🔐 Authentication token added to request"));
        } catch (p) {
          console.warn(
            "⚠️ Authentication failed, proceeding without token:",
            p,
          );
        }
      const u = e.startsWith("http")
        ? e
        : `${wy}${e.startsWith("/") ? e : `/${e}`}`;
      console.log("🌐 API Request:", {
        method: t,
        url: u,
        hasAuth: !!c.Authorization,
        payload: t !== "GET" ? n : void 0,
      });
      const d = new AbortController(),
        f = setTimeout(() => d.abort(), o),
        g = await fetch(u, {
          method: t,
          headers: c,
          body: t !== "GET" ? JSON.stringify(n) : void 0,
          signal: d.signal,
        });
      if (
        (clearTimeout(f),
        console.log("📡 API Response:", {
          status: g.status,
          statusText: g.statusText,
          url: u,
        }),
        !g.ok)
      ) {
        const p = await g.text().catch(() => g.statusText);
        throw new Error(`API Error ${g.status}: ${p}`);
      }
      const h = g.headers.get("Content-Type");
      return h != null && h.includes("application/json")
        ? await g.json()
        : h != null && h.includes("text/")
          ? await g.text()
          : g;
    } catch (c) {
      throw c instanceof Error && c.name === "AbortError"
        ? new Error(`API request timeout after ${o}ms`)
        : (console.error("❌ API call failed:", {
            path: e,
            method: t,
            error: c instanceof Error ? c.message : c,
          }),
          c);
    }
  },
  ao = async (e, t) => d0(e, "GET", void 0, t),
  Vd = async (e, t, n) => d0(e, "POST", t, n),
  Fd = async () => {
    var e;
    try {
      const n = (e = (await hs()).tokens) == null ? void 0 : e.idToken;
      return n
        ? {
            username: n.payload["cognito:username"],
            email: n.payload.email,
            groups: n.payload["cognito:groups"] || [],
            sub: n.payload.sub,
            exp: n.payload.exp,
            iat: n.payload.iat,
          }
        : null;
    } catch (t) {
      return (console.warn("Failed to get current user info:", t), null);
    }
  },
  rn = wy;
function f0(e) {
  return ao(`${rn}/project-summary/${e}`);
}
function g0(e) {
  return ao(`${rn}/timeline/${e}`);
}
async function h0(e, t) {
  const n = `${rn}/download-acta/${e}?format=${t}`;
  console.log(`🌐 Requesting download URL: ${n}`);
  const r = await fetch(n, { method: "GET", redirect: "manual" });
  if (
    (console.log(`📡 Download API response: ${r.status} ${r.statusText}`),
    console.log(
      "📋 Response headers:",
      Object.fromEntries(r.headers.entries()),
    ),
    r.status !== 302)
  ) {
    const i = await r.text().catch(() => r.statusText);
    throw (
      console.error(`❌ Download API error: ${r.status} - ${i}`),
      new Error(`Download endpoint returned ${r.status}: ${i}`)
    );
  }
  const o = r.headers.get("Location");
  if ((console.log("📍 Location header:", o), !o))
    throw (
      console.error("❌ Missing Location header in 302 response"),
      new Error("Download endpoint missing Location header")
    );
  return o;
}
function Dd(e, t) {
  return Vd(`${rn}/send-approval-email`, { actaId: e, clientEmail: t });
}
const bh = "projectplace-dv-2025-x9a7b";
async function SR(e, t, n = "pm") {
  (console.log("🔄 Generating ACTA document for project:", e),
    console.log("📦 Target S3 bucket:", "projectplace-dv-2025-x9a7b"));
  const r = {
    projectId: e,
    pmEmail: t,
    userRole: n,
    s3Bucket: "projectplace-dv-2025-x9a7b",
    requestSource: "acta-ui",
    generateDocuments: !0,
    extractMetadata: !0,
    timestamp: new Date().toISOString(),
  };
  console.log("📋 Payload structure:", r);
  const o = await Vd(`${rn}/extract-project-place/${e}`, r);
  return {
    success: o.success || !0,
    message: o.message || "Document generation completed",
    s3Location: o.s3Location,
    documentId: o.documentId || e,
  };
}
async function xh(e, t) {
  (console.log(`📥 Getting S3 download URL for: ${e}.${t}`),
    console.log(`📦 Expected S3 path: s3://${bh}/acta/${e}.${t}`));
  try {
    const n = `${rn}/download-acta/${e}?format=${t}`,
      r = await fetch(n, { method: "GET", redirect: "manual" });
    if (
      (console.log(`📊 Download API response: ${r.status} ${r.statusText}`),
      console.log(
        "📋 Response headers:",
        Object.fromEntries(r.headers.entries()),
      ),
      r.status === 302)
    ) {
      const o = r.headers.get("Location");
      if (o) {
        console.log(`🔗 Got S3 signed URL: ${o.substring(0, 100)}...`);
        try {
          const i = await fetch(o, { method: "HEAD" });
          return i.ok
            ? (console.log("✅ S3 signed URL is accessible"),
              console.log(`📂 Content-Type: ${i.headers.get("Content-Type")}`),
              console.log(`📏 Size: ${i.headers.get("Content-Length")} bytes`),
              {
                success: !0,
                downloadUrl: o,
                s3Info: { bucket: bh, key: `acta/${e}.${t}`, signedUrl: o },
              })
            : (console.error(
                `❌ S3 signed URL not accessible: ${i.status} ${i.statusText}`,
              ),
              {
                success: !1,
                error: `S3 signed URL not accessible (${i.status})`,
                downloadUrl: o,
              });
        } catch (i) {
          return (
            console.error("❌ Error testing S3 signed URL:", i),
            {
              success: !1,
              error: "Failed to verify S3 signed URL",
              downloadUrl: o,
            }
          );
        }
      } else
        return (
          console.error("❌ Missing Location header in 302 response"),
          { success: !1, error: "Missing S3 signed URL in response" }
        );
    } else {
      if (r.status === 404)
        return (
          console.log(
            "📄 Document not found in S3 - may need to generate first",
          ),
          { success: !1, error: "Document not found in S3 bucket" }
        );
      {
        const o = await r.text().catch(() => r.statusText);
        console.error(`❌ Download API error: ${r.status} - ${o}`);
        let i = `Download failed (${r.status})`;
        return (
          r.status === 500
            ? (i += " - Lambda or S3 access error")
            : r.status === 403 &&
              (i += " - Insufficient permissions for S3 access"),
          { success: !1, error: i }
        );
      }
    }
  } catch (n) {
    return (
      console.error("❌ Network error getting S3 download URL:", n),
      { success: !1, error: n instanceof Error ? n.message : "Network error" }
    );
  }
}
async function ml(e, t = !1) {
  console.log("📋 Loading projects for PM:", e, "Admin:", t);
  try {
    console.log("🌐 Trying /projects endpoint first");
    const n = `${rn}/projects`;
    console.log("🌐 Projects endpoint:", n);
    const r = await ao(n);
    return (
      console.log(
        "✅ /projects endpoint successful, got",
        r.length,
        "projects",
      ),
      r
    );
  } catch (n) {
    console.warn(
      "⚠️ /projects endpoint failed, trying pm-manager endpoints",
      n,
    );
    const r = t
      ? `${rn}/pm-manager/all-projects`
      : `${rn}/pm-manager/${encodeURIComponent(e)}`;
    return (console.log("🌐 PM Projects endpoint (fallback):", r), ao(r));
  }
}
async function p0() {
  console.log("📋 Loading all projects (admin access)");
  try {
    console.log("🌐 Trying /projects endpoint first");
    const e = `${rn}/projects`;
    console.log("🌐 Projects endpoint:", e);
    const t = await ao(e);
    return (
      console.log(
        "✅ /projects endpoint successful, got",
        t.length,
        "projects",
      ),
      t
    );
  } catch (e) {
    console.warn(
      "⚠️ /projects endpoint failed, trying pm-manager/all-projects",
      e,
    );
    const t = `${rn}/pm-manager/all-projects`;
    return (console.log("🌐 All Projects endpoint (fallback):", t), ao(t));
  }
}
async function wR(e) {
  return Vd(`${rn}/bulk-generate-summaries`, { pm_email: e });
}
typeof window < "u" &&
  ((window.getSummary = f0),
  (window.getTimeline = g0),
  (window.getDownloadUrl = h0),
  (window.sendApprovalEmail = Dd),
  (window.fetchWrapper = ao),
  (window.getAuthToken = Nd),
  (window.getCurrentUser = Fd));
const CR = new u0(new l0(vs)),
  Sh = {
    configure(e, t) {
      const n = ky(e),
        r = new TE({ sameSite: "lax" }),
        o = t != null && t.ssr ? r : vs,
        i = t != null && t.ssr ? new u0(new l0(r)) : CR;
      if (!n.Auth) {
        Fe.configure(n, t);
        return;
      }
      if (t != null && t.Auth) {
        Fe.configure(n, t);
        return;
      }
      if (!Fe.libraryOptions.Auth) {
        (Vi.setAuthConfig(n.Auth),
          Vi.setKeyValueStorage(o),
          Fe.configure(n, {
            ...t,
            Auth: { tokenProvider: Vi, credentialsProvider: i },
          }));
        return;
      }
      if (t) {
        const s = Fe.libraryOptions.Auth;
        (t.ssr !== void 0 &&
          (Vi.setKeyValueStorage(o), (s.credentialsProvider = i)),
          Fe.configure(n, { Auth: s, ...t }));
        return;
      }
      Fe.configure(n);
    },
    getConfig() {
      return Fe.getConfig();
    },
  };
var xu = {},
  wh = ww;
((xu.createRoot = wh.createRoot), (xu.hydrateRoot = wh.hydrateRoot));
function $d() {
  const [e, t] = x.useState(null),
    [n, r] = x.useState(!0);
  return (
    x.useEffect(() => {
      const i = async () => {
        var l;
        try {
          if ((r(!0), !localStorage.getItem("ikusi.jwt"))) {
            (console.log("🔍 useAuth: No token in localStorage"), t(null));
            return;
          }
          console.log("🔍 useAuth: Token found, getting current user...");
          const u = await Cd();
          (console.log("🔍 useAuth: Current user:", u),
            t({
              email:
                ((l = u.signInDetails) == null ? void 0 : l.loginId) ||
                u.username ||
                "",
            }));
        } catch (c) {
          (console.error("🔍 useAuth: Error getting current user:", c),
            t(null));
        } finally {
          r(!1);
        }
      };
      i();
      const s = () => {
          (console.log("🔍 useAuth: Auth state changed, re-fetching user..."),
            i());
        },
        a = (l) => {
          l.key === "ikusi.jwt" &&
            (console.log("🔍 useAuth: JWT token changed in localStorage"), i());
        };
      return (
        window.addEventListener("auth-success", s),
        window.addEventListener("storage", a),
        () => {
          (window.removeEventListener("auth-success", s),
            window.removeEventListener("storage", a));
        }
      );
    }, []),
    {
      user: e,
      loading: n,
      signOut: async () => {
        try {
          (localStorage.removeItem("ikusi.jwt"), await pl(), t(null));
        } catch (i) {
          (console.error("🔍 useAuth: Error signing out:", i), t(null));
        }
      },
    }
  );
}
var ER = Object.create,
  m0 = Object.defineProperty,
  IR = Object.getOwnPropertyDescriptor,
  RR = Object.getOwnPropertyNames,
  kR = Object.getPrototypeOf,
  PR = Object.prototype.hasOwnProperty,
  TR = (e, t) => () => (t || e((t = { exports: {} }).exports, t), t.exports),
  OR = (e, t, n, r) => {
    if ((t && typeof t == "object") || typeof t == "function")
      for (let o of RR(t))
        !PR.call(e, o) &&
          o !== n &&
          m0(e, o, {
            get: () => t[o],
            enumerable: !(r = IR(t, o)) || r.enumerable,
          });
    return e;
  },
  _R = (e, t, n) => (
    (n = e != null ? ER(kR(e)) : {}),
    OR(
      !e || !e.__esModule ? m0(n, "default", { value: e, enumerable: !0 }) : n,
      e,
    )
  ),
  AR = TR((e, t) => {
    (function (n, r) {
      typeof e == "object" && typeof t < "u"
        ? r(e)
        : typeof define == "function" && define.amd
          ? define(["exports"], r)
          : ((n = typeof globalThis < "u" ? globalThis : n || self),
            r((n.fastUniqueNumbers = {})));
    })(e, function (n) {
      var r = function (g) {
          return function (h) {
            var p = g(h);
            return (h.add(p), p);
          };
        },
        o = function (g) {
          return function (h, p) {
            return (g.set(h, p), p);
          };
        },
        i =
          Number.MAX_SAFE_INTEGER === void 0
            ? 9007199254740991
            : Number.MAX_SAFE_INTEGER,
        s = 536870912,
        a = s * 2,
        l = function (g, h) {
          return function (p) {
            var v = h.get(p),
              b = v === void 0 ? p.size : v < a ? v + 1 : 0;
            if (!p.has(b)) return g(p, b);
            if (p.size < s) {
              for (; p.has(b); ) b = Math.floor(Math.random() * a);
              return g(p, b);
            }
            if (p.size > i)
              throw new Error(
                "Congratulations, you created a collection of unique numbers which uses all available integers!",
              );
            for (; p.has(b); ) b = Math.floor(Math.random() * i);
            return g(p, b);
          };
        },
        c = new WeakMap(),
        u = o(c),
        d = l(u, c),
        f = r(d);
      ((n.addUniqueNumber = f), (n.generateUniqueNumber = d));
    });
  });
_R(AR());
var or = (typeof window > "u" ? "undefined" : typeof window) == "object",
  mn = {
    setTimeout: or ? setTimeout.bind(window) : setTimeout,
    clearTimeout: or ? clearTimeout.bind(window) : clearTimeout,
    setInterval: or ? setInterval.bind(window) : setInterval,
    clearInterval: or ? clearInterval.bind(window) : clearInterval,
  };
function NR(e) {
  ((mn.setTimeout = e.setTimeout),
    (mn.clearTimeout = e.clearTimeout),
    (mn.setInterval = e.setInterval),
    (mn.clearInterval = e.clearInterval));
}
var mo = {},
  VR = class {
    constructor(t) {
      Oe(this, "name");
      Oe(this, "closed", !1);
      Oe(this, "mc", new MessageChannel());
      ((this.name = t),
        (mo[t] = mo[t] || []),
        mo[t].push(this),
        this.mc.port1.start(),
        this.mc.port2.start(),
        (this.onStorage = this.onStorage.bind(this)),
        window.addEventListener("storage", this.onStorage));
    }
    onStorage(t) {
      if (
        t.storageArea !== window.localStorage ||
        t.key.substring(0, this.name.length) !== this.name ||
        t.newValue === null
      )
        return;
      let n = JSON.parse(t.newValue);
      this.mc.port2.postMessage(n);
    }
    postMessage(t) {
      if (this.closed) throw new Error("InvalidStateError");
      let n = JSON.stringify(t),
        r = `${this.name}:${String(Date.now())}${String(Math.random())}`;
      (window.localStorage.setItem(r, n),
        mn.setTimeout(() => {
          window.localStorage.removeItem(r);
        }, 500),
        mo[this.name].forEach((o) => {
          o !== this && o.mc.port2.postMessage(JSON.parse(n));
        }));
    }
    close() {
      if (this.closed) return;
      ((this.closed = !0),
        this.mc.port1.close(),
        this.mc.port2.close(),
        window.removeEventListener("storage", this.onStorage));
      let t = mo[this.name].indexOf(this);
      mo[this.name].splice(t, 1);
    }
    get onmessage() {
      return this.mc.port1.onmessage;
    }
    set onmessage(t) {
      this.mc.port1.onmessage = t;
    }
    get onmessageerror() {
      return this.mc.port1.onmessageerror;
    }
    set onmessageerror(t) {
      this.mc.port1.onmessageerror = t;
    }
    addEventListener(t, n) {
      return this.mc.port1.addEventListener(t, n);
    }
    removeEventListener(t, n) {
      return this.mc.port1.removeEventListener(t, n);
    }
    dispatchEvent(t) {
      return this.mc.port1.dispatchEvent(t);
    }
  },
  FR =
    typeof window > "u"
      ? void 0
      : typeof window.BroadcastChannel == "function"
        ? window.BroadcastChannel
        : VR;
function DR(e = 0) {
  return new Promise((t) => mn.setTimeout(t, e));
}
function v0() {
  return Math.random().toString(36).substring(2);
}
var $R = class {
    constructor(t, n) {
      Oe(this, "options");
      Oe(this, "channel");
      Oe(this, "token", v0());
      Oe(this, "isLeader", !1);
      Oe(this, "isDead", !1);
      Oe(this, "isApplying", !1);
      Oe(this, "reApply", !1);
      Oe(this, "intervals", []);
      Oe(this, "listeners", []);
      Oe(this, "deferred");
      ((this.channel = t),
        (this.options = n),
        (this.apply = this.apply.bind(this)),
        (this.awaitLeadership = this.awaitLeadership.bind(this)),
        (this.sendAction = this.sendAction.bind(this)));
    }
    async apply() {
      if (this.isLeader || this.isDead) return !1;
      if (this.isApplying) return ((this.reApply = !0), !1);
      this.isApplying = !0;
      let t = !1,
        n = (r) => {
          let { token: o, action: i } = r.data;
          o !== this.token &&
            (i === 0 && o > this.token && (t = !0), i === 1 && (t = !0));
        };
      this.channel.addEventListener("message", n);
      try {
        return (
          this.sendAction(0),
          await DR(this.options.responseTime),
          this.channel.removeEventListener("message", n),
          (this.isApplying = !1),
          t ? (this.reApply ? this.apply() : !1) : (this.assumeLead(), !0)
        );
      } catch {
        return !1;
      }
    }
    awaitLeadership() {
      if (this.isLeader) return Promise.resolve();
      let t = !1,
        n = null;
      return new Promise((r) => {
        let o = () => {
          if (t) return;
          t = !0;
          try {
            mn.clearInterval(n);
          } catch {}
          let s = this.intervals.indexOf(n);
          (s >= 0 && this.intervals.splice(s, 1),
            this.channel.removeEventListener("message", i),
            r());
        };
        ((n = mn.setInterval(() => {
          this.apply().then(() => {
            this.isLeader && o();
          });
        }, this.options.fallbackInterval)),
          this.intervals.push(n));
        let i = (s) => {
          let { action: a } = s.data;
          a === 2 &&
            this.apply().then(() => {
              this.isLeader && o();
            });
        };
        this.channel.addEventListener("message", i);
      });
    }
    sendAction(t) {
      this.channel.postMessage({ action: t, token: this.token });
    }
    assumeLead() {
      this.isLeader = !0;
      let t = (n) => {
        let { action: r } = n.data;
        r === 0 && this.sendAction(1);
      };
      return (
        this.channel.addEventListener("message", t),
        this.listeners.push(t),
        this.sendAction(1)
      );
    }
    waitForLeadership() {
      return this.deferred
        ? this.deferred
        : ((this.deferred = this.awaitLeadership()), this.deferred);
    }
    close() {
      if (!this.isDead) {
        ((this.isDead = !0), (this.isLeader = !1), this.sendAction(2));
        try {
          (this.listeners.forEach((t) =>
            this.channel.removeEventListener("message", t),
          ),
            this.intervals.forEach((t) => mn.clearInterval(t)));
        } catch {}
      }
    }
  },
  MR = class {
    constructor(t) {
      Oe(this, "channel");
      Oe(this, "options");
      Oe(this, "elector");
      Oe(this, "token", v0());
      Oe(this, "registry", new Map());
      Oe(this, "allIdle", !1);
      Oe(this, "isLastActive", !1);
      let { channelName: n } = t;
      if (
        ((this.options = t),
        (this.channel = new FR(n)),
        this.registry.set(this.token, 1),
        t.leaderElection)
      ) {
        let r = { fallbackInterval: 2e3, responseTime: 100 };
        ((this.elector = new $R(this.channel, r)),
          this.elector.waitForLeadership());
      }
      (this.channel.addEventListener("message", (r) => {
        let { action: o, token: i, data: s } = r.data;
        switch (o) {
          case 3:
            this.registry.set(i, 2);
            break;
          case 4:
            this.registry.delete(i);
            break;
          case 5:
            this.idle(i);
            break;
          case 6:
            this.active(i);
            break;
          case 7:
            this.prompt(i);
            break;
          case 8:
            this.start(i);
            break;
          case 9:
            this.reset(i);
            break;
          case 10:
            this.activate(i);
            break;
          case 11:
            this.pause(i);
            break;
          case 12:
            this.resume(i);
            break;
          case 13:
            this.options.onMessage(s);
            break;
        }
      }),
        this.send(3));
    }
    get isLeader() {
      if (!this.elector)
        throw new Error(
          '❌ Leader election is not enabled. To Enable it set the "leaderElection" property to true.',
        );
      return this.elector.isLeader;
    }
    prompt(t = this.token) {
      this.registry.set(t, 0);
      let n = [...this.registry.values()].every((r) => r === 0);
      (t === this.token && this.send(7), n && this.options.onPrompt());
    }
    idle(t = this.token) {
      this.registry.set(t, 2);
      let n = [...this.registry.values()].every((r) => r === 2);
      (t === this.token && this.send(5),
        !this.allIdle && n && ((this.allIdle = !0), this.options.onIdle()));
    }
    active(t = this.token) {
      ((this.allIdle = !1), this.registry.set(t, 1));
      let n = [...this.registry.values()].some((r) => r === 1);
      (t === this.token && this.send(6),
        n && this.options.onActive(),
        (this.isLastActive = t === this.token));
    }
    start(t = this.token) {
      ((this.allIdle = !1),
        this.registry.set(t, 1),
        t === this.token ? this.send(8) : this.options.start(!0),
        (this.isLastActive = t === this.token));
    }
    reset(t = this.token) {
      ((this.allIdle = !1),
        this.registry.set(t, 1),
        t === this.token ? this.send(9) : this.options.reset(!0),
        (this.isLastActive = t === this.token));
    }
    activate(t = this.token) {
      ((this.allIdle = !1),
        this.registry.set(t, 1),
        t === this.token ? this.send(10) : this.options.activate(!0),
        (this.isLastActive = t === this.token));
    }
    pause(t = this.token) {
      t === this.token ? this.send(11) : this.options.pause(!0);
    }
    resume(t = this.token) {
      t === this.token ? this.send(12) : this.options.resume(!0);
    }
    message(t) {
      try {
        this.channel.postMessage({ action: 13, token: this.token, data: t });
      } catch {}
    }
    send(t) {
      try {
        this.channel.postMessage({ action: t, token: this.token });
      } catch {}
    }
    close() {
      (this.options.leaderElection && this.elector.close(),
        this.send(4),
        this.channel.close());
    }
  },
  LR = or ? document : null,
  zR = [
    "mousemove",
    "keydown",
    "wheel",
    "DOMMouseScroll",
    "mousewheel",
    "mousedown",
    "touchstart",
    "touchmove",
    "MSPointerDown",
    "MSPointerMove",
    "visibilitychange",
    "focus",
  ];
function BR(e, t) {
  let n;
  function r(...o) {
    (n && clearTimeout(n),
      (n = setTimeout(() => {
        (e(...o), (n = null));
      }, t)));
  }
  return (
    (r.cancel = function () {
      clearTimeout(n);
    }),
    r
  );
}
function Oc(e, t) {
  let n = 0;
  return function (...r) {
    let o = new Date().getTime();
    if (!(o - n < t)) return ((n = o), e(...r));
  };
}
var He = () => Date.now(),
  vo = 2147483647;
function jR({
  timeout: e = 1e3 * 60 * 20,
  promptTimeout: t = 0,
  promptBeforeIdle: n = 0,
  element: r = LR,
  events: o = zR,
  timers: i = void 0,
  immediateEvents: s = [],
  onPresenceChange: a = () => {},
  onPrompt: l = () => {},
  onIdle: c = () => {},
  onActive: u = () => {},
  onAction: d = () => {},
  onMessage: f = () => {},
  debounce: g = 0,
  throttle: h = 0,
  eventsThrottle: p = 200,
  startOnMount: v = !0,
  startManually: b = !1,
  stopOnIdle: S = !1,
  crossTab: w = !1,
  name: E = "idle-timer",
  syncTimers: R = 0,
  leaderElection: N = !1,
  disabled: I = !1,
} = {}) {
  let T = x.useRef(He()),
    k = x.useRef(He()),
    m = x.useRef(null),
    A = x.useRef(null),
    V = x.useRef(0),
    P = x.useRef(0),
    F = x.useRef(0),
    $ = x.useRef(0),
    H = x.useRef(!1),
    B = x.useRef(!1),
    j = x.useRef(!1),
    G = x.useRef(!0),
    ee = x.useRef(!1),
    ae = x.useRef(null),
    K = x.useRef(null),
    we = x.useRef(e),
    Te = x.useRef(0);
  x.useEffect(() => {
    if (
      (t &&
        console.warn(
          "⚠️ IdleTimer -- The `promptTimeout` property has been deprecated in favor of `promptBeforeIdle`. It will be removed in the next major release.",
        ),
      n && t)
    )
      throw new Error(
        "❌ Both promptTimeout and promptBeforeIdle can not be set. The promptTimeout property will be deprecated in a future version.",
      );
    if (e >= vo)
      throw new Error(
        `❌ The value for the timeout property must fit in a 32 bit signed integer, ${vo}.`,
      );
    if (t >= vo)
      throw new Error(
        `❌ The value for the promptTimeout property must fit in a 32 bit signed integer, ${vo}.`,
      );
    if (n >= vo)
      throw new Error(
        `❌ The value for the promptBeforeIdle property must fit in a 32 bit signed integer, ${vo}.`,
      );
    if (n >= e)
      throw new Error(
        `❌ The value for the promptBeforeIdle property must be less than the timeout property, ${e}.`,
      );
    if (
      (n
        ? ((we.current = e - n), (Te.current = n))
        : ((we.current = e), (Te.current = t)),
      !G.current)
    ) {
      if (b || I) return;
      (H.current && (ye.current(null, Dt), K.current && K.current.active()),
        he());
    }
  }, [e, t, n, b, I]);
  let De = x.useRef(S);
  x.useEffect(() => {
    De.current = S;
  }, [S]);
  let ft = x.useRef(s),
    ze = x.useRef(r),
    L = x.useRef([...new Set([...o, ...s]).values()]),
    M = x.useRef(I);
  x.useEffect(() => {
    ((M.current = I), !G.current && (I ? Ft() : b || he()));
  }, [I]);
  let Y = x.useRef(a);
  x.useEffect(() => {
    Y.current = a;
  }, [a]);
  let ne = x.useRef(l);
  x.useEffect(() => {
    ne.current = l;
  }, [l]);
  let ue = x.useRef(c);
  x.useEffect(() => {
    ue.current = c;
  }, [c]);
  let ye = x.useRef(u);
  x.useEffect(() => {
    ye.current = u;
  }, [u]);
  let Ae = x.useRef(d);
  x.useEffect(() => {
    Ae.current = d;
  }, [d]);
  let et = x.useRef(f);
  x.useEffect(() => {
    et.current = f;
  }, [f]);
  let nt = x.useMemo(() => {
      let X = (kt, Fs) => Ae.current(kt, Fs);
      return g > 0 ? BR(X, g) : h > 0 ? Oc(X, h) : X;
    }, [h, g]),
    dn = x.useRef();
  x.useEffect(() => {
    w &&
      R &&
      (dn.current = Oc(() => {
        K.current.active();
      }, R));
  }, [w, R]);
  let Be = () => {
      ae.current !== null && (mn.clearTimeout(ae.current), (ae.current = null));
    },
    Rt = (X, kt = !0) => {
      (Be(),
        (ae.current = mn.setTimeout(q, X || we.current)),
        kt && (A.current = He()));
    },
    C = (X) => {
      (!B.current &&
        !H.current &&
        (ne.current(X, Dt), Y.current({ type: "active", prompted: !0 }, Dt)),
        ($.current = 0),
        (F.current = He()),
        (B.current = !0),
        Rt(Te.current, !1));
    },
    _ = () => {
      (Be(),
        H.current || (ue.current(null, Dt), Y.current({ type: "idle" }, Dt)),
        (H.current = !0),
        (m.current = He()),
        De.current ? ge() : B.current && ((F.current = 0), (B.current = !1)));
    },
    O = (X) => {
      (Be(),
        (H.current || B.current) &&
          (ye.current(X, Dt), Y.current({ type: "active", prompted: !1 }, Dt)),
        (B.current = !1),
        (F.current = 0),
        (H.current = !1),
        (V.current += He() - m.current),
        (P.current += He() - m.current),
        Q(),
        Rt());
    },
    q = (X) => {
      if (!H.current) {
        nt.cancel && nt.cancel();
        let kt = He() - A.current;
        if (!(we.current + Te.current < kt) && Te.current > 0 && !B.current) {
          K.current ? K.current.prompt() : C(X);
          return;
        }
        K.current ? K.current.idle() : _();
        return;
      }
      K.current ? K.current.active() : O(X);
    },
    W = (X) => {
      if (
        (!v && !A.current && ((A.current = He()), ye.current(null, Dt)),
        nt(X, Dt),
        B.current)
      )
        return;
      if ((Be(), !H.current && ft.current.includes(X.type))) {
        q(X);
        return;
      }
      let kt = He() - A.current;
      if ((H.current && !S) || (!H.current && kt >= we.current)) {
        q(X);
        return;
      }
      ((j.current = !1),
        ($.current = 0),
        (F.current = 0),
        Rt(),
        w && R && dn.current());
    },
    U = x.useRef(W);
  x.useEffect(() => {
    let X = ee.current;
    (X && ge(), p > 0 ? (U.current = Oc(W, p)) : (U.current = W), X && Q());
  }, [p, h, g, Ae, w, R]);
  let Q = () => {
      or &&
        ze.current &&
        (ee.current ||
          (L.current.forEach((X) => {
            ze.current.addEventListener(X, U.current, {
              capture: !0,
              passive: !0,
            });
          }),
          (ee.current = !0)));
    },
    ge = (X = !1) => {
      or &&
        ze.current &&
        (ee.current || X) &&
        (L.current.forEach((kt) => {
          ze.current.removeEventListener(kt, U.current, { capture: !0 });
        }),
        (ee.current = !1));
    },
    he = x.useCallback(
      (X) =>
        M.current
          ? !1
          : (Be(),
            Q(),
            (H.current = !1),
            (B.current = !1),
            (j.current = !1),
            ($.current = 0),
            (F.current = 0),
            K.current && !X && K.current.start(),
            Rt(),
            !0),
      [ae, H, M, we, K],
    ),
    yt = x.useCallback(
      (X) =>
        M.current
          ? !1
          : (Be(),
            Q(),
            (k.current = He()),
            (V.current += He() - m.current),
            (P.current += He() - m.current),
            (V.current = 0),
            (H.current = !1),
            (B.current = !1),
            (j.current = !1),
            ($.current = 0),
            (F.current = 0),
            K.current && !X && K.current.reset(),
            b || Rt(),
            !0),
      [ae, H, we, b, M, K],
    ),
    $r = x.useCallback(
      (X) =>
        M.current
          ? !1
          : (Be(),
            Q(),
            (H.current || B.current) && O(),
            (H.current = !1),
            (B.current = !1),
            (j.current = !1),
            ($.current = 0),
            (F.current = 0),
            (k.current = He()),
            K.current && !X && K.current.activate(),
            Rt(),
            !0),
      [ae, H, B, M, we, K],
    ),
    Ft = x.useCallback(
      (X = !1) =>
        M.current || j.current
          ? !1
          : (($.current = ng()),
            (j.current = !0),
            ge(),
            Be(),
            K.current && !X && K.current.pause(),
            !0),
      [ae, M, K],
    ),
    yi = x.useCallback(
      (X = !1) =>
        M.current || !j.current
          ? !1
          : ((j.current = !1),
            B.current || Q(),
            H.current || Rt($.current),
            F.current && (F.current = He()),
            K.current && !X && K.current.resume(),
            !0),
      [ae, we, M, $, K],
    ),
    bi = x.useCallback(
      (X, kt) => (
        K.current
          ? (kt && et.current(X, Dt), K.current.message(X))
          : kt && et.current(X, Dt),
        !0
      ),
      [f],
    ),
    xi = x.useCallback(() => H.current, [H]),
    Ec = x.useCallback(() => B.current, [B]),
    Ns = x.useCallback(() => (K.current ? K.current.isLeader : null), [K]),
    Ic = x.useCallback(() => (K.current ? K.current.isLastActive : null), [K]),
    Vs = x.useCallback(() => (K.current ? K.current.token : null), [K]),
    ng = x.useCallback(() => {
      if (j.current) return $.current;
      let X = $.current ? $.current : Te.current + we.current,
        kt = A.current ? He() - A.current : 0,
        Fs = Math.floor(X - kt);
      return Fs < 0 ? 0 : Math.abs(Fs);
    }, [we, Te, B, $, A]),
    rg = x.useCallback(() => Math.round(He() - k.current), [k]),
    og = x.useCallback(() => Math.round(He() - T.current), [T]),
    pw = x.useCallback(() => (m.current ? new Date(m.current) : null), [m]),
    mw = x.useCallback(() => (A.current ? new Date(A.current) : null), [A]),
    ig = x.useCallback(
      () =>
        H.current
          ? Math.round(He() - m.current + V.current)
          : Math.round(V.current),
      [m, V],
    ),
    sg = x.useCallback(
      () =>
        H.current
          ? Math.round(He() - m.current + P.current)
          : Math.round(P.current),
      [m, P],
    ),
    vw = x.useCallback(() => {
      let X = Math.round(rg() - ig());
      return X >= 0 ? X : 0;
    }, [m, V]),
    yw = x.useCallback(() => {
      let X = Math.round(og() - sg());
      return X >= 0 ? X : 0;
    }, [m, V]);
  (x.useEffect(() => {
    if (g > 0 && h > 0)
      throw new Error(
        "❌ onAction can either be throttled or debounced, not both.",
      );
    i && NR(i);
    let X = () => {
      (K.current && K.current.close(), nt.cancel && nt.cancel(), Be(), ge(!0));
    };
    return (
      or && window.addEventListener("beforeunload", X),
      () => {
        (or && window.removeEventListener("beforeunload", X),
          K.current && K.current.close(),
          nt.cancel && nt.cancel(),
          Be(),
          ge(!0));
      }
    );
  }, []),
    x.useEffect(() => {
      (K.current && K.current.close(),
        w
          ? (K.current = new MR({
              channelName: E,
              leaderElection: N,
              onPrompt: () => {
                C();
              },
              onIdle: () => {
                _();
              },
              onActive: () => {
                O();
              },
              onMessage: (X) => {
                et.current(X, Dt);
              },
              start: he,
              reset: yt,
              activate: $r,
              pause: Ft,
              resume: yi,
            }))
          : (K.current = null));
    }, [w, E, N, ne, ue, ye, et, he, yt, Ft, yi]),
    x.useEffect(() => {
      (G.current || (Be(), ge(!0)), !(b || I) && (v ? he() : Q()));
    }, [b, v, I, G]),
    x.useEffect(() => {
      if (!G.current) {
        let X = [...new Set([...o, ...s]).values()];
        if ((ge(), (L.current = X), (ze.current = r), (ft.current = s), b || I))
          return;
        v ? he() : Q();
      }
    }, [r, JSON.stringify(o), JSON.stringify(s), G, I, b, v]),
    x.useEffect(() => {
      G.current && (G.current = !1);
    }, [G]));
  let Dt = {
    message: bi,
    start: he,
    reset: yt,
    activate: $r,
    pause: Ft,
    resume: yi,
    isIdle: xi,
    isPrompted: Ec,
    isLeader: Ns,
    isLastActiveTab: Ic,
    getTabId: Vs,
    getRemainingTime: ng,
    getElapsedTime: rg,
    getTotalElapsedTime: og,
    getLastIdleTime: pw,
    getLastActiveTime: mw,
    getIdleTime: ig,
    getTotalIdleTime: sg,
    getActiveTime: vw,
    getTotalActiveTime: yw,
    setOnPresenceChange: (X) => {
      ((a = X), (Y.current = X));
    },
    setOnPrompt: (X) => {
      ((l = X), (ne.current = X));
    },
    setOnIdle: (X) => {
      ((c = X), (ue.current = X));
    },
    setOnActive: (X) => {
      ((u = X), (ye.current = X));
    },
    setOnAction: (X) => {
      ((d = X), (Ae.current = X));
    },
    setOnMessage: (X) => {
      ((f = X), (et.current = X));
    },
  };
  return Dt;
}
var UR = x.createContext(null);
UR.Consumer;
function WR(e = 30) {
  const t = async () => {
    try {
      (localStorage.clear(),
        jo || (await pl({ global: !0 })),
        window.location.replace("/login"));
    } catch (n) {
      (console.error("Idle logout error:", n),
        localStorage.clear(),
        window.location.replace("/login"));
    }
  };
  jR({
    timeout: e * 60 * 1e3,
    onIdle: t,
    debounce: 500,
    events: ["mousemove", "keydown", "scroll", "touchstart"],
  });
}
const HR = () => {
    x.useEffect(() => {
      const e = window.matchMedia("(prefers-color-scheme: dark)"),
        t = document.querySelector("#fav-light"),
        n = document.querySelector("#fav-dark"),
        r = () => {
          !t ||
            !n ||
            (e.matches
              ? (t.remove(), document.head.append(n))
              : (document.head.append(t), n.remove()));
        };
      return (
        e.addEventListener("change", r),
        r(),
        () => e.removeEventListener("change", r)
      );
    }, []);
  },
  GR = (...e) =>
    e
      .filter(Boolean)
      .map((t) => t.trim())
      .join(" ");
function KR(e, t) {
  return `${e} returned \`undefined\`. Seems you forgot to wrap component within ${t}`;
}
function qR(e = {}) {
  const {
      name: t,
      strict: n = !0,
      hookName: r = "useContext",
      providerName: o = "Provider",
      errorMessage: i,
      defaultValue: s,
    } = e,
    a = x.createContext(s);
  a.displayName = t;
  function l() {
    var u;
    const c = x.useContext(a);
    if (!c && n) {
      const d = new Error(i ?? KR(r, o));
      throw (
        (d.name = "ContextError"),
        (u = Error.captureStackTrace) == null || u.call(Error, d, l),
        d
      );
    }
    return c;
  }
  return [a.Provider, l, a];
}
function YR(e) {
  var t = Object.create(null);
  return function (n) {
    return (t[n] === void 0 && (t[n] = e(n)), t[n]);
  };
}
function XR(e) {
  if (e.sheet) return e.sheet;
  for (var t = 0; t < document.styleSheets.length; t++)
    if (document.styleSheets[t].ownerNode === e) return document.styleSheets[t];
}
function JR(e) {
  var t = document.createElement("style");
  return (
    t.setAttribute("data-emotion", e.key),
    e.nonce !== void 0 && t.setAttribute("nonce", e.nonce),
    t.appendChild(document.createTextNode("")),
    t.setAttribute("data-s", ""),
    t
  );
}
var QR = (function () {
    function e(n) {
      var r = this;
      ((this._insertTag = function (o) {
        var i;
        (r.tags.length === 0
          ? r.insertionPoint
            ? (i = r.insertionPoint.nextSibling)
            : r.prepend
              ? (i = r.container.firstChild)
              : (i = r.before)
          : (i = r.tags[r.tags.length - 1].nextSibling),
          r.container.insertBefore(o, i),
          r.tags.push(o));
      }),
        (this.isSpeedy = n.speedy === void 0 ? !0 : n.speedy),
        (this.tags = []),
        (this.ctr = 0),
        (this.nonce = n.nonce),
        (this.key = n.key),
        (this.container = n.container),
        (this.prepend = n.prepend),
        (this.insertionPoint = n.insertionPoint),
        (this.before = null));
    }
    var t = e.prototype;
    return (
      (t.hydrate = function (r) {
        r.forEach(this._insertTag);
      }),
      (t.insert = function (r) {
        this.ctr % (this.isSpeedy ? 65e3 : 1) === 0 &&
          this._insertTag(JR(this));
        var o = this.tags[this.tags.length - 1];
        if (this.isSpeedy) {
          var i = XR(o);
          try {
            i.insertRule(r, i.cssRules.length);
          } catch {}
        } else o.appendChild(document.createTextNode(r));
        this.ctr++;
      }),
      (t.flush = function () {
        (this.tags.forEach(function (r) {
          var o;
          return (o = r.parentNode) == null ? void 0 : o.removeChild(r);
        }),
          (this.tags = []),
          (this.ctr = 0));
      }),
      e
    );
  })(),
  xt = "-ms-",
  La = "-moz-",
  me = "-webkit-",
  y0 = "comm",
  Md = "rule",
  Ld = "decl",
  ZR = "@import",
  b0 = "@keyframes",
  ek = "@layer",
  tk = Math.abs,
  vl = String.fromCharCode,
  nk = Object.assign;
function rk(e, t) {
  return mt(e, 0) ^ 45
    ? (((((((t << 2) ^ mt(e, 0)) << 2) ^ mt(e, 1)) << 2) ^ mt(e, 2)) << 2) ^
        mt(e, 3)
    : 0;
}
function x0(e) {
  return e.trim();
}
function ok(e, t) {
  return (e = t.exec(e)) ? e[0] : e;
}
function ve(e, t, n) {
  return e.replace(t, n);
}
function Su(e, t) {
  return e.indexOf(t);
}
function mt(e, t) {
  return e.charCodeAt(t) | 0;
}
function ts(e, t, n) {
  return e.slice(t, n);
}
function _n(e) {
  return e.length;
}
function zd(e) {
  return e.length;
}
function Bs(e, t) {
  return (t.push(e), e);
}
function ik(e, t) {
  return e.map(t).join("");
}
var yl = 1,
  Go = 1,
  S0 = 0,
  Vt = 0,
  Xe = 0,
  di = "";
function bl(e, t, n, r, o, i, s) {
  return {
    value: e,
    root: t,
    parent: n,
    type: r,
    props: o,
    children: i,
    line: yl,
    column: Go,
    length: s,
    return: "",
  };
}
function Ci(e, t) {
  return nk(bl("", null, null, "", null, null, 0), e, { length: -e.length }, t);
}
function sk() {
  return Xe;
}
function ak() {
  return (
    (Xe = Vt > 0 ? mt(di, --Vt) : 0),
    Go--,
    Xe === 10 && ((Go = 1), yl--),
    Xe
  );
}
function Wt() {
  return (
    (Xe = Vt < S0 ? mt(di, Vt++) : 0),
    Go++,
    Xe === 10 && ((Go = 1), yl++),
    Xe
  );
}
function $n() {
  return mt(di, Vt);
}
function ua() {
  return Vt;
}
function Ss(e, t) {
  return ts(di, e, t);
}
function ns(e) {
  switch (e) {
    case 0:
    case 9:
    case 10:
    case 13:
    case 32:
      return 5;
    case 33:
    case 43:
    case 44:
    case 47:
    case 62:
    case 64:
    case 126:
    case 59:
    case 123:
    case 125:
      return 4;
    case 58:
      return 3;
    case 34:
    case 39:
    case 40:
    case 91:
      return 2;
    case 41:
    case 93:
      return 1;
  }
  return 0;
}
function w0(e) {
  return ((yl = Go = 1), (S0 = _n((di = e))), (Vt = 0), []);
}
function C0(e) {
  return ((di = ""), e);
}
function da(e) {
  return x0(Ss(Vt - 1, wu(e === 91 ? e + 2 : e === 40 ? e + 1 : e)));
}
function lk(e) {
  for (; (Xe = $n()) && Xe < 33; ) Wt();
  return ns(e) > 2 || ns(Xe) > 3 ? "" : " ";
}
function ck(e, t) {
  for (
    ;
    --t &&
    Wt() &&
    !(Xe < 48 || Xe > 102 || (Xe > 57 && Xe < 65) || (Xe > 70 && Xe < 97));

  );
  return Ss(e, ua() + (t < 6 && $n() == 32 && Wt() == 32));
}
function wu(e) {
  for (; Wt(); )
    switch (Xe) {
      case e:
        return Vt;
      case 34:
      case 39:
        e !== 34 && e !== 39 && wu(Xe);
        break;
      case 40:
        e === 41 && wu(e);
        break;
      case 92:
        Wt();
        break;
    }
  return Vt;
}
function uk(e, t) {
  for (; Wt() && e + Xe !== 57; ) if (e + Xe === 84 && $n() === 47) break;
  return "/*" + Ss(t, Vt - 1) + "*" + vl(e === 47 ? e : Wt());
}
function dk(e) {
  for (; !ns($n()); ) Wt();
  return Ss(e, Vt);
}
function fk(e) {
  return C0(fa("", null, null, null, [""], (e = w0(e)), 0, [0], e));
}
function fa(e, t, n, r, o, i, s, a, l) {
  for (
    var c = 0,
      u = 0,
      d = s,
      f = 0,
      g = 0,
      h = 0,
      p = 1,
      v = 1,
      b = 1,
      S = 0,
      w = "",
      E = o,
      R = i,
      N = r,
      I = w;
    v;

  )
    switch (((h = S), (S = Wt()))) {
      case 40:
        if (h != 108 && mt(I, d - 1) == 58) {
          Su((I += ve(da(S), "&", "&\f")), "&\f") != -1 && (b = -1);
          break;
        }
      case 34:
      case 39:
      case 91:
        I += da(S);
        break;
      case 9:
      case 10:
      case 13:
      case 32:
        I += lk(h);
        break;
      case 92:
        I += ck(ua() - 1, 7);
        continue;
      case 47:
        switch ($n()) {
          case 42:
          case 47:
            Bs(gk(uk(Wt(), ua()), t, n), l);
            break;
          default:
            I += "/";
        }
        break;
      case 123 * p:
        a[c++] = _n(I) * b;
      case 125 * p:
      case 59:
      case 0:
        switch (S) {
          case 0:
          case 125:
            v = 0;
          case 59 + u:
            (b == -1 && (I = ve(I, /\f/g, "")),
              g > 0 &&
                _n(I) - d &&
                Bs(
                  g > 32
                    ? Eh(I + ";", r, n, d - 1)
                    : Eh(ve(I, " ", "") + ";", r, n, d - 2),
                  l,
                ));
            break;
          case 59:
            I += ";";
          default:
            if (
              (Bs((N = Ch(I, t, n, c, u, o, a, w, (E = []), (R = []), d)), i),
              S === 123)
            )
              if (u === 0) fa(I, t, N, N, E, i, d, a, R);
              else
                switch (f === 99 && mt(I, 3) === 110 ? 100 : f) {
                  case 100:
                  case 108:
                  case 109:
                  case 115:
                    fa(
                      e,
                      N,
                      N,
                      r && Bs(Ch(e, N, N, 0, 0, o, a, w, o, (E = []), d), R),
                      o,
                      R,
                      d,
                      a,
                      r ? E : R,
                    );
                    break;
                  default:
                    fa(I, N, N, N, [""], R, 0, a, R);
                }
        }
        ((c = u = g = 0), (p = b = 1), (w = I = ""), (d = s));
        break;
      case 58:
        ((d = 1 + _n(I)), (g = h));
      default:
        if (p < 1) {
          if (S == 123) --p;
          else if (S == 125 && p++ == 0 && ak() == 125) continue;
        }
        switch (((I += vl(S)), S * p)) {
          case 38:
            b = u > 0 ? 1 : ((I += "\f"), -1);
            break;
          case 44:
            ((a[c++] = (_n(I) - 1) * b), (b = 1));
            break;
          case 64:
            ($n() === 45 && (I += da(Wt())),
              (f = $n()),
              (u = d = _n((w = I += dk(ua())))),
              S++);
            break;
          case 45:
            h === 45 && _n(I) == 2 && (p = 0);
        }
    }
  return i;
}
function Ch(e, t, n, r, o, i, s, a, l, c, u) {
  for (
    var d = o - 1, f = o === 0 ? i : [""], g = zd(f), h = 0, p = 0, v = 0;
    h < r;
    ++h
  )
    for (var b = 0, S = ts(e, d + 1, (d = tk((p = s[h])))), w = e; b < g; ++b)
      (w = x0(p > 0 ? f[b] + " " + S : ve(S, /&\f/g, f[b]))) && (l[v++] = w);
  return bl(e, t, n, o === 0 ? Md : a, l, c, u);
}
function gk(e, t, n) {
  return bl(e, t, n, y0, vl(sk()), ts(e, 2, -2), 0);
}
function Eh(e, t, n, r) {
  return bl(e, t, n, Ld, ts(e, 0, r), ts(e, r + 1, -1), r);
}
function Mo(e, t) {
  for (var n = "", r = zd(e), o = 0; o < r; o++) n += t(e[o], o, e, t) || "";
  return n;
}
function hk(e, t, n, r) {
  switch (e.type) {
    case ek:
      if (e.children.length) break;
    case ZR:
    case Ld:
      return (e.return = e.return || e.value);
    case y0:
      return "";
    case b0:
      return (e.return = e.value + "{" + Mo(e.children, r) + "}");
    case Md:
      e.value = e.props.join(",");
  }
  return _n((n = Mo(e.children, r)))
    ? (e.return = e.value + "{" + n + "}")
    : "";
}
function pk(e) {
  var t = zd(e);
  return function (n, r, o, i) {
    for (var s = "", a = 0; a < t; a++) s += e[a](n, r, o, i) || "";
    return s;
  };
}
function mk(e) {
  return function (t) {
    t.root || ((t = t.return) && e(t));
  };
}
var vk = function (t, n, r) {
    for (
      var o = 0, i = 0;
      (o = i), (i = $n()), o === 38 && i === 12 && (n[r] = 1), !ns(i);

    )
      Wt();
    return Ss(t, Vt);
  },
  yk = function (t, n) {
    var r = -1,
      o = 44;
    do
      switch (ns(o)) {
        case 0:
          (o === 38 && $n() === 12 && (n[r] = 1), (t[r] += vk(Vt - 1, n, r)));
          break;
        case 2:
          t[r] += da(o);
          break;
        case 4:
          if (o === 44) {
            ((t[++r] = $n() === 58 ? "&\f" : ""), (n[r] = t[r].length));
            break;
          }
        default:
          t[r] += vl(o);
      }
    while ((o = Wt()));
    return t;
  },
  bk = function (t, n) {
    return C0(yk(w0(t), n));
  },
  Ih = new WeakMap(),
  xk = function (t) {
    if (!(t.type !== "rule" || !t.parent || t.length < 1)) {
      for (
        var n = t.value,
          r = t.parent,
          o = t.column === r.column && t.line === r.line;
        r.type !== "rule";

      )
        if (((r = r.parent), !r)) return;
      if (
        !(t.props.length === 1 && n.charCodeAt(0) !== 58 && !Ih.get(r)) &&
        !o
      ) {
        Ih.set(t, !0);
        for (
          var i = [], s = bk(n, i), a = r.props, l = 0, c = 0;
          l < s.length;
          l++
        )
          for (var u = 0; u < a.length; u++, c++)
            t.props[c] = i[l] ? s[l].replace(/&\f/g, a[u]) : a[u] + " " + s[l];
      }
    }
  },
  Sk = function (t) {
    if (t.type === "decl") {
      var n = t.value;
      n.charCodeAt(0) === 108 &&
        n.charCodeAt(2) === 98 &&
        ((t.return = ""), (t.value = ""));
    }
  };
function E0(e, t) {
  switch (rk(e, t)) {
    case 5103:
      return me + "print-" + e + e;
    case 5737:
    case 4201:
    case 3177:
    case 3433:
    case 1641:
    case 4457:
    case 2921:
    case 5572:
    case 6356:
    case 5844:
    case 3191:
    case 6645:
    case 3005:
    case 6391:
    case 5879:
    case 5623:
    case 6135:
    case 4599:
    case 4855:
    case 4215:
    case 6389:
    case 5109:
    case 5365:
    case 5621:
    case 3829:
      return me + e + e;
    case 5349:
    case 4246:
    case 4810:
    case 6968:
    case 2756:
      return me + e + La + e + xt + e + e;
    case 6828:
    case 4268:
      return me + e + xt + e + e;
    case 6165:
      return me + e + xt + "flex-" + e + e;
    case 5187:
      return (
        me + e + ve(e, /(\w+).+(:[^]+)/, me + "box-$1$2" + xt + "flex-$1$2") + e
      );
    case 5443:
      return me + e + xt + "flex-item-" + ve(e, /flex-|-self/, "") + e;
    case 4675:
      return (
        me +
        e +
        xt +
        "flex-line-pack" +
        ve(e, /align-content|flex-|-self/, "") +
        e
      );
    case 5548:
      return me + e + xt + ve(e, "shrink", "negative") + e;
    case 5292:
      return me + e + xt + ve(e, "basis", "preferred-size") + e;
    case 6060:
      return (
        me +
        "box-" +
        ve(e, "-grow", "") +
        me +
        e +
        xt +
        ve(e, "grow", "positive") +
        e
      );
    case 4554:
      return me + ve(e, /([^-])(transform)/g, "$1" + me + "$2") + e;
    case 6187:
      return (
        ve(
          ve(ve(e, /(zoom-|grab)/, me + "$1"), /(image-set)/, me + "$1"),
          e,
          "",
        ) + e
      );
    case 5495:
    case 3959:
      return ve(e, /(image-set\([^]*)/, me + "$1$`$1");
    case 4968:
      return (
        ve(
          ve(e, /(.+:)(flex-)?(.*)/, me + "box-pack:$3" + xt + "flex-pack:$3"),
          /s.+-b[^;]+/,
          "justify",
        ) +
        me +
        e +
        e
      );
    case 4095:
    case 3583:
    case 4068:
    case 2532:
      return ve(e, /(.+)-inline(.+)/, me + "$1$2") + e;
    case 8116:
    case 7059:
    case 5753:
    case 5535:
    case 5445:
    case 5701:
    case 4933:
    case 4677:
    case 5533:
    case 5789:
    case 5021:
    case 4765:
      if (_n(e) - 1 - t > 6)
        switch (mt(e, t + 1)) {
          case 109:
            if (mt(e, t + 4) !== 45) break;
          case 102:
            return (
              ve(
                e,
                /(.+:)(.+)-([^]+)/,
                "$1" +
                  me +
                  "$2-$3$1" +
                  La +
                  (mt(e, t + 3) == 108 ? "$3" : "$2-$3"),
              ) + e
            );
          case 115:
            return ~Su(e, "stretch")
              ? E0(ve(e, "stretch", "fill-available"), t) + e
              : e;
        }
      break;
    case 4949:
      if (mt(e, t + 1) !== 115) break;
    case 6444:
      switch (mt(e, _n(e) - 3 - (~Su(e, "!important") && 10))) {
        case 107:
          return ve(e, ":", ":" + me) + e;
        case 101:
          return (
            ve(
              e,
              /(.+:)([^;!]+)(;|!.+)?/,
              "$1" +
                me +
                (mt(e, 14) === 45 ? "inline-" : "") +
                "box$3$1" +
                me +
                "$2$3$1" +
                xt +
                "$2box$3",
            ) + e
          );
      }
      break;
    case 5936:
      switch (mt(e, t + 11)) {
        case 114:
          return me + e + xt + ve(e, /[svh]\w+-[tblr]{2}/, "tb") + e;
        case 108:
          return me + e + xt + ve(e, /[svh]\w+-[tblr]{2}/, "tb-rl") + e;
        case 45:
          return me + e + xt + ve(e, /[svh]\w+-[tblr]{2}/, "lr") + e;
      }
      return me + e + xt + e + e;
  }
  return e;
}
var wk = function (t, n, r, o) {
    if (t.length > -1 && !t.return)
      switch (t.type) {
        case Ld:
          t.return = E0(t.value, t.length);
          break;
        case b0:
          return Mo([Ci(t, { value: ve(t.value, "@", "@" + me) })], o);
        case Md:
          if (t.length)
            return ik(t.props, function (i) {
              switch (ok(i, /(::plac\w+|:read-\w+)/)) {
                case ":read-only":
                case ":read-write":
                  return Mo(
                    [Ci(t, { props: [ve(i, /:(read-\w+)/, ":" + La + "$1")] })],
                    o,
                  );
                case "::placeholder":
                  return Mo(
                    [
                      Ci(t, {
                        props: [ve(i, /:(plac\w+)/, ":" + me + "input-$1")],
                      }),
                      Ci(t, { props: [ve(i, /:(plac\w+)/, ":" + La + "$1")] }),
                      Ci(t, { props: [ve(i, /:(plac\w+)/, xt + "input-$1")] }),
                    ],
                    o,
                  );
              }
              return "";
            });
      }
  },
  Ck = [wk],
  Ek = function (t) {
    var n = t.key;
    if (n === "css") {
      var r = document.querySelectorAll("style[data-emotion]:not([data-s])");
      Array.prototype.forEach.call(r, function (p) {
        var v = p.getAttribute("data-emotion");
        v.indexOf(" ") !== -1 &&
          (document.head.appendChild(p), p.setAttribute("data-s", ""));
      });
    }
    var o = t.stylisPlugins || Ck,
      i = {},
      s,
      a = [];
    ((s = t.container || document.head),
      Array.prototype.forEach.call(
        document.querySelectorAll('style[data-emotion^="' + n + ' "]'),
        function (p) {
          for (
            var v = p.getAttribute("data-emotion").split(" "), b = 1;
            b < v.length;
            b++
          )
            i[v[b]] = !0;
          a.push(p);
        },
      ));
    var l,
      c = [xk, Sk];
    {
      var u,
        d = [
          hk,
          mk(function (p) {
            u.insert(p);
          }),
        ],
        f = pk(c.concat(o, d)),
        g = function (v) {
          return Mo(fk(v), f);
        };
      l = function (v, b, S, w) {
        ((u = S),
          g(v ? v + "{" + b.styles + "}" : b.styles),
          w && (h.inserted[b.name] = !0));
      };
    }
    var h = {
      key: n,
      sheet: new QR({
        key: n,
        container: s,
        nonce: t.nonce,
        speedy: t.speedy,
        prepend: t.prepend,
        insertionPoint: t.insertionPoint,
      }),
      nonce: t.nonce,
      inserted: i,
      registered: {},
      insert: l,
    };
    return (h.sheet.hydrate(a), h);
  };
function Cu() {
  return (
    (Cu = Object.assign
      ? Object.assign.bind()
      : function (e) {
          for (var t = 1; t < arguments.length; t++) {
            var n = arguments[t];
            for (var r in n) ({}).hasOwnProperty.call(n, r) && (e[r] = n[r]);
          }
          return e;
        }),
    Cu.apply(null, arguments)
  );
}
var I0 = { exports: {} },
  xe = {};
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var dt = typeof Symbol == "function" && Symbol.for,
  Bd = dt ? Symbol.for("react.element") : 60103,
  jd = dt ? Symbol.for("react.portal") : 60106,
  xl = dt ? Symbol.for("react.fragment") : 60107,
  Sl = dt ? Symbol.for("react.strict_mode") : 60108,
  wl = dt ? Symbol.for("react.profiler") : 60114,
  Cl = dt ? Symbol.for("react.provider") : 60109,
  El = dt ? Symbol.for("react.context") : 60110,
  Ud = dt ? Symbol.for("react.async_mode") : 60111,
  Il = dt ? Symbol.for("react.concurrent_mode") : 60111,
  Rl = dt ? Symbol.for("react.forward_ref") : 60112,
  kl = dt ? Symbol.for("react.suspense") : 60113,
  Ik = dt ? Symbol.for("react.suspense_list") : 60120,
  Pl = dt ? Symbol.for("react.memo") : 60115,
  Tl = dt ? Symbol.for("react.lazy") : 60116,
  Rk = dt ? Symbol.for("react.block") : 60121,
  kk = dt ? Symbol.for("react.fundamental") : 60117,
  Pk = dt ? Symbol.for("react.responder") : 60118,
  Tk = dt ? Symbol.for("react.scope") : 60119;
function Yt(e) {
  if (typeof e == "object" && e !== null) {
    var t = e.$$typeof;
    switch (t) {
      case Bd:
        switch (((e = e.type), e)) {
          case Ud:
          case Il:
          case xl:
          case wl:
          case Sl:
          case kl:
            return e;
          default:
            switch (((e = e && e.$$typeof), e)) {
              case El:
              case Rl:
              case Tl:
              case Pl:
              case Cl:
                return e;
              default:
                return t;
            }
        }
      case jd:
        return t;
    }
  }
}
function R0(e) {
  return Yt(e) === Il;
}
xe.AsyncMode = Ud;
xe.ConcurrentMode = Il;
xe.ContextConsumer = El;
xe.ContextProvider = Cl;
xe.Element = Bd;
xe.ForwardRef = Rl;
xe.Fragment = xl;
xe.Lazy = Tl;
xe.Memo = Pl;
xe.Portal = jd;
xe.Profiler = wl;
xe.StrictMode = Sl;
xe.Suspense = kl;
xe.isAsyncMode = function (e) {
  return R0(e) || Yt(e) === Ud;
};
xe.isConcurrentMode = R0;
xe.isContextConsumer = function (e) {
  return Yt(e) === El;
};
xe.isContextProvider = function (e) {
  return Yt(e) === Cl;
};
xe.isElement = function (e) {
  return typeof e == "object" && e !== null && e.$$typeof === Bd;
};
xe.isForwardRef = function (e) {
  return Yt(e) === Rl;
};
xe.isFragment = function (e) {
  return Yt(e) === xl;
};
xe.isLazy = function (e) {
  return Yt(e) === Tl;
};
xe.isMemo = function (e) {
  return Yt(e) === Pl;
};
xe.isPortal = function (e) {
  return Yt(e) === jd;
};
xe.isProfiler = function (e) {
  return Yt(e) === wl;
};
xe.isStrictMode = function (e) {
  return Yt(e) === Sl;
};
xe.isSuspense = function (e) {
  return Yt(e) === kl;
};
xe.isValidElementType = function (e) {
  return (
    typeof e == "string" ||
    typeof e == "function" ||
    e === xl ||
    e === Il ||
    e === wl ||
    e === Sl ||
    e === kl ||
    e === Ik ||
    (typeof e == "object" &&
      e !== null &&
      (e.$$typeof === Tl ||
        e.$$typeof === Pl ||
        e.$$typeof === Cl ||
        e.$$typeof === El ||
        e.$$typeof === Rl ||
        e.$$typeof === kk ||
        e.$$typeof === Pk ||
        e.$$typeof === Tk ||
        e.$$typeof === Rk))
  );
};
xe.typeOf = Yt;
I0.exports = xe;
var Ok = I0.exports,
  k0 = Ok,
  _k = {
    $$typeof: !0,
    render: !0,
    defaultProps: !0,
    displayName: !0,
    propTypes: !0,
  },
  Ak = {
    $$typeof: !0,
    compare: !0,
    defaultProps: !0,
    displayName: !0,
    propTypes: !0,
    type: !0,
  },
  P0 = {};
P0[k0.ForwardRef] = _k;
P0[k0.Memo] = Ak;
var Nk = !0;
function Vk(e, t, n) {
  var r = "";
  return (
    n.split(" ").forEach(function (o) {
      e[o] !== void 0 ? t.push(e[o] + ";") : o && (r += o + " ");
    }),
    r
  );
}
var T0 = function (t, n, r) {
    var o = t.key + "-" + n.name;
    (r === !1 || Nk === !1) &&
      t.registered[o] === void 0 &&
      (t.registered[o] = n.styles);
  },
  O0 = function (t, n, r) {
    T0(t, n, r);
    var o = t.key + "-" + n.name;
    if (t.inserted[n.name] === void 0) {
      var i = n;
      do (t.insert(n === i ? "." + o : "", i, t.sheet, !0), (i = i.next));
      while (i !== void 0);
    }
  };
function Fk(e) {
  for (var t = 0, n, r = 0, o = e.length; o >= 4; ++r, o -= 4)
    ((n =
      (e.charCodeAt(r) & 255) |
      ((e.charCodeAt(++r) & 255) << 8) |
      ((e.charCodeAt(++r) & 255) << 16) |
      ((e.charCodeAt(++r) & 255) << 24)),
      (n = (n & 65535) * 1540483477 + (((n >>> 16) * 59797) << 16)),
      (n ^= n >>> 24),
      (t =
        ((n & 65535) * 1540483477 + (((n >>> 16) * 59797) << 16)) ^
        ((t & 65535) * 1540483477 + (((t >>> 16) * 59797) << 16))));
  switch (o) {
    case 3:
      t ^= (e.charCodeAt(r + 2) & 255) << 16;
    case 2:
      t ^= (e.charCodeAt(r + 1) & 255) << 8;
    case 1:
      ((t ^= e.charCodeAt(r) & 255),
        (t = (t & 65535) * 1540483477 + (((t >>> 16) * 59797) << 16)));
  }
  return (
    (t ^= t >>> 13),
    (t = (t & 65535) * 1540483477 + (((t >>> 16) * 59797) << 16)),
    ((t ^ (t >>> 15)) >>> 0).toString(36)
  );
}
var Dk = {
    animationIterationCount: 1,
    aspectRatio: 1,
    borderImageOutset: 1,
    borderImageSlice: 1,
    borderImageWidth: 1,
    boxFlex: 1,
    boxFlexGroup: 1,
    boxOrdinalGroup: 1,
    columnCount: 1,
    columns: 1,
    flex: 1,
    flexGrow: 1,
    flexPositive: 1,
    flexShrink: 1,
    flexNegative: 1,
    flexOrder: 1,
    gridRow: 1,
    gridRowEnd: 1,
    gridRowSpan: 1,
    gridRowStart: 1,
    gridColumn: 1,
    gridColumnEnd: 1,
    gridColumnSpan: 1,
    gridColumnStart: 1,
    msGridRow: 1,
    msGridRowSpan: 1,
    msGridColumn: 1,
    msGridColumnSpan: 1,
    fontWeight: 1,
    lineHeight: 1,
    opacity: 1,
    order: 1,
    orphans: 1,
    scale: 1,
    tabSize: 1,
    widows: 1,
    zIndex: 1,
    zoom: 1,
    WebkitLineClamp: 1,
    fillOpacity: 1,
    floodOpacity: 1,
    stopOpacity: 1,
    strokeDasharray: 1,
    strokeDashoffset: 1,
    strokeMiterlimit: 1,
    strokeOpacity: 1,
    strokeWidth: 1,
  },
  $k = /[A-Z]|^ms/g,
  Mk = /_EMO_([^_]+?)_([^]*?)_EMO_/g,
  _0 = function (t) {
    return t.charCodeAt(1) === 45;
  },
  Rh = function (t) {
    return t != null && typeof t != "boolean";
  },
  _c = YR(function (e) {
    return _0(e) ? e : e.replace($k, "-$&").toLowerCase();
  }),
  kh = function (t, n) {
    switch (t) {
      case "animation":
      case "animationName":
        if (typeof n == "string")
          return n.replace(Mk, function (r, o, i) {
            return ((An = { name: o, styles: i, next: An }), o);
          });
    }
    return Dk[t] !== 1 && !_0(t) && typeof n == "number" && n !== 0
      ? n + "px"
      : n;
  };
function rs(e, t, n) {
  if (n == null) return "";
  var r = n;
  if (r.__emotion_styles !== void 0) return r;
  switch (typeof n) {
    case "boolean":
      return "";
    case "object": {
      var o = n;
      if (o.anim === 1)
        return ((An = { name: o.name, styles: o.styles, next: An }), o.name);
      var i = n;
      if (i.styles !== void 0) {
        var s = i.next;
        if (s !== void 0)
          for (; s !== void 0; )
            ((An = { name: s.name, styles: s.styles, next: An }), (s = s.next));
        var a = i.styles + ";";
        return a;
      }
      return Lk(e, t, n);
    }
    case "function": {
      if (e !== void 0) {
        var l = An,
          c = n(e);
        return ((An = l), rs(e, t, c));
      }
      break;
    }
  }
  var u = n;
  return u;
}
function Lk(e, t, n) {
  var r = "";
  if (Array.isArray(n))
    for (var o = 0; o < n.length; o++) r += rs(e, t, n[o]) + ";";
  else
    for (var i in n) {
      var s = n[i];
      if (typeof s != "object") {
        var a = s;
        Rh(a) && (r += _c(i) + ":" + kh(i, a) + ";");
      } else if (Array.isArray(s) && typeof s[0] == "string" && t == null)
        for (var l = 0; l < s.length; l++)
          Rh(s[l]) && (r += _c(i) + ":" + kh(i, s[l]) + ";");
      else {
        var c = rs(e, t, s);
        switch (i) {
          case "animation":
          case "animationName": {
            r += _c(i) + ":" + c + ";";
            break;
          }
          default:
            r += i + "{" + c + "}";
        }
      }
    }
  return r;
}
var Ph = /label:\s*([^\s;{]+)\s*(;|$)/g,
  An;
function A0(e, t, n) {
  if (
    e.length === 1 &&
    typeof e[0] == "object" &&
    e[0] !== null &&
    e[0].styles !== void 0
  )
    return e[0];
  var r = !0,
    o = "";
  An = void 0;
  var i = e[0];
  if (i == null || i.raw === void 0) ((r = !1), (o += rs(n, t, i)));
  else {
    var s = i;
    o += s[0];
  }
  for (var a = 1; a < e.length; a++)
    if (((o += rs(n, t, e[a])), r)) {
      var l = i;
      o += l[a];
    }
  Ph.lastIndex = 0;
  for (var c = "", u; (u = Ph.exec(o)) !== null; ) c += "-" + u[1];
  var d = Fk(o) + c;
  return { name: d, styles: o, next: An };
}
var zk = function (t) {
    return t();
  },
  N0 = _a.useInsertionEffect ? _a.useInsertionEffect : !1,
  Bk = N0 || zk,
  Th = N0 || x.useLayoutEffect,
  V0 = x.createContext(typeof HTMLElement < "u" ? Ek({ key: "css" }) : null);
V0.Provider;
var F0 = function (t) {
    return x.forwardRef(function (n, r) {
      var o = x.useContext(V0);
      return t(n, o, r);
    });
  },
  D0 = x.createContext({}),
  Wd = {}.hasOwnProperty,
  Eu = "__EMOTION_TYPE_PLEASE_DO_NOT_USE__",
  jk = function (t, n) {
    var r = {};
    for (var o in n) Wd.call(n, o) && (r[o] = n[o]);
    return ((r[Eu] = t), r);
  },
  Uk = function (t) {
    var n = t.cache,
      r = t.serialized,
      o = t.isStringTag;
    return (
      T0(n, r, o),
      Bk(function () {
        return O0(n, r, o);
      }),
      null
    );
  },
  Wk = F0(function (e, t, n) {
    var r = e.css;
    typeof r == "string" && t.registered[r] !== void 0 && (r = t.registered[r]);
    var o = e[Eu],
      i = [r],
      s = "";
    typeof e.className == "string"
      ? (s = Vk(t.registered, i, e.className))
      : e.className != null && (s = e.className + " ");
    var a = A0(i, void 0, x.useContext(D0));
    s += t.key + "-" + a.name;
    var l = {};
    for (var c in e) Wd.call(e, c) && c !== "css" && c !== Eu && (l[c] = e[c]);
    return (
      (l.className = s),
      n && (l.ref = n),
      x.createElement(
        x.Fragment,
        null,
        x.createElement(Uk, {
          cache: t,
          serialized: a,
          isStringTag: typeof o == "string",
        }),
        x.createElement(o, l),
      )
    );
  }),
  Hk = Wk,
  Oh = function (t, n) {
    var r = arguments;
    if (n == null || !Wd.call(n, "css"))
      return x.createElement.apply(void 0, r);
    var o = r.length,
      i = new Array(o);
    ((i[0] = Hk), (i[1] = jk(t, n)));
    for (var s = 2; s < o; s++) i[s] = r[s];
    return x.createElement.apply(null, i);
  };
(function (e) {
  var t;
  t || (t = e.JSX || (e.JSX = {}));
})(Oh || (Oh = {}));
var _h = F0(function (e, t) {
  var n = e.styles,
    r = A0([n], void 0, x.useContext(D0)),
    o = x.useRef();
  return (
    Th(
      function () {
        var i = t.key + "-global",
          s = new t.sheet.constructor({
            key: i,
            nonce: t.sheet.nonce,
            container: t.sheet.container,
            speedy: t.sheet.isSpeedy,
          }),
          a = !1,
          l = document.querySelector(
            'style[data-emotion="' + i + " " + r.name + '"]',
          );
        return (
          t.sheet.tags.length && (s.before = t.sheet.tags[0]),
          l !== null &&
            ((a = !0), l.setAttribute("data-emotion", i), s.hydrate([l])),
          (o.current = [s, a]),
          function () {
            s.flush();
          }
        );
      },
      [t],
    ),
    Th(
      function () {
        var i = o.current,
          s = i[0],
          a = i[1];
        if (a) {
          i[1] = !1;
          return;
        }
        if ((r.next !== void 0 && O0(t, r.next, !0), s.tags.length)) {
          var l = s.tags[s.tags.length - 1].nextElementSibling;
          ((s.before = l), s.flush());
        }
        t.insert("", r, s, !1);
      },
      [t, r.name],
    ),
    null
  );
});
function Ol(e) {
  const t = Object.assign({}, e);
  for (let n in t) t[n] === void 0 && delete t[n];
  return t;
}
const Tt = (e) => e != null && typeof e == "object" && !Array.isArray(e),
  ar = (e) => typeof e == "string",
  Hd = (e) => typeof e == "function",
  Gk = (...e) => {
    const t = e.reduce(
      (n, r) => (r != null && r.forEach((o) => n.add(o)), n),
      new Set([]),
    );
    return Array.from(t);
  },
  [Kk, k6] = qR({
    name: "ChakraContext",
    strict: !0,
    providerName: "<ChakraProvider />",
  });
function qk(e) {
  const { value: t, children: n } = e;
  return y.jsxs(Kk, {
    value: t,
    children: [
      !t._config.disableLayers && y.jsx(_h, { styles: t.layers.atRule }),
      y.jsx(_h, { styles: t._global }),
      n,
    ],
  });
}
const Yk = (e, t) => {
    const n = {},
      r = {},
      o = Object.keys(e);
    for (const i of o) t(i) ? (r[i] = e[i]) : (n[i] = e[i]);
    return [r, n];
  },
  Gd = (e, t) => {
    const n = Hd(t) ? t : (r) => t.includes(r);
    return Yk(e, n);
  };
function Ac(e) {
  return e == null ? [] : Array.isArray(e) ? e : [e];
}
var Ui = (e) => e[0],
  Kd = (e) => e[e.length - 1],
  Xk = (e, t) => e.indexOf(t) !== -1,
  Gr = (e, ...t) => e.concat(t),
  eo = (e, ...t) => e.filter((n) => !t.includes(n)),
  Vo = (e) => Array.from(new Set(e)),
  Nc = (e, t) => {
    const n = new Set(t);
    return e.filter((r) => !n.has(r));
  },
  Ko = (e, t) => (Xk(e, t) ? eo(e, t) : Gr(e, t));
function $0(e, t, n = {}) {
  const { step: r = 1, loop: o = !0 } = n,
    i = t + r,
    s = e.length,
    a = s - 1;
  return t === -1
    ? r > 0
      ? 0
      : a
    : i < 0
      ? o
        ? a
        : 0
      : i >= s
        ? o
          ? 0
          : t > s
            ? s
            : t
        : i;
}
function Jk(e, t, n = {}) {
  return e[$0(e, t, n)];
}
function Qk(e, t, n = {}) {
  const { step: r = 1, loop: o = !0 } = n;
  return $0(e, t, { step: -r, loop: o });
}
function Zk(e, t, n = {}) {
  return e[Qk(e, t, n)];
}
function Ah(e, t) {
  return e.reduce(
    ([n, r], o) => (t(o) ? n.push(o) : r.push(o), [n, r]),
    [[], []],
  );
}
var Nh = (e) => (e == null ? void 0 : e.constructor.name) === "Array",
  eP = (e, t) => {
    if (e.length !== t.length) return !1;
    for (let n = 0; n < e.length; n++) if (!yn(e[n], t[n])) return !1;
    return !0;
  },
  yn = (e, t) => {
    if (Object.is(e, t)) return !0;
    if ((e == null && t != null) || (e != null && t == null)) return !1;
    if (
      typeof (e == null ? void 0 : e.isEqual) == "function" &&
      typeof (t == null ? void 0 : t.isEqual) == "function"
    )
      return e.isEqual(t);
    if (typeof e == "function" && typeof t == "function")
      return e.toString() === t.toString();
    if (Nh(e) && Nh(t)) return eP(Array.from(e), Array.from(t));
    if (typeof e != "object" || typeof t != "object") return !1;
    const n = Object.keys(t ?? Object.create(null)),
      r = n.length;
    for (let o = 0; o < r; o++) if (!Reflect.has(e, n[o])) return !1;
    for (let o = 0; o < r; o++) {
      const i = n[o];
      if (!yn(e[i], t[i])) return !1;
    }
    return !0;
  },
  Fi = (e) => Array.isArray(e),
  tP = (e) => e === !0 || e === !1,
  M0 = (e) => e != null && typeof e == "object",
  Kr = (e) => M0(e) && !Fi(e),
  L0 = (e) => typeof e == "function",
  nP = (e) => e == null,
  Cr = (e, t) => Object.prototype.hasOwnProperty.call(e, t),
  rP = (e) => Object.prototype.toString.call(e),
  z0 = Function.prototype.toString,
  oP = z0.call(Object),
  iP = (e) => {
    if (!M0(e) || rP(e) != "[object Object]" || lP(e)) return !1;
    const t = Object.getPrototypeOf(e);
    if (t === null) return !0;
    const n = Cr(t, "constructor") && t.constructor;
    return typeof n == "function" && n instanceof n && z0.call(n) == oP;
  },
  sP = (e) =>
    typeof e == "object" && e !== null && "$$typeof" in e && "props" in e,
  aP = (e) => typeof e == "object" && e !== null && "__v_isVNode" in e,
  lP = (e) => sP(e) || aP(e),
  cP = (e, ...t) => (typeof e == "function" ? e(...t) : e) ?? void 0,
  uP = () => {},
  Iu =
    (...e) =>
    (...t) => {
      e.forEach(function (n) {
        n == null || n(...t);
      });
    };
function Xn(e, t, ...n) {
  var o;
  if (e in t) {
    const i = t[e];
    return L0(i) ? i(...n) : i;
  }
  const r = new Error(
    `No matching key: ${JSON.stringify(e)} in ${JSON.stringify(Object.keys(t))}`,
  );
  throw ((o = Error.captureStackTrace) == null || o.call(Error, r, Xn), r);
}
var B0 = (e, t) => {
    var n;
    try {
      return e();
    } catch (r) {
      return (
        r instanceof Error &&
          ((n = Error.captureStackTrace) == null || n.call(Error, r, B0)),
        t == null ? void 0 : t()
      );
    }
  },
  { floor: j0, abs: Vh, round: _l, min: dP, max: fP, pow: gP, sign: hP } = Math,
  Ru = (e) => Number.isNaN(e),
  lr = (e) => (Ru(e) ? 0 : e),
  U0 = (e, t) => ((e % t) + t) % t,
  pP = (e, t) => ((e % t) + t) % t,
  mP = (e, t) => lr(e) >= t,
  vP = (e, t) => lr(e) <= t,
  yP = (e, t, n) => lr(e) >= t && lr(e) <= n,
  bP = (e, t, n) => _l((lr(e) - t) / n) * n + t,
  Ot = (e, t, n) => dP(fP(lr(e), t), n),
  xP = (e, t, n) => (lr(e) - t) / (n - t),
  SP = (e, t, n, r) => Ot(bP(e * (n - t) + t, t, r), t, n),
  Fh = (e, t) => {
    let n = e,
      r = t.toString(),
      o = r.indexOf("."),
      i = o >= 0 ? r.length - o : 0;
    if (i > 0) {
      let s = gP(10, i);
      n = _l(n * s) / s;
    }
    return n;
  },
  Vc = (e, t) => (typeof t == "number" ? j0(e * t + 0.5) / t : _l(e)),
  Dh = (e, t, n, r) => {
    const o = t != null ? Number(t) : 0,
      i = Number(n),
      s = (e - o) % r;
    let a = Vh(s) * 2 >= r ? e + hP(s) * (r - Vh(s)) : e - s;
    if (((a = Fh(a, r)), !Ru(o) && a < o)) a = o;
    else if (!Ru(i) && a > i) {
      const l = j0((i - o) / r),
        c = o + l * r;
      a = l <= 0 || c < o ? i : c;
    }
    return Fh(a, r);
  },
  Pe = (e, t = 0, n = 10) => {
    const r = Math.pow(n, t);
    return _l(e * r) / r;
  },
  $h = (e) => {
    if (!Number.isFinite(e)) return 0;
    let t = 1,
      n = 0;
    for (; Math.round(e * t) / t !== e; ) ((t *= 10), (n += 1));
    return n;
  },
  W0 = (e, t, n) => {
    let r = t === "+" ? e + n : e - n;
    if (e % 1 !== 0 || n % 1 !== 0) {
      const o = 10 ** Math.max($h(e), $h(n));
      ((e = Math.round(e * o)),
        (n = Math.round(n * o)),
        (r = t === "+" ? e + n : e - n),
        (r /= o));
    }
    return r;
  },
  wP = (e, t) => W0(lr(e), "+", t),
  CP = (e, t) => W0(lr(e), "-", t);
function qd(e) {
  if (!iP(e) || e === void 0) return e;
  const t = Reflect.ownKeys(e).filter((r) => typeof r == "string"),
    n = {};
  for (const r of t) {
    const o = e[r];
    o !== void 0 && (n[r] = qd(o));
  }
  return n;
}
function H0(...e) {
  (e.length === 1 ? e[0] : e[1], e.length === 2 && e[0]);
}
function EP(e, t) {
  if (e == null) throw new Error(t());
}
function IP(e) {
  if (!e) return;
  const t = e.selectionStart ?? 0,
    n = e.selectionEnd ?? 0;
  Math.abs(n - t) === 0 &&
    t === 0 &&
    e.setSelectionRange(e.value.length, e.value.length);
}
var Mh = (e) => Math.max(0, Math.min(1, e)),
  RP = (e, t) => e.map((n, r) => e[(Math.max(t, 0) + r) % e.length]),
  kP = () => {},
  Al = (e) => typeof e == "object" && e !== null,
  PP = 2147483647,
  TP = 1,
  OP = 9,
  _P = 11,
  It = (e) => Al(e) && e.nodeType === TP && typeof e.nodeName == "string",
  G0 = (e) => Al(e) && e.nodeType === OP,
  AP = (e) => Al(e) && e === e.window,
  K0 = (e) => (It(e) ? e.localName || "" : "#document");
function NP(e) {
  return ["html", "body", "#document"].includes(K0(e));
}
var VP = (e) => Al(e) && e.nodeType !== void 0,
  os = (e) => VP(e) && e.nodeType === _P && "host" in e,
  FP = (e) => It(e) && e.localName === "input",
  DP = (e) =>
    It(e)
      ? e.offsetWidth > 0 || e.offsetHeight > 0 || e.getClientRects().length > 0
      : !1,
  $P = /(textarea|select)/;
function MP(e) {
  if (e == null || !It(e)) return !1;
  try {
    return (
      (FP(e) && e.selectionStart != null) ||
      $P.test(e.localName) ||
      e.isContentEditable ||
      e.getAttribute("contenteditable") === "true" ||
      e.getAttribute("contenteditable") === ""
    );
  } catch {
    return !1;
  }
}
function to(e, t) {
  var r;
  if (!e || !t || !It(e) || !It(t)) return !1;
  const n = (r = t.getRootNode) == null ? void 0 : r.call(t);
  if (e === t || e.contains(t)) return !0;
  if (n && os(n)) {
    let o = t;
    for (; o; ) {
      if (e === o) return !0;
      o = o.parentNode || o.host;
    }
  }
  return !1;
}
function Vr(e) {
  return G0(e)
    ? e
    : AP(e)
      ? e.document
      : ((e == null ? void 0 : e.ownerDocument) ?? document);
}
function LP(e) {
  return Vr(e).documentElement;
}
function St(e) {
  var t;
  return os(e)
    ? St(e.host)
    : G0(e)
      ? (e.defaultView ?? window)
      : It(e)
        ? (((t = e.ownerDocument) == null ? void 0 : t.defaultView) ?? window)
        : window;
}
function zP(e) {
  if (K0(e) === "html") return e;
  const t = e.assignedSlot || e.parentNode || (os(e) && e.host) || LP(e);
  return os(t) ? t.host : t;
}
var Fc = new WeakMap();
function BP(e) {
  return (Fc.has(e) || Fc.set(e, St(e).getComputedStyle(e)), Fc.get(e));
}
var Nl = () => typeof document < "u";
function jP() {
  const e = navigator.userAgentData;
  return (e == null ? void 0 : e.platform) ?? navigator.platform;
}
function UP() {
  const e = navigator.userAgentData;
  return e && Array.isArray(e.brands)
    ? e.brands.map(({ brand: t, version: n }) => `${t}/${n}`).join(" ")
    : navigator.userAgent;
}
var Yd = (e) => Nl() && e.test(jP()),
  q0 = (e) => Nl() && e.test(UP()),
  WP = (e) => Nl() && e.test(navigator.vendor),
  Lh = () => Nl() && !!navigator.maxTouchPoints,
  HP = () => Yd(/^iPhone/i),
  GP = () => Yd(/^iPad/i) || (Vl() && navigator.maxTouchPoints > 1),
  Xd = () => HP() || GP(),
  KP = () => Vl() || Xd(),
  Vl = () => Yd(/^Mac/i),
  Y0 = () => KP() && WP(/apple/i),
  qP = () => q0(/Firefox/i),
  YP = () => q0(/Android/i);
function XP(e) {
  var t, n, r;
  return (
    ((t = e.composedPath) == null ? void 0 : t.call(e)) ??
    ((r = (n = e.nativeEvent) == null ? void 0 : n.composedPath) == null
      ? void 0
      : r.call(n))
  );
}
function Tr(e) {
  const t = XP(e);
  return (t == null ? void 0 : t[0]) ?? e.target;
}
function JP(e) {
  return tT(e).isComposing || e.keyCode === 229;
}
function QP(e) {
  return e.mozInputSource === 0 && e.isTrusted
    ? !0
    : YP() && e.pointerType
      ? e.type === "click" && e.buttons === 1
      : e.detail === 0 && !e.pointerType;
}
var ZP = (e) => e.button === 2 || (Vl() && e.ctrlKey && e.button === 0),
  eT = (e) => "touches" in e && e.touches.length > 0;
function tT(e) {
  return e.nativeEvent ?? e;
}
function nT(e, t = "client") {
  const n = eT(e) ? e.touches[0] || e.changedTouches[0] : e;
  return { x: n[`${t}X`], y: n[`${t}Y`] };
}
var vt = (e, t, n, r) => {
  const o = typeof e == "function" ? e() : e;
  return (
    o == null || o.addEventListener(t, n, r),
    () => {
      o == null || o.removeEventListener(t, n, r);
    }
  );
};
function rT(e, t) {
  const { type: n = "HTMLInputElement", property: r = "value" } = t,
    o = St(e)[n].prototype;
  return Object.getOwnPropertyDescriptor(o, r) ?? {};
}
function oT(e) {
  if (e.localName === "input") return "HTMLInputElement";
  if (e.localName === "textarea") return "HTMLTextAreaElement";
  if (e.localName === "select") return "HTMLSelectElement";
}
function Fl(e, t, n = "value") {
  var o;
  if (!e) return;
  const r = oT(e);
  (r && ((o = rT(e, { type: r, property: n }).set) == null || o.call(e, t)),
    e.setAttribute(n, t));
}
function iT(e, t) {
  const { value: n, bubbles: r = !0 } = t;
  if (!e) return;
  const o = St(e);
  e instanceof o.HTMLInputElement &&
    (Fl(e, `${n}`), e.dispatchEvent(new o.Event("input", { bubbles: r })));
}
function sT(e) {
  return aT(e) ? e.form : e.closest("form");
}
function aT(e) {
  return e.matches("textarea, input, select, button");
}
function lT(e, t) {
  if (!e) return;
  const n = sT(e),
    r = (o) => {
      o.defaultPrevented || t();
    };
  return (
    n == null || n.addEventListener("reset", r, { passive: !0 }),
    () => (n == null ? void 0 : n.removeEventListener("reset", r))
  );
}
function cT(e, t) {
  const n = e == null ? void 0 : e.closest("fieldset");
  if (!n) return;
  t(n.disabled);
  const r = St(n),
    o = new r.MutationObserver(() => t(n.disabled));
  return (
    o.observe(n, { attributes: !0, attributeFilter: ["disabled"] }),
    () => o.disconnect()
  );
}
function Jd(e, t) {
  if (!e) return;
  const { onFieldsetDisabledChange: n, onFormReset: r } = t,
    o = [lT(e, r), cT(e, n)];
  return () => o.forEach((i) => (i == null ? void 0 : i()));
}
var uT = (e) => It(e) && e.tagName === "IFRAME",
  dT = (e) => parseInt(e.getAttribute("tabindex") || "0", 10) < 0,
  X0 =
    "input:not([type='hidden']):not([disabled]), select:not([disabled]), textarea:not([disabled]), a[href], button:not([disabled]), [tabindex], iframe, object, embed, area[href], audio[controls], video[controls], [contenteditable]:not([contenteditable='false']), details > summary:first-of-type";
function Qd(e) {
  return !e || e.closest("[inert]") ? !1 : e.matches(X0) && DP(e);
}
function J0(e, t) {
  if (!e) return [];
  const r = Array.from(e.querySelectorAll(X0)).filter(fT);
  return (
    r.forEach((o, i) => {
      if (uT(o) && o.contentDocument) {
        const s = o.contentDocument.body,
          a = J0(s);
        r.splice(i, 1, ...a);
      }
    }),
    r.length,
    r
  );
}
function fT(e) {
  return e != null && e.tabIndex > 0 ? !0 : Qd(e) && !dT(e);
}
function Zd(e) {
  const { root: t, getInitialEl: n, filter: r, enabled: o = !0 } = e;
  if (!o) return;
  let i = null;
  if (
    (i || (i = typeof n == "function" ? n() : n),
    i ||
      (i =
        t == null ? void 0 : t.querySelector("[data-autofocus],[autofocus]")),
    !i)
  ) {
    const s = J0(t);
    i = r ? s.filter(r)[0] : s[0];
  }
  return i || t || void 0;
}
function Q0(e) {
  const t = new Set();
  function n(r) {
    const o = globalThis.requestAnimationFrame(r);
    t.add(() => globalThis.cancelAnimationFrame(o));
  }
  return (
    n(() => n(e)),
    function () {
      t.forEach((o) => o());
    }
  );
}
function pe(e) {
  let t;
  const n = globalThis.requestAnimationFrame(() => {
    t = e();
  });
  return () => {
    (globalThis.cancelAnimationFrame(n), t == null || t());
  };
}
function gT(e, t, n) {
  const r = pe(() => {
      (e.removeEventListener(t, o, !0), n());
    }),
    o = () => {
      (r(), n());
    };
  return (e.addEventListener(t, o, { once: !0, capture: !0 }), r);
}
function hT(e, t) {
  if (!e) return;
  const { attributes: n, callback: r } = t,
    o = e.ownerDocument.defaultView || window,
    i = new o.MutationObserver((s) => {
      for (const a of s)
        a.type === "attributes" &&
          a.attributeName &&
          n.includes(a.attributeName) &&
          r(a);
    });
  return (
    i.observe(e, { attributes: !0, attributeFilter: n }),
    () => i.disconnect()
  );
}
function Dl(e, t) {
  const { defer: n } = t,
    r = n ? pe : (i) => i(),
    o = [];
  return (
    o.push(
      r(() => {
        const i = typeof e == "function" ? e() : e;
        o.push(hT(i, t));
      }),
    ),
    () => {
      o.forEach((i) => (i == null ? void 0 : i()));
    }
  );
}
function Z0(e) {
  const t = () => {
    const n = St(e);
    e.dispatchEvent(new n.MouseEvent("click"));
  };
  qP() ? gT(e, "keyup", t) : queueMicrotask(t);
}
function za(e) {
  const t = zP(e);
  return NP(t) ? Vr(t).body : It(t) && ef(t) ? t : za(t);
}
function eb(e, t = []) {
  const n = za(e),
    r = n === e.ownerDocument.body,
    o = St(n);
  return r
    ? t.concat(o, o.visualViewport || [], ef(n) ? n : [])
    : t.concat(n, eb(n, []));
}
var pT = /auto|scroll|overlay|hidden|clip/,
  mT = new Set(["inline", "contents"]);
function ef(e) {
  const t = St(e),
    {
      overflow: n,
      overflowX: r,
      overflowY: o,
      display: i,
    } = t.getComputedStyle(e);
  return pT.test(n + o + r) && !mT.has(i);
}
function vT(e) {
  return e.scrollHeight > e.clientHeight || e.scrollWidth > e.clientWidth;
}
function Ba(e, t) {
  const { rootEl: n, ...r } = t || {};
  !e || !n || !ef(n) || !vT(n) || e.scrollIntoView(r);
}
function tb(e, t) {
  const { left: n, top: r, width: o, height: i } = t.getBoundingClientRect(),
    s = { x: e.x - n, y: e.y - r },
    a = { x: Mh(s.x / o), y: Mh(s.y / i) };
  function l(c = {}) {
    const { dir: u = "ltr", orientation: d = "horizontal", inverted: f } = c,
      g = typeof f == "object" ? f.x : f,
      h = typeof f == "object" ? f.y : f;
    return d === "horizontal"
      ? u === "rtl" || g
        ? 1 - a.x
        : a.x
      : h
        ? 1 - a.y
        : a.y;
  }
  return { offset: s, percent: a, getPercentValue: l };
}
function yT(e, t) {
  const n = e.body,
    r = "pointerLockElement" in e || "mozPointerLockElement" in e,
    o = () => !!e.pointerLockElement;
  function i() {}
  function s(l) {
    (o(), console.error("PointerLock error occurred:", l), e.exitPointerLock());
  }
  if (!r) return;
  try {
    n.requestPointerLock();
  } catch {}
  const a = [
    vt(e, "pointerlockchange", i, !1),
    vt(e, "pointerlockerror", s, !1),
  ];
  return () => {
    (a.forEach((l) => l()), e.exitPointerLock());
  };
}
var Fo = "default",
  ku = "",
  ga = new WeakMap();
function bT(e = {}) {
  const { target: t, doc: n } = e,
    r = n ?? document,
    o = r.documentElement;
  return (
    Xd()
      ? (Fo === "default" &&
          ((ku = o.style.webkitUserSelect),
          (o.style.webkitUserSelect = "none")),
        (Fo = "disabled"))
      : t && (ga.set(t, t.style.userSelect), (t.style.userSelect = "none")),
    () => xT({ target: t, doc: r })
  );
}
function xT(e = {}) {
  const { target: t, doc: n } = e,
    o = (n ?? document).documentElement;
  if (Xd()) {
    if (Fo !== "disabled") return;
    ((Fo = "restoring"),
      setTimeout(() => {
        Q0(() => {
          Fo === "restoring" &&
            (o.style.webkitUserSelect === "none" &&
              (o.style.webkitUserSelect = ku || ""),
            (ku = ""),
            (Fo = "default"));
        });
      }, 300));
  } else if (t && ga.has(t)) {
    const i = ga.get(t);
    (t.style.userSelect === "none" && (t.style.userSelect = i ?? ""),
      t.getAttribute("style") === "" && t.removeAttribute("style"),
      ga.delete(t));
  }
}
function nb(e = {}) {
  const { defer: t, target: n, ...r } = e,
    o = t ? pe : (s) => s(),
    i = [];
  return (
    i.push(
      o(() => {
        const s = typeof n == "function" ? n() : n;
        i.push(bT({ ...r, target: s }));
      }),
    ),
    () => {
      i.forEach((s) => (s == null ? void 0 : s()));
    }
  );
}
function ST(e, t) {
  const { onPointerMove: n, onPointerUp: r } = t,
    i = [
      vt(
        e,
        "pointermove",
        (s) => {
          const a = nT(s),
            l = Math.sqrt(a.x ** 2 + a.y ** 2),
            c = s.pointerType === "touch" ? 10 : 5;
          if (!(l < c)) {
            if (s.pointerType === "mouse" && s.button === 0) {
              r();
              return;
            }
            n({ point: a, event: s });
          }
        },
        !1,
      ),
      vt(e, "pointerup", r, !1),
      vt(e, "pointercancel", r, !1),
      vt(e, "contextmenu", r, !1),
      nb({ doc: e }),
    ];
  return () => {
    i.forEach((s) => s());
  };
}
function ja(e, t) {
  return Array.from((e == null ? void 0 : e.querySelectorAll(t)) ?? []);
}
function wT(e, t) {
  return (e == null ? void 0 : e.querySelector(t)) ?? null;
}
var tf = (e) => e.id;
function CT(e, t, n = tf) {
  return e.find((r) => n(r) === t);
}
function nf(e, t, n = tf) {
  const r = CT(e, t, n);
  return r ? e.indexOf(r) : -1;
}
function ET(e, t, n = !0) {
  let r = nf(e, t);
  return ((r = n ? (r + 1) % e.length : Math.min(r + 1, e.length - 1)), e[r]);
}
function IT(e, t, n = !0) {
  let r = nf(e, t);
  return r === -1
    ? n
      ? e[e.length - 1]
      : null
    : ((r = n ? (r - 1 + e.length) % e.length : Math.max(0, r - 1)), e[r]);
}
var RT = (e) =>
    e
      .split("")
      .map((t) => {
        const n = t.charCodeAt(0);
        return n > 0 && n < 128
          ? t
          : n >= 128 && n <= 255
            ? `/x${n.toString(16)}`.replace("/", "\\")
            : "";
      })
      .join("")
      .trim(),
  kT = (e) => {
    var t;
    return RT(
      ((t = e.dataset) == null ? void 0 : t.valuetext) ?? e.textContent ?? "",
    );
  },
  PT = (e, t) => e.trim().toLowerCase().startsWith(t.toLowerCase());
function TT(e, t, n, r = tf) {
  const o = n ? nf(e, n, r) : -1;
  let i = n ? RP(e, o) : e;
  return (
    t.length === 1 && (i = i.filter((a) => r(a) !== n)),
    i.find((a) => PT(kT(a), t))
  );
}
function OT(e, t) {
  if (!e) return kP;
  const n = Object.keys(t).reduce(
    (r, o) => ((r[o] = e.style.getPropertyValue(o)), r),
    {},
  );
  return (
    Object.assign(e.style, t),
    () => {
      (Object.assign(e.style, n),
        e.style.length === 0 && e.removeAttribute("style"));
    }
  );
}
function _T(e, t) {
  const { state: n, activeId: r, key: o, timeout: i = 350, itemToId: s } = t,
    a = n.keysSoFar + o,
    c = a.length > 1 && Array.from(a).every((h) => h === a[0]) ? a[0] : a;
  let u = e.slice();
  const d = TT(u, c, r, s);
  function f() {
    (clearTimeout(n.timer), (n.timer = -1));
  }
  function g(h) {
    ((n.keysSoFar = h),
      f(),
      h !== "" &&
        (n.timer = +setTimeout(() => {
          (g(""), f());
        }, i)));
  }
  return (g(a), d);
}
var is = Object.assign(_T, {
  defaultOptions: { keysSoFar: "", timer: -1 },
  isValidEvent: AT,
});
function AT(e) {
  return e.key.length === 1 && !e.ctrlKey && !e.metaKey;
}
var NT = 1e3 / 60;
function VT(e, t) {
  const n = e();
  if (It(n) && n.isConnected) return (t(n), () => {});
  {
    const r = setInterval(() => {
      const o = e();
      It(o) && o.isConnected && (t(o), clearInterval(r));
    }, NT);
    return () => clearInterval(r);
  }
}
function FT(e, t) {
  const n = [];
  return (
    e == null ||
      e.forEach((r) => {
        const o = VT(r, t);
        n.push(o);
      }),
    () => {
      n.forEach((r) => r());
    }
  );
}
function zh(e, t, n) {
  let r = [],
    o;
  return (i) => {
    const s = e(i);
    return (
      (s.length !== r.length || s.some((l, c) => !yn(r[c], l))) &&
        ((r = s), (o = t(...s))),
      o
    );
  };
}
function Fr() {
  return {
    and: (...e) =>
      function (n) {
        return e.every((r) => n.guard(r));
      },
    or: (...e) =>
      function (n) {
        return e.some((r) => n.guard(r));
      },
    not: (e) =>
      function (n) {
        return !n.guard(e);
      },
  };
}
function rb() {
  return {
    guards: Fr(),
    createMachine: (e) => e,
    choose: (e) =>
      function ({ choose: n }) {
        var r;
        return (r = n(e)) == null ? void 0 : r.actions;
      },
  };
}
var se = () => (e) => Array.from(new Set(e)),
  te = (e, t = []) => ({
    parts: (...n) => {
      if (DT(t)) return te(e, n);
      throw new Error(
        "createAnatomy().parts(...) should only be called once. Did you mean to use .extendWith(...) ?",
      );
    },
    extendWith: (...n) => te(e, [...t, ...n]),
    omit: (...n) =>
      te(
        e,
        t.filter((r) => !n.includes(r)),
      ),
    rename: (n) => te(n, t),
    keys: () => t,
    build: () =>
      [...new Set(t)].reduce(
        (n, r) =>
          Object.assign(n, {
            [r]: {
              selector: [
                `&[data-scope="${yo(e)}"][data-part="${yo(r)}"]`,
                `& [data-scope="${yo(e)}"][data-part="${yo(r)}"]`,
              ].join(", "),
              attrs: { "data-scope": yo(e), "data-part": yo(r) },
            },
          }),
        {},
      ),
  }),
  yo = (e) =>
    e
      .replace(/([A-Z])([A-Z])/g, "$1-$2")
      .replace(/([a-z])([A-Z])/g, "$1-$2")
      .replace(/[\s_]+/g, "-")
      .toLowerCase(),
  DT = (e) => e.length === 0,
  ob = te("collapsible").parts("root", "trigger", "content", "indicator");
ob.build();
se()([
  "dir",
  "disabled",
  "getRootNode",
  "id",
  "ids",
  "onExitComplete",
  "onOpenChange",
  "defaultOpen",
  "open",
]);
var $T = Object.defineProperty,
  MT = (e, t, n) =>
    t in e
      ? $T(e, t, { enumerable: !0, configurable: !0, writable: !0, value: n })
      : (e[t] = n),
  rf = (e, t, n) => MT(e, t + "", n),
  LT = (e, t) => {
    if (Object.keys(e).length !== Object.keys(t).length) return !1;
    for (let n in e) if (e[n] !== t[n]) return !1;
    return !0;
  },
  of = class {
    toHexInt() {
      return this.toFormat("rgba").toHexInt();
    }
    getChannelValue(e) {
      if (e in this) return this[e];
      throw new Error("Unsupported color channel: " + e);
    }
    getChannelValuePercent(e, t) {
      const n = t ?? this.getChannelValue(e),
        { minValue: r, maxValue: o } = this.getChannelRange(e);
      return xP(n, r, o);
    }
    getChannelPercentValue(e, t) {
      const { minValue: n, maxValue: r, step: o } = this.getChannelRange(e),
        i = SP(t, n, r, o);
      return Dh(i, n, r, o);
    }
    withChannelValue(e, t) {
      const { minValue: n, maxValue: r } = this.getChannelRange(e);
      if (e in this) {
        let o = this.clone();
        return ((o[e] = Ot(t, n, r)), o);
      }
      throw new Error("Unsupported color channel: " + e);
    }
    getColorAxes(e) {
      let { xChannel: t, yChannel: n } = e,
        r = t || this.getChannels().find((s) => s !== n),
        o = n || this.getChannels().find((s) => s !== r),
        i = this.getChannels().find((s) => s !== r && s !== o);
      return { xChannel: r, yChannel: o, zChannel: i };
    }
    incrementChannel(e, t) {
      const { minValue: n, maxValue: r, step: o } = this.getChannelRange(e),
        i = Dh(Ot(this.getChannelValue(e) + t, n, r), n, r, o);
      return this.withChannelValue(e, i);
    }
    decrementChannel(e, t) {
      return this.incrementChannel(e, -t);
    }
    isEqual(e) {
      return (
        LT(this.toJSON(), e.toJSON()) &&
        this.getChannelValue("alpha") === e.getChannelValue("alpha")
      );
    }
  },
  zT = /^#[\da-f]+$/i,
  BT = /^rgba?\((.*)\)$/,
  jT = /[^#]/gi,
  ib = class ha extends of {
    constructor(t, n, r, o) {
      (super(),
        (this.red = t),
        (this.green = n),
        (this.blue = r),
        (this.alpha = o));
    }
    static parse(t) {
      let n = [];
      if (zT.test(t) && [4, 5, 7, 9].includes(t.length)) {
        const o = (t.length < 6 ? t.replace(jT, "$&$&") : t).slice(1).split("");
        for (; o.length > 0; ) n.push(parseInt(o.splice(0, 2).join(""), 16));
        n[3] = n[3] !== void 0 ? n[3] / 255 : void 0;
      }
      const r = t.match(BT);
      return (
        r != null &&
          r[1] &&
          (n = r[1]
            .split(",")
            .map((o) => Number(o.trim()))
            .map((o, i) => Ot(o, 0, i < 3 ? 255 : 1))),
        n.length < 3 ? void 0 : new ha(n[0], n[1], n[2], n[3] ?? 1)
      );
    }
    toString(t) {
      switch (t) {
        case "hex":
          return (
            "#" +
            (
              this.red.toString(16).padStart(2, "0") +
              this.green.toString(16).padStart(2, "0") +
              this.blue.toString(16).padStart(2, "0")
            ).toUpperCase()
          );
        case "hexa":
          return (
            "#" +
            (
              this.red.toString(16).padStart(2, "0") +
              this.green.toString(16).padStart(2, "0") +
              this.blue.toString(16).padStart(2, "0") +
              Math.round(this.alpha * 255)
                .toString(16)
                .padStart(2, "0")
            ).toUpperCase()
          );
        case "rgb":
          return `rgb(${this.red}, ${this.green}, ${this.blue})`;
        case "css":
        case "rgba":
          return `rgba(${this.red}, ${this.green}, ${this.blue}, ${this.alpha})`;
        case "hsl":
          return this.toHSL().toString("hsl");
        case "hsb":
          return this.toHSB().toString("hsb");
        default:
          return this.toFormat(t).toString(t);
      }
    }
    toFormat(t) {
      switch (t) {
        case "rgba":
          return this;
        case "hsba":
          return this.toHSB();
        case "hsla":
          return this.toHSL();
        default:
          throw new Error("Unsupported color conversion: rgb -> " + t);
      }
    }
    toHexInt() {
      return (this.red << 16) | (this.green << 8) | this.blue;
    }
    toHSB() {
      const t = this.red / 255,
        n = this.green / 255,
        r = this.blue / 255,
        o = Math.min(t, n, r),
        i = Math.max(t, n, r),
        s = i - o,
        a = i === 0 ? 0 : s / i;
      let l = 0;
      if (s !== 0) {
        switch (i) {
          case t:
            l = (n - r) / s + (n < r ? 6 : 0);
            break;
          case n:
            l = (r - t) / s + 2;
            break;
          case r:
            l = (t - n) / s + 4;
            break;
        }
        l /= 6;
      }
      return new lf(
        Pe(l * 360, 2),
        Pe(a * 100, 2),
        Pe(i * 100, 2),
        Pe(this.alpha, 2),
      );
    }
    toHSL() {
      const t = this.red / 255,
        n = this.green / 255,
        r = this.blue / 255,
        o = Math.min(t, n, r),
        i = Math.max(t, n, r),
        s = (i + o) / 2,
        a = i - o;
      let l = -1,
        c = -1;
      if (a === 0) l = c = 0;
      else {
        switch (((c = a / (s < 0.5 ? i + o : 2 - i - o)), i)) {
          case t:
            l = (n - r) / a + (n < r ? 6 : 0);
            break;
          case n:
            l = (r - t) / a + 2;
            break;
          case r:
            l = (t - n) / a + 4;
            break;
        }
        l /= 6;
      }
      return new af(
        Pe(l * 360, 2),
        Pe(c * 100, 2),
        Pe(s * 100, 2),
        Pe(this.alpha, 2),
      );
    }
    clone() {
      return new ha(this.red, this.green, this.blue, this.alpha);
    }
    getChannelFormatOptions(t) {
      switch (t) {
        case "red":
        case "green":
        case "blue":
          return { style: "decimal" };
        case "alpha":
          return { style: "percent" };
        default:
          throw new Error("Unknown color channel: " + t);
      }
    }
    formatChannelValue(t, n) {
      let r = this.getChannelFormatOptions(t),
        o = this.getChannelValue(t);
      return new Intl.NumberFormat(n, r).format(o);
    }
    getChannelRange(t) {
      switch (t) {
        case "red":
        case "green":
        case "blue":
          return { minValue: 0, maxValue: 255, step: 1, pageSize: 17 };
        case "alpha":
          return { minValue: 0, maxValue: 1, step: 0.01, pageSize: 0.1 };
        default:
          throw new Error("Unknown color channel: " + t);
      }
    }
    toJSON() {
      return { r: this.red, g: this.green, b: this.blue, a: this.alpha };
    }
    getFormat() {
      return "rgba";
    }
    getChannels() {
      return ha.colorChannels;
    }
  };
rf(ib, "colorChannels", ["red", "green", "blue"]);
var sf = ib,
  UT =
    /hsl\(([-+]?\d+(?:.\d+)?\s*,\s*[-+]?\d+(?:.\d+)?%\s*,\s*[-+]?\d+(?:.\d+)?%)\)|hsla\(([-+]?\d+(?:.\d+)?\s*,\s*[-+]?\d+(?:.\d+)?%\s*,\s*[-+]?\d+(?:.\d+)?%\s*,\s*[-+]?\d(.\d+)?)\)/,
  sb = class pa extends of {
    constructor(t, n, r, o) {
      (super(),
        (this.hue = t),
        (this.saturation = n),
        (this.lightness = r),
        (this.alpha = o));
    }
    static parse(t) {
      let n;
      if ((n = t.match(UT))) {
        const [r, o, i, s] = (n[1] ?? n[2])
          .split(",")
          .map((a) => Number(a.trim().replace("%", "")));
        return new pa(
          U0(r, 360),
          Ot(o, 0, 100),
          Ot(i, 0, 100),
          Ot(s ?? 1, 0, 1),
        );
      }
    }
    toString(t) {
      switch (t) {
        case "hex":
          return this.toRGB().toString("hex");
        case "hexa":
          return this.toRGB().toString("hexa");
        case "hsl":
          return `hsl(${this.hue}, ${Pe(this.saturation, 2)}%, ${Pe(this.lightness, 2)}%)`;
        case "css":
        case "hsla":
          return `hsla(${this.hue}, ${Pe(this.saturation, 2)}%, ${Pe(this.lightness, 2)}%, ${this.alpha})`;
        case "hsb":
          return this.toHSB().toString("hsb");
        case "rgb":
          return this.toRGB().toString("rgb");
        default:
          return this.toFormat(t).toString(t);
      }
    }
    toFormat(t) {
      switch (t) {
        case "hsla":
          return this;
        case "hsba":
          return this.toHSB();
        case "rgba":
          return this.toRGB();
        default:
          throw new Error("Unsupported color conversion: hsl -> " + t);
      }
    }
    toHSB() {
      let t = this.saturation / 100,
        n = this.lightness / 100,
        r = n + t * Math.min(n, 1 - n);
      return (
        (t = r === 0 ? 0 : 2 * (1 - n / r)),
        new lf(
          Pe(this.hue, 2),
          Pe(t * 100, 2),
          Pe(r * 100, 2),
          Pe(this.alpha, 2),
        )
      );
    }
    toRGB() {
      let t = this.hue,
        n = this.saturation / 100,
        r = this.lightness / 100,
        o = n * Math.min(r, 1 - r),
        i = (s, a = (s + t / 30) % 12) =>
          r - o * Math.max(Math.min(a - 3, 9 - a, 1), -1);
      return new sf(
        Math.round(i(0) * 255),
        Math.round(i(8) * 255),
        Math.round(i(4) * 255),
        Pe(this.alpha, 2),
      );
    }
    clone() {
      return new pa(this.hue, this.saturation, this.lightness, this.alpha);
    }
    getChannelFormatOptions(t) {
      switch (t) {
        case "hue":
          return { style: "unit", unit: "degree", unitDisplay: "narrow" };
        case "saturation":
        case "lightness":
        case "alpha":
          return { style: "percent" };
        default:
          throw new Error("Unknown color channel: " + t);
      }
    }
    formatChannelValue(t, n) {
      let r = this.getChannelFormatOptions(t),
        o = this.getChannelValue(t);
      return (
        (t === "saturation" || t === "lightness") && (o /= 100),
        new Intl.NumberFormat(n, r).format(o)
      );
    }
    getChannelRange(t) {
      switch (t) {
        case "hue":
          return { minValue: 0, maxValue: 360, step: 1, pageSize: 15 };
        case "saturation":
        case "lightness":
          return { minValue: 0, maxValue: 100, step: 1, pageSize: 10 };
        case "alpha":
          return { minValue: 0, maxValue: 1, step: 0.01, pageSize: 0.1 };
        default:
          throw new Error("Unknown color channel: " + t);
      }
    }
    toJSON() {
      return {
        h: this.hue,
        s: this.saturation,
        l: this.lightness,
        a: this.alpha,
      };
    }
    getFormat() {
      return "hsla";
    }
    getChannels() {
      return pa.colorChannels;
    }
  };
rf(sb, "colorChannels", ["hue", "saturation", "lightness"]);
var af = sb,
  WT =
    /hsb\(([-+]?\d+(?:.\d+)?\s*,\s*[-+]?\d+(?:.\d+)?%\s*,\s*[-+]?\d+(?:.\d+)?%)\)|hsba\(([-+]?\d+(?:.\d+)?\s*,\s*[-+]?\d+(?:.\d+)?%\s*,\s*[-+]?\d+(?:.\d+)?%\s*,\s*[-+]?\d(.\d+)?)\)/,
  ab = class ma extends of {
    constructor(t, n, r, o) {
      (super(),
        (this.hue = t),
        (this.saturation = n),
        (this.brightness = r),
        (this.alpha = o));
    }
    static parse(t) {
      let n;
      if ((n = t.match(WT))) {
        const [r, o, i, s] = (n[1] ?? n[2])
          .split(",")
          .map((a) => Number(a.trim().replace("%", "")));
        return new ma(
          U0(r, 360),
          Ot(o, 0, 100),
          Ot(i, 0, 100),
          Ot(s ?? 1, 0, 1),
        );
      }
    }
    toString(t) {
      switch (t) {
        case "css":
          return this.toHSL().toString("css");
        case "hex":
          return this.toRGB().toString("hex");
        case "hexa":
          return this.toRGB().toString("hexa");
        case "hsb":
          return `hsb(${this.hue}, ${Pe(this.saturation, 2)}%, ${Pe(this.brightness, 2)}%)`;
        case "hsba":
          return `hsba(${this.hue}, ${Pe(this.saturation, 2)}%, ${Pe(this.brightness, 2)}%, ${this.alpha})`;
        case "hsl":
          return this.toHSL().toString("hsl");
        case "rgb":
          return this.toRGB().toString("rgb");
        default:
          return this.toFormat(t).toString(t);
      }
    }
    toFormat(t) {
      switch (t) {
        case "hsba":
          return this;
        case "hsla":
          return this.toHSL();
        case "rgba":
          return this.toRGB();
        default:
          throw new Error("Unsupported color conversion: hsb -> " + t);
      }
    }
    toHSL() {
      let t = this.saturation / 100,
        n = this.brightness / 100,
        r = n * (1 - t / 2);
      return (
        (t = r === 0 || r === 1 ? 0 : (n - r) / Math.min(r, 1 - r)),
        new af(
          Pe(this.hue, 2),
          Pe(t * 100, 2),
          Pe(r * 100, 2),
          Pe(this.alpha, 2),
        )
      );
    }
    toRGB() {
      let t = this.hue,
        n = this.saturation / 100,
        r = this.brightness / 100,
        o = (i, s = (i + t / 60) % 6) =>
          r - n * r * Math.max(Math.min(s, 4 - s, 1), 0);
      return new sf(
        Math.round(o(5) * 255),
        Math.round(o(3) * 255),
        Math.round(o(1) * 255),
        Pe(this.alpha, 2),
      );
    }
    clone() {
      return new ma(this.hue, this.saturation, this.brightness, this.alpha);
    }
    getChannelFormatOptions(t) {
      switch (t) {
        case "hue":
          return { style: "unit", unit: "degree", unitDisplay: "narrow" };
        case "saturation":
        case "brightness":
        case "alpha":
          return { style: "percent" };
        default:
          throw new Error("Unknown color channel: " + t);
      }
    }
    formatChannelValue(t, n) {
      let r = this.getChannelFormatOptions(t),
        o = this.getChannelValue(t);
      return (
        (t === "saturation" || t === "brightness") && (o /= 100),
        new Intl.NumberFormat(n, r).format(o)
      );
    }
    getChannelRange(t) {
      switch (t) {
        case "hue":
          return { minValue: 0, maxValue: 360, step: 1, pageSize: 15 };
        case "saturation":
        case "brightness":
          return { minValue: 0, maxValue: 100, step: 1, pageSize: 10 };
        case "alpha":
          return { minValue: 0, maxValue: 1, step: 0.01, pageSize: 0.1 };
        default:
          throw new Error("Unknown color channel: " + t);
      }
    }
    toJSON() {
      return {
        h: this.hue,
        s: this.saturation,
        b: this.brightness,
        a: this.alpha,
      };
    }
    getFormat() {
      return "hsba";
    }
    getChannels() {
      return ma.colorChannels;
    }
  };
rf(ab, "colorChannels", ["hue", "saturation", "brightness"]);
var lf = ab,
  HT =
    "aliceblue:f0f8ff,antiquewhite:faebd7,aqua:00ffff,aquamarine:7fffd4,azure:f0ffff,beige:f5f5dc,bisque:ffe4c4,black:000000,blanchedalmond:ffebcd,blue:0000ff,blueviolet:8a2be2,brown:a52a2a,burlywood:deb887,cadetblue:5f9ea0,chartreuse:7fff00,chocolate:d2691e,coral:ff7f50,cornflowerblue:6495ed,cornsilk:fff8dc,crimson:dc143c,cyan:00ffff,darkblue:00008b,darkcyan:008b8b,darkgoldenrod:b8860b,darkgray:a9a9a9,darkgreen:006400,darkkhaki:bdb76b,darkmagenta:8b008b,darkolivegreen:556b2f,darkorange:ff8c00,darkorchid:9932cc,darkred:8b0000,darksalmon:e9967a,darkseagreen:8fbc8f,darkslateblue:483d8b,darkslategray:2f4f4f,darkturquoise:00ced1,darkviolet:9400d3,deeppink:ff1493,deepskyblue:00bfff,dimgray:696969,dodgerblue:1e90ff,firebrick:b22222,floralwhite:fffaf0,forestgreen:228b22,fuchsia:ff00ff,gainsboro:dcdcdc,ghostwhite:f8f8ff,gold:ffd700,goldenrod:daa520,gray:808080,green:008000,greenyellow:adff2f,honeydew:f0fff0,hotpink:ff69b4,indianred:cd5c5c,indigo:4b0082,ivory:fffff0,khaki:f0e68c,lavender:e6e6fa,lavenderblush:fff0f5,lawngreen:7cfc00,lemonchiffon:fffacd,lightblue:add8e6,lightcoral:f08080,lightcyan:e0ffff,lightgoldenrodyellow:fafad2,lightgrey:d3d3d3,lightgreen:90ee90,lightpink:ffb6c1,lightsalmon:ffa07a,lightseagreen:20b2aa,lightskyblue:87cefa,lightslategray:778899,lightsteelblue:b0c4de,lightyellow:ffffe0,lime:00ff00,limegreen:32cd32,linen:faf0e6,magenta:ff00ff,maroon:800000,mediumaquamarine:66cdaa,mediumblue:0000cd,mediumorchid:ba55d3,mediumpurple:9370d8,mediumseagreen:3cb371,mediumslateblue:7b68ee,mediumspringgreen:00fa9a,mediumturquoise:48d1cc,mediumvioletred:c71585,midnightblue:191970,mintcream:f5fffa,mistyrose:ffe4e1,moccasin:ffe4b5,navajowhite:ffdead,navy:000080,oldlace:fdf5e6,olive:808000,olivedrab:6b8e23,orange:ffa500,orangered:ff4500,orchid:da70d6,palegoldenrod:eee8aa,palegreen:98fb98,paleturquoise:afeeee,palevioletred:d87093,papayawhip:ffefd5,peachpuff:ffdab9,peru:cd853f,pink:ffc0cb,plum:dda0dd,powderblue:b0e0e6,purple:800080,rebeccapurple:663399,red:ff0000,rosybrown:bc8f8f,royalblue:4169e1,saddlebrown:8b4513,salmon:fa8072,sandybrown:f4a460,seagreen:2e8b57,seashell:fff5ee,sienna:a0522d,silver:c0c0c0,skyblue:87ceeb,slateblue:6a5acd,slategray:708090,snow:fffafa,springgreen:00ff7f,steelblue:4682b4,tan:d2b48c,teal:008080,thistle:d8bfd8,tomato:ff6347,turquoise:40e0d0,violet:ee82ee,wheat:f5deb3,white:ffffff,whitesmoke:f5f5f5,yellow:ffff00,yellowgreen:9acd32",
  GT = (e) => {
    const t = new Map(),
      n = e.split(",");
    for (let r = 0; r < n.length; r++) {
      const [o, i] = n[r].split(":");
      (t.set(o, `#${i}`),
        o.includes("gray") && t.set(o.replace("gray", "grey"), `#${i}`));
    }
    return t;
  },
  Bh = GT(HT),
  Ua = (e) => {
    var n;
    if (Bh.has(e)) return Ua(Bh.get(e));
    const t = sf.parse(e) || lf.parse(e) || af.parse(e);
    if (!t) {
      const r = new Error("Invalid color value: " + e);
      throw ((n = Error.captureStackTrace) == null || n.call(Error, r, Ua), r);
    }
    return t;
  };
const KT = ["top", "right", "bottom", "left"],
  Or = Math.min,
  Bt = Math.max,
  Wa = Math.round,
  js = Math.floor,
  Mn = (e) => ({ x: e, y: e }),
  qT = { left: "right", right: "left", bottom: "top", top: "bottom" },
  YT = { start: "end", end: "start" };
function Pu(e, t, n) {
  return Bt(e, Or(t, n));
}
function cr(e, t) {
  return typeof e == "function" ? e(t) : e;
}
function ur(e) {
  return e.split("-")[0];
}
function fi(e) {
  return e.split("-")[1];
}
function cf(e) {
  return e === "x" ? "y" : "x";
}
function uf(e) {
  return e === "y" ? "height" : "width";
}
const XT = new Set(["top", "bottom"]);
function Fn(e) {
  return XT.has(ur(e)) ? "y" : "x";
}
function df(e) {
  return cf(Fn(e));
}
function JT(e, t, n) {
  n === void 0 && (n = !1);
  const r = fi(e),
    o = df(e),
    i = uf(o);
  let s =
    o === "x"
      ? r === (n ? "end" : "start")
        ? "right"
        : "left"
      : r === "start"
        ? "bottom"
        : "top";
  return (t.reference[i] > t.floating[i] && (s = Ha(s)), [s, Ha(s)]);
}
function QT(e) {
  const t = Ha(e);
  return [Tu(e), t, Tu(t)];
}
function Tu(e) {
  return e.replace(/start|end/g, (t) => YT[t]);
}
const jh = ["left", "right"],
  Uh = ["right", "left"],
  ZT = ["top", "bottom"],
  eO = ["bottom", "top"];
function tO(e, t, n) {
  switch (e) {
    case "top":
    case "bottom":
      return n ? (t ? Uh : jh) : t ? jh : Uh;
    case "left":
    case "right":
      return t ? ZT : eO;
    default:
      return [];
  }
}
function nO(e, t, n, r) {
  const o = fi(e);
  let i = tO(ur(e), n === "start", r);
  return (
    o && ((i = i.map((s) => s + "-" + o)), t && (i = i.concat(i.map(Tu)))),
    i
  );
}
function Ha(e) {
  return e.replace(/left|right|bottom|top/g, (t) => qT[t]);
}
function rO(e) {
  return { top: 0, right: 0, bottom: 0, left: 0, ...e };
}
function lb(e) {
  return typeof e != "number"
    ? rO(e)
    : { top: e, right: e, bottom: e, left: e };
}
function Ga(e) {
  const { x: t, y: n, width: r, height: o } = e;
  return {
    width: r,
    height: o,
    top: n,
    left: t,
    right: t + r,
    bottom: n + o,
    x: t,
    y: n,
  };
}
function Wh(e, t, n) {
  let { reference: r, floating: o } = e;
  const i = Fn(t),
    s = df(t),
    a = uf(s),
    l = ur(t),
    c = i === "y",
    u = r.x + r.width / 2 - o.width / 2,
    d = r.y + r.height / 2 - o.height / 2,
    f = r[a] / 2 - o[a] / 2;
  let g;
  switch (l) {
    case "top":
      g = { x: u, y: r.y - o.height };
      break;
    case "bottom":
      g = { x: u, y: r.y + r.height };
      break;
    case "right":
      g = { x: r.x + r.width, y: d };
      break;
    case "left":
      g = { x: r.x - o.width, y: d };
      break;
    default:
      g = { x: r.x, y: r.y };
  }
  switch (fi(t)) {
    case "start":
      g[s] -= f * (n && c ? -1 : 1);
      break;
    case "end":
      g[s] += f * (n && c ? -1 : 1);
      break;
  }
  return g;
}
const oO = async (e, t, n) => {
  const {
      placement: r = "bottom",
      strategy: o = "absolute",
      middleware: i = [],
      platform: s,
    } = n,
    a = i.filter(Boolean),
    l = await (s.isRTL == null ? void 0 : s.isRTL(t));
  let c = await s.getElementRects({ reference: e, floating: t, strategy: o }),
    { x: u, y: d } = Wh(c, r, l),
    f = r,
    g = {},
    h = 0;
  for (let p = 0; p < a.length; p++) {
    const { name: v, fn: b } = a[p],
      {
        x: S,
        y: w,
        data: E,
        reset: R,
      } = await b({
        x: u,
        y: d,
        initialPlacement: r,
        placement: f,
        strategy: o,
        middlewareData: g,
        rects: c,
        platform: s,
        elements: { reference: e, floating: t },
      });
    ((u = S ?? u),
      (d = w ?? d),
      (g = { ...g, [v]: { ...g[v], ...E } }),
      R &&
        h <= 50 &&
        (h++,
        typeof R == "object" &&
          (R.placement && (f = R.placement),
          R.rects &&
            (c =
              R.rects === !0
                ? await s.getElementRects({
                    reference: e,
                    floating: t,
                    strategy: o,
                  })
                : R.rects),
          ({ x: u, y: d } = Wh(c, f, l))),
        (p = -1)));
  }
  return { x: u, y: d, placement: f, strategy: o, middlewareData: g };
};
async function ss(e, t) {
  var n;
  t === void 0 && (t = {});
  const { x: r, y: o, platform: i, rects: s, elements: a, strategy: l } = e,
    {
      boundary: c = "clippingAncestors",
      rootBoundary: u = "viewport",
      elementContext: d = "floating",
      altBoundary: f = !1,
      padding: g = 0,
    } = cr(t, e),
    h = lb(g),
    v = a[f ? (d === "floating" ? "reference" : "floating") : d],
    b = Ga(
      await i.getClippingRect({
        element:
          (n = await (i.isElement == null ? void 0 : i.isElement(v))) == null ||
          n
            ? v
            : v.contextElement ||
              (await (i.getDocumentElement == null
                ? void 0
                : i.getDocumentElement(a.floating))),
        boundary: c,
        rootBoundary: u,
        strategy: l,
      }),
    ),
    S =
      d === "floating"
        ? { x: r, y: o, width: s.floating.width, height: s.floating.height }
        : s.reference,
    w = await (i.getOffsetParent == null
      ? void 0
      : i.getOffsetParent(a.floating)),
    E = (await (i.isElement == null ? void 0 : i.isElement(w)))
      ? (await (i.getScale == null ? void 0 : i.getScale(w))) || { x: 1, y: 1 }
      : { x: 1, y: 1 },
    R = Ga(
      i.convertOffsetParentRelativeRectToViewportRelativeRect
        ? await i.convertOffsetParentRelativeRectToViewportRelativeRect({
            elements: a,
            rect: S,
            offsetParent: w,
            strategy: l,
          })
        : S,
    );
  return {
    top: (b.top - R.top + h.top) / E.y,
    bottom: (R.bottom - b.bottom + h.bottom) / E.y,
    left: (b.left - R.left + h.left) / E.x,
    right: (R.right - b.right + h.right) / E.x,
  };
}
const iO = (e) => ({
    name: "arrow",
    options: e,
    async fn(t) {
      const {
          x: n,
          y: r,
          placement: o,
          rects: i,
          platform: s,
          elements: a,
          middlewareData: l,
        } = t,
        { element: c, padding: u = 0 } = cr(e, t) || {};
      if (c == null) return {};
      const d = lb(u),
        f = { x: n, y: r },
        g = df(o),
        h = uf(g),
        p = await s.getDimensions(c),
        v = g === "y",
        b = v ? "top" : "left",
        S = v ? "bottom" : "right",
        w = v ? "clientHeight" : "clientWidth",
        E = i.reference[h] + i.reference[g] - f[g] - i.floating[h],
        R = f[g] - i.reference[g],
        N = await (s.getOffsetParent == null ? void 0 : s.getOffsetParent(c));
      let I = N ? N[w] : 0;
      (!I || !(await (s.isElement == null ? void 0 : s.isElement(N)))) &&
        (I = a.floating[w] || i.floating[h]);
      const T = E / 2 - R / 2,
        k = I / 2 - p[h] / 2 - 1,
        m = Or(d[b], k),
        A = Or(d[S], k),
        V = m,
        P = I - p[h] - A,
        F = I / 2 - p[h] / 2 + T,
        $ = Pu(V, F, P),
        H =
          !l.arrow &&
          fi(o) != null &&
          F !== $ &&
          i.reference[h] / 2 - (F < V ? m : A) - p[h] / 2 < 0,
        B = H ? (F < V ? F - V : F - P) : 0;
      return {
        [g]: f[g] + B,
        data: {
          [g]: $,
          centerOffset: F - $ - B,
          ...(H && { alignmentOffset: B }),
        },
        reset: H,
      };
    },
  }),
  sO = function (e) {
    return (
      e === void 0 && (e = {}),
      {
        name: "flip",
        options: e,
        async fn(t) {
          var n, r;
          const {
              placement: o,
              middlewareData: i,
              rects: s,
              initialPlacement: a,
              platform: l,
              elements: c,
            } = t,
            {
              mainAxis: u = !0,
              crossAxis: d = !0,
              fallbackPlacements: f,
              fallbackStrategy: g = "bestFit",
              fallbackAxisSideDirection: h = "none",
              flipAlignment: p = !0,
              ...v
            } = cr(e, t);
          if ((n = i.arrow) != null && n.alignmentOffset) return {};
          const b = ur(o),
            S = Fn(a),
            w = ur(a) === a,
            E = await (l.isRTL == null ? void 0 : l.isRTL(c.floating)),
            R = f || (w || !p ? [Ha(a)] : QT(a)),
            N = h !== "none";
          !f && N && R.push(...nO(a, p, h, E));
          const I = [a, ...R],
            T = await ss(t, v),
            k = [];
          let m = ((r = i.flip) == null ? void 0 : r.overflows) || [];
          if ((u && k.push(T[b]), d)) {
            const F = JT(o, s, E);
            k.push(T[F[0]], T[F[1]]);
          }
          if (
            ((m = [...m, { placement: o, overflows: k }]),
            !k.every((F) => F <= 0))
          ) {
            var A, V;
            const F = (((A = i.flip) == null ? void 0 : A.index) || 0) + 1,
              $ = I[F];
            if (
              $ &&
              (!(d === "alignment" ? S !== Fn($) : !1) ||
                m.every((j) => j.overflows[0] > 0 && Fn(j.placement) === S))
            )
              return {
                data: { index: F, overflows: m },
                reset: { placement: $ },
              };
            let H =
              (V = m
                .filter((B) => B.overflows[0] <= 0)
                .sort((B, j) => B.overflows[1] - j.overflows[1])[0]) == null
                ? void 0
                : V.placement;
            if (!H)
              switch (g) {
                case "bestFit": {
                  var P;
                  const B =
                    (P = m
                      .filter((j) => {
                        if (N) {
                          const G = Fn(j.placement);
                          return G === S || G === "y";
                        }
                        return !0;
                      })
                      .map((j) => [
                        j.placement,
                        j.overflows
                          .filter((G) => G > 0)
                          .reduce((G, ee) => G + ee, 0),
                      ])
                      .sort((j, G) => j[1] - G[1])[0]) == null
                      ? void 0
                      : P[0];
                  B && (H = B);
                  break;
                }
                case "initialPlacement":
                  H = a;
                  break;
              }
            if (o !== H) return { reset: { placement: H } };
          }
          return {};
        },
      }
    );
  };
function Hh(e, t) {
  return {
    top: e.top - t.height,
    right: e.right - t.width,
    bottom: e.bottom - t.height,
    left: e.left - t.width,
  };
}
function Gh(e) {
  return KT.some((t) => e[t] >= 0);
}
const aO = function (e) {
    return (
      e === void 0 && (e = {}),
      {
        name: "hide",
        options: e,
        async fn(t) {
          const { rects: n } = t,
            { strategy: r = "referenceHidden", ...o } = cr(e, t);
          switch (r) {
            case "referenceHidden": {
              const i = await ss(t, { ...o, elementContext: "reference" }),
                s = Hh(i, n.reference);
              return {
                data: { referenceHiddenOffsets: s, referenceHidden: Gh(s) },
              };
            }
            case "escaped": {
              const i = await ss(t, { ...o, altBoundary: !0 }),
                s = Hh(i, n.floating);
              return { data: { escapedOffsets: s, escaped: Gh(s) } };
            }
            default:
              return {};
          }
        },
      }
    );
  },
  cb = new Set(["left", "top"]);
async function lO(e, t) {
  const { placement: n, platform: r, elements: o } = e,
    i = await (r.isRTL == null ? void 0 : r.isRTL(o.floating)),
    s = ur(n),
    a = fi(n),
    l = Fn(n) === "y",
    c = cb.has(s) ? -1 : 1,
    u = i && l ? -1 : 1,
    d = cr(t, e);
  let {
    mainAxis: f,
    crossAxis: g,
    alignmentAxis: h,
  } = typeof d == "number"
    ? { mainAxis: d, crossAxis: 0, alignmentAxis: null }
    : {
        mainAxis: d.mainAxis || 0,
        crossAxis: d.crossAxis || 0,
        alignmentAxis: d.alignmentAxis,
      };
  return (
    a && typeof h == "number" && (g = a === "end" ? h * -1 : h),
    l ? { x: g * u, y: f * c } : { x: f * c, y: g * u }
  );
}
const cO = function (e) {
    return (
      e === void 0 && (e = 0),
      {
        name: "offset",
        options: e,
        async fn(t) {
          var n, r;
          const { x: o, y: i, placement: s, middlewareData: a } = t,
            l = await lO(t, e);
          return s === ((n = a.offset) == null ? void 0 : n.placement) &&
            (r = a.arrow) != null &&
            r.alignmentOffset
            ? {}
            : { x: o + l.x, y: i + l.y, data: { ...l, placement: s } };
        },
      }
    );
  },
  uO = function (e) {
    return (
      e === void 0 && (e = {}),
      {
        name: "shift",
        options: e,
        async fn(t) {
          const { x: n, y: r, placement: o } = t,
            {
              mainAxis: i = !0,
              crossAxis: s = !1,
              limiter: a = {
                fn: (v) => {
                  let { x: b, y: S } = v;
                  return { x: b, y: S };
                },
              },
              ...l
            } = cr(e, t),
            c = { x: n, y: r },
            u = await ss(t, l),
            d = Fn(ur(o)),
            f = cf(d);
          let g = c[f],
            h = c[d];
          if (i) {
            const v = f === "y" ? "top" : "left",
              b = f === "y" ? "bottom" : "right",
              S = g + u[v],
              w = g - u[b];
            g = Pu(S, g, w);
          }
          if (s) {
            const v = d === "y" ? "top" : "left",
              b = d === "y" ? "bottom" : "right",
              S = h + u[v],
              w = h - u[b];
            h = Pu(S, h, w);
          }
          const p = a.fn({ ...t, [f]: g, [d]: h });
          return {
            ...p,
            data: { x: p.x - n, y: p.y - r, enabled: { [f]: i, [d]: s } },
          };
        },
      }
    );
  },
  dO = function (e) {
    return (
      e === void 0 && (e = {}),
      {
        options: e,
        fn(t) {
          const { x: n, y: r, placement: o, rects: i, middlewareData: s } = t,
            { offset: a = 0, mainAxis: l = !0, crossAxis: c = !0 } = cr(e, t),
            u = { x: n, y: r },
            d = Fn(o),
            f = cf(d);
          let g = u[f],
            h = u[d];
          const p = cr(a, t),
            v =
              typeof p == "number"
                ? { mainAxis: p, crossAxis: 0 }
                : { mainAxis: 0, crossAxis: 0, ...p };
          if (l) {
            const w = f === "y" ? "height" : "width",
              E = i.reference[f] - i.floating[w] + v.mainAxis,
              R = i.reference[f] + i.reference[w] - v.mainAxis;
            g < E ? (g = E) : g > R && (g = R);
          }
          if (c) {
            var b, S;
            const w = f === "y" ? "width" : "height",
              E = cb.has(ur(o)),
              R =
                i.reference[d] -
                i.floating[w] +
                ((E && ((b = s.offset) == null ? void 0 : b[d])) || 0) +
                (E ? 0 : v.crossAxis),
              N =
                i.reference[d] +
                i.reference[w] +
                (E ? 0 : ((S = s.offset) == null ? void 0 : S[d]) || 0) -
                (E ? v.crossAxis : 0);
            h < R ? (h = R) : h > N && (h = N);
          }
          return { [f]: g, [d]: h };
        },
      }
    );
  },
  fO = function (e) {
    return (
      e === void 0 && (e = {}),
      {
        name: "size",
        options: e,
        async fn(t) {
          var n, r;
          const { placement: o, rects: i, platform: s, elements: a } = t,
            { apply: l = () => {}, ...c } = cr(e, t),
            u = await ss(t, c),
            d = ur(o),
            f = fi(o),
            g = Fn(o) === "y",
            { width: h, height: p } = i.floating;
          let v, b;
          d === "top" || d === "bottom"
            ? ((v = d),
              (b =
                f ===
                ((await (s.isRTL == null ? void 0 : s.isRTL(a.floating)))
                  ? "start"
                  : "end")
                  ? "left"
                  : "right"))
            : ((b = d), (v = f === "end" ? "top" : "bottom"));
          const S = p - u.top - u.bottom,
            w = h - u.left - u.right,
            E = Or(p - u[v], S),
            R = Or(h - u[b], w),
            N = !t.middlewareData.shift;
          let I = E,
            T = R;
          if (
            ((n = t.middlewareData.shift) != null && n.enabled.x && (T = w),
            (r = t.middlewareData.shift) != null && r.enabled.y && (I = S),
            N && !f)
          ) {
            const m = Bt(u.left, 0),
              A = Bt(u.right, 0),
              V = Bt(u.top, 0),
              P = Bt(u.bottom, 0);
            g
              ? (T = h - 2 * (m !== 0 || A !== 0 ? m + A : Bt(u.left, u.right)))
              : (I =
                  p - 2 * (V !== 0 || P !== 0 ? V + P : Bt(u.top, u.bottom)));
          }
          await l({ ...t, availableWidth: T, availableHeight: I });
          const k = await s.getDimensions(a.floating);
          return h !== k.width || p !== k.height
            ? { reset: { rects: !0 } }
            : {};
        },
      }
    );
  };
function $l() {
  return typeof window < "u";
}
function gi(e) {
  return ub(e) ? (e.nodeName || "").toLowerCase() : "#document";
}
function Ht(e) {
  var t;
  return (
    (e == null || (t = e.ownerDocument) == null ? void 0 : t.defaultView) ||
    window
  );
}
function Wn(e) {
  var t;
  return (t = (ub(e) ? e.ownerDocument : e.document) || window.document) == null
    ? void 0
    : t.documentElement;
}
function ub(e) {
  return $l() ? e instanceof Node || e instanceof Ht(e).Node : !1;
}
function wn(e) {
  return $l() ? e instanceof Element || e instanceof Ht(e).Element : !1;
}
function zn(e) {
  return $l() ? e instanceof HTMLElement || e instanceof Ht(e).HTMLElement : !1;
}
function Kh(e) {
  return !$l() || typeof ShadowRoot > "u"
    ? !1
    : e instanceof ShadowRoot || e instanceof Ht(e).ShadowRoot;
}
const gO = new Set(["inline", "contents"]);
function ws(e) {
  const { overflow: t, overflowX: n, overflowY: r, display: o } = Cn(e);
  return /auto|scroll|overlay|hidden|clip/.test(t + r + n) && !gO.has(o);
}
const hO = new Set(["table", "td", "th"]);
function pO(e) {
  return hO.has(gi(e));
}
const mO = [":popover-open", ":modal"];
function Ml(e) {
  return mO.some((t) => {
    try {
      return e.matches(t);
    } catch {
      return !1;
    }
  });
}
const vO = ["transform", "translate", "scale", "rotate", "perspective"],
  yO = ["transform", "translate", "scale", "rotate", "perspective", "filter"],
  bO = ["paint", "layout", "strict", "content"];
function ff(e) {
  const t = gf(),
    n = wn(e) ? Cn(e) : e;
  return (
    vO.some((r) => (n[r] ? n[r] !== "none" : !1)) ||
    (n.containerType ? n.containerType !== "normal" : !1) ||
    (!t && (n.backdropFilter ? n.backdropFilter !== "none" : !1)) ||
    (!t && (n.filter ? n.filter !== "none" : !1)) ||
    yO.some((r) => (n.willChange || "").includes(r)) ||
    bO.some((r) => (n.contain || "").includes(r))
  );
}
function xO(e) {
  let t = _r(e);
  for (; zn(t) && !qo(t); ) {
    if (ff(t)) return t;
    if (Ml(t)) return null;
    t = _r(t);
  }
  return null;
}
function gf() {
  return typeof CSS > "u" || !CSS.supports
    ? !1
    : CSS.supports("-webkit-backdrop-filter", "none");
}
const SO = new Set(["html", "body", "#document"]);
function qo(e) {
  return SO.has(gi(e));
}
function Cn(e) {
  return Ht(e).getComputedStyle(e);
}
function Ll(e) {
  return wn(e)
    ? { scrollLeft: e.scrollLeft, scrollTop: e.scrollTop }
    : { scrollLeft: e.scrollX, scrollTop: e.scrollY };
}
function _r(e) {
  if (gi(e) === "html") return e;
  const t = e.assignedSlot || e.parentNode || (Kh(e) && e.host) || Wn(e);
  return Kh(t) ? t.host : t;
}
function db(e) {
  const t = _r(e);
  return qo(t)
    ? e.ownerDocument
      ? e.ownerDocument.body
      : e.body
    : zn(t) && ws(t)
      ? t
      : db(t);
}
function as(e, t, n) {
  var r;
  (t === void 0 && (t = []), n === void 0 && (n = !0));
  const o = db(e),
    i = o === ((r = e.ownerDocument) == null ? void 0 : r.body),
    s = Ht(o);
  if (i) {
    const a = Ou(s);
    return t.concat(
      s,
      s.visualViewport || [],
      ws(o) ? o : [],
      a && n ? as(a) : [],
    );
  }
  return t.concat(o, as(o, [], n));
}
function Ou(e) {
  return e.parent && Object.getPrototypeOf(e.parent) ? e.frameElement : null;
}
function fb(e) {
  const t = Cn(e);
  let n = parseFloat(t.width) || 0,
    r = parseFloat(t.height) || 0;
  const o = zn(e),
    i = o ? e.offsetWidth : n,
    s = o ? e.offsetHeight : r,
    a = Wa(n) !== i || Wa(r) !== s;
  return (a && ((n = i), (r = s)), { width: n, height: r, $: a });
}
function hf(e) {
  return wn(e) ? e : e.contextElement;
}
function Lo(e) {
  const t = hf(e);
  if (!zn(t)) return Mn(1);
  const n = t.getBoundingClientRect(),
    { width: r, height: o, $: i } = fb(t);
  let s = (i ? Wa(n.width) : n.width) / r,
    a = (i ? Wa(n.height) : n.height) / o;
  return (
    (!s || !Number.isFinite(s)) && (s = 1),
    (!a || !Number.isFinite(a)) && (a = 1),
    { x: s, y: a }
  );
}
const wO = Mn(0);
function gb(e) {
  const t = Ht(e);
  return !gf() || !t.visualViewport
    ? wO
    : { x: t.visualViewport.offsetLeft, y: t.visualViewport.offsetTop };
}
function CO(e, t, n) {
  return (t === void 0 && (t = !1), !n || (t && n !== Ht(e)) ? !1 : t);
}
function lo(e, t, n, r) {
  (t === void 0 && (t = !1), n === void 0 && (n = !1));
  const o = e.getBoundingClientRect(),
    i = hf(e);
  let s = Mn(1);
  t && (r ? wn(r) && (s = Lo(r)) : (s = Lo(e)));
  const a = CO(i, n, r) ? gb(i) : Mn(0);
  let l = (o.left + a.x) / s.x,
    c = (o.top + a.y) / s.y,
    u = o.width / s.x,
    d = o.height / s.y;
  if (i) {
    const f = Ht(i),
      g = r && wn(r) ? Ht(r) : r;
    let h = f,
      p = Ou(h);
    for (; p && r && g !== h; ) {
      const v = Lo(p),
        b = p.getBoundingClientRect(),
        S = Cn(p),
        w = b.left + (p.clientLeft + parseFloat(S.paddingLeft)) * v.x,
        E = b.top + (p.clientTop + parseFloat(S.paddingTop)) * v.y;
      ((l *= v.x),
        (c *= v.y),
        (u *= v.x),
        (d *= v.y),
        (l += w),
        (c += E),
        (h = Ht(p)),
        (p = Ou(h)));
    }
  }
  return Ga({ width: u, height: d, x: l, y: c });
}
function pf(e, t) {
  const n = Ll(e).scrollLeft;
  return t ? t.left + n : lo(Wn(e)).left + n;
}
function hb(e, t, n) {
  n === void 0 && (n = !1);
  const r = e.getBoundingClientRect(),
    o = r.left + t.scrollLeft - (n ? 0 : pf(e, r)),
    i = r.top + t.scrollTop;
  return { x: o, y: i };
}
function EO(e) {
  let { elements: t, rect: n, offsetParent: r, strategy: o } = e;
  const i = o === "fixed",
    s = Wn(r),
    a = t ? Ml(t.floating) : !1;
  if (r === s || (a && i)) return n;
  let l = { scrollLeft: 0, scrollTop: 0 },
    c = Mn(1);
  const u = Mn(0),
    d = zn(r);
  if (
    (d || (!d && !i)) &&
    ((gi(r) !== "body" || ws(s)) && (l = Ll(r)), zn(r))
  ) {
    const g = lo(r);
    ((c = Lo(r)), (u.x = g.x + r.clientLeft), (u.y = g.y + r.clientTop));
  }
  const f = s && !d && !i ? hb(s, l, !0) : Mn(0);
  return {
    width: n.width * c.x,
    height: n.height * c.y,
    x: n.x * c.x - l.scrollLeft * c.x + u.x + f.x,
    y: n.y * c.y - l.scrollTop * c.y + u.y + f.y,
  };
}
function IO(e) {
  return Array.from(e.getClientRects());
}
function RO(e) {
  const t = Wn(e),
    n = Ll(e),
    r = e.ownerDocument.body,
    o = Bt(t.scrollWidth, t.clientWidth, r.scrollWidth, r.clientWidth),
    i = Bt(t.scrollHeight, t.clientHeight, r.scrollHeight, r.clientHeight);
  let s = -n.scrollLeft + pf(e);
  const a = -n.scrollTop;
  return (
    Cn(r).direction === "rtl" && (s += Bt(t.clientWidth, r.clientWidth) - o),
    { width: o, height: i, x: s, y: a }
  );
}
function kO(e, t) {
  const n = Ht(e),
    r = Wn(e),
    o = n.visualViewport;
  let i = r.clientWidth,
    s = r.clientHeight,
    a = 0,
    l = 0;
  if (o) {
    ((i = o.width), (s = o.height));
    const c = gf();
    (!c || (c && t === "fixed")) && ((a = o.offsetLeft), (l = o.offsetTop));
  }
  return { width: i, height: s, x: a, y: l };
}
const PO = new Set(["absolute", "fixed"]);
function TO(e, t) {
  const n = lo(e, !0, t === "fixed"),
    r = n.top + e.clientTop,
    o = n.left + e.clientLeft,
    i = zn(e) ? Lo(e) : Mn(1),
    s = e.clientWidth * i.x,
    a = e.clientHeight * i.y,
    l = o * i.x,
    c = r * i.y;
  return { width: s, height: a, x: l, y: c };
}
function qh(e, t, n) {
  let r;
  if (t === "viewport") r = kO(e, n);
  else if (t === "document") r = RO(Wn(e));
  else if (wn(t)) r = TO(t, n);
  else {
    const o = gb(e);
    r = { x: t.x - o.x, y: t.y - o.y, width: t.width, height: t.height };
  }
  return Ga(r);
}
function pb(e, t) {
  const n = _r(e);
  return n === t || !wn(n) || qo(n)
    ? !1
    : Cn(n).position === "fixed" || pb(n, t);
}
function OO(e, t) {
  const n = t.get(e);
  if (n) return n;
  let r = as(e, [], !1).filter((a) => wn(a) && gi(a) !== "body"),
    o = null;
  const i = Cn(e).position === "fixed";
  let s = i ? _r(e) : e;
  for (; wn(s) && !qo(s); ) {
    const a = Cn(s),
      l = ff(s);
    (!l && a.position === "fixed" && (o = null),
      (
        i
          ? !l && !o
          : (!l && a.position === "static" && !!o && PO.has(o.position)) ||
            (ws(s) && !l && pb(e, s))
      )
        ? (r = r.filter((u) => u !== s))
        : (o = a),
      (s = _r(s)));
  }
  return (t.set(e, r), r);
}
function _O(e) {
  let { element: t, boundary: n, rootBoundary: r, strategy: o } = e;
  const s = [
      ...(n === "clippingAncestors"
        ? Ml(t)
          ? []
          : OO(t, this._c)
        : [].concat(n)),
      r,
    ],
    a = s[0],
    l = s.reduce(
      (c, u) => {
        const d = qh(t, u, o);
        return (
          (c.top = Bt(d.top, c.top)),
          (c.right = Or(d.right, c.right)),
          (c.bottom = Or(d.bottom, c.bottom)),
          (c.left = Bt(d.left, c.left)),
          c
        );
      },
      qh(t, a, o),
    );
  return {
    width: l.right - l.left,
    height: l.bottom - l.top,
    x: l.left,
    y: l.top,
  };
}
function AO(e) {
  const { width: t, height: n } = fb(e);
  return { width: t, height: n };
}
function NO(e, t, n) {
  const r = zn(t),
    o = Wn(t),
    i = n === "fixed",
    s = lo(e, !0, i, t);
  let a = { scrollLeft: 0, scrollTop: 0 };
  const l = Mn(0);
  function c() {
    l.x = pf(o);
  }
  if (r || (!r && !i))
    if (((gi(t) !== "body" || ws(o)) && (a = Ll(t)), r)) {
      const g = lo(t, !0, i, t);
      ((l.x = g.x + t.clientLeft), (l.y = g.y + t.clientTop));
    } else o && c();
  i && !r && o && c();
  const u = o && !r && !i ? hb(o, a) : Mn(0),
    d = s.left + a.scrollLeft - l.x - u.x,
    f = s.top + a.scrollTop - l.y - u.y;
  return { x: d, y: f, width: s.width, height: s.height };
}
function Dc(e) {
  return Cn(e).position === "static";
}
function Yh(e, t) {
  if (!zn(e) || Cn(e).position === "fixed") return null;
  if (t) return t(e);
  let n = e.offsetParent;
  return (Wn(e) === n && (n = n.ownerDocument.body), n);
}
function mb(e, t) {
  const n = Ht(e);
  if (Ml(e)) return n;
  if (!zn(e)) {
    let o = _r(e);
    for (; o && !qo(o); ) {
      if (wn(o) && !Dc(o)) return o;
      o = _r(o);
    }
    return n;
  }
  let r = Yh(e, t);
  for (; r && pO(r) && Dc(r); ) r = Yh(r, t);
  return r && qo(r) && Dc(r) && !ff(r) ? n : r || xO(e) || n;
}
const VO = async function (e) {
  const t = this.getOffsetParent || mb,
    n = this.getDimensions,
    r = await n(e.floating);
  return {
    reference: NO(e.reference, await t(e.floating), e.strategy),
    floating: { x: 0, y: 0, width: r.width, height: r.height },
  };
};
function FO(e) {
  return Cn(e).direction === "rtl";
}
const DO = {
  convertOffsetParentRelativeRectToViewportRelativeRect: EO,
  getDocumentElement: Wn,
  getClippingRect: _O,
  getOffsetParent: mb,
  getElementRects: VO,
  getClientRects: IO,
  getDimensions: AO,
  getScale: Lo,
  isElement: wn,
  isRTL: FO,
};
function vb(e, t) {
  return (
    e.x === t.x && e.y === t.y && e.width === t.width && e.height === t.height
  );
}
function $O(e, t) {
  let n = null,
    r;
  const o = Wn(e);
  function i() {
    var a;
    (clearTimeout(r), (a = n) == null || a.disconnect(), (n = null));
  }
  function s(a, l) {
    (a === void 0 && (a = !1), l === void 0 && (l = 1), i());
    const c = e.getBoundingClientRect(),
      { left: u, top: d, width: f, height: g } = c;
    if ((a || t(), !f || !g)) return;
    const h = js(d),
      p = js(o.clientWidth - (u + f)),
      v = js(o.clientHeight - (d + g)),
      b = js(u),
      w = {
        rootMargin: -h + "px " + -p + "px " + -v + "px " + -b + "px",
        threshold: Bt(0, Or(1, l)) || 1,
      };
    let E = !0;
    function R(N) {
      const I = N[0].intersectionRatio;
      if (I !== l) {
        if (!E) return s();
        I
          ? s(!1, I)
          : (r = setTimeout(() => {
              s(!1, 1e-7);
            }, 1e3));
      }
      (I === 1 && !vb(c, e.getBoundingClientRect()) && s(), (E = !1));
    }
    try {
      n = new IntersectionObserver(R, { ...w, root: o.ownerDocument });
    } catch {
      n = new IntersectionObserver(R, w);
    }
    n.observe(e);
  }
  return (s(!0), i);
}
function MO(e, t, n, r) {
  r === void 0 && (r = {});
  const {
      ancestorScroll: o = !0,
      ancestorResize: i = !0,
      elementResize: s = typeof ResizeObserver == "function",
      layoutShift: a = typeof IntersectionObserver == "function",
      animationFrame: l = !1,
    } = r,
    c = hf(e),
    u = o || i ? [...(c ? as(c) : []), ...as(t)] : [];
  u.forEach((b) => {
    (o && b.addEventListener("scroll", n, { passive: !0 }),
      i && b.addEventListener("resize", n));
  });
  const d = c && a ? $O(c, n) : null;
  let f = -1,
    g = null;
  s &&
    ((g = new ResizeObserver((b) => {
      let [S] = b;
      (S &&
        S.target === c &&
        g &&
        (g.unobserve(t),
        cancelAnimationFrame(f),
        (f = requestAnimationFrame(() => {
          var w;
          (w = g) == null || w.observe(t);
        }))),
        n());
    })),
    c && !l && g.observe(c),
    g.observe(t));
  let h,
    p = l ? lo(e) : null;
  l && v();
  function v() {
    const b = lo(e);
    (p && !vb(p, b) && n(), (p = b), (h = requestAnimationFrame(v)));
  }
  return (
    n(),
    () => {
      var b;
      (u.forEach((S) => {
        (o && S.removeEventListener("scroll", n),
          i && S.removeEventListener("resize", n));
      }),
        d == null || d(),
        (b = g) == null || b.disconnect(),
        (g = null),
        l && cancelAnimationFrame(h));
    }
  );
}
const LO = cO,
  zO = uO,
  BO = sO,
  jO = fO,
  UO = aO,
  WO = iO,
  HO = dO,
  GO = (e, t, n) => {
    const r = new Map(),
      o = { platform: DO, ...n },
      i = { ...o.platform, _c: r };
    return oO(e, t, { ...o, platform: i });
  };
function Xh(e = 0, t = 0, n = 0, r = 0) {
  if (typeof DOMRect == "function") return new DOMRect(e, t, n, r);
  const o = {
    x: e,
    y: t,
    width: n,
    height: r,
    top: t,
    right: e + n,
    bottom: t + r,
    left: e,
  };
  return { ...o, toJSON: () => o };
}
function KO(e) {
  if (!e) return Xh();
  const { x: t, y: n, width: r, height: o } = e;
  return Xh(t, n, r, o);
}
function qO(e, t) {
  return {
    contextElement: It(e) ? e : void 0,
    getBoundingClientRect: () => {
      const n = e,
        r = t == null ? void 0 : t(n);
      return r || !n ? KO(r) : n.getBoundingClientRect();
    },
  };
}
var Jh = (e) => ({ variable: e, reference: `var(${e})` }),
  yb = {
    transformOrigin: Jh("--transform-origin"),
    arrowOffset: Jh("--arrow-offset"),
  },
  YO = (e) => ({
    top: "bottom center",
    "top-start": e ? `${e.x}px bottom` : "left bottom",
    "top-end": e ? `${e.x}px bottom` : "right bottom",
    bottom: "top center",
    "bottom-start": e ? `${e.x}px top` : "top left",
    "bottom-end": e ? `${e.x}px top` : "top right",
    left: "right center",
    "left-start": e ? `right ${e.y}px` : "right top",
    "left-end": e ? `right ${e.y}px` : "right bottom",
    right: "left center",
    "right-start": e ? `left ${e.y}px` : "left top",
    "right-end": e ? `left ${e.y}px` : "left bottom",
  }),
  XO = {
    name: "transformOrigin",
    fn({ placement: e, elements: t, middlewareData: n }) {
      const { arrow: r } = n,
        o = YO(r)[e],
        { floating: i } = t;
      return (
        i.style.setProperty(yb.transformOrigin.variable, o),
        { data: { transformOrigin: o } }
      );
    },
  },
  JO = {
    name: "rects",
    fn({ rects: e }) {
      return { data: e };
    },
  },
  QO = (e) => {
    if (e)
      return {
        name: "shiftArrow",
        fn({ placement: t, middlewareData: n }) {
          if (!n.arrow) return {};
          const { x: r, y: o } = n.arrow,
            i = t.split("-")[0];
          return (
            Object.assign(e.style, {
              left: r != null ? `${r}px` : "",
              top: o != null ? `${o}px` : "",
              [i]: `calc(100% + ${yb.arrowOffset.reference})`,
            }),
            {}
          );
        },
      };
  };
function ZO(e) {
  const [t, n] = e.split("-");
  return { side: t, align: n, hasAlign: n != null };
}
function e_(e) {
  return e.split("-")[0];
}
var t_ = {
  strategy: "absolute",
  placement: "bottom",
  listeners: !0,
  gutter: 8,
  flip: !0,
  slide: !0,
  overlap: !1,
  sameWidth: !1,
  fitViewport: !1,
  overflowPadding: 8,
  arrowPadding: 4,
};
function Qh(e, t) {
  const n = e.devicePixelRatio || 1;
  return Math.round(t * n) / n;
}
function bb(e) {
  return cP(e.boundary);
}
function n_(e, t) {
  if (e) return WO({ element: e, padding: t.arrowPadding });
}
function r_(e, t) {
  if (!nP(t.offset ?? t.gutter))
    return LO(({ placement: n }) => {
      var c, u;
      const r = ((e == null ? void 0 : e.clientHeight) || 0) / 2,
        o = ((c = t.offset) == null ? void 0 : c.mainAxis) ?? t.gutter,
        i = typeof o == "number" ? o + r : (o ?? r),
        { hasAlign: s } = ZO(n),
        a = s ? void 0 : t.shift,
        l = ((u = t.offset) == null ? void 0 : u.crossAxis) ?? a;
      return qd({ crossAxis: l, mainAxis: i, alignmentAxis: t.shift });
    });
}
function o_(e) {
  if (e.flip)
    return BO({
      boundary: bb(e),
      padding: e.overflowPadding,
      fallbackPlacements: e.flip === !0 ? void 0 : e.flip,
    });
}
function i_(e) {
  if (!(!e.slide && !e.overlap))
    return zO({
      boundary: bb(e),
      mainAxis: e.slide,
      crossAxis: e.overlap,
      padding: e.overflowPadding,
      limiter: HO(),
    });
}
function s_(e) {
  return jO({
    padding: e.overflowPadding,
    apply({ elements: t, rects: n, availableHeight: r, availableWidth: o }) {
      const i = t.floating,
        s = Math.round(n.reference.width);
      ((o = Math.floor(o)),
        (r = Math.floor(r)),
        i.style.setProperty("--reference-width", `${s}px`),
        i.style.setProperty("--available-width", `${o}px`),
        i.style.setProperty("--available-height", `${r}px`));
    },
  });
}
function a_(e) {
  var t;
  if (e.hideWhenDetached)
    return UO({
      strategy: "referenceHidden",
      boundary:
        ((t = e.boundary) == null ? void 0 : t.call(e)) ?? "clippingAncestors",
    });
}
function l_(e) {
  return e
    ? e === !0
      ? {
          ancestorResize: !0,
          ancestorScroll: !0,
          elementResize: !0,
          layoutShift: !0,
        }
      : e
    : {};
}
function c_(e, t, n = {}) {
  const r = qO(e, n.getAnchorRect);
  if (!t || !r) return;
  const o = Object.assign({}, t_, n),
    i = t.querySelector("[data-part=arrow]"),
    s = [r_(i, o), o_(o), i_(o), n_(i, o), QO(i), XO, s_(o), a_(o), JO],
    { placement: a, strategy: l, onComplete: c, onPositioned: u } = o,
    d = async () => {
      var E;
      if (!r || !t) return;
      const p = await GO(r, t, { placement: a, middleware: s, strategy: l });
      (c == null || c(p), u == null || u({ placed: !0 }));
      const v = St(t),
        b = Qh(v, p.x),
        S = Qh(v, p.y);
      (t.style.setProperty("--x", `${b}px`),
        t.style.setProperty("--y", `${S}px`),
        o.hideWhenDetached &&
          (((E = p.middlewareData.hide) == null ? void 0 : E.referenceHidden)
            ? (t.style.setProperty("visibility", "hidden"),
              t.style.setProperty("pointer-events", "none"))
            : (t.style.removeProperty("visibility"),
              t.style.removeProperty("pointer-events"))));
      const w = t.firstElementChild;
      if (w) {
        const R = BP(w);
        t.style.setProperty("--z-index", R.zIndex);
      }
    },
    f = async () => {
      n.updatePosition
        ? (await n.updatePosition({ updatePosition: d }),
          u == null || u({ placed: !0 }))
        : await d();
    },
    g = l_(o.listeners),
    h = o.listeners ? MO(r, t, f, g) : uP;
  return (
    f(),
    () => {
      (h == null || h(), u == null || u({ placed: !1 }));
    }
  );
}
function En(e, t, n = {}) {
  const { defer: r, ...o } = n,
    i = r ? pe : (a) => a(),
    s = [];
  return (
    s.push(
      i(() => {
        const a = typeof e == "function" ? e() : e,
          l = typeof t == "function" ? t() : t;
        s.push(c_(a, l, o));
      }),
    ),
    () => {
      s.forEach((a) => (a == null ? void 0 : a()));
    }
  );
}
function u_(e) {
  const t = {
    each(n) {
      var r;
      for (
        let o = 0;
        o < ((r = e.frames) == null ? void 0 : r.length);
        o += 1
      ) {
        const i = e.frames[o];
        i && n(i);
      }
    },
    addEventListener(n, r, o) {
      return (
        t.each((i) => {
          try {
            i.document.addEventListener(n, r, o);
          } catch {}
        }),
        () => {
          try {
            t.removeEventListener(n, r, o);
          } catch {}
        }
      );
    },
    removeEventListener(n, r, o) {
      t.each((i) => {
        try {
          i.document.removeEventListener(n, r, o);
        } catch {}
      });
    },
  };
  return t;
}
function d_(e) {
  const t = e.frameElement != null ? e.parent : null;
  return {
    addEventListener: (n, r, o) => {
      try {
        t == null || t.addEventListener(n, r, o);
      } catch {}
      return () => {
        try {
          t == null || t.removeEventListener(n, r, o);
        } catch {}
      };
    },
    removeEventListener: (n, r, o) => {
      try {
        t == null || t.removeEventListener(n, r, o);
      } catch {}
    },
  };
}
var Zh = "pointerdown.outside",
  ep = "focus.outside";
function f_(e) {
  for (const t of e) if (It(t) && Qd(t)) return !0;
  return !1;
}
var xb = (e) => "clientY" in e;
function g_(e, t) {
  if (!xb(t) || !e) return !1;
  const n = e.getBoundingClientRect();
  return n.width === 0 || n.height === 0
    ? !1
    : n.top <= t.clientY &&
        t.clientY <= n.top + n.height &&
        n.left <= t.clientX &&
        t.clientX <= n.left + n.width;
}
function h_(e, t) {
  return (
    e.y <= t.y && t.y <= e.y + e.height && e.x <= t.x && t.x <= e.x + e.width
  );
}
function tp(e, t) {
  if (!t || !xb(e)) return !1;
  const n = t.scrollHeight > t.clientHeight,
    r = n && e.clientX > t.offsetLeft + t.clientWidth,
    o = t.scrollWidth > t.clientWidth,
    i = o && e.clientY > t.offsetTop + t.clientHeight,
    s = {
      x: t.offsetLeft,
      y: t.offsetTop,
      width: t.clientWidth + (n ? 16 : 0),
      height: t.clientHeight + (o ? 16 : 0),
    },
    a = { x: e.clientX, y: e.clientY };
  return h_(s, a) ? r || i : !1;
}
function p_(e, t) {
  const {
    exclude: n,
    onFocusOutside: r,
    onPointerDownOutside: o,
    onInteractOutside: i,
    defer: s,
  } = t;
  if (!e) return;
  const a = Vr(e),
    l = St(e),
    c = u_(l),
    u = d_(l);
  function d(S, w) {
    if (!It(w) || !w.isConnected || to(e, w) || g_(e, S)) return !1;
    const E = a.querySelector(`[aria-controls="${e.id}"]`);
    if (E) {
      const N = za(E);
      if (tp(S, N)) return !1;
    }
    const R = za(e);
    return tp(S, R) ? !1 : !(n != null && n(w));
  }
  const f = new Set(),
    g = os(e == null ? void 0 : e.getRootNode());
  function h(S) {
    function w(E) {
      var T;
      const R = s && !Lh() ? pe : (k) => k(),
        N = E ?? S,
        I = ((T = N == null ? void 0 : N.composedPath) == null
          ? void 0
          : T.call(N)) ?? [N == null ? void 0 : N.target];
      R(() => {
        const k = g ? I[0] : Tr(S);
        if (!(!e || !d(S, k))) {
          if (o || i) {
            const m = Iu(o, i);
            e.addEventListener(Zh, m, { once: !0 });
          }
          np(e, Zh, {
            bubbles: !1,
            cancelable: !0,
            detail: {
              originalEvent: N,
              contextmenu: ZP(N),
              focusable: f_(I),
              target: k,
            },
          });
        }
      });
    }
    S.pointerType === "touch"
      ? (f.forEach((E) => E()),
        f.add(vt(a, "click", w, { once: !0 })),
        f.add(u.addEventListener("click", w, { once: !0 })),
        f.add(c.addEventListener("click", w, { once: !0 })))
      : w();
  }
  const p = new Set(),
    v = setTimeout(() => {
      (p.add(vt(a, "pointerdown", h, !0)),
        p.add(u.addEventListener("pointerdown", h, !0)),
        p.add(c.addEventListener("pointerdown", h, !0)));
    }, 0);
  function b(S) {
    (s ? pe : (E) => E())(() => {
      const E = Tr(S);
      if (!(!e || !d(S, E))) {
        if (r || i) {
          const R = Iu(r, i);
          e.addEventListener(ep, R, { once: !0 });
        }
        np(e, ep, {
          bubbles: !1,
          cancelable: !0,
          detail: {
            originalEvent: S,
            contextmenu: !1,
            focusable: Qd(E),
            target: E,
          },
        });
      }
    });
  }
  return (
    Lh() ||
      (p.add(vt(a, "focusin", b, !0)),
      p.add(u.addEventListener("focusin", b, !0)),
      p.add(c.addEventListener("focusin", b, !0))),
    () => {
      (clearTimeout(v), f.forEach((S) => S()), p.forEach((S) => S()));
    }
  );
}
function m_(e, t) {
  const { defer: n } = t,
    r = n ? pe : (i) => i(),
    o = [];
  return (
    o.push(
      r(() => {
        const i = typeof e == "function" ? e() : e;
        o.push(p_(i, t));
      }),
    ),
    () => {
      o.forEach((i) => (i == null ? void 0 : i()));
    }
  );
}
function np(e, t, n) {
  const r = e.ownerDocument.defaultView || window,
    o = new r.CustomEvent(t, n);
  return e.dispatchEvent(o);
}
function v_(e, t) {
  const n = (r) => {
    r.key === "Escape" && (r.isComposing || t == null || t(r));
  };
  return vt(Vr(e), "keydown", n, { capture: !0 });
}
var fn = {
    layers: [],
    branches: [],
    count() {
      return this.layers.length;
    },
    pointerBlockingLayers() {
      return this.layers.filter((e) => e.pointerBlocking);
    },
    topMostPointerBlockingLayer() {
      return [...this.pointerBlockingLayers()].slice(-1)[0];
    },
    hasPointerBlockingLayer() {
      return this.pointerBlockingLayers().length > 0;
    },
    isBelowPointerBlockingLayer(e) {
      var r;
      const t = this.indexOf(e),
        n = this.topMostPointerBlockingLayer()
          ? this.indexOf(
              (r = this.topMostPointerBlockingLayer()) == null
                ? void 0
                : r.node,
            )
          : -1;
      return t < n;
    },
    isTopMost(e) {
      const t = this.layers[this.count() - 1];
      return (t == null ? void 0 : t.node) === e;
    },
    getNestedLayers(e) {
      return Array.from(this.layers).slice(this.indexOf(e) + 1);
    },
    isInNestedLayer(e, t) {
      return this.getNestedLayers(e).some((n) => to(n.node, t));
    },
    isInBranch(e) {
      return Array.from(this.branches).some((t) => to(t, e));
    },
    add(e) {
      const t = this.layers.push(e);
      e.node.style.setProperty("--layer-index", `${t}`);
    },
    addBranch(e) {
      this.branches.push(e);
    },
    remove(e) {
      const t = this.indexOf(e);
      t < 0 ||
        (t < this.count() - 1 &&
          this.getNestedLayers(e).forEach((r) => r.dismiss()),
        this.layers.splice(t, 1),
        e.style.removeProperty("--layer-index"));
    },
    removeBranch(e) {
      const t = this.branches.indexOf(e);
      t >= 0 && this.branches.splice(t, 1);
    },
    indexOf(e) {
      return this.layers.findIndex((t) => t.node === e);
    },
    dismiss(e) {
      var t;
      (t = this.layers[this.indexOf(e)]) == null || t.dismiss();
    },
    clear() {
      this.remove(this.layers[0].node);
    },
  },
  rp;
function op() {
  fn.layers.forEach(({ node: e }) => {
    e.style.pointerEvents = fn.isBelowPointerBlockingLayer(e) ? "none" : "auto";
  });
}
function y_(e) {
  e.style.pointerEvents = "";
}
function b_(e, t) {
  const n = Vr(e),
    r = [];
  if (
    (fn.hasPointerBlockingLayer() &&
      !n.body.hasAttribute("data-inert") &&
      ((rp = document.body.style.pointerEvents),
      queueMicrotask(() => {
        ((n.body.style.pointerEvents = "none"),
          n.body.setAttribute("data-inert", ""));
      })),
    t)
  ) {
    const o = FT(t, (i) => {
      r.push(OT(i, { pointerEvents: "auto" }));
    });
    r.push(o);
  }
  return () => {
    fn.hasPointerBlockingLayer() ||
      (queueMicrotask(() => {
        ((n.body.style.pointerEvents = rp),
          n.body.removeAttribute("data-inert"),
          n.body.style.length === 0 && n.body.removeAttribute("style"));
      }),
      r.forEach((o) => o()));
  };
}
function x_(e, t) {
  const { warnOnMissingNode: n = !0 } = t;
  if (n && !e) {
    H0("[@zag-js/dismissable] node is `null` or `undefined`");
    return;
  }
  if (!e) return;
  const { onDismiss: r, pointerBlocking: o, exclude: i, debug: s } = t,
    a = { dismiss: r, node: e, pointerBlocking: o };
  (fn.add(a), op());
  function l(g) {
    var p, v;
    const h = Tr(g.detail.originalEvent);
    fn.isBelowPointerBlockingLayer(e) ||
      fn.isInBranch(h) ||
      ((p = t.onPointerDownOutside) == null || p.call(t, g),
      (v = t.onInteractOutside) == null || v.call(t, g),
      !g.defaultPrevented &&
        (s && console.log("onPointerDownOutside:", g.detail.originalEvent),
        r == null || r()));
  }
  function c(g) {
    var p, v;
    const h = Tr(g.detail.originalEvent);
    fn.isInBranch(h) ||
      ((p = t.onFocusOutside) == null || p.call(t, g),
      (v = t.onInteractOutside) == null || v.call(t, g),
      !g.defaultPrevented &&
        (s && console.log("onFocusOutside:", g.detail.originalEvent),
        r == null || r()));
  }
  function u(g) {
    var h;
    fn.isTopMost(e) &&
      ((h = t.onEscapeKeyDown) == null || h.call(t, g),
      !g.defaultPrevented && r && (g.preventDefault(), r()));
  }
  function d(g) {
    var b;
    if (!e) return !1;
    const h = typeof i == "function" ? i() : i,
      p = Array.isArray(h) ? h : [h],
      v =
        (b = t.persistentElements) == null
          ? void 0
          : b.map((S) => S()).filter(It);
    return (
      v && p.push(...v),
      p.some((S) => to(S, g)) || fn.isInNestedLayer(e, g)
    );
  }
  const f = [
    o ? b_(e, t.persistentElements) : void 0,
    v_(e, u),
    m_(e, {
      exclude: d,
      onFocusOutside: c,
      onPointerDownOutside: l,
      defer: t.defer,
    }),
  ];
  return () => {
    (fn.remove(e), op(), y_(e), f.forEach((g) => (g == null ? void 0 : g())));
  };
}
function Cs(e, t) {
  const { defer: n } = t,
    r = n ? pe : (i) => i(),
    o = [];
  return (
    o.push(
      r(() => {
        const i = L0(e) ? e() : e;
        o.push(x_(i, t));
      }),
    ),
    () => {
      o.forEach((i) => (i == null ? void 0 : i()));
    }
  );
}
var Sb = te("color-picker", [
  "root",
  "label",
  "control",
  "trigger",
  "positioner",
  "content",
  "area",
  "areaThumb",
  "valueText",
  "areaBackground",
  "channelSlider",
  "channelSliderLabel",
  "channelSliderTrack",
  "channelSliderThumb",
  "channelSliderValueText",
  "channelInput",
  "transparencyGrid",
  "swatchGroup",
  "swatchTrigger",
  "swatchIndicator",
  "swatch",
  "eyeDropperTrigger",
  "formatTrigger",
  "formatSelect",
]);
Sb.build();
var S_ = (e) => {
    var t;
    return (
      ((t = e.ids) == null ? void 0 : t.hiddenInput) ??
      `color-picker:${e.id}:hidden-input`
    );
  },
  w_ = (e) => {
    var t;
    return (
      ((t = e.ids) == null ? void 0 : t.control) ??
      `color-picker:${e.id}:control`
    );
  },
  C_ = (e) => {
    var t;
    return (
      ((t = e.ids) == null ? void 0 : t.trigger) ??
      `color-picker:${e.id}:trigger`
    );
  },
  E_ = (e) => {
    var t;
    return (
      ((t = e.ids) == null ? void 0 : t.content) ??
      `color-picker:${e.id}:content`
    );
  },
  I_ = (e) => {
    var t;
    return (
      ((t = e.ids) == null ? void 0 : t.positioner) ??
      `color-picker:${e.id}:positioner`
    );
  },
  R_ = (e) => {
    var t;
    return (
      ((t = e.ids) == null ? void 0 : t.formatSelect) ??
      `color-picker:${e.id}:format-select`
    );
  },
  k_ = (e) => {
    var t;
    return (
      ((t = e.ids) == null ? void 0 : t.area) ?? `color-picker:${e.id}:area`
    );
  },
  P_ = (e) => {
    var t;
    return (
      ((t = e.ids) == null ? void 0 : t.areaThumb) ??
      `color-picker:${e.id}:area-thumb`
    );
  },
  T_ = (e, t) => {
    var n, r;
    return (
      ((r = (n = e.ids) == null ? void 0 : n.channelSliderTrack) == null
        ? void 0
        : r.call(n, t)) ?? `color-picker:${e.id}:slider-track:${t}`
    );
  },
  O_ = (e, t) => {
    var n, r;
    return (
      ((r = (n = e.ids) == null ? void 0 : n.channelSliderThumb) == null
        ? void 0
        : r.call(n, t)) ?? `color-picker:${e.id}:slider-thumb:${t}`
    );
  },
  va = (e) => e.getById(E_(e)),
  __ = (e) => e.getById(P_(e)),
  A_ = (e, t) => e.getById(O_(e, t)),
  N_ = (e) => e.getById(R_(e)),
  ip = (e) => e.getById(S_(e)),
  V_ = (e) => e.getById(k_(e)),
  F_ = (e, t) => {
    const n = V_(e);
    if (!n) return;
    const { percent: r } = tb(t, n);
    return r;
  },
  D_ = (e) => e.getById(w_(e)),
  $c = (e) => e.getById(C_(e)),
  $_ = (e) => e.getById(I_(e)),
  M_ = (e, t) => e.getById(T_(e, t)),
  L_ = (e, t, n) => {
    const r = M_(e, n);
    if (!r) return;
    const { percent: o } = tb(t, r);
    return o;
  },
  z_ = (e) => [
    ...ja(va(e), "input[data-channel]"),
    ...ja(D_(e), "input[data-channel]"),
  ];
function B_(e, t) {
  if (t == null) return "";
  if (t === "hex") return e.toString("hex");
  if (t === "css") return e.toString("css");
  if (t in e) return e.getChannelValue(t).toString();
  const n = e.getFormat() === "hsla";
  switch (t) {
    case "hue":
      return n
        ? e.toFormat("hsla").getChannelValue("hue").toString()
        : e.toFormat("hsba").getChannelValue("hue").toString();
    case "saturation":
      return n
        ? e.toFormat("hsla").getChannelValue("saturation").toString()
        : e.toFormat("hsba").getChannelValue("saturation").toString();
    case "lightness":
      return e.toFormat("hsla").getChannelValue("lightness").toString();
    case "brightness":
      return e.toFormat("hsba").getChannelValue("brightness").toString();
    case "red":
    case "green":
    case "blue":
      return e.toFormat("rgba").getChannelValue(t).toString();
    default:
      return e.getChannelValue(t).toString();
  }
}
var sp = (e) => Ua(e),
  j_ = /^[0-9a-fA-F]{3,8}$/;
function U_(e) {
  return j_.test(e);
}
function W_(e) {
  return e.startsWith("#") ? e : U_(e) ? `#${e}` : e;
}
var { and: H_ } = Fr();
H_("isOpenControlled", "closeOnSelect");
function ap(e, t, n) {
  const r = z_(e);
  pe(() => {
    r.forEach((o) => {
      const i = o.dataset.channel;
      Fl(o, B_(n || t, i));
    });
  });
}
function G_(e, t) {
  const n = N_(e);
  n && pe(() => Fl(n, t));
}
se()([
  "closeOnSelect",
  "dir",
  "disabled",
  "format",
  "defaultFormat",
  "getRootNode",
  "id",
  "ids",
  "initialFocusEl",
  "inline",
  "name",
  "positioning",
  "onFocusOutside",
  "onFormatChange",
  "onInteractOutside",
  "onOpenChange",
  "onPointerDownOutside",
  "onValueChange",
  "onValueChangeEnd",
  "defaultOpen",
  "open",
  "positioning",
  "required",
  "readOnly",
  "value",
  "defaultValue",
  "invalid",
  "openAutoFocus",
]);
se()(["xChannel", "yChannel"]);
se()(["channel", "orientation"]);
se()(["value", "disabled"]);
se()(["value", "respectAlpha"]);
se()(["size"]);
var wb = te("accordion").parts(
  "root",
  "item",
  "itemTrigger",
  "itemContent",
  "itemIndicator",
);
wb.build();
var Cb = (e) => {
    var t;
    return ((t = e.ids) == null ? void 0 : t.root) ?? `accordion:${e.id}`;
  },
  Eb = (e, t) => {
    var n, r;
    return (
      ((r = (n = e.ids) == null ? void 0 : n.itemTrigger) == null
        ? void 0
        : r.call(n, t)) ?? `accordion:${e.id}:trigger:${t}`
    );
  },
  K_ = (e) => e.getById(Cb(e)),
  zl = (e) => {
    const n = `[aria-controls][data-ownedby='${CSS.escape(Cb(e))}']:not([disabled])`;
    return ja(K_(e), n);
  },
  q_ = (e) => Ui(zl(e)),
  Y_ = (e) => Kd(zl(e)),
  X_ = (e, t) => ET(zl(e), Eb(e, t)),
  J_ = (e, t) => IT(zl(e), Eb(e, t)),
  { and: Q_, not: Z_ } = Fr();
(Q_("isExpanded", "canToggle"), Z_("isExpanded"));
se()([
  "collapsible",
  "dir",
  "disabled",
  "getRootNode",
  "id",
  "ids",
  "multiple",
  "onFocusChange",
  "onValueChange",
  "orientation",
  "value",
  "defaultValue",
]);
se()(["value", "disabled"]);
var Di = (e, t) => ({ x: e, y: t });
function eA(e) {
  const { x: t, y: n, width: r, height: o } = e,
    i = t + r / 2,
    s = n + o / 2;
  return {
    x: t,
    y: n,
    width: r,
    height: o,
    minX: t,
    minY: n,
    maxX: t + r,
    maxY: n + o,
    midX: i,
    midY: s,
    center: Di(i, s),
  };
}
function tA(e) {
  const t = Di(e.minX, e.minY),
    n = Di(e.maxX, e.minY),
    r = Di(e.maxX, e.maxY),
    o = Di(e.minX, e.maxY);
  return { top: t, right: n, bottom: r, left: o };
}
function nA(e, t) {
  const n = eA(e),
    { top: r, right: o, left: i, bottom: s } = tA(n),
    [a] = t.split("-");
  return {
    top: [i, r, o, s],
    right: [r, o, s, i],
    bottom: [r, i, s, o],
    left: [o, r, i, s],
  }[a];
}
function rA(e, t) {
  const { x: n, y: r } = t;
  let o = !1;
  for (let i = 0, s = e.length - 1; i < e.length; s = i++) {
    const a = e[i].x,
      l = e[i].y,
      c = e[s].x,
      u = e[s].y;
    l > r != u > r && n < ((c - a) * (r - l)) / (u - l) + a && (o = !o);
  }
  return o;
}
var Ib = te("avatar").parts("root", "image", "fallback");
Ib.build();
se()(["dir", "id", "ids", "onStatusChange", "getRootNode"]);
function oA(e) {
  return !(
    e.metaKey ||
    (!Vl() && e.altKey) ||
    e.ctrlKey ||
    e.key === "Control" ||
    e.key === "Shift" ||
    e.key === "Meta"
  );
}
var iA = new Set([
  "checkbox",
  "radio",
  "range",
  "color",
  "file",
  "image",
  "button",
  "submit",
  "reset",
]);
function sA(e, t, n) {
  const r = n ? Tr(n) : null,
    o = St(r);
  return (
    (e =
      e ||
      (r instanceof o.HTMLInputElement &&
        !iA.has(r == null ? void 0 : r.type)) ||
      r instanceof o.HTMLTextAreaElement ||
      (r instanceof o.HTMLElement && r.isContentEditable)),
    !(
      e &&
      t === "keyboard" &&
      n instanceof o.KeyboardEvent &&
      !Reflect.has(aA, n.key)
    )
  );
}
var go = null,
  _u = new Set(),
  Wi = new Map(),
  co = !1,
  Au = !1,
  aA = { Tab: !0, Escape: !0 };
function Bl(e, t) {
  for (let n of _u) n(e, t);
}
function Ka(e) {
  ((co = !0), oA(e) && ((go = "keyboard"), Bl("keyboard", e)));
}
function en(e) {
  ((go = "pointer"),
    (e.type === "mousedown" || e.type === "pointerdown") &&
      ((co = !0), Bl("pointer", e)));
}
function Rb(e) {
  QP(e) && ((co = !0), (go = "virtual"));
}
function kb(e) {
  const t = Tr(e);
  t === St(t) ||
    t === Vr(t) ||
    (!co && !Au && ((go = "virtual"), Bl("virtual", e)), (co = !1), (Au = !1));
}
function Pb() {
  ((co = !1), (Au = !0));
}
function lA(e) {
  if (typeof window > "u" || Wi.get(St(e))) return;
  const t = St(e),
    n = Vr(e);
  let r = t.HTMLElement.prototype.focus;
  function o() {
    ((go = "virtual"),
      Bl("virtual", null),
      (co = !0),
      r.apply(this, arguments));
  }
  (Object.defineProperty(t.HTMLElement.prototype, "focus", {
    configurable: !0,
    value: o,
  }),
    n.addEventListener("keydown", Ka, !0),
    n.addEventListener("keyup", Ka, !0),
    n.addEventListener("click", Rb, !0),
    t.addEventListener("focus", kb, !0),
    t.addEventListener("blur", Pb, !1),
    typeof t.PointerEvent < "u"
      ? (n.addEventListener("pointerdown", en, !0),
        n.addEventListener("pointermove", en, !0),
        n.addEventListener("pointerup", en, !0))
      : (n.addEventListener("mousedown", en, !0),
        n.addEventListener("mousemove", en, !0),
        n.addEventListener("mouseup", en, !0)),
    t.addEventListener(
      "beforeunload",
      () => {
        cA(e);
      },
      { once: !0 },
    ),
    Wi.set(t, { focus: r }));
}
var cA = (e, t) => {
  const n = St(e),
    r = Vr(e);
  Wi.has(n) &&
    ((n.HTMLElement.prototype.focus = Wi.get(n).focus),
    r.removeEventListener("keydown", Ka, !0),
    r.removeEventListener("keyup", Ka, !0),
    r.removeEventListener("click", Rb, !0),
    n.removeEventListener("focus", kb, !0),
    n.removeEventListener("blur", Pb, !1),
    typeof n.PointerEvent < "u"
      ? (r.removeEventListener("pointerdown", en, !0),
        r.removeEventListener("pointermove", en, !0),
        r.removeEventListener("pointerup", en, !0))
      : (r.removeEventListener("mousedown", en, !0),
        r.removeEventListener("mousemove", en, !0),
        r.removeEventListener("mouseup", en, !0)),
    Wi.delete(n));
};
function lp() {
  return go === "keyboard";
}
function uA(e = {}) {
  const { isTextInput: t, autoFocus: n, onChange: r, root: o } = e;
  (lA(o), r == null || r({ isFocusVisible: n || lp(), modality: go }));
  const i = (s, a) => {
    sA(!!t, s, a) && (r == null || r({ isFocusVisible: lp(), modality: s }));
  };
  return (
    _u.add(i),
    () => {
      _u.delete(i);
    }
  );
}
var Tb = te("checkbox").parts("root", "label", "control", "indicator");
Tb.build();
se()([
  "defaultChecked",
  "checked",
  "dir",
  "disabled",
  "form",
  "getRootNode",
  "id",
  "ids",
  "invalid",
  "name",
  "onCheckedChange",
  "readOnly",
  "required",
  "value",
]);
const dA = Tb.extendWith("group");
var Ob = te("clipboard").parts(
  "root",
  "control",
  "trigger",
  "indicator",
  "input",
  "label",
);
Ob.build();
se()([
  "getRootNode",
  "id",
  "ids",
  "value",
  "defaultValue",
  "timeout",
  "onStatusChange",
  "onValueChange",
]);
se()(["copied"]);
const fA = Sb.extendWith("view");
var gA = Object.defineProperty,
  hA = (e, t, n) =>
    t in e
      ? gA(e, t, { enumerable: !0, configurable: !0, writable: !0, value: n })
      : (e[t] = n),
  z = (e, t, n) => hA(e, typeof t != "symbol" ? t + "" : t, n),
  ya = {
    itemToValue(e) {
      return typeof e == "string" ? e : Kr(e) && Cr(e, "value") ? e.value : "";
    },
    itemToString(e) {
      return typeof e == "string"
        ? e
        : Kr(e) && Cr(e, "label")
          ? e.label
          : ya.itemToValue(e);
    },
    isItemDisabled(e) {
      return Kr(e) && Cr(e, "disabled") ? !!e.disabled : !1;
    },
  },
  jl = class _b {
    constructor(t) {
      ((this.options = t),
        z(this, "items"),
        z(
          this,
          "copy",
          (n) => new _b({ ...this.options, items: n ?? [...this.items] }),
        ),
        z(this, "isEqual", (n) => yn(this.items, n.items)),
        z(this, "setItems", (n) => this.copy(n)),
        z(this, "getValues", (n = this.items) =>
          Array.from(n)
            .map((r) => this.getItemValue(r))
            .filter(Boolean),
        ),
        z(this, "find", (n) => {
          if (n == null) return null;
          const r = this.indexOf(n);
          return r != null ? this.at(r) : null;
        }),
        z(this, "findMany", (n) =>
          Array.from(n)
            .map((r) => this.find(r))
            .filter((r) => r != null),
        ),
        z(this, "at", (n) => {
          if (!this.options.groupBy && !this.options.groupSort)
            return this.items[n] ?? null;
          let r = 0;
          const o = this.group();
          for (const [, i] of o)
            for (const s of i) {
              if (r === n) return s;
              r++;
            }
          return null;
        }),
        z(this, "sortFn", (n, r) => {
          const o = this.indexOf(n),
            i = this.indexOf(r);
          return (o ?? 0) - (i ?? 0);
        }),
        z(this, "sort", (n) => [...n].sort(this.sortFn.bind(this))),
        z(this, "getItemValue", (n) => {
          var r, o;
          return n == null
            ? null
            : (((o = (r = this.options).itemToValue) == null
                ? void 0
                : o.call(r, n)) ?? ya.itemToValue(n));
        }),
        z(this, "getItemDisabled", (n) => {
          var r, o;
          return n == null
            ? !1
            : (((o = (r = this.options).isItemDisabled) == null
                ? void 0
                : o.call(r, n)) ?? ya.isItemDisabled(n));
        }),
        z(this, "stringifyItem", (n) => {
          var r, o;
          return n == null
            ? null
            : (((o = (r = this.options).itemToString) == null
                ? void 0
                : o.call(r, n)) ?? ya.itemToString(n));
        }),
        z(this, "stringify", (n) =>
          n == null ? null : this.stringifyItem(this.find(n)),
        ),
        z(this, "stringifyItems", (n, r = ", ") =>
          Array.from(n)
            .map((o) => this.stringifyItem(o))
            .filter(Boolean)
            .join(r),
        ),
        z(this, "stringifyMany", (n, r) =>
          this.stringifyItems(this.findMany(n), r),
        ),
        z(this, "has", (n) => this.indexOf(n) !== -1),
        z(this, "hasItem", (n) =>
          n == null ? !1 : this.has(this.getItemValue(n)),
        ),
        z(this, "group", () => {
          const { groupBy: n, groupSort: r } = this.options;
          if (!n) return [["", [...this.items]]];
          const o = new Map();
          this.items.forEach((s, a) => {
            const l = n(s, a);
            (o.has(l) || o.set(l, []), o.get(l).push(s));
          });
          let i = Array.from(o.entries());
          return (
            r &&
              i.sort(([s], [a]) => {
                if (typeof r == "function") return r(s, a);
                if (Array.isArray(r)) {
                  const l = r.indexOf(s),
                    c = r.indexOf(a);
                  return l === -1 ? 1 : c === -1 ? -1 : l - c;
                }
                return r === "asc"
                  ? s.localeCompare(a)
                  : r === "desc"
                    ? a.localeCompare(s)
                    : 0;
              }),
            i
          );
        }),
        z(this, "getNextValue", (n, r = 1, o = !1) => {
          let i = this.indexOf(n);
          if (i === -1) return null;
          for (
            i = o ? Math.min(i + r, this.size - 1) : i + r;
            i <= this.size && this.getItemDisabled(this.at(i));

          )
            i++;
          return this.getItemValue(this.at(i));
        }),
        z(this, "getPreviousValue", (n, r = 1, o = !1) => {
          let i = this.indexOf(n);
          if (i === -1) return null;
          for (
            i = o ? Math.max(i - r, 0) : i - r;
            i >= 0 && this.getItemDisabled(this.at(i));

          )
            i--;
          return this.getItemValue(this.at(i));
        }),
        z(this, "indexOf", (n) => {
          if (n == null) return -1;
          if (!this.options.groupBy && !this.options.groupSort)
            return this.items.findIndex((i) => this.getItemValue(i) === n);
          let r = 0;
          const o = this.group();
          for (const [, i] of o)
            for (const s of i) {
              if (this.getItemValue(s) === n) return r;
              r++;
            }
          return -1;
        }),
        z(this, "getByText", (n, r) => {
          let o = r != null ? mA(this.items, this.indexOf(r)) : this.items;
          return (
            n.length === 1 && (o = o.filter((s) => this.getItemValue(s) !== r)),
            o.find((s) => pA(this.stringifyItem(s), n))
          );
        }),
        z(this, "search", (n, r) => {
          const { state: o, currentValue: i, timeout: s = 350 } = r,
            a = o.keysSoFar + n,
            c =
              a.length > 1 && Array.from(a).every((h) => h === a[0]) ? a[0] : a,
            u = this.getByText(c, i),
            d = this.getItemValue(u);
          function f() {
            (clearTimeout(o.timer), (o.timer = -1));
          }
          function g(h) {
            ((o.keysSoFar = h),
              f(),
              h !== "" &&
                (o.timer = +setTimeout(() => {
                  (g(""), f());
                }, s)));
          }
          return (g(a), d);
        }),
        z(this, "update", (n, r) => {
          let o = this.indexOf(n);
          return o === -1
            ? this
            : this.copy([
                ...this.items.slice(0, o),
                r,
                ...this.items.slice(o + 1),
              ]);
        }),
        z(this, "upsert", (n, r, o = "append") => {
          let i = this.indexOf(n);
          return i === -1
            ? (o === "append" ? this.append : this.prepend)(r)
            : this.copy([
                ...this.items.slice(0, i),
                r,
                ...this.items.slice(i + 1),
              ]);
        }),
        z(this, "insert", (n, ...r) => this.copy(Ei(this.items, n, ...r))),
        z(this, "insertBefore", (n, ...r) => {
          let o = this.indexOf(n);
          if (o === -1)
            if (this.items.length === 0) o = 0;
            else return this;
          return this.copy(Ei(this.items, o, ...r));
        }),
        z(this, "insertAfter", (n, ...r) => {
          let o = this.indexOf(n);
          if (o === -1)
            if (this.items.length === 0) o = 0;
            else return this;
          return this.copy(Ei(this.items, o + 1, ...r));
        }),
        z(this, "prepend", (...n) => this.copy(Ei(this.items, 0, ...n))),
        z(this, "append", (...n) =>
          this.copy(Ei(this.items, this.items.length, ...n)),
        ),
        z(this, "filter", (n) => {
          const r = this.items.filter((o, i) => n(this.stringifyItem(o), i, o));
          return this.copy(r);
        }),
        z(this, "remove", (...n) => {
          const r = n.map((o) =>
            typeof o == "string" ? o : this.getItemValue(o),
          );
          return this.copy(
            this.items.filter((o) => {
              const i = this.getItemValue(o);
              return i == null ? !1 : !r.includes(i);
            }),
          );
        }),
        z(this, "move", (n, r) => {
          const o = this.indexOf(n);
          return o === -1 ? this : this.copy(Us(this.items, [o], r));
        }),
        z(this, "moveBefore", (n, ...r) => {
          let o = this.items.findIndex((s) => this.getItemValue(s) === n);
          if (o === -1) return this;
          let i = r
            .map((s) => this.items.findIndex((a) => this.getItemValue(a) === s))
            .sort((s, a) => s - a);
          return this.copy(Us(this.items, i, o));
        }),
        z(this, "moveAfter", (n, ...r) => {
          let o = this.items.findIndex((s) => this.getItemValue(s) === n);
          if (o === -1) return this;
          let i = r
            .map((s) => this.items.findIndex((a) => this.getItemValue(a) === s))
            .sort((s, a) => s - a);
          return this.copy(Us(this.items, i, o + 1));
        }),
        z(this, "reorder", (n, r) => this.copy(Us(this.items, [n], r))),
        z(this, "compareValue", (n, r) => {
          const o = this.indexOf(n),
            i = this.indexOf(r);
          return o < i ? -1 : o > i ? 1 : 0;
        }),
        z(this, "range", (n, r) => {
          let o = [],
            i = n;
          for (; i != null; ) {
            if ((this.find(i) && o.push(i), i === r)) return o;
            i = this.getNextValue(i);
          }
          return [];
        }),
        z(this, "getValueRange", (n, r) =>
          n && r
            ? this.compareValue(n, r) <= 0
              ? this.range(n, r)
              : this.range(r, n)
            : [],
        ),
        z(this, "toString", () => {
          let n = "";
          for (const r of this.items) {
            const o = this.getItemValue(r),
              i = this.stringifyItem(r),
              s = this.getItemDisabled(r),
              a = [o, i, s].filter(Boolean).join(":");
            n += a + ",";
          }
          return n;
        }),
        z(this, "toJSON", () => ({
          size: this.size,
          first: this.firstValue,
          last: this.lastValue,
        })),
        (this.items = [...t.items]));
    }
    get size() {
      return this.items.length;
    }
    get firstValue() {
      let t = 0;
      for (; this.getItemDisabled(this.at(t)); ) t++;
      return this.getItemValue(this.at(t));
    }
    get lastValue() {
      let t = this.size - 1;
      for (; this.getItemDisabled(this.at(t)); ) t--;
      return this.getItemValue(this.at(t));
    }
    *[Symbol.iterator]() {
      yield* this.items;
    }
  },
  pA = (e, t) => !!(e != null && e.toLowerCase().startsWith(t.toLowerCase())),
  mA = (e, t) => e.map((n, r) => e[(Math.max(t, 0) + r) % e.length]);
function Ei(e, t, ...n) {
  return [...e.slice(0, t), ...n, ...e.slice(t)];
}
function Us(e, t, n) {
  t = [...t].sort((o, i) => o - i);
  const r = t.map((o) => e[o]);
  for (let o = t.length - 1; o >= 0; o--)
    e = [...e.slice(0, t[o]), ...e.slice(t[o] + 1)];
  return (
    (n = Math.max(0, n - t.filter((o) => o < n).length)),
    [...e.slice(0, n), ...r, ...e.slice(n)]
  );
}
function Ab(e, t, n) {
  for (let r = 0; r < t.length; r++) e = n.getChildren(e, t.slice(r + 1))[t[r]];
  return e;
}
function vA(e) {
  const t = yA(e),
    n = [],
    r = new Set();
  for (const o of t) {
    const i = o.join();
    r.has(i) || (r.add(i), n.push(o));
  }
  return n;
}
function Nb(e, t) {
  for (let n = 0; n < Math.min(e.length, t.length); n++) {
    if (e[n] < t[n]) return -1;
    if (e[n] > t[n]) return 1;
  }
  return e.length - t.length;
}
function yA(e) {
  return e.sort(Nb);
}
function bA(e, t) {
  let n;
  return (
    zt(e, {
      ...t,
      onEnter: (r, o) => {
        if (t.predicate(r, o)) return ((n = r), "stop");
      },
    }),
    n
  );
}
function xA(e, t) {
  const n = [];
  return (
    zt(e, {
      onEnter: (r, o) => {
        t.predicate(r, o) && n.push(r);
      },
      getChildren: t.getChildren,
    }),
    n
  );
}
function cp(e, t) {
  let n;
  return (
    zt(e, {
      onEnter: (r, o) => {
        if (t.predicate(r, o)) return ((n = [...o]), "stop");
      },
      getChildren: t.getChildren,
    }),
    n
  );
}
function SA(e, t) {
  let n = t.initialResult;
  return (
    zt(e, {
      ...t,
      onEnter: (r, o) => {
        n = t.nextResult(n, r, o);
      },
    }),
    n
  );
}
function wA(e, t) {
  return SA(e, {
    ...t,
    initialResult: [],
    nextResult: (n, r, o) => (n.push(...t.transform(r, o)), n),
  });
}
function CA(e, t) {
  const { predicate: n, create: r, getChildren: o } = t,
    i = (s, a) => {
      const l = o(s, a),
        c = [];
      l.forEach((g, h) => {
        const p = [...a, h],
          v = i(g, p);
        v && c.push(v);
      });
      const u = a.length === 0,
        d = n(s, a),
        f = c.length > 0;
      return u || d || f ? r(s, c, a) : null;
    };
  return i(e, []) || r(e, [], []);
}
function EA(e, t) {
  const n = [];
  let r = 0;
  const o = new Map(),
    i = new Map();
  return (
    zt(e, {
      getChildren: t.getChildren,
      onEnter: (s, a) => {
        o.has(s) || o.set(s, r++);
        const l = t.getChildren(s, a);
        l.forEach((g) => {
          (i.has(g) || i.set(g, s), o.has(g) || o.set(g, r++));
        });
        const c = l.length > 0 ? l.map((g) => o.get(g)) : void 0,
          u = i.get(s),
          d = u ? o.get(u) : void 0,
          f = o.get(s);
        n.push({ ...s, _children: c, _parent: d, _index: f });
      },
    }),
    n
  );
}
function IA(e, t) {
  return { type: "insert", index: e, nodes: t };
}
function RA(e) {
  return { type: "remove", indexes: e };
}
function mf() {
  return { type: "replace" };
}
function Vb(e) {
  return [e.slice(0, -1), e[e.length - 1]];
}
function Fb(e, t, n = new Map()) {
  var s;
  const [r, o] = Vb(e);
  for (let a = r.length - 1; a >= 0; a--) {
    const l = r.slice(0, a).join();
    switch ((s = n.get(l)) == null ? void 0 : s.type) {
      case "remove":
        continue;
    }
    n.set(l, mf());
  }
  const i = n.get(r.join());
  switch (i == null ? void 0 : i.type) {
    case "remove":
      n.set(r.join(), {
        type: "removeThenInsert",
        removeIndexes: i.indexes,
        insertIndex: o,
        insertNodes: t,
      });
      break;
    default:
      n.set(r.join(), IA(o, t));
  }
  return n;
}
function Db(e) {
  const t = new Map(),
    n = new Map();
  for (const r of e) {
    const o = r.slice(0, -1).join(),
      i = n.get(o) ?? [];
    (i.push(r[r.length - 1]),
      n.set(
        o,
        i.sort((s, a) => s - a),
      ));
  }
  for (const r of e)
    for (let o = r.length - 2; o >= 0; o--) {
      const i = r.slice(0, o).join();
      t.has(i) || t.set(i, mf());
    }
  for (const [r, o] of n) t.set(r, RA(o));
  return t;
}
function kA(e, t) {
  const n = new Map(),
    [r, o] = Vb(e);
  for (let i = r.length - 1; i >= 0; i--) {
    const s = r.slice(0, i).join();
    n.set(s, mf());
  }
  return (
    n.set(r.join(), {
      type: "removeThenInsert",
      removeIndexes: [o],
      insertIndex: o,
      insertNodes: [t],
    }),
    n
  );
}
function Ul(e, t, n) {
  return PA(e, {
    ...n,
    getChildren: (r, o) => {
      const i = o.join(),
        s = t.get(i);
      switch (s == null ? void 0 : s.type) {
        case "replace":
        case "remove":
        case "removeThenInsert":
        case "insert":
          return n.getChildren(r, o);
        default:
          return [];
      }
    },
    transform: (r, o, i) => {
      const s = i.join(),
        a = t.get(s);
      switch (a == null ? void 0 : a.type) {
        case "remove":
          return n.create(
            r,
            o.filter((u, d) => !a.indexes.includes(d)),
            i,
          );
        case "removeThenInsert":
          const l = o.filter((u, d) => !a.removeIndexes.includes(d)),
            c = a.removeIndexes.reduce(
              (u, d) => (d < u ? u - 1 : u),
              a.insertIndex,
            );
          return n.create(r, up(l, c, 0, ...a.insertNodes), i);
        case "insert":
          return n.create(r, up(o, a.index, 0, ...a.nodes), i);
        case "replace":
          return n.create(r, o, i);
        default:
          return r;
      }
    },
  });
}
function up(e, t, n, ...r) {
  return [...e.slice(0, t), ...r, ...e.slice(t + n)];
}
function PA(e, t) {
  const n = {};
  return (
    zt(e, {
      ...t,
      onLeave: (r, o) => {
        const i = [0, ...o],
          s = i.join(),
          a = t.transform(r, n[s] ?? [], o),
          l = i.slice(0, -1).join(),
          c = n[l] ?? [];
        (c.push(a), (n[l] = c));
      },
    }),
    n[""][0]
  );
}
function TA(e, t) {
  const { nodes: n, at: r } = t;
  if (r.length === 0) throw new Error("Can't insert nodes at the root");
  const o = Fb(r, n);
  return Ul(e, o, t);
}
function OA(e, t) {
  if (t.at.length === 0) return t.node;
  const n = kA(t.at, t.node);
  return Ul(e, n, t);
}
function _A(e, t) {
  if (t.indexPaths.length === 0) return e;
  for (const r of t.indexPaths)
    if (r.length === 0) throw new Error("Can't remove the root node");
  const n = Db(t.indexPaths);
  return Ul(e, n, t);
}
function AA(e, t) {
  if (t.indexPaths.length === 0) return e;
  for (const i of t.indexPaths)
    if (i.length === 0) throw new Error("Can't move the root node");
  if (t.to.length === 0) throw new Error("Can't move nodes to the root");
  const n = vA(t.indexPaths),
    r = n.map((i) => Ab(e, i, t)),
    o = Fb(t.to, r, Db(n));
  return Ul(e, o, t);
}
function zt(e, t) {
  const { onEnter: n, onLeave: r, getChildren: o } = t;
  let i = [],
    s = [{ node: e }];
  const a = t.reuseIndexPath ? () => i : () => i.slice();
  for (; s.length > 0; ) {
    let l = s[s.length - 1];
    if (l.state === void 0) {
      const u = n == null ? void 0 : n(l.node, a());
      if (u === "stop") return;
      l.state = u === "skip" ? -1 : 0;
    }
    const c = l.children || o(l.node, a());
    if ((l.children || (l.children = c), l.state !== -1)) {
      if (l.state < c.length) {
        let d = l.state;
        (i.push(d), s.push({ node: c[d] }), (l.state = d + 1));
        continue;
      }
      if ((r == null ? void 0 : r(l.node, a())) === "stop") return;
    }
    (i.pop(), s.pop());
  }
}
var $b = class Mb {
    constructor(t) {
      ((this.options = t),
        z(this, "rootNode"),
        z(this, "isEqual", (n) => yn(this.rootNode, n.rootNode)),
        z(this, "getNodeChildren", (n) => {
          var r, o;
          return (
            ((o = (r = this.options).nodeToChildren) == null
              ? void 0
              : o.call(r, n)) ??
            To.nodeToChildren(n) ??
            []
          );
        }),
        z(this, "resolveIndexPath", (n) =>
          typeof n == "string" ? this.getIndexPath(n) : n,
        ),
        z(this, "resolveNode", (n) => {
          const r = this.resolveIndexPath(n);
          return r ? this.at(r) : void 0;
        }),
        z(this, "getNodeChildrenCount", (n) => {
          var r, o;
          return (
            ((o = (r = this.options).nodeToChildrenCount) == null
              ? void 0
              : o.call(r, n)) ?? To.nodeToChildrenCount(n)
          );
        }),
        z(this, "getNodeValue", (n) => {
          var r, o;
          return (
            ((o = (r = this.options).nodeToValue) == null
              ? void 0
              : o.call(r, n)) ?? To.nodeToValue(n)
          );
        }),
        z(this, "getNodeDisabled", (n) => {
          var r, o;
          return (
            ((o = (r = this.options).isNodeDisabled) == null
              ? void 0
              : o.call(r, n)) ?? To.isNodeDisabled(n)
          );
        }),
        z(this, "stringify", (n) => {
          const r = this.findNode(n);
          return r ? this.stringifyNode(r) : null;
        }),
        z(this, "stringifyNode", (n) => {
          var r, o;
          return (
            ((o = (r = this.options).nodeToString) == null
              ? void 0
              : o.call(r, n)) ?? To.nodeToString(n)
          );
        }),
        z(this, "getFirstNode", (n = this.rootNode) => {
          let r;
          return (
            zt(n, {
              getChildren: this.getNodeChildren,
              onEnter: (o, i) => {
                if (!r && i.length > 0 && !this.getNodeDisabled(o))
                  return ((r = o), "stop");
              },
            }),
            r
          );
        }),
        z(this, "getLastNode", (n = this.rootNode, r = {}) => {
          let o;
          return (
            zt(n, {
              getChildren: this.getNodeChildren,
              onEnter: (i, s) => {
                var a;
                if (!this.isSameNode(i, n)) {
                  if (
                    (a = r.skip) != null &&
                    a.call(r, {
                      value: this.getNodeValue(i),
                      node: i,
                      indexPath: s,
                    })
                  )
                    return "skip";
                  s.length > 0 && !this.getNodeDisabled(i) && (o = i);
                }
              },
            }),
            o
          );
        }),
        z(this, "at", (n) =>
          Ab(this.rootNode, n, { getChildren: this.getNodeChildren }),
        ),
        z(this, "findNode", (n, r = this.rootNode) =>
          bA(r, {
            getChildren: this.getNodeChildren,
            predicate: (o) => this.getNodeValue(o) === n,
          }),
        ),
        z(this, "findNodes", (n, r = this.rootNode) => {
          const o = new Set(n.filter((i) => i != null));
          return xA(r, {
            getChildren: this.getNodeChildren,
            predicate: (i) => o.has(this.getNodeValue(i)),
          });
        }),
        z(this, "sort", (n) =>
          n
            .reduce((r, o) => {
              const i = this.getIndexPath(o);
              return (i && r.push({ value: o, indexPath: i }), r);
            }, [])
            .sort((r, o) => Nb(r.indexPath, o.indexPath))
            .map(({ value: r }) => r),
        ),
        z(this, "getIndexPath", (n) =>
          cp(this.rootNode, {
            getChildren: this.getNodeChildren,
            predicate: (r) => this.getNodeValue(r) === n,
          }),
        ),
        z(this, "getValue", (n) => {
          const r = this.at(n);
          return r ? this.getNodeValue(r) : void 0;
        }),
        z(this, "getValuePath", (n) => {
          if (!n) return [];
          const r = [];
          let o = [...n];
          for (; o.length > 0; ) {
            const i = this.at(o);
            (i && r.unshift(this.getNodeValue(i)), o.pop());
          }
          return r;
        }),
        z(this, "getDepth", (n) => {
          const r = cp(this.rootNode, {
            getChildren: this.getNodeChildren,
            predicate: (o) => this.getNodeValue(o) === n,
          });
          return (r == null ? void 0 : r.length) ?? 0;
        }),
        z(
          this,
          "isSameNode",
          (n, r) => this.getNodeValue(n) === this.getNodeValue(r),
        ),
        z(this, "isRootNode", (n) => this.isSameNode(n, this.rootNode)),
        z(this, "contains", (n, r) =>
          !n || !r ? !1 : r.slice(0, n.length).every((o, i) => n[i] === r[i]),
        ),
        z(this, "getNextNode", (n, r = {}) => {
          let o = !1,
            i;
          return (
            zt(this.rootNode, {
              getChildren: this.getNodeChildren,
              onEnter: (s, a) => {
                var c;
                if (this.isRootNode(s)) return;
                const l = this.getNodeValue(s);
                if (
                  (c = r.skip) != null &&
                  c.call(r, { value: l, node: s, indexPath: a })
                )
                  return (l === n && (o = !0), "skip");
                if (o && !this.getNodeDisabled(s)) return ((i = s), "stop");
                l === n && (o = !0);
              },
            }),
            i
          );
        }),
        z(this, "getPreviousNode", (n, r = {}) => {
          let o,
            i = !1;
          return (
            zt(this.rootNode, {
              getChildren: this.getNodeChildren,
              onEnter: (s, a) => {
                var c;
                if (this.isRootNode(s)) return;
                const l = this.getNodeValue(s);
                if (
                  (c = r.skip) != null &&
                  c.call(r, { value: l, node: s, indexPath: a })
                )
                  return "skip";
                if (l === n) return ((i = !0), "stop");
                this.getNodeDisabled(s) || (o = s);
              },
            }),
            i ? o : void 0
          );
        }),
        z(this, "getParentNodes", (n) => {
          var i;
          const r = (i = this.resolveIndexPath(n)) == null ? void 0 : i.slice();
          if (!r) return [];
          const o = [];
          for (; r.length > 0; ) {
            r.pop();
            const s = this.at(r);
            s && !this.isRootNode(s) && o.unshift(s);
          }
          return o;
        }),
        z(this, "getDescendantNodes", (n, r) => {
          const o = this.resolveNode(n);
          if (!o) return [];
          const i = [];
          return (
            zt(o, {
              getChildren: this.getNodeChildren,
              onEnter: (s, a) => {
                a.length !== 0 &&
                  ((!(r != null && r.withBranch) && this.isBranchNode(s)) ||
                    i.push(s));
              },
            }),
            i
          );
        }),
        z(this, "getDescendantValues", (n, r) =>
          this.getDescendantNodes(n, r).map((i) => this.getNodeValue(i)),
        ),
        z(this, "getParentIndexPath", (n) => n.slice(0, -1)),
        z(this, "getParentNode", (n) => {
          const r = this.resolveIndexPath(n);
          return r ? this.at(this.getParentIndexPath(r)) : void 0;
        }),
        z(this, "visit", (n) => {
          const { skip: r, ...o } = n;
          zt(this.rootNode, {
            ...o,
            getChildren: this.getNodeChildren,
            onEnter: (i, s) => {
              var a;
              if (!this.isRootNode(i))
                return r != null &&
                  r({ value: this.getNodeValue(i), node: i, indexPath: s })
                  ? "skip"
                  : (a = o.onEnter) == null
                    ? void 0
                    : a.call(o, i, s);
            },
          });
        }),
        z(this, "getPreviousSibling", (n) => {
          const r = this.getParentNode(n);
          if (!r) return;
          const o = this.getNodeChildren(r);
          let i = n[n.length - 1];
          for (; --i >= 0; ) {
            const s = o[i];
            if (!this.getNodeDisabled(s)) return s;
          }
        }),
        z(this, "getNextSibling", (n) => {
          const r = this.getParentNode(n);
          if (!r) return;
          const o = this.getNodeChildren(r);
          let i = n[n.length - 1];
          for (; ++i < o.length; ) {
            const s = o[i];
            if (!this.getNodeDisabled(s)) return s;
          }
        }),
        z(this, "getSiblingNodes", (n) => {
          const r = this.getParentNode(n);
          return r ? this.getNodeChildren(r) : [];
        }),
        z(this, "getValues", (n = this.rootNode) =>
          wA(n, {
            getChildren: this.getNodeChildren,
            transform: (o) => [this.getNodeValue(o)],
          }).slice(1),
        ),
        z(this, "isSameDepth", (n, r) => (r == null ? !0 : n.length === r)),
        z(
          this,
          "isBranchNode",
          (n) =>
            this.getNodeChildren(n).length > 0 ||
            this.getNodeChildrenCount(n) != null,
        ),
        z(this, "getBranchValues", (n = this.rootNode, r = {}) => {
          let o = [];
          return (
            zt(n, {
              getChildren: this.getNodeChildren,
              onEnter: (i, s) => {
                var l;
                if (s.length === 0) return;
                const a = this.getNodeValue(i);
                if (
                  (l = r.skip) != null &&
                  l.call(r, { value: a, node: i, indexPath: s })
                )
                  return "skip";
                this.isBranchNode(i) &&
                  this.isSameDepth(s, r.depth) &&
                  o.push(this.getNodeValue(i));
              },
            }),
            o
          );
        }),
        z(this, "flatten", (n = this.rootNode) =>
          EA(n, { getChildren: this.getNodeChildren }),
        ),
        z(this, "_create", (n, r) =>
          qd({ ...n, children: r.length > 0 ? r : void 0 }),
        ),
        z(this, "_insert", (n, r, o) =>
          this.copy(
            TA(n, {
              at: r,
              nodes: o,
              getChildren: this.getNodeChildren,
              create: this._create,
            }),
          ),
        ),
        z(this, "copy", (n) => new Mb({ ...this.options, rootNode: n })),
        z(this, "_replace", (n, r, o) =>
          this.copy(
            OA(n, {
              at: r,
              node: o,
              getChildren: this.getNodeChildren,
              create: this._create,
            }),
          ),
        ),
        z(this, "_move", (n, r, o) =>
          this.copy(
            AA(n, {
              indexPaths: r,
              to: o,
              getChildren: this.getNodeChildren,
              create: this._create,
            }),
          ),
        ),
        z(this, "_remove", (n, r) =>
          this.copy(
            _A(n, {
              indexPaths: r,
              getChildren: this.getNodeChildren,
              create: this._create,
            }),
          ),
        ),
        z(this, "replace", (n, r) => this._replace(this.rootNode, n, r)),
        z(this, "remove", (n) => this._remove(this.rootNode, n)),
        z(this, "insertBefore", (n, r) =>
          this.getParentNode(n) ? this._insert(this.rootNode, n, r) : void 0,
        ),
        z(this, "insertAfter", (n, r) => {
          if (!this.getParentNode(n)) return;
          const i = [...n.slice(0, -1), n[n.length - 1] + 1];
          return this._insert(this.rootNode, i, r);
        }),
        z(this, "move", (n, r) => this._move(this.rootNode, n, r)),
        z(this, "filter", (n) => {
          const r = CA(this.rootNode, {
            predicate: n,
            getChildren: this.getNodeChildren,
            create: this._create,
          });
          return this.copy(r);
        }),
        z(this, "toJSON", () => this.getValues(this.rootNode)),
        (this.rootNode = t.rootNode));
    }
  },
  To = {
    nodeToValue(e) {
      return typeof e == "string" ? e : Kr(e) && Cr(e, "value") ? e.value : "";
    },
    nodeToString(e) {
      return typeof e == "string"
        ? e
        : Kr(e) && Cr(e, "label")
          ? e.label
          : To.nodeToValue(e);
    },
    isNodeDisabled(e) {
      return Kr(e) && Cr(e, "disabled") ? !!e.disabled : !1;
    },
    nodeToChildren(e) {
      return e.children;
    },
    nodeToChildrenCount(e) {
      if (Kr(e) && Cr(e, "childrenCount")) return e.childrenCount;
    },
  },
  bo = new WeakMap(),
  Ws = new WeakMap(),
  Hs = {},
  Mc = 0,
  Lb = (e) => e && (e.host || Lb(e.parentNode)),
  NA = (e, t) =>
    t
      .map((n) => {
        if (e.contains(n)) return n;
        const r = Lb(n);
        return r && e.contains(r)
          ? r
          : (console.error(
              "[zag-js > ariaHidden] target",
              n,
              "in not contained inside",
              e,
              ". Doing nothing",
            ),
            null);
      })
      .filter((n) => !!n),
  VA = new Set(["script", "output", "status", "next-route-announcer"]),
  FA = (e) =>
    VA.has(e.localName) || e.role === "status" || e.hasAttribute("aria-live")
      ? !0
      : e.matches("[data-live-announcer]"),
  DA = (e, t) => {
    const { parentNode: n, markerName: r, controlAttribute: o } = t,
      i = NA(n, Array.isArray(e) ? e : [e]);
    Hs[r] || (Hs[r] = new WeakMap());
    const s = Hs[r],
      a = [],
      l = new Set(),
      c = new Set(i),
      u = (f) => {
        !f || l.has(f) || (l.add(f), u(f.parentNode));
      };
    i.forEach(u);
    const d = (f) => {
      !f ||
        c.has(f) ||
        Array.prototype.forEach.call(f.children, (g) => {
          if (l.has(g)) d(g);
          else
            try {
              if (FA(g)) return;
              const p = g.getAttribute(o) === "true",
                v = (bo.get(g) || 0) + 1,
                b = (s.get(g) || 0) + 1;
              (bo.set(g, v),
                s.set(g, b),
                a.push(g),
                v === 1 && p && Ws.set(g, !0),
                b === 1 && g.setAttribute(r, ""),
                p || g.setAttribute(o, "true"));
            } catch (h) {
              console.error("[zag-js > ariaHidden] cannot operate on ", g, h);
            }
        });
    };
    return (
      d(n),
      l.clear(),
      Mc++,
      () => {
        (a.forEach((f) => {
          const g = bo.get(f) - 1,
            h = s.get(f) - 1;
          (bo.set(f, g),
            s.set(f, h),
            g || (Ws.has(f) || f.removeAttribute(o), Ws.delete(f)),
            h || f.removeAttribute(r));
        }),
          Mc--,
          Mc ||
            ((bo = new WeakMap()),
            (bo = new WeakMap()),
            (Ws = new WeakMap()),
            (Hs = {})));
      }
    );
  },
  $A = (e) => (Array.isArray(e) ? e[0] : e).ownerDocument.body,
  MA = (e, t = $A(e), n = "data-aria-hidden") => {
    if (t)
      return DA(e, {
        parentNode: t,
        markerName: n,
        controlAttribute: "aria-hidden",
      });
  },
  LA = (e) => {
    const t = requestAnimationFrame(() => e());
    return () => cancelAnimationFrame(t);
  };
function zA(e, t = {}) {
  const { defer: n = !0 } = t,
    r = n ? LA : (i) => i(),
    o = [];
  return (
    o.push(
      r(() => {
        const s = (typeof e == "function" ? e() : e).filter(Boolean);
        s.length !== 0 && o.push(MA(s));
      }),
    ),
    () => {
      o.forEach((i) => (i == null ? void 0 : i()));
    }
  );
}
var zb = te("combobox").parts(
  "root",
  "clearTrigger",
  "content",
  "control",
  "input",
  "item",
  "itemGroup",
  "itemGroupLabel",
  "itemIndicator",
  "itemText",
  "label",
  "list",
  "positioner",
  "trigger",
);
zb.build();
var Bb = (e) => new jl(e);
Bb.empty = () => new jl({ items: [] });
var BA = (e) => {
    var t;
    return (
      ((t = e.ids) == null ? void 0 : t.control) ?? `combobox:${e.id}:control`
    );
  },
  jA = (e) => {
    var t;
    return ((t = e.ids) == null ? void 0 : t.input) ?? `combobox:${e.id}:input`;
  },
  UA = (e) => {
    var t;
    return (
      ((t = e.ids) == null ? void 0 : t.content) ?? `combobox:${e.id}:content`
    );
  },
  WA = (e) => {
    var t;
    return (
      ((t = e.ids) == null ? void 0 : t.positioner) ?? `combobox:${e.id}:popper`
    );
  },
  HA = (e) => {
    var t;
    return (
      ((t = e.ids) == null ? void 0 : t.trigger) ??
      `combobox:${e.id}:toggle-btn`
    );
  },
  GA = (e) => {
    var t;
    return (
      ((t = e.ids) == null ? void 0 : t.clearTrigger) ??
      `combobox:${e.id}:clear-btn`
    );
  },
  vr = (e) => e.getById(UA(e)),
  Oo = (e) => e.getById(jA(e)),
  dp = (e) => e.getById(WA(e)),
  fp = (e) => e.getById(BA(e)),
  $i = (e) => e.getById(HA(e)),
  gp = (e) => e.getById(GA(e)),
  hp = (e, t) => {
    if (t == null) return;
    const n = `[role=option][data-value="${CSS.escape(t)}"]`;
    return wT(vr(e), n);
  },
  pp = (e) => {
    const t = Oo(e);
    e.isActiveElement(t) || t == null || t.focus({ preventScroll: !0 });
  },
  KA = (e) => {
    const t = $i(e);
    e.isActiveElement(t) || t == null || t.focus({ preventScroll: !0 });
  },
  { guards: qA, createMachine: YA, choose: XA } = rb(),
  { and: rt, not: $t } = qA;
YA({
  props({ props: e }) {
    return {
      loopFocus: !0,
      openOnClick: !1,
      defaultValue: [],
      closeOnSelect: !e.multiple,
      allowCustomValue: !1,
      inputBehavior: "none",
      selectionBehavior: e.multiple ? "clear" : "replace",
      openOnKeyPress: !0,
      openOnChange: !0,
      composite: !0,
      navigate({ node: t }) {
        Z0(t);
      },
      collection: Bb.empty(),
      ...e,
      positioning: { placement: "bottom", sameWidth: !0, ...e.positioning },
      translations: {
        triggerLabel: "Toggle suggestions",
        clearTriggerLabel: "Clear value",
        ...e.translations,
      },
    };
  },
  initialState({ prop: e }) {
    return e("open") || e("defaultOpen") ? "suggesting" : "idle";
  },
  context({ prop: e, bindable: t, getContext: n, getEvent: r }) {
    return {
      currentPlacement: t(() => ({ defaultValue: void 0 })),
      value: t(() => ({
        defaultValue: e("defaultValue"),
        value: e("value"),
        isEqual: yn,
        hash(o) {
          return o.join(",");
        },
        onChange(o) {
          var c;
          const i = n(),
            s = i.get("selectedItems"),
            a = e("collection"),
            l = o.map(
              (u) => s.find((f) => a.getItemValue(f) === u) || a.find(u),
            );
          (i.set("selectedItems", l),
            (c = e("onValueChange")) == null || c({ value: o, items: l }));
        },
      })),
      highlightedValue: t(() => ({
        defaultValue: e("defaultHighlightedValue") || null,
        value: e("highlightedValue"),
        onChange(o) {
          var s;
          const i = e("collection").find(o);
          (s = e("onHighlightChange")) == null ||
            s({ highlightedValue: o, highlightedItem: i });
        },
      })),
      inputValue: t(() => {
        let o = e("inputValue") || e("defaultInputValue") || "";
        const i = e("defaultValue") || e("value") || [];
        if (!o.trim() && !e("multiple")) {
          const s = e("collection").stringifyMany(i);
          o = Xn(e("selectionBehavior"), {
            preserve: o || s,
            replace: s,
            clear: "",
          });
        }
        return {
          defaultValue: o,
          value: e("inputValue"),
          onChange(s) {
            var c;
            const a = r(),
              l = (a.previousEvent || a).src;
            (c = e("onInputValueChange")) == null ||
              c({ inputValue: s, reason: l });
          },
        };
      }),
      highlightedItem: t(() => {
        const o = e("highlightedValue");
        return { defaultValue: e("collection").find(o) };
      }),
      selectedItems: t(() => {
        const o = e("value") || e("defaultValue") || [];
        return { defaultValue: e("collection").findMany(o) };
      }),
    };
  },
  computed: {
    isInputValueEmpty: ({ context: e }) => e.get("inputValue").length === 0,
    isInteractive: ({ prop: e }) => !(e("readOnly") || e("disabled")),
    autoComplete: ({ prop: e }) => e("inputBehavior") === "autocomplete",
    autoHighlight: ({ prop: e }) => e("inputBehavior") === "autohighlight",
    hasSelectedItems: ({ context: e }) => e.get("value").length > 0,
    valueAsString: ({ context: e, prop: t }) =>
      t("collection").stringifyItems(e.get("selectedItems")),
    isCustomValue: ({ context: e, computed: t }) =>
      e.get("inputValue") !== t("valueAsString"),
  },
  watch({ context: e, prop: t, track: n, action: r, send: o }) {
    (n([() => e.hash("value")], () => {
      r(["syncSelectedItems"]);
    }),
      n([() => e.get("inputValue")], () => {
        r(["syncInputValue"]);
      }),
      n([() => e.get("highlightedValue")], () => {
        r(["syncHighlightedItem", "autofillInputValue"]);
      }),
      n([() => t("open")], () => {
        r(["toggleVisibility"]);
      }),
      n([() => t("collection").toString()], () => {
        o({ type: "CHILDREN_CHANGE" });
      }));
  },
  on: {
    "SELECTED_ITEMS.SYNC": { actions: ["syncSelectedItems"] },
    "HIGHLIGHTED_VALUE.SET": { actions: ["setHighlightedValue"] },
    "HIGHLIGHTED_VALUE.CLEAR": { actions: ["clearHighlightedValue"] },
    "ITEM.SELECT": { actions: ["selectItem"] },
    "ITEM.CLEAR": { actions: ["clearItem"] },
    "VALUE.SET": { actions: ["setValue"] },
    "INPUT_VALUE.SET": { actions: ["setInputValue"] },
    "POSITIONING.SET": { actions: ["reposition"] },
  },
  entry: XA([{ guard: "autoFocus", actions: ["setInitialFocus"] }]),
  states: {
    idle: {
      tags: ["idle", "closed"],
      entry: ["scrollContentToTop", "clearHighlightedValue"],
      on: {
        "CONTROLLED.OPEN": { target: "interacting" },
        "TRIGGER.CLICK": [
          {
            guard: "isOpenControlled",
            actions: [
              "setInitialFocus",
              "highlightFirstSelectedItem",
              "invokeOnOpen",
            ],
          },
          {
            target: "interacting",
            actions: [
              "setInitialFocus",
              "highlightFirstSelectedItem",
              "invokeOnOpen",
            ],
          },
        ],
        "INPUT.CLICK": [
          {
            guard: "isOpenControlled",
            actions: ["highlightFirstSelectedItem", "invokeOnOpen"],
          },
          {
            target: "interacting",
            actions: ["highlightFirstSelectedItem", "invokeOnOpen"],
          },
        ],
        "INPUT.FOCUS": { target: "focused" },
        OPEN: [
          { guard: "isOpenControlled", actions: ["invokeOnOpen"] },
          { target: "interacting", actions: ["invokeOnOpen"] },
        ],
        "VALUE.CLEAR": {
          target: "focused",
          actions: ["clearInputValue", "clearSelectedItems", "setInitialFocus"],
        },
      },
    },
    focused: {
      tags: ["focused", "closed"],
      entry: ["scrollContentToTop", "clearHighlightedValue"],
      on: {
        "CONTROLLED.OPEN": [
          { guard: "isChangeEvent", target: "suggesting" },
          { target: "interacting" },
        ],
        "INPUT.CHANGE": [
          {
            guard: rt("isOpenControlled", "openOnChange"),
            actions: [
              "setInputValue",
              "invokeOnOpen",
              "highlightFirstItemIfNeeded",
            ],
          },
          {
            guard: "openOnChange",
            target: "suggesting",
            actions: [
              "setInputValue",
              "invokeOnOpen",
              "highlightFirstItemIfNeeded",
            ],
          },
          { actions: ["setInputValue"] },
        ],
        "LAYER.INTERACT_OUTSIDE": { target: "idle" },
        "INPUT.ESCAPE": {
          guard: rt("isCustomValue", $t("allowCustomValue")),
          actions: ["revertInputValue"],
        },
        "INPUT.BLUR": { target: "idle" },
        "INPUT.CLICK": [
          {
            guard: "isOpenControlled",
            actions: ["highlightFirstSelectedItem", "invokeOnOpen"],
          },
          {
            target: "interacting",
            actions: ["highlightFirstSelectedItem", "invokeOnOpen"],
          },
        ],
        "TRIGGER.CLICK": [
          {
            guard: "isOpenControlled",
            actions: [
              "setInitialFocus",
              "highlightFirstSelectedItem",
              "invokeOnOpen",
            ],
          },
          {
            target: "interacting",
            actions: [
              "setInitialFocus",
              "highlightFirstSelectedItem",
              "invokeOnOpen",
            ],
          },
        ],
        "INPUT.ARROW_DOWN": [
          {
            guard: rt("isOpenControlled", "autoComplete"),
            actions: ["invokeOnOpen"],
          },
          {
            guard: "autoComplete",
            target: "interacting",
            actions: ["invokeOnOpen"],
          },
          {
            guard: "isOpenControlled",
            actions: ["highlightFirstOrSelectedItem", "invokeOnOpen"],
          },
          {
            target: "interacting",
            actions: ["highlightFirstOrSelectedItem", "invokeOnOpen"],
          },
        ],
        "INPUT.ARROW_UP": [
          {
            guard: "autoComplete",
            target: "interacting",
            actions: ["invokeOnOpen"],
          },
          {
            guard: "autoComplete",
            target: "interacting",
            actions: ["invokeOnOpen"],
          },
          {
            target: "interacting",
            actions: ["highlightLastOrSelectedItem", "invokeOnOpen"],
          },
          {
            target: "interacting",
            actions: ["highlightLastOrSelectedItem", "invokeOnOpen"],
          },
        ],
        OPEN: [
          { guard: "isOpenControlled", actions: ["invokeOnOpen"] },
          { target: "interacting", actions: ["invokeOnOpen"] },
        ],
        "VALUE.CLEAR": { actions: ["clearInputValue", "clearSelectedItems"] },
      },
    },
    interacting: {
      tags: ["open", "focused"],
      entry: ["setInitialFocus"],
      effects: [
        "scrollToHighlightedItem",
        "trackDismissableLayer",
        "trackPlacement",
        "hideOtherElements",
      ],
      on: {
        "CONTROLLED.CLOSE": [
          {
            guard: "restoreFocus",
            target: "focused",
            actions: ["setFinalFocus"],
          },
          { target: "idle" },
        ],
        CHILDREN_CHANGE: [
          {
            guard: "isHighlightedItemRemoved",
            actions: ["clearHighlightedValue"],
          },
          { actions: ["scrollToHighlightedItem"] },
        ],
        "INPUT.HOME": { actions: ["highlightFirstItem"] },
        "INPUT.END": { actions: ["highlightLastItem"] },
        "INPUT.ARROW_DOWN": [
          {
            guard: rt("autoComplete", "isLastItemHighlighted"),
            actions: ["clearHighlightedValue", "scrollContentToTop"],
          },
          { actions: ["highlightNextItem"] },
        ],
        "INPUT.ARROW_UP": [
          {
            guard: rt("autoComplete", "isFirstItemHighlighted"),
            actions: ["clearHighlightedValue"],
          },
          { actions: ["highlightPrevItem"] },
        ],
        "INPUT.ENTER": [
          {
            guard: rt(
              "isOpenControlled",
              "isCustomValue",
              $t("hasHighlightedItem"),
              $t("allowCustomValue"),
            ),
            actions: ["revertInputValue", "invokeOnClose"],
          },
          {
            guard: rt(
              "isCustomValue",
              $t("hasHighlightedItem"),
              $t("allowCustomValue"),
            ),
            target: "focused",
            actions: ["revertInputValue", "invokeOnClose"],
          },
          {
            guard: rt("isOpenControlled", "closeOnSelect"),
            actions: ["selectHighlightedItem", "invokeOnClose"],
          },
          {
            guard: "closeOnSelect",
            target: "focused",
            actions: [
              "selectHighlightedItem",
              "invokeOnClose",
              "setFinalFocus",
            ],
          },
          { actions: ["selectHighlightedItem"] },
        ],
        "INPUT.CHANGE": [
          {
            guard: "autoComplete",
            target: "suggesting",
            actions: ["setInputValue"],
          },
          {
            target: "suggesting",
            actions: ["clearHighlightedValue", "setInputValue"],
          },
        ],
        "ITEM.POINTER_MOVE": { actions: ["setHighlightedValue"] },
        "ITEM.POINTER_LEAVE": { actions: ["clearHighlightedValue"] },
        "ITEM.CLICK": [
          {
            guard: rt("isOpenControlled", "closeOnSelect"),
            actions: ["selectItem", "invokeOnClose"],
          },
          {
            guard: "closeOnSelect",
            target: "focused",
            actions: ["selectItem", "invokeOnClose", "setFinalFocus"],
          },
          { actions: ["selectItem"] },
        ],
        "LAYER.ESCAPE": [
          {
            guard: rt("isOpenControlled", "autoComplete"),
            actions: ["syncInputValue", "invokeOnClose"],
          },
          {
            guard: "autoComplete",
            target: "focused",
            actions: ["syncInputValue", "invokeOnClose"],
          },
          { guard: "isOpenControlled", actions: ["invokeOnClose"] },
          { target: "focused", actions: ["invokeOnClose", "setFinalFocus"] },
        ],
        "TRIGGER.CLICK": [
          { guard: "isOpenControlled", actions: ["invokeOnClose"] },
          { target: "focused", actions: ["invokeOnClose"] },
        ],
        "LAYER.INTERACT_OUTSIDE": [
          {
            guard: rt(
              "isOpenControlled",
              "isCustomValue",
              $t("allowCustomValue"),
            ),
            actions: ["revertInputValue", "invokeOnClose"],
          },
          {
            guard: rt("isCustomValue", $t("allowCustomValue")),
            target: "idle",
            actions: ["revertInputValue", "invokeOnClose"],
          },
          { guard: "isOpenControlled", actions: ["invokeOnClose"] },
          { target: "idle", actions: ["invokeOnClose"] },
        ],
        CLOSE: [
          { guard: "isOpenControlled", actions: ["invokeOnClose"] },
          { target: "focused", actions: ["invokeOnClose", "setFinalFocus"] },
        ],
        "VALUE.CLEAR": [
          {
            guard: "isOpenControlled",
            actions: ["clearInputValue", "clearSelectedItems", "invokeOnClose"],
          },
          {
            target: "focused",
            actions: [
              "clearInputValue",
              "clearSelectedItems",
              "invokeOnClose",
              "setFinalFocus",
            ],
          },
        ],
      },
    },
    suggesting: {
      tags: ["open", "focused"],
      effects: [
        "trackDismissableLayer",
        "scrollToHighlightedItem",
        "trackPlacement",
        "hideOtherElements",
      ],
      entry: ["setInitialFocus"],
      on: {
        "CONTROLLED.CLOSE": [
          {
            guard: "restoreFocus",
            target: "focused",
            actions: ["setFinalFocus"],
          },
          { target: "idle" },
        ],
        CHILDREN_CHANGE: [
          { guard: "autoHighlight", actions: ["highlightFirstItem"] },
          {
            guard: "isHighlightedItemRemoved",
            actions: ["clearHighlightedValue"],
          },
        ],
        "INPUT.ARROW_DOWN": {
          target: "interacting",
          actions: ["highlightNextItem"],
        },
        "INPUT.ARROW_UP": {
          target: "interacting",
          actions: ["highlightPrevItem"],
        },
        "INPUT.HOME": {
          target: "interacting",
          actions: ["highlightFirstItem"],
        },
        "INPUT.END": { target: "interacting", actions: ["highlightLastItem"] },
        "INPUT.ENTER": [
          {
            guard: rt(
              "isOpenControlled",
              "isCustomValue",
              $t("hasHighlightedItem"),
              $t("allowCustomValue"),
            ),
            actions: ["revertInputValue", "invokeOnClose"],
          },
          {
            guard: rt(
              "isCustomValue",
              $t("hasHighlightedItem"),
              $t("allowCustomValue"),
            ),
            target: "focused",
            actions: ["revertInputValue", "invokeOnClose"],
          },
          {
            guard: rt("isOpenControlled", "closeOnSelect"),
            actions: ["selectHighlightedItem", "invokeOnClose"],
          },
          {
            guard: "closeOnSelect",
            target: "focused",
            actions: [
              "selectHighlightedItem",
              "invokeOnClose",
              "setFinalFocus",
            ],
          },
          { actions: ["selectHighlightedItem"] },
        ],
        "INPUT.CHANGE": { actions: ["setInputValue"] },
        "LAYER.ESCAPE": [
          { guard: "isOpenControlled", actions: ["invokeOnClose"] },
          { target: "focused", actions: ["invokeOnClose"] },
        ],
        "ITEM.POINTER_MOVE": {
          target: "interacting",
          actions: ["setHighlightedValue"],
        },
        "ITEM.POINTER_LEAVE": { actions: ["clearHighlightedValue"] },
        "LAYER.INTERACT_OUTSIDE": [
          {
            guard: rt(
              "isOpenControlled",
              "isCustomValue",
              $t("allowCustomValue"),
            ),
            actions: ["revertInputValue", "invokeOnClose"],
          },
          {
            guard: rt("isCustomValue", $t("allowCustomValue")),
            target: "idle",
            actions: ["revertInputValue", "invokeOnClose"],
          },
          { guard: "isOpenControlled", actions: ["invokeOnClose"] },
          { target: "idle", actions: ["invokeOnClose"] },
        ],
        "TRIGGER.CLICK": [
          { guard: "isOpenControlled", actions: ["invokeOnClose"] },
          { target: "focused", actions: ["invokeOnClose"] },
        ],
        "ITEM.CLICK": [
          {
            guard: rt("isOpenControlled", "closeOnSelect"),
            actions: ["selectItem", "invokeOnClose"],
          },
          {
            guard: "closeOnSelect",
            target: "focused",
            actions: ["selectItem", "invokeOnClose", "setFinalFocus"],
          },
          { actions: ["selectItem"] },
        ],
        CLOSE: [
          { guard: "isOpenControlled", actions: ["invokeOnClose"] },
          { target: "focused", actions: ["invokeOnClose", "setFinalFocus"] },
        ],
        "VALUE.CLEAR": [
          {
            guard: "isOpenControlled",
            actions: ["clearInputValue", "clearSelectedItems", "invokeOnClose"],
          },
          {
            target: "focused",
            actions: [
              "clearInputValue",
              "clearSelectedItems",
              "invokeOnClose",
              "setFinalFocus",
            ],
          },
        ],
      },
    },
  },
  implementations: {
    guards: {
      isInputValueEmpty: ({ computed: e }) => e("isInputValueEmpty"),
      autoComplete: ({ computed: e, prop: t }) =>
        e("autoComplete") && !t("multiple"),
      autoHighlight: ({ computed: e }) => e("autoHighlight"),
      isFirstItemHighlighted: ({ prop: e, context: t }) =>
        e("collection").firstValue === t.get("highlightedValue"),
      isLastItemHighlighted: ({ prop: e, context: t }) =>
        e("collection").lastValue === t.get("highlightedValue"),
      isCustomValue: ({ computed: e }) => e("isCustomValue"),
      allowCustomValue: ({ prop: e }) => !!e("allowCustomValue"),
      hasHighlightedItem: ({ context: e }) => e.get("highlightedValue") != null,
      closeOnSelect: ({ prop: e }) => !!e("closeOnSelect"),
      isOpenControlled: ({ prop: e }) => e("open") != null,
      openOnChange: ({ prop: e, context: t }) => {
        const n = e("openOnChange");
        return tP(n)
          ? n
          : !!(n != null && n({ inputValue: t.get("inputValue") }));
      },
      restoreFocus: ({ event: e }) =>
        e.restoreFocus == null ? !0 : !!e.restoreFocus,
      isChangeEvent: ({ event: e }) => {
        var t;
        return (
          ((t = e.previousEvent) == null ? void 0 : t.type) === "INPUT.CHANGE"
        );
      },
      autoFocus: ({ prop: e }) => !!e("autoFocus"),
      isHighlightedItemRemoved: ({ prop: e, context: t }) =>
        !e("collection").has(t.get("highlightedValue")),
    },
    effects: {
      trackDismissableLayer({ send: e, prop: t, scope: n }) {
        return t("disableLayer")
          ? void 0
          : Cs(() => vr(n), {
              defer: !0,
              exclude: () => [Oo(n), $i(n), gp(n)],
              onFocusOutside: t("onFocusOutside"),
              onPointerDownOutside: t("onPointerDownOutside"),
              onInteractOutside: t("onInteractOutside"),
              onEscapeKeyDown(o) {
                (o.preventDefault(),
                  o.stopPropagation(),
                  e({ type: "LAYER.ESCAPE", src: "escape-key" }));
              },
              onDismiss() {
                e({
                  type: "LAYER.INTERACT_OUTSIDE",
                  src: "interact-outside",
                  restoreFocus: !1,
                });
              },
            });
      },
      hideOtherElements({ scope: e }) {
        return zA([Oo(e), vr(e), $i(e), gp(e)]);
      },
      trackPlacement({ context: e, prop: t, scope: n }) {
        const r = () => fp(n) || $i(n),
          o = () => dp(n);
        return (
          e.set("currentPlacement", t("positioning").placement),
          En(r, o, {
            ...t("positioning"),
            defer: !0,
            onComplete(i) {
              e.set("currentPlacement", i.placement);
            },
          })
        );
      },
      scrollToHighlightedItem({ context: e, prop: t, scope: n, event: r }) {
        const o = Oo(n);
        let i = [];
        const s = (c) => {
            const u = r.current().type.includes("POINTER"),
              d = e.get("highlightedValue");
            if (u || !d) return;
            const f = hp(n, d),
              g = vr(n),
              h = t("scrollToIndexFn");
            if (h) {
              const v = t("collection").indexOf(d);
              h({ index: v, immediate: c });
              return;
            }
            const p = pe(() => {
              Ba(f, { rootEl: g, block: "nearest" });
            });
            i.push(p);
          },
          a = pe(() => s(!0));
        i.push(a);
        const l = Dl(o, {
          attributes: ["aria-activedescendant"],
          callback: () => s(!1),
        });
        return (
          i.push(l),
          () => {
            i.forEach((c) => c());
          }
        );
      },
    },
    actions: {
      reposition({ context: e, prop: t, scope: n, event: r }) {
        En(
          () => fp(n),
          () => dp(n),
          {
            ...t("positioning"),
            ...r.options,
            defer: !0,
            listeners: !1,
            onComplete(s) {
              e.set("currentPlacement", s.placement);
            },
          },
        );
      },
      setHighlightedValue({ context: e, event: t }) {
        t.value != null && e.set("highlightedValue", t.value);
      },
      clearHighlightedValue({ context: e }) {
        e.set("highlightedValue", null);
      },
      selectHighlightedItem(e) {
        var a;
        const { context: t, prop: n } = e,
          r = n("collection"),
          o = t.get("highlightedValue");
        if (!o || !r.has(o)) return;
        const i = n("multiple") ? Ko(t.get("value"), o) : [o];
        ((a = n("onSelect")) == null || a({ value: i, itemValue: o }),
          t.set("value", i));
        const s = Xn(n("selectionBehavior"), {
          preserve: t.get("inputValue"),
          replace: r.stringifyMany(i),
          clear: "",
        });
        t.set("inputValue", s);
      },
      scrollToHighlightedItem({ context: e, prop: t, scope: n }) {
        Q0(() => {
          const r = e.get("highlightedValue");
          if (r == null) return;
          const o = hp(n, r),
            i = vr(n),
            s = t("scrollToIndexFn");
          if (s) {
            const a = t("collection").indexOf(r);
            s({ index: a, immediate: !0 });
            return;
          }
          Ba(o, { rootEl: i, block: "nearest" });
        });
      },
      selectItem(e) {
        const { context: t, event: n, flush: r, prop: o } = e;
        n.value != null &&
          r(() => {
            var a;
            const i = o("multiple") ? Ko(t.get("value"), n.value) : [n.value];
            ((a = o("onSelect")) == null || a({ value: i, itemValue: n.value }),
              t.set("value", i));
            const s = Xn(o("selectionBehavior"), {
              preserve: t.get("inputValue"),
              replace: o("collection").stringifyMany(i),
              clear: "",
            });
            t.set("inputValue", s);
          });
      },
      clearItem(e) {
        const { context: t, event: n, flush: r, prop: o } = e;
        n.value != null &&
          r(() => {
            const i = eo(t.get("value"), n.value);
            t.set("value", i);
            const s = Xn(o("selectionBehavior"), {
              preserve: t.get("inputValue"),
              replace: o("collection").stringifyMany(i),
              clear: "",
            });
            t.set("inputValue", s);
          });
      },
      setInitialFocus({ scope: e }) {
        pe(() => {
          pp(e);
        });
      },
      setFinalFocus({ scope: e }) {
        pe(() => {
          const t = $i(e);
          (t == null ? void 0 : t.dataset.focusable) == null ? pp(e) : KA(e);
        });
      },
      syncInputValue({ context: e, scope: t, event: n }) {
        const r = Oo(t);
        r &&
          ((r.value = e.get("inputValue")),
          queueMicrotask(() => {
            n.current().type !== "INPUT.CHANGE" && IP(r);
          }));
      },
      setInputValue({ context: e, event: t }) {
        e.set("inputValue", t.value);
      },
      clearInputValue({ context: e }) {
        e.set("inputValue", "");
      },
      revertInputValue({ context: e, prop: t, computed: n }) {
        const r = t("selectionBehavior"),
          o = Xn(r, {
            replace: n("hasSelectedItems") ? n("valueAsString") : "",
            preserve: e.get("inputValue"),
            clear: "",
          });
        e.set("inputValue", o);
      },
      setValue(e) {
        const { context: t, flush: n, event: r, prop: o } = e;
        n(() => {
          t.set("value", r.value);
          const i = Xn(o("selectionBehavior"), {
            preserve: t.get("inputValue"),
            replace: o("collection").stringifyMany(r.value),
            clear: "",
          });
          t.set("inputValue", i);
        });
      },
      clearSelectedItems(e) {
        const { context: t, flush: n, prop: r } = e;
        n(() => {
          t.set("value", []);
          const o = Xn(r("selectionBehavior"), {
            preserve: t.get("inputValue"),
            replace: r("collection").stringifyMany([]),
            clear: "",
          });
          t.set("inputValue", o);
        });
      },
      scrollContentToTop({ prop: e, scope: t }) {
        const n = e("scrollToIndexFn");
        if (n) n({ index: 0, immediate: !0 });
        else {
          const r = vr(t);
          if (!r) return;
          r.scrollTop = 0;
        }
      },
      invokeOnOpen({ prop: e, event: t }) {
        var r;
        const n = mp(t);
        (r = e("onOpenChange")) == null || r({ open: !0, reason: n });
      },
      invokeOnClose({ prop: e, event: t }) {
        var r;
        const n = mp(t);
        (r = e("onOpenChange")) == null || r({ open: !1, reason: n });
      },
      highlightFirstItem({ context: e, prop: t, scope: n }) {
        (vr(n) ? queueMicrotask : pe)(() => {
          const o = t("collection").firstValue;
          o && e.set("highlightedValue", o);
        });
      },
      highlightFirstItemIfNeeded({ computed: e, action: t }) {
        e("autoHighlight") && t(["highlightFirstItem"]);
      },
      highlightLastItem({ context: e, prop: t, scope: n }) {
        (vr(n) ? queueMicrotask : pe)(() => {
          const o = t("collection").lastValue;
          o && e.set("highlightedValue", o);
        });
      },
      highlightNextItem({ context: e, prop: t }) {
        let n = null;
        const r = e.get("highlightedValue"),
          o = t("collection");
        (r
          ? ((n = o.getNextValue(r)),
            !n && t("loopFocus") && (n = o.firstValue))
          : (n = o.firstValue),
          n && e.set("highlightedValue", n));
      },
      highlightPrevItem({ context: e, prop: t }) {
        let n = null;
        const r = e.get("highlightedValue"),
          o = t("collection");
        (r
          ? ((n = o.getPreviousValue(r)),
            !n && t("loopFocus") && (n = o.lastValue))
          : (n = o.lastValue),
          n && e.set("highlightedValue", n));
      },
      highlightFirstSelectedItem({ context: e, prop: t }) {
        pe(() => {
          const [n] = t("collection").sort(e.get("value"));
          n && e.set("highlightedValue", n);
        });
      },
      highlightFirstOrSelectedItem({ context: e, prop: t, computed: n }) {
        pe(() => {
          let r = null;
          (n("hasSelectedItems")
            ? (r = t("collection").sort(e.get("value"))[0])
            : (r = t("collection").firstValue),
            r && e.set("highlightedValue", r));
        });
      },
      highlightLastOrSelectedItem({ context: e, prop: t, computed: n }) {
        pe(() => {
          const r = t("collection");
          let o = null;
          (n("hasSelectedItems")
            ? (o = r.sort(e.get("value"))[0])
            : (o = r.lastValue),
            o && e.set("highlightedValue", o));
        });
      },
      autofillInputValue({
        context: e,
        computed: t,
        prop: n,
        event: r,
        scope: o,
      }) {
        const i = Oo(o),
          s = n("collection");
        if (!t("autoComplete") || !i || !r.keypress) return;
        const a = s.stringify(e.get("highlightedValue"));
        pe(() => {
          i.value = a || e.get("inputValue");
        });
      },
      syncSelectedItems(e) {
        queueMicrotask(() => {
          const { context: t, prop: n } = e,
            r = n("collection"),
            o = t.get("value"),
            i = o.map(
              (a) =>
                t.get("selectedItems").find((c) => r.getItemValue(c) === a) ||
                r.find(a),
            );
          t.set("selectedItems", i);
          const s = Xn(n("selectionBehavior"), {
            preserve: t.get("inputValue"),
            replace: r.stringifyMany(o),
            clear: "",
          });
          t.set("inputValue", s);
        });
      },
      syncHighlightedItem({ context: e, prop: t }) {
        const n = t("collection").find(e.get("highlightedValue"));
        e.set("highlightedItem", n);
      },
      toggleVisibility({ event: e, send: t, prop: n }) {
        t({
          type: n("open") ? "CONTROLLED.OPEN" : "CONTROLLED.CLOSE",
          previousEvent: e,
        });
      },
    },
  },
});
function mp(e) {
  return (e.previousEvent || e).src;
}
se()([
  "allowCustomValue",
  "autoFocus",
  "closeOnSelect",
  "collection",
  "composite",
  "defaultHighlightedValue",
  "defaultInputValue",
  "defaultOpen",
  "defaultValue",
  "dir",
  "disabled",
  "disableLayer",
  "form",
  "getRootNode",
  "highlightedValue",
  "id",
  "ids",
  "inputBehavior",
  "inputValue",
  "invalid",
  "loopFocus",
  "multiple",
  "name",
  "navigate",
  "onFocusOutside",
  "onHighlightChange",
  "onInputValueChange",
  "onInteractOutside",
  "onOpenChange",
  "onOpenChange",
  "onPointerDownOutside",
  "onSelect",
  "onValueChange",
  "open",
  "openOnChange",
  "openOnClick",
  "openOnKeyPress",
  "placeholder",
  "positioning",
  "readOnly",
  "required",
  "scrollToIndexFn",
  "selectionBehavior",
  "translations",
  "value",
]);
se()(["htmlFor"]);
se()(["id"]);
se()(["item", "persistFocus"]);
var vf = te("dialog").parts(
  "trigger",
  "backdrop",
  "positioner",
  "content",
  "title",
  "description",
  "closeTrigger",
);
vf.build();
se()([
  "aria-label",
  "closeOnEscape",
  "closeOnInteractOutside",
  "dir",
  "finalFocusEl",
  "getRootNode",
  "getRootNode",
  "id",
  "id",
  "ids",
  "initialFocusEl",
  "modal",
  "onEscapeKeyDown",
  "onFocusOutside",
  "onInteractOutside",
  "onOpenChange",
  "onPointerDownOutside",
  "defaultOpen",
  "open",
  "persistentElements",
  "preventScroll",
  "restoreFocus",
  "role",
  "trapFocus",
]);
var jb = te("editable").parts(
  "root",
  "area",
  "label",
  "preview",
  "input",
  "editTrigger",
  "submitTrigger",
  "cancelTrigger",
  "control",
);
jb.build();
se()([
  "activationMode",
  "autoResize",
  "dir",
  "disabled",
  "finalFocusEl",
  "form",
  "getRootNode",
  "id",
  "ids",
  "invalid",
  "maxLength",
  "name",
  "onEditChange",
  "onFocusOutside",
  "onInteractOutside",
  "onPointerDownOutside",
  "onValueChange",
  "onValueCommit",
  "onValueRevert",
  "placeholder",
  "readOnly",
  "required",
  "selectOnFocus",
  "edit",
  "defaultEdit",
  "submitMode",
  "translations",
  "defaultValue",
  "value",
]);
const Ub = te("field").parts(
  "root",
  "errorText",
  "helperText",
  "input",
  "label",
  "select",
  "textarea",
  "requiredIndicator",
);
Ub.build();
const Wb = te("fieldset").parts("root", "errorText", "helperText", "legend");
Wb.build();
var Hb = te("file-upload").parts(
  "root",
  "dropzone",
  "item",
  "itemDeleteTrigger",
  "itemGroup",
  "itemName",
  "itemPreview",
  "itemPreviewImage",
  "itemSizeText",
  "label",
  "trigger",
  "clearTrigger",
);
Hb.build();
se()([
  "accept",
  "allowDrop",
  "capture",
  "dir",
  "directory",
  "disabled",
  "getRootNode",
  "id",
  "ids",
  "locale",
  "maxFiles",
  "maxFileSize",
  "minFileSize",
  "name",
  "invalid",
  "onFileAccept",
  "onFileReject",
  "onFileChange",
  "preventDocumentDrop",
  "required",
  "translations",
  "transformFiles",
  "validate",
]);
se()(["file"]);
const JA = Symbol(),
  vp = Object.getPrototypeOf,
  Nu = new WeakMap(),
  QA = (e) =>
    e &&
    (Nu.has(e)
      ? Nu.get(e)
      : vp(e) === Object.prototype || vp(e) === Array.prototype),
  ZA = (e) => (QA(e) && e[JA]) || null,
  yp = (e, t = !0) => {
    Nu.set(e, t);
  };
function eN() {
  if (typeof globalThis < "u") return globalThis;
  if (typeof self < "u") return self;
  if (typeof window < "u") return window;
  if (typeof global < "u") return global;
}
function Gb(e, t) {
  const n = eN();
  return n ? (n[e] || (n[e] = t()), n[e]) : t();
}
var ba = Gb("__zag__refSet", () => new WeakSet()),
  tN = (e) =>
    typeof e == "object" && e !== null && "$$typeof" in e && "props" in e,
  nN = (e) => typeof e == "object" && e !== null && "__v_isVNode" in e,
  rN = (e) =>
    typeof e == "object" &&
    e !== null &&
    "nodeType" in e &&
    typeof e.nodeName == "string",
  oN = (e) => tN(e) || nN(e) || rN(e),
  Vu = (e) => e !== null && typeof e == "object",
  bp = (e) =>
    Vu(e) &&
    !ba.has(e) &&
    (Array.isArray(e) || !(Symbol.iterator in e)) &&
    !oN(e) &&
    !(e instanceof WeakMap) &&
    !(e instanceof WeakSet) &&
    !(e instanceof Error) &&
    !(e instanceof Number) &&
    !(e instanceof Date) &&
    !(e instanceof String) &&
    !(e instanceof RegExp) &&
    !(e instanceof ArrayBuffer) &&
    !(e instanceof Promise),
  Hr = Gb("__zag__proxyStateMap", () => new WeakMap()),
  iN = (
    e = Object.is,
    t = (a, l) => new Proxy(a, l),
    n = new WeakMap(),
    r = (a, l) => {
      const c = n.get(a);
      if ((c == null ? void 0 : c[0]) === l) return c[1];
      const u = Array.isArray(a) ? [] : Object.create(Object.getPrototypeOf(a));
      return (
        yp(u, !0),
        n.set(a, [l, u]),
        Reflect.ownKeys(a).forEach((d) => {
          const f = Reflect.get(a, d);
          ba.has(f)
            ? (yp(f, !1), (u[d] = f))
            : Hr.has(f)
              ? (u[d] = lN(f))
              : (u[d] = f);
        }),
        Object.freeze(u)
      );
    },
    o = new WeakMap(),
    i = [1, 1],
    s = (a) => {
      if (!Vu(a)) throw new Error("object required");
      const l = o.get(a);
      if (l) return l;
      let c = i[0];
      const u = new Set(),
        d = (I, T = ++i[0]) => {
          c !== T && ((c = T), u.forEach((k) => k(I, T)));
        };
      let f = i[1];
      const g = (I = ++i[1]) => (
          f !== I &&
            !u.size &&
            ((f = I),
            p.forEach(([T]) => {
              const k = T[1](I);
              k > c && (c = k);
            })),
          c
        ),
        h = (I) => (T, k) => {
          const m = [...T];
          ((m[1] = [I, ...m[1]]), d(m, k));
        },
        p = new Map(),
        v = (I, T) => {
          if (u.size) {
            const k = T[3](h(I));
            p.set(I, [T, k]);
          } else p.set(I, [T]);
        },
        b = (I) => {
          var k;
          const T = p.get(I);
          T && (p.delete(I), (k = T[1]) == null || k.call(T));
        },
        S = (I) => (
          u.add(I),
          u.size === 1 &&
            p.forEach(([k, m], A) => {
              const V = k[3](h(A));
              p.set(A, [k, V]);
            }),
          () => {
            (u.delete(I),
              u.size === 0 &&
                p.forEach(([k, m], A) => {
                  m && (m(), p.set(A, [k]));
                }));
          }
        ),
        w = Array.isArray(a) ? [] : Object.create(Object.getPrototypeOf(a)),
        R = t(w, {
          deleteProperty(I, T) {
            const k = Reflect.get(I, T);
            b(T);
            const m = Reflect.deleteProperty(I, T);
            return (m && d(["delete", [T], k]), m);
          },
          set(I, T, k, m) {
            var F;
            const A = Reflect.has(I, T),
              V = Reflect.get(I, T, m);
            if (A && (e(V, k) || (o.has(k) && e(V, o.get(k))))) return !0;
            (b(T), Vu(k) && (k = ZA(k) || k));
            let P = k;
            if (
              !((F = Object.getOwnPropertyDescriptor(I, T)) != null && F.set)
            ) {
              !Hr.has(k) && bp(k) && (P = Kb(k));
              const $ = !ba.has(P) && Hr.get(P);
              $ && v(T, $);
            }
            return (Reflect.set(I, T, P, m), d(["set", [T], k, V]), !0);
          },
        });
      o.set(a, R);
      const N = [w, g, r, S];
      return (
        Hr.set(R, N),
        Reflect.ownKeys(a).forEach((I) => {
          const T = Object.getOwnPropertyDescriptor(a, I);
          T.get || T.set ? Object.defineProperty(w, I, T) : (R[I] = a[I]);
        }),
        R
      );
    },
  ) => [s, Hr, ba, e, t, bp, n, r, o, i],
  [sN] = iN();
function Kb(e = {}) {
  return sN(e);
}
function aN(e, t, n) {
  const r = Hr.get(e);
  let o;
  const i = [],
    s = r[3];
  let a = !1;
  const c = s((u) => {
    (i.push(u),
      o ||
        (o = Promise.resolve().then(() => {
          ((o = void 0), a && t(i.splice(0)));
        })));
  });
  return (
    (a = !0),
    () => {
      ((a = !1), c());
    }
  );
}
function lN(e) {
  const t = Hr.get(e),
    [n, r, o] = t;
  return o(n, r());
}
var qb = te("hoverCard").parts(
  "arrow",
  "arrowTip",
  "trigger",
  "positioner",
  "content",
);
qb.build();
var cN = (e) => {
    var t;
    return (
      ((t = e.ids) == null ? void 0 : t.trigger) ?? `hover-card:${e.id}:trigger`
    );
  },
  uN = (e) => {
    var t;
    return (
      ((t = e.ids) == null ? void 0 : t.content) ?? `hover-card:${e.id}:content`
    );
  },
  dN = (e) => {
    var t;
    return (
      ((t = e.ids) == null ? void 0 : t.positioner) ??
      `hover-card:${e.id}:popper`
    );
  },
  Lc = (e) => e.getById(cN(e)),
  fN = (e) => e.getById(uN(e)),
  xp = (e) => e.getById(dN(e)),
  { not: Gs, and: Sp } = Fr();
(Sp("isOpenControlled", Gs("isPointer")),
  Gs("isPointer"),
  Sp("isOpenControlled", Gs("isPointer")),
  Gs("isPointer"));
se()([
  "closeDelay",
  "dir",
  "getRootNode",
  "id",
  "ids",
  "onOpenChange",
  "defaultOpen",
  "open",
  "openDelay",
  "positioning",
  "onInteractOutside",
  "onPointerDownOutside",
  "onFocusOutside",
]);
var Yb = te("menu").parts(
  "arrow",
  "arrowTip",
  "content",
  "contextTrigger",
  "indicator",
  "item",
  "itemGroup",
  "itemGroupLabel",
  "itemIndicator",
  "itemText",
  "positioner",
  "separator",
  "trigger",
  "triggerItem",
);
Yb.build();
var Xb = (e) => {
    var t;
    return ((t = e.ids) == null ? void 0 : t.trigger) ?? `menu:${e.id}:trigger`;
  },
  gN = (e) => {
    var t;
    return (
      ((t = e.ids) == null ? void 0 : t.contextTrigger) ??
      `menu:${e.id}:ctx-trigger`
    );
  },
  Jb = (e) => {
    var t;
    return ((t = e.ids) == null ? void 0 : t.content) ?? `menu:${e.id}:content`;
  },
  hN = (e) => {
    var t;
    return (
      ((t = e.ids) == null ? void 0 : t.positioner) ?? `menu:${e.id}:popper`
    );
  },
  Fu = (e, t) => `${e.id}/${t}`,
  Mr = (e) => (e == null ? void 0 : e.dataset.value) ?? null,
  yr = (e) => e.getById(Jb(e)),
  wp = (e) => e.getById(hN(e)),
  Ks = (e) => e.getById(Xb(e)),
  pN = (e, t) => (t ? e.getById(Fu(e, t)) : null),
  zc = (e) => e.getById(gN(e)),
  Es = (e) => {
    const n = `[role^="menuitem"][data-ownedby=${CSS.escape(Jb(e))}]:not([data-disabled])`;
    return ja(yr(e), n);
  },
  mN = (e) => Ui(Es(e)),
  vN = (e) => Kd(Es(e)),
  yf = (e, t) => (t ? e.id === t || e.dataset.value === t : !1),
  yN = (e, t) => {
    const n = Es(e),
      r = n.findIndex((o) => yf(o, t.value));
    return Jk(n, r, { loop: t.loop ?? t.loopFocus });
  },
  bN = (e, t) => {
    const n = Es(e),
      r = n.findIndex((o) => yf(o, t.value));
    return Zk(n, r, { loop: t.loop ?? t.loopFocus });
  },
  xN = (e, t) => {
    const n = Es(e),
      r = n.find((o) => yf(o, t.value));
    return is(n, {
      state: t.typeaheadState,
      key: t.key,
      activeId: (r == null ? void 0 : r.id) ?? null,
    });
  },
  SN = (e) => {
    var t;
    return (
      !!(
        (t = e == null ? void 0 : e.getAttribute("role")) != null &&
        t.startsWith("menuitem")
      ) && !!(e != null && e.hasAttribute("aria-controls"))
    );
  },
  wN = "menu:select";
function CN(e, t) {
  if (!e) return;
  const n = St(e),
    r = new n.CustomEvent(wN, { detail: { value: t } });
  e.dispatchEvent(r);
}
var { not: Xt, and: xo, or: EN } = Fr();
(Xt("isSubmenu"),
  EN("isOpenAutoFocusEvent", "isArrowDownEvent"),
  xo(Xt("isTriggerItem"), "isOpenControlled"),
  Xt("isTriggerItem"),
  xo("isSubmenu", "isOpenControlled"),
  Xt("isPointerSuspended"),
  xo(Xt("isPointerSuspended"), Xt("isTriggerItem")),
  xo(
    Xt("isTriggerItemHighlighted"),
    Xt("isHighlightedItemEditable"),
    "closeOnSelect",
    "isOpenControlled",
  ),
  xo(
    Xt("isTriggerItemHighlighted"),
    Xt("isHighlightedItemEditable"),
    "closeOnSelect",
  ),
  xo(Xt("isTriggerItemHighlighted"), Xt("isHighlightedItemEditable")));
function Cp(e) {
  let t = e.parent;
  for (; t && t.computed("isSubmenu"); ) t = t.refs.get("parent");
  t == null || t.send({ type: "CLOSE" });
}
function IN(e, t) {
  return e ? rA(e, t) : !1;
}
function RN(e, t, n) {
  const r = Object.keys(e).length > 0;
  if (!t) return null;
  if (!r) return Fu(n, t);
  for (const o in e) {
    const i = e[o],
      s = Xb(i.scope);
    if (s === t) return s;
  }
  return Fu(n, t);
}
se()([
  "anchorPoint",
  "aria-label",
  "closeOnSelect",
  "composite",
  "defaultHighlightedValue",
  "defaultOpen",
  "dir",
  "getRootNode",
  "highlightedValue",
  "id",
  "ids",
  "loopFocus",
  "navigate",
  "onEscapeKeyDown",
  "onFocusOutside",
  "onHighlightChange",
  "onInteractOutside",
  "onOpenChange",
  "onPointerDownOutside",
  "onSelect",
  "open",
  "positioning",
  "typeahead",
]);
se()(["closeOnSelect", "disabled", "value", "valueText"]);
se()(["htmlFor"]);
se()(["id"]);
se()([
  "checked",
  "closeOnSelect",
  "disabled",
  "onCheckedChange",
  "type",
  "value",
  "valueText",
]);
let Bc = new Map(),
  Du = !1;
try {
  Du =
    new Intl.NumberFormat("de-DE", {
      signDisplay: "exceptZero",
    }).resolvedOptions().signDisplay === "exceptZero";
} catch {}
let qa = !1;
try {
  qa =
    new Intl.NumberFormat("de-DE", {
      style: "unit",
      unit: "degree",
    }).resolvedOptions().style === "unit";
} catch {}
const Qb = {
  degree: {
    narrow: { default: "°", "ja-JP": " 度", "zh-TW": "度", "sl-SI": " °" },
  },
};
class kN {
  format(t) {
    let n = "";
    if (
      (!Du && this.options.signDisplay != null
        ? (n = TN(this.numberFormatter, this.options.signDisplay, t))
        : (n = this.numberFormatter.format(t)),
      this.options.style === "unit" && !qa)
    ) {
      var r;
      let {
        unit: o,
        unitDisplay: i = "short",
        locale: s,
      } = this.resolvedOptions();
      if (!o) return n;
      let a = (r = Qb[o]) === null || r === void 0 ? void 0 : r[i];
      n += a[s] || a.default;
    }
    return n;
  }
  formatToParts(t) {
    return this.numberFormatter.formatToParts(t);
  }
  formatRange(t, n) {
    if (typeof this.numberFormatter.formatRange == "function")
      return this.numberFormatter.formatRange(t, n);
    if (n < t) throw new RangeError("End date must be >= start date");
    return `${this.format(t)} – ${this.format(n)}`;
  }
  formatRangeToParts(t, n) {
    if (typeof this.numberFormatter.formatRangeToParts == "function")
      return this.numberFormatter.formatRangeToParts(t, n);
    if (n < t) throw new RangeError("End date must be >= start date");
    let r = this.numberFormatter.formatToParts(t),
      o = this.numberFormatter.formatToParts(n);
    return [
      ...r.map((i) => ({ ...i, source: "startRange" })),
      { type: "literal", value: " – ", source: "shared" },
      ...o.map((i) => ({ ...i, source: "endRange" })),
    ];
  }
  resolvedOptions() {
    let t = this.numberFormatter.resolvedOptions();
    return (
      !Du &&
        this.options.signDisplay != null &&
        (t = { ...t, signDisplay: this.options.signDisplay }),
      !qa &&
        this.options.style === "unit" &&
        (t = {
          ...t,
          style: "unit",
          unit: this.options.unit,
          unitDisplay: this.options.unitDisplay,
        }),
      t
    );
  }
  constructor(t, n = {}) {
    ((this.numberFormatter = PN(t, n)), (this.options = n));
  }
}
function PN(e, t = {}) {
  let { numberingSystem: n } = t;
  if (
    (n &&
      e.includes("-nu-") &&
      (e.includes("-u-") || (e += "-u-"), (e += `-nu-${n}`)),
    t.style === "unit" && !qa)
  ) {
    var r;
    let { unit: s, unitDisplay: a = "short" } = t;
    if (!s) throw new Error('unit option must be provided with style: "unit"');
    if (!(!((r = Qb[s]) === null || r === void 0) && r[a]))
      throw new Error(`Unsupported unit ${s} with unitDisplay = ${a}`);
    t = { ...t, style: "decimal" };
  }
  let o =
    e +
    (t
      ? Object.entries(t)
          .sort((s, a) => (s[0] < a[0] ? -1 : 1))
          .join()
      : "");
  if (Bc.has(o)) return Bc.get(o);
  let i = new Intl.NumberFormat(e, t);
  return (Bc.set(o, i), i);
}
function TN(e, t, n) {
  if (t === "auto") return e.format(n);
  if (t === "never") return e.format(Math.abs(n));
  {
    let r = !1;
    if (
      (t === "always"
        ? (r = n > 0 || Object.is(n, 0))
        : t === "exceptZero" &&
          (Object.is(n, -0) || Object.is(n, 0)
            ? (n = Math.abs(n))
            : (r = n > 0)),
      r)
    ) {
      let o = e.format(-n),
        i = e.format(n),
        s = o.replace(i, "").replace(/\u200e|\u061C/, "");
      return (
        [...s].length !== 1 &&
          console.warn(
            "@react-aria/i18n polyfill for NumberFormat signDisplay: Unsupported case",
          ),
        o.replace(i, "!!!").replace(s, "+").replace("!!!", i)
      );
    } else return e.format(n);
  }
}
const ON = new RegExp("^.*\\(.*\\).*$"),
  _N = ["latn", "arab", "hanidec", "deva", "beng"];
class Zb {
  parse(t) {
    return jc(this.locale, this.options, t).parse(t);
  }
  isValidPartialNumber(t, n, r) {
    return jc(this.locale, this.options, t).isValidPartialNumber(t, n, r);
  }
  getNumberingSystem(t) {
    return jc(this.locale, this.options, t).options.numberingSystem;
  }
  constructor(t, n = {}) {
    ((this.locale = t), (this.options = n));
  }
}
const Ep = new Map();
function jc(e, t, n) {
  let r = Ip(e, t);
  if (!e.includes("-nu-") && !r.isValidPartialNumber(n)) {
    for (let o of _N)
      if (o !== r.options.numberingSystem) {
        let i = Ip(e + (e.includes("-u-") ? "-nu-" : "-u-nu-") + o, t);
        if (i.isValidPartialNumber(n)) return i;
      }
  }
  return r;
}
function Ip(e, t) {
  let n =
      e +
      (t
        ? Object.entries(t)
            .sort((o, i) => (o[0] < i[0] ? -1 : 1))
            .join()
        : ""),
    r = Ep.get(n);
  return (r || ((r = new AN(e, t)), Ep.set(n, r)), r);
}
class AN {
  parse(t) {
    let n = this.sanitize(t);
    if (
      (this.symbols.group && (n = Ii(n, this.symbols.group, "")),
      this.symbols.decimal && (n = n.replace(this.symbols.decimal, ".")),
      this.symbols.minusSign && (n = n.replace(this.symbols.minusSign, "-")),
      (n = n.replace(this.symbols.numeral, this.symbols.index)),
      this.options.style === "percent")
    ) {
      let s = n.indexOf("-");
      ((n = n.replace("-", "")), (n = n.replace("+", "")));
      let a = n.indexOf(".");
      (a === -1 && (a = n.length),
        (n = n.replace(".", "")),
        a - 2 === 0
          ? (n = `0.${n}`)
          : a - 2 === -1
            ? (n = `0.0${n}`)
            : a - 2 === -2
              ? (n = "0.00")
              : (n = `${n.slice(0, a - 2)}.${n.slice(a - 2)}`),
        s > -1 && (n = `-${n}`));
    }
    let r = n ? +n : NaN;
    if (isNaN(r)) return NaN;
    if (this.options.style === "percent") {
      var o, i;
      let s = {
        ...this.options,
        style: "decimal",
        minimumFractionDigits: Math.min(
          ((o = this.options.minimumFractionDigits) !== null && o !== void 0
            ? o
            : 0) + 2,
          20,
        ),
        maximumFractionDigits: Math.min(
          ((i = this.options.maximumFractionDigits) !== null && i !== void 0
            ? i
            : 0) + 2,
          20,
        ),
      };
      return new Zb(this.locale, s).parse(new kN(this.locale, s).format(r));
    }
    return (
      this.options.currencySign === "accounting" && ON.test(t) && (r = -1 * r),
      r
    );
  }
  sanitize(t) {
    return (
      (t = t.replace(this.symbols.literals, "")),
      this.symbols.minusSign && (t = t.replace("-", this.symbols.minusSign)),
      this.options.numberingSystem === "arab" &&
        (this.symbols.decimal &&
          ((t = t.replace(",", this.symbols.decimal)),
          (t = t.replace("،", this.symbols.decimal))),
        this.symbols.group && (t = Ii(t, ".", this.symbols.group))),
      this.options.locale === "fr-FR" &&
        this.symbols.group &&
        ((t = Ii(t, " ", this.symbols.group)),
        (t = Ii(t, /\u00A0/g, this.symbols.group))),
      t
    );
  }
  isValidPartialNumber(t, n = -1 / 0, r = 1 / 0) {
    return (
      (t = this.sanitize(t)),
      this.symbols.minusSign && t.startsWith(this.symbols.minusSign) && n < 0
        ? (t = t.slice(this.symbols.minusSign.length))
        : this.symbols.plusSign &&
          t.startsWith(this.symbols.plusSign) &&
          r > 0 &&
          (t = t.slice(this.symbols.plusSign.length)),
      (this.symbols.group && t.startsWith(this.symbols.group)) ||
      (this.symbols.decimal &&
        t.indexOf(this.symbols.decimal) > -1 &&
        this.options.maximumFractionDigits === 0)
        ? !1
        : (this.symbols.group && (t = Ii(t, this.symbols.group, "")),
          (t = t.replace(this.symbols.numeral, "")),
          this.symbols.decimal && (t = t.replace(this.symbols.decimal, "")),
          t.length === 0)
    );
  }
  constructor(t, n = {}) {
    ((this.locale = t),
      n.roundingIncrement !== 1 &&
        n.roundingIncrement != null &&
        (n.maximumFractionDigits == null && n.minimumFractionDigits == null
          ? ((n.maximumFractionDigits = 0), (n.minimumFractionDigits = 0))
          : n.maximumFractionDigits == null
            ? (n.maximumFractionDigits = n.minimumFractionDigits)
            : n.minimumFractionDigits == null &&
              (n.minimumFractionDigits = n.maximumFractionDigits)),
      (this.formatter = new Intl.NumberFormat(t, n)),
      (this.options = this.formatter.resolvedOptions()),
      (this.symbols = VN(t, this.formatter, this.options, n)));
    var r, o;
    this.options.style === "percent" &&
      (((r = this.options.minimumFractionDigits) !== null && r !== void 0
        ? r
        : 0) > 18 ||
        ((o = this.options.maximumFractionDigits) !== null && o !== void 0
          ? o
          : 0) > 18) &&
      console.warn(
        "NumberParser cannot handle percentages with greater than 18 decimal places, please reduce the number in your options.",
      );
  }
}
const Rp = new Set([
    "decimal",
    "fraction",
    "integer",
    "minusSign",
    "plusSign",
    "group",
  ]),
  NN = [0, 4, 2, 1, 11, 20, 3, 7, 100, 21, 0.1, 1.1];
function VN(e, t, n, r) {
  var o, i, s, a;
  let l = new Intl.NumberFormat(e, {
      ...n,
      minimumSignificantDigits: 1,
      maximumSignificantDigits: 21,
      roundingIncrement: 1,
      roundingPriority: "auto",
      roundingMode: "halfExpand",
    }),
    c = l.formatToParts(-10000.111),
    u = l.formatToParts(10000.111),
    d = NN.map((m) => l.formatToParts(m));
  var f;
  let g =
      (f =
        (o = c.find((m) => m.type === "minusSign")) === null || o === void 0
          ? void 0
          : o.value) !== null && f !== void 0
        ? f
        : "-",
    h =
      (i = u.find((m) => m.type === "plusSign")) === null || i === void 0
        ? void 0
        : i.value;
  !h &&
    ((r == null ? void 0 : r.signDisplay) === "exceptZero" ||
      (r == null ? void 0 : r.signDisplay) === "always") &&
    (h = "+");
  let v =
      (s = new Intl.NumberFormat(e, {
        ...n,
        minimumFractionDigits: 2,
        maximumFractionDigits: 2,
      })
        .formatToParts(0.001)
        .find((m) => m.type === "decimal")) === null || s === void 0
        ? void 0
        : s.value,
    b =
      (a = c.find((m) => m.type === "group")) === null || a === void 0
        ? void 0
        : a.value,
    S = c.filter((m) => !Rp.has(m.type)).map((m) => kp(m.value)),
    w = d.flatMap((m) =>
      m.filter((A) => !Rp.has(A.type)).map((A) => kp(A.value)),
    ),
    E = [...new Set([...S, ...w])].sort((m, A) => A.length - m.length),
    R =
      E.length === 0
        ? new RegExp("[\\p{White_Space}]", "gu")
        : new RegExp(`${E.join("|")}|[\\p{White_Space}]`, "gu"),
    N = [
      ...new Intl.NumberFormat(n.locale, { useGrouping: !1 }).format(
        9876543210,
      ),
    ].reverse(),
    I = new Map(N.map((m, A) => [m, A])),
    T = new RegExp(`[${N.join("")}]`, "g");
  return {
    minusSign: g,
    plusSign: h,
    decimal: v,
    group: b,
    literals: R,
    numeral: T,
    index: (m) => String(I.get(m)),
  };
}
function Ii(e, t, n) {
  return e.replaceAll ? e.replaceAll(t, n) : e.split(t).join(n);
}
function kp(e) {
  return e.replace(/[.*+?^${}()|[\]\\]/g, "\\$&");
}
var ex = te("numberInput").parts(
  "root",
  "label",
  "input",
  "control",
  "valueText",
  "incrementTrigger",
  "decrementTrigger",
  "scrubber",
);
ex.build();
var FN = (e) => {
    var t;
    return (
      ((t = e.ids) == null ? void 0 : t.input) ?? `number-input:${e.id}:input`
    );
  },
  DN = (e) => {
    var t;
    return (
      ((t = e.ids) == null ? void 0 : t.incrementTrigger) ??
      `number-input:${e.id}:inc`
    );
  },
  $N = (e) => {
    var t;
    return (
      ((t = e.ids) == null ? void 0 : t.decrementTrigger) ??
      `number-input:${e.id}:dec`
    );
  },
  tx = (e) => `number-input:${e.id}:cursor`,
  qs = (e) => e.getById(FN(e)),
  MN = (e) => e.getById(DN(e)),
  LN = (e) => e.getById($N(e)),
  nx = (e) => e.getDoc().getElementById(tx(e)),
  zN = (e, t) => {
    let n = null;
    return (
      t === "increment" && (n = MN(e)),
      t === "decrement" && (n = LN(e)),
      n
    );
  },
  BN = (e, t) => {
    if (!Y0())
      return (
        WN(e, t),
        () => {
          var n;
          (n = nx(e)) == null || n.remove();
        }
      );
  },
  jN = (e) => {
    const t = e.getDoc(),
      n = t.documentElement,
      r = t.body;
    return (
      (r.style.pointerEvents = "none"),
      (n.style.userSelect = "none"),
      (n.style.cursor = "ew-resize"),
      () => {
        ((r.style.pointerEvents = ""),
          (n.style.userSelect = ""),
          (n.style.cursor = ""),
          n.style.length || n.removeAttribute("style"),
          r.style.length || r.removeAttribute("style"));
      }
    );
  },
  UN = (e, t) => {
    const { point: n, isRtl: r, event: o } = t,
      i = e.getWin(),
      s = Vc(o.movementX, i.devicePixelRatio),
      a = Vc(o.movementY, i.devicePixelRatio);
    let l = s > 0 ? "increment" : s < 0 ? "decrement" : null;
    (r && l === "increment" && (l = "decrement"),
      r && l === "decrement" && (l = "increment"));
    const c = { x: n.x + s, y: n.y + a },
      u = i.innerWidth,
      d = Vc(7.5, i.devicePixelRatio);
    return ((c.x = pP(c.x + d, u) - d), { hint: l, point: c });
  },
  WN = (e, t) => {
    const n = e.getDoc(),
      r = n.createElement("div");
    ((r.className = "scrubber--cursor"),
      (r.id = tx(e)),
      Object.assign(r.style, {
        width: "15px",
        height: "15px",
        position: "fixed",
        pointerEvents: "none",
        left: "0px",
        top: "0px",
        zIndex: PP,
        transform: t ? `translate3d(${t.x}px, ${t.y}px, 0px)` : void 0,
        willChange: "transform",
      }),
      (r.innerHTML = `
      <svg width="46" height="15" style="left: -15.5px; position: absolute; top: 0; filter: drop-shadow(rgba(0, 0, 0, 0.4) 0px 1px 1.1px);">
        <g transform="translate(2 3)">
          <path fill-rule="evenodd" d="M 15 4.5L 15 2L 11.5 5.5L 15 9L 15 6.5L 31 6.5L 31 9L 34.5 5.5L 31 2L 31 4.5Z" style="stroke-width: 2px; stroke: white;"></path>
          <path fill-rule="evenodd" d="M 15 4.5L 15 2L 11.5 5.5L 15 9L 15 6.5L 31 6.5L 31 9L 34.5 5.5L 31 2L 31 4.5Z"></path>
        </g>
      </svg>`),
      n.body.appendChild(r));
  };
function HN(e) {
  if (!(!e || e.ownerDocument.activeElement !== e))
    try {
      const { selectionStart: t, selectionEnd: n, value: r } = e,
        o = r.substring(0, t),
        i = r.substring(n);
      return { start: t, end: n, value: r, beforeTxt: o, afterTxt: i };
    } catch {}
}
function GN(e, t) {
  if (!(!e || e.ownerDocument.activeElement !== e)) {
    if (!t) {
      e.setSelectionRange(e.value.length, e.value.length);
      return;
    }
    try {
      const { value: n } = e,
        { beforeTxt: r = "", afterTxt: o = "", start: i } = t;
      let s = n.length;
      if (n.endsWith(o)) s = n.length - o.length;
      else if (n.startsWith(r)) s = r.length;
      else if (i != null) {
        const a = r[i - 1],
          l = n.indexOf(a, i - 1);
        l !== -1 && (s = l + 1);
      }
      e.setSelectionRange(s, s);
    } catch {}
  }
}
var KN = (e, t = {}) => new Intl.NumberFormat(e, t),
  qN = (e, t = {}) => new Zb(e, t),
  Uc = (e, t) => {
    const { prop: n, computed: r } = t;
    return n("formatOptions") ? r("parser").parse(String(e)) : parseFloat(e);
  },
  Lr = (e, t) => {
    const { prop: n, computed: r } = t;
    return Number.isNaN(e)
      ? ""
      : n("formatOptions")
        ? r("formatter").format(e)
        : e.toString();
  },
  YN = (e, t) => {
    let n = e !== void 0 && !Number.isNaN(e) ? e : 1;
    return (
      (t == null ? void 0 : t.style) === "percent" &&
        (e === void 0 || Number.isNaN(e)) &&
        (n = 0.01),
      n
    );
  },
  { choose: XN, guards: JN, createMachine: QN } = rb(),
  { not: Pp, and: Tp } = JN;
QN({
  props({ props: e }) {
    const t = YN(e.step, e.formatOptions);
    return {
      dir: "ltr",
      locale: "en-US",
      focusInputOnChange: !0,
      clampValueOnBlur: !e.allowOverflow,
      allowOverflow: !1,
      inputMode: "decimal",
      pattern: "[0-9]*(.[0-9]+)?",
      defaultValue: "",
      step: t,
      min: Number.MIN_SAFE_INTEGER,
      max: Number.MAX_SAFE_INTEGER,
      spinOnPress: !0,
      ...e,
      translations: {
        incrementLabel: "increment value",
        decrementLabel: "decrease value",
        ...e.translations,
      },
    };
  },
  initialState() {
    return "idle";
  },
  context({ prop: e, bindable: t, getComputed: n }) {
    return {
      value: t(() => ({
        defaultValue: e("defaultValue"),
        value: e("value"),
        onChange(r) {
          var s;
          const o = n(),
            i = Uc(r, { computed: o, prop: e });
          (s = e("onValueChange")) == null || s({ value: r, valueAsNumber: i });
        },
      })),
      hint: t(() => ({ defaultValue: null })),
      scrubberCursorPoint: t(() => ({
        defaultValue: null,
        hash(r) {
          return r ? `x:${r.x}, y:${r.y}` : "";
        },
      })),
      fieldsetDisabled: t(() => ({ defaultValue: !1 })),
    };
  },
  computed: {
    isRtl: ({ prop: e }) => e("dir") === "rtl",
    valueAsNumber: ({ context: e, computed: t, prop: n }) =>
      Uc(e.get("value"), { computed: t, prop: n }),
    formattedValue: ({ computed: e, prop: t }) =>
      Lr(e("valueAsNumber"), { computed: e, prop: t }),
    isAtMin: ({ computed: e, prop: t }) => vP(e("valueAsNumber"), t("min")),
    isAtMax: ({ computed: e, prop: t }) => mP(e("valueAsNumber"), t("max")),
    isOutOfRange: ({ computed: e, prop: t }) =>
      !yP(e("valueAsNumber"), t("min"), t("max")),
    isValueEmpty: ({ context: e }) => e.get("value") === "",
    isDisabled: ({ prop: e, context: t }) =>
      !!e("disabled") || t.get("fieldsetDisabled"),
    canIncrement: ({ prop: e, computed: t }) =>
      e("allowOverflow") || !t("isAtMax"),
    canDecrement: ({ prop: e, computed: t }) =>
      e("allowOverflow") || !t("isAtMin"),
    valueText: ({ prop: e, context: t }) => {
      var n, r;
      return (r = (n = e("translations")).valueText) == null
        ? void 0
        : r.call(n, t.get("value"));
    },
    formatter: zh(
      ({ prop: e }) => [e("locale"), e("formatOptions")],
      (e, t) => KN(e, t),
    ),
    parser: zh(
      ({ prop: e }) => [e("locale"), e("formatOptions")],
      (e, t) => qN(e, t),
    ),
  },
  watch({ track: e, action: t, context: n, computed: r, prop: o }) {
    (e([() => n.get("value"), () => o("locale")], () => {
      t(["syncInputElement"]);
    }),
      e([() => r("isOutOfRange")], () => {
        t(["invokeOnInvalid"]);
      }),
      e([() => n.hash("scrubberCursorPoint")], () => {
        t(["setVirtualCursorPosition"]);
      }));
  },
  effects: ["trackFormControl"],
  on: {
    "VALUE.SET": { actions: ["setRawValue"] },
    "VALUE.CLEAR": { actions: ["clearValue"] },
    "VALUE.INCREMENT": { actions: ["increment"] },
    "VALUE.DECREMENT": { actions: ["decrement"] },
  },
  states: {
    idle: {
      on: {
        "TRIGGER.PRESS_DOWN": [
          {
            guard: "isTouchPointer",
            target: "before:spin",
            actions: ["setHint"],
          },
          {
            target: "before:spin",
            actions: ["focusInput", "invokeOnFocus", "setHint"],
          },
        ],
        "SCRUBBER.PRESS_DOWN": {
          target: "scrubbing",
          actions: ["focusInput", "invokeOnFocus", "setHint", "setCursorPoint"],
        },
        "INPUT.FOCUS": {
          target: "focused",
          actions: ["focusInput", "invokeOnFocus"],
        },
      },
    },
    focused: {
      tags: ["focus"],
      effects: ["attachWheelListener"],
      on: {
        "TRIGGER.PRESS_DOWN": [
          {
            guard: "isTouchPointer",
            target: "before:spin",
            actions: ["setHint"],
          },
          { target: "before:spin", actions: ["focusInput", "setHint"] },
        ],
        "SCRUBBER.PRESS_DOWN": {
          target: "scrubbing",
          actions: ["focusInput", "setHint", "setCursorPoint"],
        },
        "INPUT.ARROW_UP": { actions: ["increment"] },
        "INPUT.ARROW_DOWN": { actions: ["decrement"] },
        "INPUT.HOME": { actions: ["decrementToMin"] },
        "INPUT.END": { actions: ["incrementToMax"] },
        "INPUT.CHANGE": { actions: ["setValue", "setHint"] },
        "INPUT.BLUR": [
          {
            guard: Tp("clampValueOnBlur", Pp("isInRange")),
            target: "idle",
            actions: ["setClampedValue", "clearHint", "invokeOnBlur"],
          },
          {
            guard: Pp("isInRange"),
            target: "idle",
            actions: [
              "setFormattedValue",
              "clearHint",
              "invokeOnBlur",
              "invokeOnInvalid",
            ],
          },
          {
            target: "idle",
            actions: ["setFormattedValue", "clearHint", "invokeOnBlur"],
          },
        ],
        "INPUT.ENTER": {
          actions: ["setFormattedValue", "clearHint", "invokeOnBlur"],
        },
      },
    },
    "before:spin": {
      tags: ["focus"],
      effects: ["trackButtonDisabled", "waitForChangeDelay"],
      entry: XN([
        { guard: "isIncrementHint", actions: ["increment"] },
        { guard: "isDecrementHint", actions: ["decrement"] },
      ]),
      on: {
        CHANGE_DELAY: {
          target: "spinning",
          guard: Tp("isInRange", "spinOnPress"),
        },
        "TRIGGER.PRESS_UP": [
          {
            guard: "isTouchPointer",
            target: "focused",
            actions: ["clearHint"],
          },
          { target: "focused", actions: ["focusInput", "clearHint"] },
        ],
      },
    },
    spinning: {
      tags: ["focus"],
      effects: ["trackButtonDisabled", "spinValue"],
      on: {
        SPIN: [
          { guard: "isIncrementHint", actions: ["increment"] },
          { guard: "isDecrementHint", actions: ["decrement"] },
        ],
        "TRIGGER.PRESS_UP": {
          target: "focused",
          actions: ["focusInput", "clearHint"],
        },
      },
    },
    scrubbing: {
      tags: ["focus"],
      effects: [
        "activatePointerLock",
        "trackMousemove",
        "setupVirtualCursor",
        "preventTextSelection",
      ],
      on: {
        "SCRUBBER.POINTER_UP": {
          target: "focused",
          actions: ["focusInput", "clearCursorPoint"],
        },
        "SCRUBBER.POINTER_MOVE": [
          {
            guard: "isIncrementHint",
            actions: ["increment", "setCursorPoint"],
          },
          {
            guard: "isDecrementHint",
            actions: ["decrement", "setCursorPoint"],
          },
        ],
      },
    },
  },
  implementations: {
    guards: {
      clampValueOnBlur: ({ prop: e }) => e("clampValueOnBlur"),
      spinOnPress: ({ prop: e }) => !!e("spinOnPress"),
      isInRange: ({ computed: e }) => !e("isOutOfRange"),
      isDecrementHint: ({ context: e, event: t }) =>
        (t.hint ?? e.get("hint")) === "decrement",
      isIncrementHint: ({ context: e, event: t }) =>
        (t.hint ?? e.get("hint")) === "increment",
      isTouchPointer: ({ event: e }) => e.pointerType === "touch",
    },
    effects: {
      waitForChangeDelay({ send: e }) {
        const t = setTimeout(() => {
          e({ type: "CHANGE_DELAY" });
        }, 300);
        return () => clearTimeout(t);
      },
      spinValue({ send: e }) {
        const t = setInterval(() => {
          e({ type: "SPIN" });
        }, 50);
        return () => clearInterval(t);
      },
      trackFormControl({ context: e, scope: t }) {
        const n = qs(t);
        return Jd(n, {
          onFieldsetDisabledChange(r) {
            e.set("fieldsetDisabled", r);
          },
          onFormReset() {
            e.set("value", e.initial("value"));
          },
        });
      },
      setupVirtualCursor({ context: e, scope: t }) {
        const n = e.get("scrubberCursorPoint");
        return BN(t, n);
      },
      preventTextSelection({ scope: e }) {
        return jN(e);
      },
      trackButtonDisabled({ context: e, scope: t, send: n }) {
        const r = e.get("hint"),
          o = zN(t, r);
        return Dl(o, {
          attributes: ["disabled"],
          callback() {
            n({ type: "TRIGGER.PRESS_UP", src: "attr" });
          },
        });
      },
      attachWheelListener({ scope: e, send: t, prop: n }) {
        const r = qs(e);
        if (!r || !e.isActiveElement(r) || !n("allowMouseWheel")) return;
        function o(i) {
          i.preventDefault();
          const s = Math.sign(i.deltaY) * -1;
          s === 1
            ? t({ type: "VALUE.INCREMENT" })
            : s === -1 && t({ type: "VALUE.DECREMENT" });
        }
        return vt(r, "wheel", o, { passive: !1 });
      },
      activatePointerLock({ scope: e }) {
        if (!Y0()) return yT(e.getDoc());
      },
      trackMousemove({ scope: e, send: t, context: n, computed: r }) {
        const o = e.getDoc();
        function i(a) {
          const l = n.get("scrubberCursorPoint"),
            c = r("isRtl"),
            u = UN(e, { point: l, isRtl: c, event: a });
          u.hint &&
            t({ type: "SCRUBBER.POINTER_MOVE", hint: u.hint, point: u.point });
        }
        function s() {
          t({ type: "SCRUBBER.POINTER_UP" });
        }
        return Iu(vt(o, "mousemove", i, !1), vt(o, "mouseup", s, !1));
      },
    },
    actions: {
      focusInput({ scope: e, prop: t }) {
        if (!t("focusInputOnChange")) return;
        const n = qs(e);
        e.isActiveElement(n) ||
          pe(() => (n == null ? void 0 : n.focus({ preventScroll: !0 })));
      },
      increment({ context: e, event: t, prop: n, computed: r }) {
        let o = wP(r("valueAsNumber"), t.step ?? n("step"));
        (n("allowOverflow") || (o = Ot(o, n("min"), n("max"))),
          e.set("value", Lr(o, { computed: r, prop: n })));
      },
      decrement({ context: e, event: t, prop: n, computed: r }) {
        let o = CP(r("valueAsNumber"), t.step ?? n("step"));
        (n("allowOverflow") || (o = Ot(o, n("min"), n("max"))),
          e.set("value", Lr(o, { computed: r, prop: n })));
      },
      setClampedValue({ context: e, prop: t, computed: n }) {
        const r = Ot(n("valueAsNumber"), t("min"), t("max"));
        e.set("value", Lr(r, { computed: n, prop: t }));
      },
      setRawValue({ context: e, event: t, prop: n, computed: r }) {
        let o = Uc(t.value, { computed: r, prop: n });
        (n("allowOverflow") || (o = Ot(o, n("min"), n("max"))),
          e.set("value", Lr(o, { computed: r, prop: n })));
      },
      setValue({ context: e, event: t }) {
        var r;
        const n = ((r = t.target) == null ? void 0 : r.value) ?? t.value;
        e.set("value", n);
      },
      clearValue({ context: e }) {
        e.set("value", "");
      },
      incrementToMax({ context: e, prop: t, computed: n }) {
        const r = Lr(t("max"), { computed: n, prop: t });
        e.set("value", r);
      },
      decrementToMin({ context: e, prop: t, computed: n }) {
        const r = Lr(t("min"), { computed: n, prop: t });
        e.set("value", r);
      },
      setHint({ context: e, event: t }) {
        e.set("hint", t.hint);
      },
      clearHint({ context: e }) {
        e.set("hint", null);
      },
      invokeOnFocus({ computed: e, prop: t }) {
        var n;
        (n = t("onFocusChange")) == null ||
          n({
            focused: !0,
            value: e("formattedValue"),
            valueAsNumber: e("valueAsNumber"),
          });
      },
      invokeOnBlur({ computed: e, prop: t }) {
        var n;
        (n = t("onFocusChange")) == null ||
          n({
            focused: !1,
            value: e("formattedValue"),
            valueAsNumber: e("valueAsNumber"),
          });
      },
      invokeOnInvalid({ computed: e, prop: t, event: n }) {
        var o;
        if (n.type === "INPUT.CHANGE") return;
        const r =
          e("valueAsNumber") > t("max") ? "rangeOverflow" : "rangeUnderflow";
        (o = t("onValueInvalid")) == null ||
          o({
            reason: r,
            value: e("formattedValue"),
            valueAsNumber: e("valueAsNumber"),
          });
      },
      syncInputElement({ context: e, event: t, computed: n, scope: r }) {
        const o = t.type.endsWith("CHANGE")
            ? e.get("value")
            : n("formattedValue"),
          i = qs(r),
          s = HN(i);
        pe(() => {
          (Fl(i, o), GN(i, s));
        });
      },
      setFormattedValue({ context: e, computed: t }) {
        e.set("value", t("formattedValue"));
      },
      setCursorPoint({ context: e, event: t }) {
        e.set("scrubberCursorPoint", t.point);
      },
      clearCursorPoint({ context: e }) {
        e.set("scrubberCursorPoint", null);
      },
      setVirtualCursorPosition({ context: e, scope: t }) {
        const n = nx(t),
          r = e.get("scrubberCursorPoint");
        !n ||
          !r ||
          (n.style.transform = `translate3d(${r.x}px, ${r.y}px, 0px)`);
      },
    },
  },
});
se()([
  "allowMouseWheel",
  "allowOverflow",
  "clampValueOnBlur",
  "dir",
  "disabled",
  "focusInputOnChange",
  "form",
  "formatOptions",
  "getRootNode",
  "id",
  "ids",
  "inputMode",
  "invalid",
  "locale",
  "max",
  "min",
  "name",
  "onFocusChange",
  "onValueChange",
  "onValueInvalid",
  "pattern",
  "required",
  "readOnly",
  "spinOnPress",
  "step",
  "translations",
  "value",
  "defaultValue",
]);
var rx = te("pinInput").parts("root", "label", "input", "control");
rx.build();
se()([
  "autoFocus",
  "blurOnComplete",
  "count",
  "defaultValue",
  "dir",
  "disabled",
  "form",
  "getRootNode",
  "id",
  "ids",
  "invalid",
  "mask",
  "name",
  "onValueChange",
  "onValueComplete",
  "onValueInvalid",
  "otp",
  "pattern",
  "placeholder",
  "readOnly",
  "required",
  "selectOnFocus",
  "translations",
  "type",
  "value",
]);
var ox = te("popover").parts(
  "arrow",
  "arrowTip",
  "anchor",
  "trigger",
  "indicator",
  "positioner",
  "content",
  "title",
  "description",
  "closeTrigger",
);
ox.build();
se()([
  "autoFocus",
  "closeOnEscape",
  "closeOnInteractOutside",
  "dir",
  "getRootNode",
  "id",
  "ids",
  "initialFocusEl",
  "modal",
  "onEscapeKeyDown",
  "onFocusOutside",
  "onInteractOutside",
  "onOpenChange",
  "onPointerDownOutside",
  "defaultOpen",
  "open",
  "persistentElements",
  "portalled",
  "positioning",
]);
var bf = te("progress").parts(
  "root",
  "label",
  "track",
  "range",
  "valueText",
  "view",
  "circle",
  "circleTrack",
  "circleRange",
);
bf.build();
se()([
  "dir",
  "getRootNode",
  "id",
  "ids",
  "max",
  "min",
  "orientation",
  "translations",
  "value",
  "onValueChange",
  "defaultValue",
  "formatOptions",
  "locale",
]);
var ix = te("qr-code").parts(
  "root",
  "frame",
  "pattern",
  "overlay",
  "downloadTrigger",
);
ix.build();
se()([
  "ids",
  "defaultValue",
  "value",
  "id",
  "encoding",
  "dir",
  "getRootNode",
  "onValueChange",
  "pixelSize",
]);
var xf = te("radio-group").parts(
  "root",
  "label",
  "item",
  "itemText",
  "itemControl",
  "indicator",
);
xf.build();
se()([
  "dir",
  "disabled",
  "form",
  "getRootNode",
  "id",
  "ids",
  "name",
  "onValueChange",
  "orientation",
  "readOnly",
  "value",
  "defaultValue",
]);
se()(["value", "disabled", "invalid"]);
var sx = te("rating-group").parts("root", "label", "item", "control");
sx.build();
se()([
  "allowHalf",
  "autoFocus",
  "count",
  "dir",
  "disabled",
  "form",
  "getRootNode",
  "id",
  "ids",
  "name",
  "onHoverChange",
  "onValueChange",
  "required",
  "readOnly",
  "translations",
  "value",
  "defaultValue",
]);
se()(["index"]);
const ax = xf.rename("segment-group");
ax.build();
var lx = te("select").parts(
  "label",
  "positioner",
  "trigger",
  "indicator",
  "clearTrigger",
  "item",
  "itemText",
  "itemIndicator",
  "itemGroup",
  "itemGroupLabel",
  "list",
  "content",
  "root",
  "control",
  "valueText",
);
lx.build();
var cx = (e) => new jl(e);
cx.empty = () => new jl({ items: [] });
var ZN = (e) => {
    var t;
    return (
      ((t = e.ids) == null ? void 0 : t.content) ?? `select:${e.id}:content`
    );
  },
  eV = (e) => {
    var t;
    return (
      ((t = e.ids) == null ? void 0 : t.trigger) ?? `select:${e.id}:trigger`
    );
  },
  tV = (e) => {
    var t;
    return (
      ((t = e.ids) == null ? void 0 : t.clearTrigger) ??
      `select:${e.id}:clear-trigger`
    );
  },
  nV = (e, t) => {
    var n, r;
    return (
      ((r = (n = e.ids) == null ? void 0 : n.item) == null
        ? void 0
        : r.call(n, t)) ?? `select:${e.id}:option:${t}`
    );
  },
  rV = (e) => {
    var t;
    return (
      ((t = e.ids) == null ? void 0 : t.hiddenSelect) ?? `select:${e.id}:select`
    );
  },
  oV = (e) => {
    var t;
    return (
      ((t = e.ids) == null ? void 0 : t.positioner) ??
      `select:${e.id}:positioner`
    );
  },
  Wc = (e) => e.getById(rV(e)),
  Ri = (e) => e.getById(ZN(e)),
  Ys = (e) => e.getById(eV(e)),
  iV = (e) => e.getById(tV(e)),
  Op = (e) => e.getById(oV(e)),
  sV = (e, t) => e.getById(nV(e, t)),
  { and: ki, not: zr, or: aV } = Fr();
(aV("isTriggerArrowDownEvent", "isTriggerEnterEvent"),
  ki(zr("multiple"), "hasSelectedItems"),
  zr("multiple"),
  ki(zr("multiple"), "hasSelectedItems"),
  zr("multiple"),
  zr("multiple"),
  zr("multiple"),
  zr("multiple"),
  ki("closeOnSelect", "isOpenControlled"),
  ki("hasHighlightedItem", "loop", "isLastItemHighlighted"),
  ki("hasHighlightedItem", "loop", "isFirstItemHighlighted"));
function _p(e) {
  var n;
  const t =
    e.restoreFocus ?? ((n = e.previousEvent) == null ? void 0 : n.restoreFocus);
  return t == null || !!t;
}
se()([
  "closeOnSelect",
  "collection",
  "composite",
  "defaultHighlightedValue",
  "defaultOpen",
  "defaultValue",
  "deselectable",
  "dir",
  "disabled",
  "form",
  "getRootNode",
  "highlightedValue",
  "id",
  "ids",
  "invalid",
  "loopFocus",
  "multiple",
  "name",
  "onFocusOutside",
  "onHighlightChange",
  "onInteractOutside",
  "onOpenChange",
  "onPointerDownOutside",
  "onSelect",
  "onValueChange",
  "open",
  "positioning",
  "readOnly",
  "required",
  "scrollToIndexFn",
  "value",
]);
se()(["item", "persistFocus"]);
se()(["id"]);
se()(["htmlFor"]);
var ux = te("slider").parts(
  "root",
  "label",
  "thumb",
  "valueText",
  "track",
  "range",
  "control",
  "markerGroup",
  "marker",
  "draggingIndicator",
);
ux.build();
se()([
  "aria-label",
  "aria-labelledby",
  "dir",
  "disabled",
  "form",
  "getAriaValueText",
  "getRootNode",
  "id",
  "ids",
  "invalid",
  "max",
  "min",
  "minStepsBetweenThumbs",
  "name",
  "onFocusChange",
  "onValueChange",
  "onValueChangeEnd",
  "orientation",
  "origin",
  "readOnly",
  "step",
  "thumbAlignment",
  "thumbAlignment",
  "thumbSize",
  "value",
  "defaultValue",
]);
se()(["index", "name"]);
var dx = te("switch").parts("root", "label", "control", "thumb");
dx.build();
se()([
  "checked",
  "defaultChecked",
  "dir",
  "disabled",
  "form",
  "getRootNode",
  "id",
  "ids",
  "invalid",
  "label",
  "name",
  "onCheckedChange",
  "readOnly",
  "required",
  "value",
]);
var fx = te("tooltip").parts(
  "trigger",
  "arrow",
  "arrowTip",
  "positioner",
  "content",
);
fx.build();
var lV = (e) => {
    var t;
    return (
      ((t = e.ids) == null ? void 0 : t.trigger) ?? `tooltip:${e.id}:trigger`
    );
  },
  cV = (e) => {
    var t;
    return (
      ((t = e.ids) == null ? void 0 : t.positioner) ?? `tooltip:${e.id}:popper`
    );
  },
  Hc = (e) => e.getById(lV(e)),
  Ap = (e) => e.getById(cV(e)),
  Br = Kb({ id: null }),
  { and: uV, not: Np } = Fr();
(uV("noVisibleTooltip", Np("hasPointerMoveOpened")),
  Np("hasPointerMoveOpened"));
se()([
  "aria-label",
  "closeDelay",
  "closeOnEscape",
  "closeOnPointerDown",
  "closeOnScroll",
  "closeOnClick",
  "dir",
  "disabled",
  "getRootNode",
  "id",
  "ids",
  "interactive",
  "onOpenChange",
  "defaultOpen",
  "open",
  "openDelay",
  "positioning",
]);
var gx = te("tree-view").parts(
  "branch",
  "branchContent",
  "branchControl",
  "branchIndentGuide",
  "branchIndicator",
  "branchText",
  "branchTrigger",
  "item",
  "itemIndicator",
  "itemText",
  "label",
  "nodeCheckbox",
  "root",
  "tree",
);
gx.build();
var hx = (e) => new $b(e);
hx.empty = () => new $b({ rootNode: { children: [] } });
var dV = (e, t) => {
    var n, r;
    return (
      ((r = (n = e.ids) == null ? void 0 : n.node) == null
        ? void 0
        : r.call(n, t)) ?? `tree:${e.id}:node:${t}`
    );
  },
  jr = (e, t) => {
    var r;
    if (t == null) return;
    const n = dV(e, t);
    (r = e.getById(n)) == null || r.focus({ preventScroll: !0 });
  };
function fV(e, t, n) {
  const r = e.getDescendantValues(t),
    o = r.every((i) => n.includes(i));
  return Vo(o ? eo(n, ...r) : Gr(n, ...r));
}
function Xs(e, t) {
  const { context: n, prop: r, refs: o } = e;
  if (!r("loadChildren")) {
    n.set("expandedValue", (p) => Vo(Gr(p, ...t)));
    return;
  }
  const i = n.get("loadingStatus"),
    [s, a] = Ah(t, (p) => i[p] === "loaded");
  if (
    (s.length > 0 && n.set("expandedValue", (p) => Vo(Gr(p, ...s))),
    a.length === 0)
  )
    return;
  const l = r("collection"),
    [c, u] = Ah(a, (p) => {
      const v = l.findNode(p);
      return l.getNodeChildren(v).length > 0;
    });
  if (
    (c.length > 0 && n.set("expandedValue", (p) => Vo(Gr(p, ...c))),
    u.length === 0)
  )
    return;
  n.set("loadingStatus", (p) => ({
    ...p,
    ...u.reduce((v, b) => ({ ...v, [b]: "loading" }), {}),
  }));
  const d = u.map((p) => {
      const v = l.getIndexPath(p),
        b = l.getValuePath(v),
        S = l.findNode(p);
      return { id: p, indexPath: v, valuePath: b, node: S };
    }),
    f = o.get("pendingAborts"),
    g = r("loadChildren");
  EP(
    g,
    () => "[zag-js/tree-view] `loadChildren` is required for async expansion",
  );
  const h = d.map(({ id: p, indexPath: v, valuePath: b, node: S }) => {
    const w = f.get(p);
    w && (w.abort(), f.delete(p));
    const E = new AbortController();
    return (
      f.set(p, E),
      g({ valuePath: b, indexPath: v, node: S, signal: E.signal })
    );
  });
  Promise.allSettled(h).then((p) => {
    var E, R;
    const v = [],
      b = [],
      S = n.get("loadingStatus");
    let w = r("collection");
    (p.forEach((N, I) => {
      const { id: T, indexPath: k, node: m, valuePath: A } = d[I];
      N.status === "fulfilled"
        ? ((S[T] = "loaded"),
          v.push(T),
          (w = w.replace(k, { ...m, children: N.value })))
        : (f.delete(T),
          Reflect.deleteProperty(S, T),
          b.push({ node: m, error: N.reason, indexPath: k, valuePath: A }));
    }),
      n.set("loadingStatus", S),
      v.length &&
        (n.set("expandedValue", (N) => Vo(Gr(N, ...v))),
        (E = r("onLoadChildrenComplete")) == null || E({ collection: w })),
      b.length && ((R = r("onLoadChildrenError")) == null || R({ nodes: b })));
  });
}
function pr(e) {
  const { prop: t, context: n } = e;
  return function ({ indexPath: o }) {
    return t("collection")
      .getValuePath(o)
      .slice(0, -1)
      .some((s) => !n.get("expandedValue").includes(s));
  };
}
var { and: Pn } = Fr();
(Pn("isMultipleSelection", "moveFocus"),
  Pn("isShiftKey", "isMultipleSelection"),
  Pn("isShiftKey", "isMultipleSelection"),
  Pn("isBranchFocused", "isBranchExpanded"),
  Pn("isShiftKey", "isMultipleSelection"),
  Pn("isShiftKey", "isMultipleSelection"),
  Pn("isCtrlKey", "isMultipleSelection"),
  Pn("isShiftKey", "isMultipleSelection"),
  Pn("isCtrlKey", "isMultipleSelection"),
  Pn("isShiftKey", "isMultipleSelection"));
se()([
  "ids",
  "collection",
  "dir",
  "expandedValue",
  "expandOnClick",
  "defaultFocusedValue",
  "focusedValue",
  "getRootNode",
  "id",
  "onExpandedChange",
  "onFocusChange",
  "onSelectionChange",
  "checkedValue",
  "selectedValue",
  "selectionMode",
  "typeahead",
  "defaultExpandedValue",
  "defaultSelectedValue",
  "defaultCheckedValue",
  "onCheckedChange",
  "onLoadChildrenComplete",
  "onLoadChildrenError",
  "loadChildren",
]);
se()(["node", "indexPath"]);
function px(e, t = []) {
  const n = Object.assign({}, e);
  for (const r of t) r in n && delete n[r];
  return n;
}
const gV = (e, t) => {
    var l;
    if (!e || typeof e != "string") return { invalid: !0, value: e };
    const [n, r] = e.split("/");
    if (!n || !r || n === "currentBg") return { invalid: !0, value: n };
    const o = t(`colors.${n}`),
      i = (l = t.raw(`opacity.${r}`)) == null ? void 0 : l.value;
    if (!i && isNaN(Number(r))) return { invalid: !0, value: n };
    const s = i ? Number(i) * 100 + "%" : `${r}%`,
      a = o ?? n;
    return {
      invalid: !1,
      color: a,
      value: `color-mix(in srgb, ${a} ${s}, transparent)`,
    };
  },
  Re = (e) => (t, n) => {
    const r = n.utils.colorMix(t);
    if (r.invalid) return { [e]: t };
    const o = "--mix-" + e;
    return { [o]: r.value, [e]: `var(${o}, ${r.color})` };
  };
function $u(e) {
  if (e === null || typeof e != "object") return e;
  if (Array.isArray(e)) return e.map((n) => $u(n));
  const t = Object.create(Object.getPrototypeOf(e));
  for (const n of Object.keys(e)) t[n] = $u(e[n]);
  return t;
}
function Mu(e, t) {
  if (t == null) return e;
  for (const n of Object.keys(t))
    if (!(t[n] === void 0 || n === "__proto__"))
      if (!Tt(e[n]) && Tt(t[n])) Object.assign(e, { [n]: t[n] });
      else if (e[n] && Tt(t[n])) Mu(e[n], t[n]);
      else if (Array.isArray(t[n]) && Array.isArray(e[n])) {
        let r = 0;
        for (; r < t[n].length; r++)
          Tt(e[n][r]) && Tt(t[n][r])
            ? Mu(e[n][r], t[n][r])
            : (e[n][r] = t[n][r]);
      } else Object.assign(e, { [n]: t[n] });
  return e;
}
function hi(e, ...t) {
  for (const n of t) Mu(e, n);
  return e;
}
const hV = (e) => e,
  tt = (e) => e,
  ie = (e) => e,
  pV = (e) => e,
  mV = (e) => e,
  pi = (e) => e,
  vV = (e) => e,
  yV = (e) => e,
  bV = (e) => e;
function mx() {
  const e = (t) => t;
  return new Proxy(e, {
    get() {
      return e;
    },
  });
}
const Ze = mx(),
  Sf = mx(),
  vx = (e) => e,
  yx = (...e) => hi({}, ...e.map($u)),
  xV = /[^a-zA-Z0-9_\u0081-\uffff-]/g;
function SV(e) {
  return `${e}`.replace(xV, (t) => `\\${t}`);
}
const wV = /[A-Z]/g;
function CV(e) {
  return e.replace(wV, (t) => `-${t.toLowerCase()}`);
}
function bx(e, t = {}) {
  const { fallback: n = "", prefix: r = "" } = t,
    o = CV(["-", r, SV(e)].filter(Boolean).join("-"));
  return { var: o, ref: `var(${o}${n ? `, ${n}` : ""})` };
}
const EV = (e) => /^var\(--.+\)$/.test(e),
  ot = (e, t) => (t != null ? `${e}(${t})` : t),
  Ur = (e) => {
    if (EV(e) || e == null) return e;
    const t = typeof e == "string" && !e.endsWith("deg");
    return typeof e == "number" || t ? `${e}deg` : e;
  },
  Vp = (e) => ({
    values: ["outside", "inside", "mixed", "none"],
    transform(t, { token: n }) {
      const r = n("colors.colorPalette.focusRing");
      return (
        {
          inside: {
            "--focus-ring-color": r,
            [e]: {
              outlineOffset: "0px",
              outlineWidth: "var(--focus-ring-width, 1px)",
              outlineColor: "var(--focus-ring-color)",
              outlineStyle: "var(--focus-ring-style, solid)",
              borderColor: "var(--focus-ring-color)",
            },
          },
          outside: {
            "--focus-ring-color": r,
            [e]: {
              outlineWidth: "var(--focus-ring-width, 2px)",
              outlineOffset: "var(--focus-ring-offset, 2px)",
              outlineStyle: "var(--focus-ring-style, solid)",
              outlineColor: "var(--focus-ring-color)",
            },
          },
          mixed: {
            "--focus-ring-color": r,
            [e]: {
              outlineWidth: "var(--focus-ring-width, 3px)",
              outlineStyle: "var(--focus-ring-style, solid)",
              outlineColor:
                "color-mix(in srgb, var(--focus-ring-color), transparent 60%)",
              borderColor: "var(--focus-ring-color)",
            },
          },
          none: { "--focus-ring-color": r, [e]: { outline: "none" } },
        }[t] ?? {}
      );
    },
  }),
  IV = Re("borderColor"),
  Hn = (e) => ({
    transition: e,
    transitionTimingFunction: "cubic-bezier(0.4, 0, 0.2, 1)",
    transitionDuration: "150ms",
  }),
  RV = hV({
    hover: [
      "@media (hover: hover)",
      "&:is(:hover, [data-hover]):not(:disabled, [data-disabled])",
    ],
    active:
      "&:is(:active, [data-active]):not(:disabled, [data-disabled], [data-state=open])",
    focus: "&:is(:focus, [data-focus])",
    focusWithin: "&:is(:focus-within, [data-focus-within])",
    focusVisible: "&:is(:focus-visible, [data-focus-visible])",
    disabled:
      "&:is(:disabled, [disabled], [data-disabled], [aria-disabled=true])",
    visited: "&:visited",
    target: "&:target",
    readOnly: "&:is([data-readonly], [aria-readonly=true], [readonly])",
    readWrite: "&:read-write",
    empty: "&:is(:empty, [data-empty])",
    checked:
      "&:is(:checked, [data-checked], [aria-checked=true], [data-state=checked])",
    enabled: "&:enabled",
    expanded:
      "&:is([aria-expanded=true], [data-expanded], [data-state=expanded])",
    highlighted: "&[data-highlighted]",
    complete: "&[data-complete]",
    incomplete: "&[data-incomplete]",
    dragging: "&[data-dragging]",
    before: "&::before",
    after: "&::after",
    firstLetter: "&::first-letter",
    firstLine: "&::first-line",
    marker: "&::marker",
    selection: "&::selection",
    file: "&::file-selector-button",
    backdrop: "&::backdrop",
    first: "&:first-of-type",
    last: "&:last-of-type",
    notFirst: "&:not(:first-of-type)",
    notLast: "&:not(:last-of-type)",
    only: "&:only-child",
    even: "&:nth-of-type(even)",
    odd: "&:nth-of-type(odd)",
    peerFocus: ".peer:is(:focus, [data-focus]) ~ &",
    peerHover:
      ".peer:is(:hover, [data-hover]):not(:disabled, [data-disabled]) ~ &",
    peerActive:
      ".peer:is(:active, [data-active]):not(:disabled, [data-disabled]) ~ &",
    peerFocusWithin: ".peer:focus-within ~ &",
    peerFocusVisible: ".peer:is(:focus-visible, [data-focus-visible]) ~ &",
    peerDisabled: ".peer:is(:disabled, [disabled], [data-disabled]) ~ &",
    peerChecked:
      ".peer:is(:checked, [data-checked], [aria-checked=true], [data-state=checked]) ~ &",
    peerInvalid: ".peer:is(:invalid, [data-invalid], [aria-invalid=true]) ~ &",
    peerExpanded:
      ".peer:is([aria-expanded=true], [data-expanded], [data-state=expanded]) ~ &",
    peerPlaceholderShown: ".peer:placeholder-shown ~ &",
    groupFocus: ".group:is(:focus, [data-focus]) &",
    groupHover:
      ".group:is(:hover, [data-hover]):not(:disabled, [data-disabled]) &",
    groupActive:
      ".group:is(:active, [data-active]):not(:disabled, [data-disabled]) &",
    groupFocusWithin: ".group:focus-within &",
    groupFocusVisible: ".group:is(:focus-visible, [data-focus-visible]) &",
    groupDisabled: ".group:is(:disabled, [disabled], [data-disabled]) &",
    groupChecked:
      ".group:is(:checked, [data-checked], [aria-checked=true], [data-state=checked]) &",
    groupExpanded:
      ".group:is([aria-expanded=true], [data-expanded], [data-state=expanded]) &",
    groupInvalid: ".group:invalid &",
    indeterminate:
      "&:is(:indeterminate, [data-indeterminate], [aria-checked=mixed], [data-state=indeterminate])",
    required: "&:is([data-required], [aria-required=true])",
    valid: "&:is([data-valid], [data-state=valid])",
    invalid: "&:is([data-invalid], [aria-invalid=true], [data-state=invalid])",
    autofill: "&:autofill",
    inRange: "&:is(:in-range, [data-in-range])",
    outOfRange: "&:is(:out-of-range, [data-outside-range])",
    placeholder: "&::placeholder, &[data-placeholder]",
    placeholderShown: "&:is(:placeholder-shown, [data-placeholder-shown])",
    pressed: "&:is([aria-pressed=true], [data-pressed])",
    selected: "&:is([aria-selected=true], [data-selected])",
    grabbed: "&:is([aria-grabbed=true], [data-grabbed])",
    underValue: "&[data-state=under-value]",
    overValue: "&[data-state=over-value]",
    atValue: "&[data-state=at-value]",
    default: "&:default",
    optional: "&:optional",
    open: "&:is([open], [data-open], [data-state=open])",
    closed: "&:is([closed], [data-closed], [data-state=closed])",
    fullscreen: "&is(:fullscreen, [data-fullscreen])",
    loading: "&:is([data-loading], [aria-busy=true])",
    hidden: "&:is([hidden], [data-hidden])",
    current: "&[data-current]",
    currentPage: "&[aria-current=page]",
    currentStep: "&[aria-current=step]",
    today: "&[data-today]",
    unavailable: "&[data-unavailable]",
    rangeStart: "&[data-range-start]",
    rangeEnd: "&[data-range-end]",
    now: "&[data-now]",
    topmost: "&[data-topmost]",
    motionReduce: "@media (prefers-reduced-motion: reduce)",
    motionSafe: "@media (prefers-reduced-motion: no-preference)",
    print: "@media print",
    landscape: "@media (orientation: landscape)",
    portrait: "@media (orientation: portrait)",
    dark: ".dark &, .dark .chakra-theme:not(.light) &",
    light: ":root &, .light &",
    osDark: "@media (prefers-color-scheme: dark)",
    osLight: "@media (prefers-color-scheme: light)",
    highContrast: "@media (forced-colors: active)",
    lessContrast: "@media (prefers-contrast: less)",
    moreContrast: "@media (prefers-contrast: more)",
    ltr: "[dir=ltr] &",
    rtl: "[dir=rtl] &",
    scrollbar: "&::-webkit-scrollbar",
    scrollbarThumb: "&::-webkit-scrollbar-thumb",
    scrollbarTrack: "&::-webkit-scrollbar-track",
    horizontal: "&[data-orientation=horizontal]",
    vertical: "&[data-orientation=vertical]",
    icon: "& :where(svg)",
    starting: "@starting-style",
  }),
  Do = bx("bg-currentcolor"),
  Fp = (e) => e === Do.ref || e === "currentBg",
  Ce = (e) => ({ ...e("colors"), currentBg: Do }),
  kV = vx({
    conditions: RV,
    utilities: {
      background: {
        values: Ce,
        shorthand: ["bg"],
        transform(e, t) {
          if (Fp(t.raw)) return { background: Do.ref };
          const n = Re("background")(e, t);
          return { ...n, [Do.var]: n == null ? void 0 : n.background };
        },
      },
      backgroundColor: {
        values: Ce,
        shorthand: ["bgColor"],
        transform(e, t) {
          if (Fp(t.raw)) return { backgroundColor: Do.ref };
          const n = Re("backgroundColor")(e, t);
          return { ...n, [Do.var]: n == null ? void 0 : n.backgroundColor };
        },
      },
      backgroundSize: { shorthand: ["bgSize"] },
      backgroundPosition: { shorthand: ["bgPos"] },
      backgroundRepeat: { shorthand: ["bgRepeat"] },
      backgroundAttachment: { shorthand: ["bgAttachment"] },
      backgroundClip: {
        shorthand: ["bgClip"],
        values: ["text"],
        transform(e) {
          return e === "text"
            ? { color: "transparent", backgroundClip: "text" }
            : { backgroundClip: e };
        },
      },
      backgroundGradient: {
        shorthand: ["bgGradient"],
        values(e) {
          return {
            ...e("gradients"),
            "to-t": "linear-gradient(to top, var(--gradient))",
            "to-tr": "linear-gradient(to top right, var(--gradient))",
            "to-r": "linear-gradient(to right, var(--gradient))",
            "to-br": "linear-gradient(to bottom right, var(--gradient))",
            "to-b": "linear-gradient(to bottom, var(--gradient))",
            "to-bl": "linear-gradient(to bottom left, var(--gradient))",
            "to-l": "linear-gradient(to left, var(--gradient))",
            "to-tl": "linear-gradient(to top left, var(--gradient))",
          };
        },
        transform(e) {
          return {
            "--gradient-stops": "var(--gradient-from), var(--gradient-to)",
            "--gradient": "var(--gradient-via-stops, var(--gradient-stops))",
            backgroundImage: e,
          };
        },
      },
      gradientFrom: { values: Ce, transform: Re("--gradient-from") },
      gradientTo: { values: Ce, transform: Re("--gradient-to") },
      gradientVia: {
        values: Ce,
        transform(e, t) {
          return {
            ...Re("--gradient-via")(e, t),
            "--gradient-via-stops":
              "var(--gradient-from), var(--gradient-via), var(--gradient-to)",
          };
        },
      },
      backgroundImage: {
        values(e) {
          return { ...e("gradients"), ...e("assets") };
        },
        shorthand: ["bgImg", "bgImage"],
      },
      border: { values: "borders" },
      borderTop: { values: "borders" },
      borderLeft: { values: "borders" },
      borderBlockStart: { values: "borders" },
      borderRight: { values: "borders" },
      borderBottom: { values: "borders" },
      borderBlockEnd: { values: "borders" },
      borderInlineStart: { values: "borders", shorthand: ["borderStart"] },
      borderInlineEnd: { values: "borders", shorthand: ["borderEnd"] },
      borderInline: { values: "borders", shorthand: ["borderX"] },
      borderBlock: { values: "borders", shorthand: ["borderY"] },
      borderColor: { values: Ce, transform: Re("borderColor") },
      borderTopColor: { values: Ce, transform: Re("borderTopColor") },
      borderBlockStartColor: {
        values: Ce,
        transform: Re("borderBlockStartColor"),
      },
      borderBottomColor: { values: Ce, transform: Re("borderBottomColor") },
      borderBlockEndColor: { values: Ce, transform: Re("borderBlockEndColor") },
      borderLeftColor: { values: Ce, transform: Re("borderLeftColor") },
      borderInlineStartColor: {
        values: Ce,
        shorthand: ["borderStartColor"],
        transform: Re("borderInlineStartColor"),
      },
      borderRightColor: { values: Ce, transform: Re("borderRightColor") },
      borderInlineEndColor: {
        values: Ce,
        shorthand: ["borderEndColor"],
        transform: Re("borderInlineEndColor"),
      },
      borderStyle: { values: "borderStyles" },
      borderTopStyle: { values: "borderStyles" },
      borderBlockStartStyle: { values: "borderStyles" },
      borderBottomStyle: { values: "borderStyles" },
      borderBlockEndStyle: { values: "borderStyles" },
      borderInlineStartStyle: {
        values: "borderStyles",
        shorthand: ["borderStartStyle"],
      },
      borderInlineEndStyle: {
        values: "borderStyles",
        shorthand: ["borderEndStyle"],
      },
      borderLeftStyle: { values: "borderStyles" },
      borderRightStyle: { values: "borderStyles" },
      borderRadius: { values: "radii", shorthand: ["rounded"] },
      borderTopLeftRadius: { values: "radii", shorthand: ["roundedTopLeft"] },
      borderStartStartRadius: {
        values: "radii",
        shorthand: ["roundedStartStart", "borderTopStartRadius"],
      },
      borderEndStartRadius: {
        values: "radii",
        shorthand: ["roundedEndStart", "borderBottomStartRadius"],
      },
      borderTopRightRadius: { values: "radii", shorthand: ["roundedTopRight"] },
      borderStartEndRadius: {
        values: "radii",
        shorthand: ["roundedStartEnd", "borderTopEndRadius"],
      },
      borderEndEndRadius: {
        values: "radii",
        shorthand: ["roundedEndEnd", "borderBottomEndRadius"],
      },
      borderBottomLeftRadius: {
        values: "radii",
        shorthand: ["roundedBottomLeft"],
      },
      borderBottomRightRadius: {
        values: "radii",
        shorthand: ["roundedBottomRight"],
      },
      borderInlineStartRadius: {
        values: "radii",
        property: "borderRadius",
        shorthand: ["roundedStart", "borderStartRadius"],
        transform: (e) => ({
          borderStartStartRadius: e,
          borderEndStartRadius: e,
        }),
      },
      borderInlineEndRadius: {
        values: "radii",
        property: "borderRadius",
        shorthand: ["roundedEnd", "borderEndRadius"],
        transform: (e) => ({ borderStartEndRadius: e, borderEndEndRadius: e }),
      },
      borderTopRadius: {
        values: "radii",
        property: "borderRadius",
        shorthand: ["roundedTop"],
        transform: (e) => ({ borderTopLeftRadius: e, borderTopRightRadius: e }),
      },
      borderBottomRadius: {
        values: "radii",
        property: "borderRadius",
        shorthand: ["roundedBottom"],
        transform: (e) => ({
          borderBottomLeftRadius: e,
          borderBottomRightRadius: e,
        }),
      },
      borderLeftRadius: {
        values: "radii",
        property: "borderRadius",
        shorthand: ["roundedLeft"],
        transform: (e) => ({
          borderTopLeftRadius: e,
          borderBottomLeftRadius: e,
        }),
      },
      borderRightRadius: {
        values: "radii",
        property: "borderRadius",
        shorthand: ["roundedRight"],
        transform: (e) => ({
          borderTopRightRadius: e,
          borderBottomRightRadius: e,
        }),
      },
      borderWidth: { values: "borderWidths" },
      borderBlockStartWidth: { values: "borderWidths" },
      borderTopWidth: { values: "borderWidths" },
      borderBottomWidth: { values: "borderWidths" },
      borderBlockEndWidth: { values: "borderWidths" },
      borderRightWidth: { values: "borderWidths" },
      borderInlineWidth: {
        values: "borderWidths",
        shorthand: ["borderXWidth"],
      },
      borderInlineStartWidth: {
        values: "borderWidths",
        shorthand: ["borderStartWidth"],
      },
      borderInlineEndWidth: {
        values: "borderWidths",
        shorthand: ["borderEndWidth"],
      },
      borderLeftWidth: { values: "borderWidths" },
      borderBlockWidth: { values: "borderWidths", shorthand: ["borderYWidth"] },
      color: { values: Ce, transform: Re("color") },
      fill: { values: Ce, transform: Re("fill") },
      stroke: { values: Ce, transform: Re("stroke") },
      accentColor: { values: Ce, transform: Re("accentColor") },
      divideX: {
        values: { type: "string" },
        transform(e) {
          return {
            "& > :not(style, [hidden]) ~ :not(style, [hidden])": {
              borderInlineStartWidth: e,
              borderInlineEndWidth: "0px",
            },
          };
        },
      },
      divideY: {
        values: { type: "string" },
        transform(e) {
          return {
            "& > :not(style, [hidden]) ~ :not(style, [hidden])": {
              borderTopWidth: e,
              borderBottomWidth: "0px",
            },
          };
        },
      },
      divideColor: {
        values: Ce,
        transform(e, t) {
          return {
            "& > :not(style, [hidden]) ~ :not(style, [hidden])": IV(e, t),
          };
        },
      },
      divideStyle: {
        property: "borderStyle",
        transform(e) {
          return {
            "& > :not(style, [hidden]) ~ :not(style, [hidden])": {
              borderStyle: e,
            },
          };
        },
      },
      boxShadow: { values: "shadows", shorthand: ["shadow"] },
      boxShadowColor: {
        values: Ce,
        transform: Re("--shadow-color"),
        shorthand: ["shadowColor"],
      },
      mixBlendMode: { shorthand: ["blendMode"] },
      backgroundBlendMode: { shorthand: ["bgBlendMode"] },
      opacity: { values: "opacity" },
      filter: {
        transform(e) {
          return e !== "auto"
            ? { filter: e }
            : {
                filter:
                  "var(--blur) var(--brightness) var(--contrast) var(--grayscale) var(--hue-rotate) var(--invert) var(--saturate) var(--sepia) var(--drop-shadow)",
              };
        },
      },
      blur: {
        values: "blurs",
        transform: (e) => ({ "--blur": ot("blur", e) }),
      },
      brightness: {
        transform: (e) => ({ "--brightness": ot("brightness", e) }),
      },
      contrast: { transform: (e) => ({ "--contrast": ot("contrast", e) }) },
      grayscale: { transform: (e) => ({ "--grayscale": ot("grayscale", e) }) },
      hueRotate: {
        transform: (e) => ({ "--hue-rotate": ot("hue-rotate", Ur(e)) }),
      },
      invert: { transform: (e) => ({ "--invert": ot("invert", e) }) },
      saturate: { transform: (e) => ({ "--saturate": ot("saturate", e) }) },
      sepia: { transform: (e) => ({ "--sepia": ot("sepia", e) }) },
      dropShadow: {
        transform: (e) => ({ "--drop-shadow": ot("drop-shadow", e) }),
      },
      backdropFilter: {
        transform(e) {
          return e !== "auto"
            ? { backdropFilter: e }
            : {
                backdropFilter:
                  "var(--backdrop-blur) var(--backdrop-brightness) var(--backdrop-contrast) var(--backdrop-grayscale) var(--backdrop-hue-rotate) var(--backdrop-invert) var(--backdrop-opacity) var(--backdrop-saturate) var(--backdrop-sepia)",
              };
        },
      },
      backdropBlur: {
        values: "blurs",
        transform: (e) => ({ "--backdrop-blur": ot("blur", e) }),
      },
      backdropBrightness: {
        transform: (e) => ({ "--backdrop-brightness": ot("brightness", e) }),
      },
      backdropContrast: {
        transform: (e) => ({ "--backdrop-contrast": ot("contrast", e) }),
      },
      backdropGrayscale: {
        transform: (e) => ({ "--backdrop-grayscale": ot("grayscale", e) }),
      },
      backdropHueRotate: {
        transform: (e) => ({
          "--backdrop-hue-rotate": ot("hue-rotate", Ur(e)),
        }),
      },
      backdropInvert: {
        transform: (e) => ({ "--backdrop-invert": ot("invert", e) }),
      },
      backdropOpacity: {
        transform: (e) => ({ "--backdrop-opacity": ot("opacity", e) }),
      },
      backdropSaturate: {
        transform: (e) => ({ "--backdrop-saturate": ot("saturate", e) }),
      },
      backdropSepia: {
        transform: (e) => ({ "--backdrop-sepia": ot("sepia", e) }),
      },
      flexBasis: { values: "sizes" },
      gap: { values: "spacing" },
      rowGap: { values: "spacing", shorthand: ["gapY"] },
      columnGap: { values: "spacing", shorthand: ["gapX"] },
      flexDirection: { shorthand: ["flexDir"] },
      gridGap: { values: "spacing" },
      gridColumnGap: { values: "spacing" },
      gridRowGap: { values: "spacing" },
      outlineColor: { values: Ce, transform: Re("outlineColor") },
      focusRing: Vp("&:is(:focus, [data-focus])"),
      focusVisibleRing: Vp("&:is(:focus-visible, [data-focus-visible])"),
      focusRingColor: { values: Ce, transform: Re("--focus-ring-color") },
      focusRingOffset: {
        values: "spacing",
        transform: (e) => ({ "--focus-ring-offset": e }),
      },
      focusRingWidth: {
        values: "borderWidths",
        property: "outlineWidth",
        transform: (e) => ({ "--focus-ring-width": e }),
      },
      focusRingStyle: {
        values: "borderStyles",
        property: "outlineStyle",
        transform: (e) => ({ "--focus-ring-style": e }),
      },
      aspectRatio: { values: "aspectRatios" },
      width: { values: "sizes", shorthand: ["w"] },
      inlineSize: { values: "sizes" },
      height: { values: "sizes", shorthand: ["h"] },
      blockSize: { values: "sizes" },
      boxSize: {
        values: "sizes",
        property: "width",
        transform: (e) => ({ width: e, height: e }),
      },
      minWidth: { values: "sizes", shorthand: ["minW"] },
      minInlineSize: { values: "sizes" },
      minHeight: { values: "sizes", shorthand: ["minH"] },
      minBlockSize: { values: "sizes" },
      maxWidth: { values: "sizes", shorthand: ["maxW"] },
      maxInlineSize: { values: "sizes" },
      maxHeight: { values: "sizes", shorthand: ["maxH"] },
      maxBlockSize: { values: "sizes" },
      hideFrom: {
        values: "breakpoints",
        transform: (e, { raw: t, token: n }) => ({
          [n.raw(`breakpoints.${t}`)
            ? `@breakpoint ${t}`
            : `@media screen and (min-width: ${e})`]: { display: "none" },
        }),
      },
      hideBelow: {
        values: "breakpoints",
        transform(e, { raw: t, token: n }) {
          return {
            [n.raw(`breakpoints.${t}`)
              ? `@breakpoint ${t}Down`
              : `@media screen and (max-width: ${e})`]: { display: "none" },
          };
        },
      },
      overscrollBehavior: { shorthand: ["overscroll"] },
      overscrollBehaviorX: { shorthand: ["overscrollX"] },
      overscrollBehaviorY: { shorthand: ["overscrollY"] },
      scrollbar: {
        values: ["visible", "hidden"],
        transform(e) {
          switch (e) {
            case "visible":
              return {
                msOverflowStyle: "auto",
                scrollbarWidth: "auto",
                "&::-webkit-scrollbar": { display: "block" },
              };
            case "hidden":
              return {
                msOverflowStyle: "none",
                scrollbarWidth: "none",
                "&::-webkit-scrollbar": { display: "none" },
              };
            default:
              return {};
          }
        },
      },
      scrollbarColor: { values: Ce, transform: Re("scrollbarColor") },
      scrollbarGutter: { values: "spacing" },
      scrollbarWidth: { values: "sizes" },
      scrollMargin: { values: "spacing" },
      scrollMarginTop: { values: "spacing" },
      scrollMarginBottom: { values: "spacing" },
      scrollMarginLeft: { values: "spacing" },
      scrollMarginRight: { values: "spacing" },
      scrollMarginX: {
        values: "spacing",
        transform: (e) => ({ scrollMarginLeft: e, scrollMarginRight: e }),
      },
      scrollMarginY: {
        values: "spacing",
        transform: (e) => ({ scrollMarginTop: e, scrollMarginBottom: e }),
      },
      scrollPadding: { values: "spacing" },
      scrollPaddingTop: { values: "spacing" },
      scrollPaddingBottom: { values: "spacing" },
      scrollPaddingLeft: { values: "spacing" },
      scrollPaddingRight: { values: "spacing" },
      scrollPaddingInline: { values: "spacing", shorthand: ["scrollPaddingX"] },
      scrollPaddingBlock: { values: "spacing", shorthand: ["scrollPaddingY"] },
      scrollSnapType: {
        values: {
          none: "none",
          x: "x var(--scroll-snap-strictness)",
          y: "y var(--scroll-snap-strictness)",
          both: "both var(--scroll-snap-strictness)",
        },
      },
      scrollSnapStrictness: {
        values: ["mandatory", "proximity"],
        transform: (e) => ({ "--scroll-snap-strictness": e }),
      },
      scrollSnapMargin: { values: "spacing" },
      scrollSnapMarginTop: { values: "spacing" },
      scrollSnapMarginBottom: { values: "spacing" },
      scrollSnapMarginLeft: { values: "spacing" },
      scrollSnapMarginRight: { values: "spacing" },
      listStylePosition: { shorthand: ["listStylePos"] },
      listStyleImage: { values: "assets", shorthand: ["listStyleImg"] },
      position: { shorthand: ["pos"] },
      zIndex: { values: "zIndex" },
      inset: { values: "spacing" },
      insetInline: { values: "spacing", shorthand: ["insetX"] },
      insetBlock: { values: "spacing", shorthand: ["insetY"] },
      top: { values: "spacing" },
      insetBlockStart: { values: "spacing" },
      bottom: { values: "spacing" },
      insetBlockEnd: { values: "spacing" },
      left: { values: "spacing" },
      right: { values: "spacing" },
      insetInlineStart: { values: "spacing", shorthand: ["insetStart"] },
      insetInlineEnd: { values: "spacing", shorthand: ["insetEnd"] },
      ring: {
        transform(e) {
          return {
            "--ring-offset-shadow":
              "var(--ring-inset) 0 0 0 var(--ring-offset-width) var(--ring-offset-color)",
            "--ring-shadow":
              "var(--ring-inset) 0 0 0 calc(var(--ring-width) + var(--ring-offset-width)) var(--ring-color)",
            "--ring-width": e,
            boxShadow:
              "var(--ring-offset-shadow), var(--ring-shadow), var(--shadow, 0 0 #0000)",
          };
        },
      },
      ringColor: { values: Ce, transform: Re("--ring-color") },
      ringOffset: { transform: (e) => ({ "--ring-offset-width": e }) },
      ringOffsetColor: { values: Ce, transform: Re("--ring-offset-color") },
      ringInset: { transform: (e) => ({ "--ring-inset": e }) },
      margin: { values: "spacing", shorthand: ["m"] },
      marginTop: { values: "spacing", shorthand: ["mt"] },
      marginBlockStart: { values: "spacing" },
      marginRight: { values: "spacing", shorthand: ["mr"] },
      marginBottom: { values: "spacing", shorthand: ["mb"] },
      marginBlockEnd: { values: "spacing" },
      marginLeft: { values: "spacing", shorthand: ["ml"] },
      marginInlineStart: {
        values: "spacing",
        shorthand: ["ms", "marginStart"],
      },
      marginInlineEnd: { values: "spacing", shorthand: ["me", "marginEnd"] },
      marginInline: { values: "spacing", shorthand: ["mx", "marginX"] },
      marginBlock: { values: "spacing", shorthand: ["my", "marginY"] },
      padding: { values: "spacing", shorthand: ["p"] },
      paddingTop: { values: "spacing", shorthand: ["pt"] },
      paddingRight: { values: "spacing", shorthand: ["pr"] },
      paddingBottom: { values: "spacing", shorthand: ["pb"] },
      paddingBlockStart: { values: "spacing" },
      paddingBlockEnd: { values: "spacing" },
      paddingLeft: { values: "spacing", shorthand: ["pl"] },
      paddingInlineStart: {
        values: "spacing",
        shorthand: ["ps", "paddingStart"],
      },
      paddingInlineEnd: { values: "spacing", shorthand: ["pe", "paddingEnd"] },
      paddingInline: { values: "spacing", shorthand: ["px", "paddingX"] },
      paddingBlock: { values: "spacing", shorthand: ["py", "paddingY"] },
      textDecoration: { shorthand: ["textDecor"] },
      textDecorationColor: { values: Ce, transform: Re("textDecorationColor") },
      textShadow: { values: "shadows" },
      transform: {
        transform: (e) => {
          let t = e;
          return (
            e === "auto" &&
              (t =
                "translateX(var(--translate-x, 0)) translateY(var(--translate-y, 0)) rotate(var(--rotate, 0)) scaleX(var(--scale-x, 1)) scaleY(var(--scale-y, 1)) skewX(var(--skew-x, 0)) skewY(var(--skew-y, 0))"),
            e === "auto-gpu" &&
              (t =
                "translate3d(var(--translate-x, 0), var(--translate-y, 0), 0) rotate(var(--rotate, 0)) scaleX(var(--scale-x, 1)) scaleY(var(--scale-y, 1)) skewX(var(--skew-x, 0)) skewY(var(--skew-y, 0))"),
            { transform: t }
          );
        },
      },
      skewX: { transform: (e) => ({ "--skew-x": Ur(e) }) },
      skewY: { transform: (e) => ({ "--skew-y": Ur(e) }) },
      scaleX: { transform: (e) => ({ "--scale-x": e }) },
      scaleY: { transform: (e) => ({ "--scale-y": e }) },
      scale: {
        transform(e) {
          return e !== "auto"
            ? { scale: e }
            : { scale: "var(--scale-x, 1) var(--scale-y, 1)" };
        },
      },
      spaceXReverse: {
        values: { type: "boolean" },
        transform(e) {
          return {
            "& > :not(style, [hidden]) ~ :not(style, [hidden])": {
              "--space-x-reverse": e ? "1" : void 0,
            },
          };
        },
      },
      spaceX: {
        property: "marginInlineStart",
        values: "spacing",
        transform: (e) => ({
          "& > :not(style, [hidden]) ~ :not(style, [hidden])": {
            "--space-x-reverse": "0",
            marginInlineStart: `calc(${e} * calc(1 - var(--space-x-reverse)))`,
            marginInlineEnd: `calc(${e} * var(--space-x-reverse))`,
          },
        }),
      },
      spaceYReverse: {
        values: { type: "boolean" },
        transform(e) {
          return {
            "& > :not(style, [hidden]) ~ :not(style, [hidden])": {
              "--space-y-reverse": e ? "1" : void 0,
            },
          };
        },
      },
      spaceY: {
        property: "marginTop",
        values: "spacing",
        transform: (e) => ({
          "& > :not(style, [hidden]) ~ :not(style, [hidden])": {
            "--space-y-reverse": "0",
            marginTop: `calc(${e} * calc(1 - var(--space-y-reverse)))`,
            marginBottom: `calc(${e} * var(--space-y-reverse))`,
          },
        }),
      },
      rotate: {
        transform(e) {
          return e !== "auto"
            ? { rotate: Ur(e) }
            : {
                rotate:
                  "var(--rotate-x, 0) var(--rotate-y, 0) var(--rotate-z, 0)",
              };
        },
      },
      rotateX: {
        transform(e) {
          return { "--rotate-x": Ur(e) };
        },
      },
      rotateY: {
        transform(e) {
          return { "--rotate-y": Ur(e) };
        },
      },
      translate: {
        transform(e) {
          return e !== "auto"
            ? { translate: e }
            : { translate: "var(--translate-x) var(--translate-y)" };
        },
      },
      translateX: {
        values: "spacing",
        transform: (e) => ({ "--translate-x": e }),
      },
      translateY: {
        values: "spacing",
        transform: (e) => ({ "--translate-y": e }),
      },
      transition: {
        values: [
          "all",
          "common",
          "colors",
          "opacity",
          "position",
          "backgrounds",
          "size",
          "shadow",
          "transform",
        ],
        transform(e) {
          switch (e) {
            case "all":
              return Hn("all");
            case "position":
              return Hn("left, right, top, bottom, inset-inline, inset-block");
            case "colors":
              return Hn(
                "color, background-color, border-color, text-decoration-color, fill, stroke",
              );
            case "opacity":
              return Hn("opacity");
            case "shadow":
              return Hn("box-shadow");
            case "transform":
              return Hn("transform");
            case "size":
              return Hn("width, height");
            case "backgrounds":
              return Hn(
                "background, background-color, background-image, background-position",
              );
            case "common":
              return Hn(
                "color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter",
              );
            default:
              return { transition: e };
          }
        },
      },
      transitionDuration: { values: "durations" },
      transitionProperty: {
        values: {
          common:
            "background-color, border-color, color, fill, stroke, opacity, box-shadow, translate, transform",
          colors: "background-color, border-color, color, fill, stroke",
          size: "width, height",
          position: "left, right, top, bottom, inset-inline, inset-block",
          background:
            "background, background-color, background-image, background-position",
        },
      },
      transitionTimingFunction: { values: "easings" },
      animation: { values: "animations" },
      animationDuration: { values: "durations" },
      animationDelay: { values: "durations" },
      animationTimingFunction: { values: "easings" },
      fontFamily: { values: "fonts" },
      fontSize: { values: "fontSizes" },
      fontWeight: { values: "fontWeights" },
      lineHeight: { values: "lineHeights" },
      letterSpacing: { values: "letterSpacings" },
      textIndent: { values: "spacing" },
      truncate: {
        values: { type: "boolean" },
        transform(e) {
          return e === !0
            ? {
                overflow: "hidden",
                textOverflow: "ellipsis",
                whiteSpace: "nowrap",
              }
            : {};
        },
      },
      lineClamp: {
        transform(e) {
          return e === "none"
            ? { WebkitLineClamp: "unset" }
            : {
                overflow: "hidden",
                display: "-webkit-box",
                WebkitLineClamp: e,
                WebkitBoxOrient: "vertical",
                textWrap: "wrap",
              };
        },
      },
      srOnly: {
        values: { type: "boolean" },
        transform(e) {
          return PV[e] || {};
        },
      },
      debug: {
        values: { type: "boolean" },
        transform(e) {
          return e
            ? {
                outline: "1px solid blue !important",
                "& > *": { outline: "1px solid red !important" },
              }
            : {};
        },
      },
      caretColor: { values: Ce, transform: Re("caretColor") },
      cursor: { values: "cursor" },
    },
  }),
  PV = {
    true: {
      position: "absolute",
      width: "1px",
      height: "1px",
      padding: "0",
      margin: "-1px",
      overflow: "hidden",
      clip: "rect(0, 0, 0, 0)",
      whiteSpace: "nowrap",
      borderWidth: "0",
    },
    false: {
      position: "static",
      width: "auto",
      height: "auto",
      padding: "0",
      margin: "0",
      overflow: "visible",
      clip: "auto",
      whiteSpace: "normal",
    },
  };
var TV = "",
  OV = TV.split(","),
  _V =
    "WebkitAppearance,WebkitBorderBefore,WebkitBorderBeforeColor,WebkitBorderBeforeStyle,WebkitBorderBeforeWidth,WebkitBoxReflect,WebkitLineClamp,WebkitMask,WebkitMaskAttachment,WebkitMaskClip,WebkitMaskComposite,WebkitMaskImage,WebkitMaskOrigin,WebkitMaskPosition,WebkitMaskPositionX,WebkitMaskPositionY,WebkitMaskRepeat,WebkitMaskRepeatX,WebkitMaskRepeatY,WebkitMaskSize,WebkitOverflowScrolling,WebkitTapHighlightColor,WebkitTextFillColor,WebkitTextStroke,WebkitTextStrokeColor,WebkitTextStrokeWidth,WebkitTouchCallout,WebkitUserModify,WebkitUserSelect,accentColor,alignContent,alignItems,alignSelf,alignTracks,all,anchorName,anchorScope,animation,animationComposition,animationDelay,animationDirection,animationDuration,animationFillMode,animationIterationCount,animationName,animationPlayState,animationRange,animationRangeEnd,animationRangeStart,animationTimeline,animationTimingFunction,appearance,aspectRatio,backdropFilter,backfaceVisibility,background,backgroundAttachment,backgroundBlendMode,backgroundClip,backgroundColor,backgroundImage,backgroundOrigin,backgroundPosition,backgroundPositionX,backgroundPositionY,backgroundRepeat,backgroundSize,blockSize,border,borderBlock,borderBlockColor,borderBlockEnd,borderBlockEndColor,borderBlockEndStyle,borderBlockEndWidth,borderBlockStart,borderBlockStartColor,borderBlockStartStyle,borderBlockStartWidth,borderBlockStyle,borderBlockWidth,borderBottom,borderBottomColor,borderBottomLeftRadius,borderBottomRightRadius,borderBottomStyle,borderBottomWidth,borderCollapse,borderColor,borderEndEndRadius,borderEndStartRadius,borderImage,borderImageOutset,borderImageRepeat,borderImageSlice,borderImageSource,borderImageWidth,borderInline,borderInlineColor,borderInlineEnd,borderInlineEndColor,borderInlineEndStyle,borderInlineEndWidth,borderInlineStart,borderInlineStartColor,borderInlineStartStyle,borderInlineStartWidth,borderInlineStyle,borderInlineWidth,borderLeft,borderLeftColor,borderLeftStyle,borderLeftWidth,borderRadius,borderRight,borderRightColor,borderRightStyle,borderRightWidth,borderSpacing,borderStartEndRadius,borderStartStartRadius,borderStyle,borderTop,borderTopColor,borderTopLeftRadius,borderTopRightRadius,borderTopStyle,borderTopWidth,borderWidth,bottom,boxAlign,boxDecorationBreak,boxDirection,boxFlex,boxFlexGroup,boxLines,boxOrdinalGroup,boxOrient,boxPack,boxShadow,boxSizing,breakAfter,breakBefore,breakInside,captionSide,caret,caretColor,caretShape,clear,clip,clipPath,clipRule,color,colorInterpolationFilters,colorScheme,columnCount,columnFill,columnGap,columnRule,columnRuleColor,columnRuleStyle,columnRuleWidth,columnSpan,columnWidth,columns,contain,containIntrinsicBlockSize,containIntrinsicHeight,containIntrinsicInlineSize,containIntrinsicSize,containIntrinsicWidth,container,containerName,containerType,content,contentVisibility,counterIncrement,counterReset,counterSet,cursor,cx,cy,d,direction,display,dominantBaseline,emptyCells,fieldSizing,fill,fillOpacity,fillRule,filter,flex,flexBasis,flexDirection,flexFlow,flexGrow,flexShrink,flexWrap,float,floodColor,floodOpacity,font,fontFamily,fontFeatureSettings,fontKerning,fontLanguageOverride,fontOpticalSizing,fontPalette,fontSize,fontSizeAdjust,fontSmooth,fontStretch,fontStyle,fontSynthesis,fontSynthesisPosition,fontSynthesisSmallCaps,fontSynthesisStyle,fontSynthesisWeight,fontVariant,fontVariantAlternates,fontVariantCaps,fontVariantEastAsian,fontVariantEmoji,fontVariantLigatures,fontVariantNumeric,fontVariantPosition,fontVariationSettings,fontWeight,forcedColorAdjust,gap,grid,gridArea,gridAutoColumns,gridAutoFlow,gridAutoRows,gridColumn,gridColumnEnd,gridColumnGap,gridColumnStart,gridGap,gridRow,gridRowEnd,gridRowGap,gridRowStart,gridTemplate,gridTemplateAreas,gridTemplateColumns,gridTemplateRows,hangingPunctuation,height,hyphenateCharacter,hyphenateLimitChars,hyphens,imageOrientation,imageRendering,imageResolution,imeMode,initialLetter,initialLetterAlign,inlineSize,inset,insetBlock,insetBlockEnd,insetBlockStart,insetInline,insetInlineEnd,insetInlineStart,interpolateSize,isolation,justifyContent,justifyItems,justifySelf,justifyTracks,left,letterSpacing,lightingColor,lineBreak,lineClamp,lineHeight,lineHeightStep,listStyle,listStyleImage,listStylePosition,listStyleType,margin,marginBlock,marginBlockEnd,marginBlockStart,marginBottom,marginInline,marginInlineEnd,marginInlineStart,marginLeft,marginRight,marginTop,marginTrim,marker,markerEnd,markerMid,markerStart,mask,maskBorder,maskBorderMode,maskBorderOutset,maskBorderRepeat,maskBorderSlice,maskBorderSource,maskBorderWidth,maskClip,maskComposite,maskImage,maskMode,maskOrigin,maskPosition,maskRepeat,maskSize,maskType,masonryAutoFlow,mathDepth,mathShift,mathStyle,maxBlockSize,maxHeight,maxInlineSize,maxLines,maxWidth,minBlockSize,minHeight,minInlineSize,minWidth,mixBlendMode,objectFit,objectPosition,offset,offsetAnchor,offsetDistance,offsetPath,offsetPosition,offsetRotate,opacity,order,orphans,outline,outlineColor,outlineOffset,outlineStyle,outlineWidth,overflow,overflowAnchor,overflowBlock,overflowClipBox,overflowClipMargin,overflowInline,overflowWrap,overflowX,overflowY,overlay,overscrollBehavior,overscrollBehaviorBlock,overscrollBehaviorInline,overscrollBehaviorX,overscrollBehaviorY,padding,paddingBlock,paddingBlockEnd,paddingBlockStart,paddingBottom,paddingInline,paddingInlineEnd,paddingInlineStart,paddingLeft,paddingRight,paddingTop,page,pageBreakAfter,pageBreakBefore,pageBreakInside,paintOrder,perspective,perspectiveOrigin,placeContent,placeItems,placeSelf,pointerEvents,position,positionAnchor,positionArea,positionTry,positionTryFallbacks,positionTryOrder,positionVisibility,printColorAdjust,quotes,r,resize,right,rotate,rowGap,rubyAlign,rubyMerge,rubyPosition,rx,ry,scale,scrollBehavior,scrollMargin,scrollMarginBlock,scrollMarginBlockEnd,scrollMarginBlockStart,scrollMarginBottom,scrollMarginInline,scrollMarginInlineEnd,scrollMarginInlineStart,scrollMarginLeft,scrollMarginRight,scrollMarginTop,scrollPadding,scrollPaddingBlock,scrollPaddingBlockEnd,scrollPaddingBlockStart,scrollPaddingBottom,scrollPaddingInline,scrollPaddingInlineEnd,scrollPaddingInlineStart,scrollPaddingLeft,scrollPaddingRight,scrollPaddingTop,scrollSnapAlign,scrollSnapCoordinate,scrollSnapDestination,scrollSnapPointsX,scrollSnapPointsY,scrollSnapStop,scrollSnapType,scrollSnapTypeX,scrollSnapTypeY,scrollTimeline,scrollTimelineAxis,scrollTimelineName,scrollbarColor,scrollbarGutter,scrollbarWidth,shapeImageThreshold,shapeMargin,shapeOutside,shapeRendering,stopColor,stopOpacity,stroke,strokeDasharray,strokeDashoffset,strokeLinecap,strokeLinejoin,strokeMiterlimit,strokeOpacity,strokeWidth,tabSize,tableLayout,textAlign,textAlignLast,textAnchor,textBox,textBoxEdge,textBoxTrim,textCombineUpright,textDecoration,textDecorationColor,textDecorationLine,textDecorationSkip,textDecorationSkipInk,textDecorationStyle,textDecorationThickness,textEmphasis,textEmphasisColor,textEmphasisPosition,textEmphasisStyle,textIndent,textJustify,textOrientation,textOverflow,textRendering,textShadow,textSizeAdjust,textSpacingTrim,textTransform,textUnderlineOffset,textUnderlinePosition,textWrap,textWrapMode,textWrapStyle,timelineScope,top,touchAction,transform,transformBox,transformOrigin,transformStyle,transition,transitionBehavior,transitionDelay,transitionDuration,transitionProperty,transitionTimingFunction,translate,unicodeBidi,userSelect,vectorEffect,verticalAlign,viewTimeline,viewTimelineAxis,viewTimelineInset,viewTimelineName,viewTransitionName,visibility,whiteSpace,whiteSpaceCollapse,widows,width,willChange,wordBreak,wordSpacing,wordWrap,writingMode,x,y,zIndex,zoom,alignmentBaseline,baselineShift,colorInterpolation,colorRendering,glyphOrientationVertical",
  AV = _V.split(",").concat(OV),
  NV = new Map(AV.map((e) => [e, !0]));
function VV(e) {
  const t = Object.create(null);
  return (n) => (t[n] === void 0 && (t[n] = e(n)), t[n]);
}
var FV = /&|@/,
  DV = VV((e) => NV.has(e) || e.startsWith("--") || FV.test(e));
const Lu = (e) => e != null;
function dr(e, t, n = {}) {
  const { stop: r, getKey: o } = n;
  function i(s, a = []) {
    if (Tt(s) || Array.isArray(s)) {
      const l = {};
      for (const [c, u] of Object.entries(s)) {
        const d = (o == null ? void 0 : o(c, u)) ?? c,
          f = [...a, d];
        if (r != null && r(s, f)) return t(s, a);
        const g = i(u, f);
        Lu(g) && (l[d] = g);
      }
      return l;
    }
    return t(s, a);
  }
  return i(e);
}
function $V(e, t) {
  return Array.isArray(e)
    ? e.map((n) => (Lu(n) ? t(n) : n))
    : Tt(e)
      ? dr(e, (n) => t(n))
      : Lu(e)
        ? t(e)
        : e;
}
function MV(e, t) {
  const n = {};
  return (
    dr(
      e,
      (r, o) => {
        r && (n[o.join(".")] = r.value);
      },
      { stop: t },
    ),
    n
  );
}
var LV = ls;
ls.default = ls;
ls.stable = wx;
ls.stableStringify = wx;
var Ya = "[...]",
  xx = "[Circular]",
  uo = [],
  qr = [];
function Sx() {
  return {
    depthLimit: Number.MAX_SAFE_INTEGER,
    edgesLimit: Number.MAX_SAFE_INTEGER,
  };
}
function ls(e, t, n, r) {
  (typeof r > "u" && (r = Sx()), zu(e, "", 0, [], void 0, 0, r));
  var o;
  try {
    qr.length === 0
      ? (o = JSON.stringify(e, t, n))
      : (o = JSON.stringify(e, Cx(t), n));
  } catch {
    return JSON.stringify(
      "[unable to serialize, circular reference is too complex to analyze]",
    );
  } finally {
    for (; uo.length !== 0; ) {
      var i = uo.pop();
      i.length === 4
        ? Object.defineProperty(i[0], i[1], i[3])
        : (i[0][i[1]] = i[2]);
    }
  }
  return o;
}
function zo(e, t, n, r) {
  var o = Object.getOwnPropertyDescriptor(r, n);
  o.get !== void 0
    ? o.configurable
      ? (Object.defineProperty(r, n, { value: e }), uo.push([r, n, t, o]))
      : qr.push([t, n, e])
    : ((r[n] = e), uo.push([r, n, t]));
}
function zu(e, t, n, r, o, i, s) {
  i += 1;
  var a;
  if (typeof e == "object" && e !== null) {
    for (a = 0; a < r.length; a++)
      if (r[a] === e) {
        zo(xx, e, t, o);
        return;
      }
    if (typeof s.depthLimit < "u" && i > s.depthLimit) {
      zo(Ya, e, t, o);
      return;
    }
    if (typeof s.edgesLimit < "u" && n + 1 > s.edgesLimit) {
      zo(Ya, e, t, o);
      return;
    }
    if ((r.push(e), Array.isArray(e)))
      for (a = 0; a < e.length; a++) zu(e[a], a, a, r, e, i, s);
    else {
      var l = Object.keys(e);
      for (a = 0; a < l.length; a++) {
        var c = l[a];
        zu(e[c], c, a, r, e, i, s);
      }
    }
    r.pop();
  }
}
function zV(e, t) {
  return e < t ? -1 : e > t ? 1 : 0;
}
function wx(e, t, n, r) {
  typeof r > "u" && (r = Sx());
  var o = Bu(e, "", 0, [], void 0, 0, r) || e,
    i;
  try {
    qr.length === 0
      ? (i = JSON.stringify(o, t, n))
      : (i = JSON.stringify(o, Cx(t), n));
  } catch {
    return JSON.stringify(
      "[unable to serialize, circular reference is too complex to analyze]",
    );
  } finally {
    for (; uo.length !== 0; ) {
      var s = uo.pop();
      s.length === 4
        ? Object.defineProperty(s[0], s[1], s[3])
        : (s[0][s[1]] = s[2]);
    }
  }
  return i;
}
function Bu(e, t, n, r, o, i, s) {
  i += 1;
  var a;
  if (typeof e == "object" && e !== null) {
    for (a = 0; a < r.length; a++)
      if (r[a] === e) {
        zo(xx, e, t, o);
        return;
      }
    try {
      if (typeof e.toJSON == "function") return;
    } catch {
      return;
    }
    if (typeof s.depthLimit < "u" && i > s.depthLimit) {
      zo(Ya, e, t, o);
      return;
    }
    if (typeof s.edgesLimit < "u" && n + 1 > s.edgesLimit) {
      zo(Ya, e, t, o);
      return;
    }
    if ((r.push(e), Array.isArray(e)))
      for (a = 0; a < e.length; a++) Bu(e[a], a, a, r, e, i, s);
    else {
      var l = {},
        c = Object.keys(e).sort(zV);
      for (a = 0; a < c.length; a++) {
        var u = c[a];
        (Bu(e[u], u, a, r, e, i, s), (l[u] = e[u]));
      }
      if (typeof o < "u") (uo.push([o, t, e]), (o[t] = l));
      else return l;
    }
    r.pop();
  }
}
function Cx(e) {
  return (
    (e =
      typeof e < "u"
        ? e
        : function (t, n) {
            return n;
          }),
    function (t, n) {
      if (qr.length > 0)
        for (var r = 0; r < qr.length; r++) {
          var o = qr[r];
          if (o[1] === t && o[0] === n) {
            ((n = o[2]), qr.splice(r, 1));
            break;
          }
        }
      return e.call(this, t, n);
    }
  );
}
const BV = Sw(LV),
  vn = (e) => {
    const t = Object.create(null);
    function n(...r) {
      const o = r.map((i) => BV(i)).join("|");
      return (t[o] === void 0 && (t[o] = e(...r)), t[o]);
    }
    return n;
  },
  Ex = 16,
  Xa = "px",
  wf = "em",
  Hi = "rem";
function Ix(e = "") {
  const t = new RegExp(String.raw`-?\d+(?:\.\d+|\d*)`),
    n = new RegExp(`${Xa}|${wf}|${Hi}`),
    r = e.match(new RegExp(`${t.source}(${n.source})`));
  return r == null ? void 0 : r[1];
}
function Rx(e = "") {
  if (typeof e == "number") return `${e}px`;
  const t = Ix(e);
  if (!t || t === Xa) return e;
  if (t === wf || t === Hi) return `${parseFloat(e) * Ex}${Xa}`;
}
function kx(e = "") {
  const t = Ix(e);
  if (!t || t === Hi) return e;
  if (t === wf) return `${parseFloat(e)}${Hi}`;
  if (t === Xa) return `${parseFloat(e) / Ex}${Hi}`;
}
const jV = (e) => e.charAt(0).toUpperCase() + e.slice(1);
function UV(e) {
  const t = WV(e),
    n = Object.fromEntries(t);
  function r(f) {
    return n[f];
  }
  function o(f) {
    return So(r(f));
  }
  function i() {
    const f = Object.keys(n),
      g = HV(f),
      h = f
        .flatMap((p) => {
          const v = r(p),
            b = [`${p}Down`, So({ max: xa(v.min) })],
            S = [p, So({ min: v.min })],
            w = [`${p}Only`, o(p)];
          return [S, w, b];
        })
        .filter(([, p]) => p !== "")
        .concat(
          g.map(([p, v]) => {
            const b = r(p),
              S = r(v);
            return [`${p}To${jV(v)}`, So({ min: b.min, max: xa(S.min) })];
          }),
        );
    return Object.fromEntries(h);
  }
  function s() {
    const f = i();
    return Object.fromEntries(Object.entries(f));
  }
  const a = s(),
    l = (f) => a[f];
  function c() {
    return ["base", ...Object.keys(n)];
  }
  function u(f) {
    return So({ min: r(f).min });
  }
  function d(f) {
    return So({ max: xa(r(f).min) });
  }
  return {
    values: Object.values(n),
    only: o,
    keys: c,
    conditions: a,
    getCondition: l,
    up: u,
    down: d,
  };
}
function xa(e) {
  const t = parseFloat(Rx(e) ?? "") - 0.04;
  return kx(`${t}px`);
}
function WV(e) {
  return Object.entries(e)
    .sort(([, n], [, r]) => (parseInt(n, 10) < parseInt(r, 10) ? -1 : 1))
    .map(([n, r], o, i) => {
      var a;
      let s = null;
      return (
        o <= i.length - 1 && (s = (a = i[o + 1]) == null ? void 0 : a[1]),
        s != null && (s = xa(s)),
        [n, { name: n, min: kx(r), max: s }]
      );
    });
}
function HV(e) {
  const t = [];
  return (
    e.forEach((n, r) => {
      let o = r;
      o++;
      let i = e[o];
      for (; i; ) (t.push([n, i]), o++, (i = e[o]));
    }),
    t
  );
}
function So({ min: e, max: t }) {
  return e == null && t == null
    ? ""
    : ["@media screen", e && `(min-width: ${e})`, t && `(max-width: ${t})`]
        .filter(Boolean)
        .join(" and ");
}
const GV = (e, t) =>
    Object.fromEntries(Object.entries(e).map(([n, r]) => t(n, r))),
  KV = (e) => {
    const { breakpoints: t, conditions: n = {} } = e,
      r = GV(n, (u, d) => [`_${u}`, d]),
      o = Object.assign({}, r, t.conditions);
    function i() {
      return Object.keys(o);
    }
    function s(u) {
      return i().includes(u) || /^@|&|&$/.test(u) || u.startsWith("_");
    }
    function a(u) {
      return u
        .filter((d) => d !== "base")
        .sort((d, f) => {
          const g = s(d),
            h = s(f);
          return g && !h ? 1 : !g && h ? -1 : 0;
        });
    }
    function l(u) {
      return u.startsWith("@breakpoint")
        ? t.getCondition(u.replace("@breakpoint ", ""))
        : u;
    }
    function c(u) {
      return Reflect.get(o, u) || u;
    }
    return {
      keys: i,
      sort: a,
      has: s,
      resolve: c,
      breakpoints: t.keys(),
      expandAtRule: l,
    };
  },
  Px = (e) => ({
    minMax: new RegExp(
      `(!?\\(\\s*min(-device-)?-${e})(.|
)+\\(\\s*max(-device)?-${e}`,
      "i",
    ),
    min: new RegExp(`\\(\\s*min(-device)?-${e}`, "i"),
    maxMin: new RegExp(
      `(!?\\(\\s*max(-device)?-${e})(.|
)+\\(\\s*min(-device)?-${e}`,
      "i",
    ),
    max: new RegExp(`\\(\\s*max(-device)?-${e}`, "i"),
  }),
  qV = Px("width"),
  YV = Px("height"),
  Tx = (e) => ({
    isMin: Bp(e.minMax, e.maxMin, e.min),
    isMax: Bp(e.maxMin, e.minMax, e.max),
  }),
  { isMin: ju, isMax: Dp } = Tx(qV),
  { isMin: Uu, isMax: $p } = Tx(YV),
  Mp = /print/i,
  Lp = /^print$/i,
  XV = /(-?\d*\.?\d+)(ch|em|ex|px|rem)/,
  JV = /(\d)/,
  Mi = Number.MAX_VALUE,
  QV = { ch: 8.8984375, em: 16, rem: 16, ex: 8.296875, px: 1 };
function zp(e) {
  const t = XV.exec(e) || (ju(e) || Uu(e) ? JV.exec(e) : null);
  if (!t) return Mi;
  if (t[0] === "0") return 0;
  const n = parseFloat(t[1]),
    r = t[2];
  return n * (QV[r] || 1);
}
function Bp(e, t, n) {
  return (r) => e.test(r) || (!t.test(r) && n.test(r));
}
function ZV(e, t) {
  const n = Mp.test(e),
    r = Lp.test(e),
    o = Mp.test(t),
    i = Lp.test(t);
  return n && o
    ? !r && i
      ? 1
      : r && !i
        ? -1
        : e.localeCompare(t)
    : n
      ? 1
      : o
        ? -1
        : null;
}
const eF = vn((e, t) => {
  const n = ZV(e, t);
  if (n !== null) return n;
  const r = ju(e) || Uu(e),
    o = Dp(e) || $p(e),
    i = ju(t) || Uu(t),
    s = Dp(t) || $p(t);
  if (r && s) return -1;
  if (o && i) return 1;
  const a = zp(e),
    l = zp(t);
  return a === Mi && l === Mi
    ? e.localeCompare(t)
    : a === Mi
      ? 1
      : l === Mi
        ? -1
        : a !== l
          ? a > l
            ? o
              ? -1
              : 1
            : o
              ? 1
              : -1
          : e.localeCompare(t);
});
function jp(e) {
  return e.sort(([t], [n]) => eF(t, n));
}
function Ox(e) {
  const t = [],
    n = [],
    r = {};
  for (const [s, a] of Object.entries(e))
    s.startsWith("@media")
      ? t.push([s, a])
      : s.startsWith("@container")
        ? n.push([s, a])
        : Tt(a)
          ? (r[s] = Ox(a))
          : (r[s] = a);
  const o = jp(t),
    i = jp(n);
  return { ...r, ...Object.fromEntries(o), ...Object.fromEntries(i) };
}
const _x = /\s*!(important)?/i,
  tF = (e) => (ar(e) ? _x.test(e) : !1),
  nF = (e) => (ar(e) ? e.replace(_x, "").trim() : e);
function Ax(e) {
  const { transform: t, conditions: n, normalize: r } = e,
    o = iF(e);
  return vn(function (...s) {
    const a = o(...s),
      l = r(a),
      c = Object.create(null);
    return (
      dr(l, (u, d) => {
        const f = tF(u);
        if (u == null) return;
        const [g, ...h] = n.sort(d).map(n.resolve);
        f && (u = nF(u));
        let p = t(g, u) ?? Object.create(null);
        ((p = dr(p, (v) => (ar(v) && f ? `${v} !important` : v), {
          getKey: (v) => n.expandAtRule(v),
        })),
          rF(c, h.flat(), p));
      }),
      Ox(c)
    );
  });
}
function rF(e, t, n) {
  let r = e;
  for (const o of t) o && (r[o] || (r[o] = Object.create(null)), (r = r[o]));
  hi(r, n);
}
function oF(...e) {
  return e.filter((t) => Tt(t) && Object.keys(Ol(t)).length > 0);
}
function iF(e) {
  function t(n) {
    const r = oF(...n);
    return r.length === 1 ? r : r.map((o) => e.normalize(o));
  }
  return vn(function (...r) {
    return hi({}, ...t(r));
  });
}
const Nx = (e) => ({
  base: {},
  variants: {},
  defaultVariants: {},
  compoundVariants: [],
  ...e,
});
function sF(e) {
  const { css: t, conditions: n, normalize: r, layers: o } = e;
  function i(a = {}) {
    const {
        base: l,
        variants: c,
        defaultVariants: u,
        compoundVariants: d,
      } = Nx(a),
      f = Ax({
        conditions: n,
        normalize: r,
        transform(S, w) {
          var E;
          return (E = c[S]) == null ? void 0 : E[w];
        },
      }),
      g = (S = {}) => {
        const w = r({ ...u, ...Ol(S) });
        let E = { ...l };
        hi(E, f(w));
        const R = s(d, w);
        return o.wrap("recipes", t(E, R));
      },
      h = Object.keys(c),
      p = (S) => {
        const w = px(S, ["recipe"]),
          [E, R] = Gd(w, h);
        return (
          h.includes("colorPalette") ||
            (E.colorPalette = S.colorPalette || u.colorPalette),
          h.includes("orientation") && (R.orientation = S.orientation),
          [E, R]
        );
      },
      v = Object.fromEntries(
        Object.entries(c).map(([S, w]) => [S, Object.keys(w)]),
      );
    return Object.assign((S) => t(g(S)), {
      className: a.className,
      __cva__: !0,
      variantMap: v,
      variantKeys: h,
      raw: g,
      config: a,
      splitVariantProps: p,
      merge(S) {
        return i(aF(e)(this, S));
      },
    });
  }
  function s(a, l) {
    let c = {};
    return (
      a.forEach((u) => {
        Object.entries(u).every(([f, g]) =>
          f === "css"
            ? !0
            : (Array.isArray(g) ? g : [g]).some((p) => l[f] === p),
        ) && (c = t(c, u.css));
      }),
      c
    );
  }
  return i;
}
function aF(e) {
  const { css: t } = e;
  return function (r, o) {
    const i = Nx(o.config),
      s = Gk(r.variantKeys, Object.keys(o.variants)),
      a = t(r.base, i.base),
      l = Object.fromEntries(
        s.map((f) => [f, t(r.config.variants[f], i.variants[f])]),
      ),
      c = hi(r.config.defaultVariants, i.defaultVariants),
      u = [...r.compoundVariants, ...i.compoundVariants];
    return {
      className: GR(r.className, o.className),
      base: a,
      variants: l,
      defaultVariants: c,
      compoundVariants: u,
    };
  };
}
const lF = {
    reset: "reset",
    base: "base",
    tokens: "tokens",
    recipes: "recipes",
  },
  Up = { reset: 0, base: 1, tokens: 2, recipes: 3 };
function cF(e) {
  const t = e.layers ?? lF,
    r = Object.values(t).sort((o, i) => Up[o] - Up[i]);
  return {
    names: r,
    atRule: `@layer ${r.join(", ")};`,
    wrap(o, i) {
      return e.disableLayers ? i : { [`@layer ${t[o]}`]: i };
    },
  };
}
function uF(e) {
  const { utility: t, normalize: n } = e,
    { hasShorthand: r, resolveShorthand: o } = t;
  return function (i) {
    return dr(i, n, { stop: (s) => Array.isArray(s), getKey: r ? o : void 0 });
  };
}
function dF(e) {
  const { preflight: t } = e;
  if (!t) return {};
  const { scope: n = "", level: r = "parent" } = Tt(t) ? t : {};
  let o = "";
  n && r === "parent" ? (o = `${n} `) : n && r === "element" && (o = `&${n}`);
  const i = {
      "*": {
        margin: "0px",
        padding: "0px",
        font: "inherit",
        wordWrap: "break-word",
        WebkitTapHighlightColor: "transparent",
      },
      "*, *::before, *::after, *::backdrop": {
        boxSizing: "border-box",
        borderWidth: "0px",
        borderStyle: "solid",
        borderColor: "var(--global-color-border, currentColor)",
      },
      hr: { height: "0px", color: "inherit", borderTopWidth: "1px" },
      body: { minHeight: "100dvh", position: "relative" },
      img: { borderStyle: "none" },
      "img, svg, video, canvas, audio, iframe, embed, object": {
        display: "block",
        verticalAlign: "middle",
      },
      iframe: { border: "none" },
      "img, video": { maxWidth: "100%", height: "auto" },
      "p, h1, h2, h3, h4, h5, h6": { overflowWrap: "break-word" },
      "ol, ul": { listStyle: "none" },
      "code, kbd, pre, samp": { fontSize: "1em" },
      "button, [type='button'], [type='reset'], [type='submit']": {
        WebkitAppearance: "button",
        backgroundColor: "transparent",
        backgroundImage: "none",
      },
      "button, input, optgroup, select, textarea": { color: "inherit" },
      "button, select": { textTransform: "none" },
      table: {
        textIndent: "0px",
        borderColor: "inherit",
        borderCollapse: "collapse",
      },
      "*::placeholder": {
        opacity: "unset",
        color: "#9ca3af",
        userSelect: "none",
      },
      textarea: { resize: "vertical" },
      summary: { display: "list-item" },
      small: { fontSize: "80%" },
      "sub, sup": {
        fontSize: "75%",
        lineHeight: 0,
        position: "relative",
        verticalAlign: "baseline",
      },
      sub: { bottom: "-0.25em" },
      sup: { top: "-0.5em" },
      dialog: { padding: "0px" },
      a: { color: "inherit", textDecoration: "inherit" },
      "abbr:where([title])": { textDecoration: "underline dotted" },
      "b, strong": { fontWeight: "bolder" },
      "code, kbd, samp, pre": {
        fontSize: "1em",
        "--font-mono-fallback":
          "ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono', 'Courier New'",
        fontFamily: "var(--global-font-mono, var(--font-mono-fallback))",
      },
      'input[type="text"], input[type="email"], input[type="search"], input[type="password"]':
        { WebkitAppearance: "none", MozAppearance: "none" },
      "input[type='search']": {
        WebkitAppearance: "textfield",
        outlineOffset: "-2px",
      },
      "::-webkit-search-decoration, ::-webkit-search-cancel-button": {
        WebkitAppearance: "none",
      },
      "::-webkit-file-upload-button": {
        WebkitAppearance: "button",
        font: "inherit",
      },
      'input[type="number"]::-webkit-inner-spin-button, input[type="number"]::-webkit-outer-spin-button':
        { height: "auto" },
      "input[type='number']": { MozAppearance: "textfield" },
      ":-moz-ui-invalid": { boxShadow: "none" },
      ":-moz-focusring": { outline: "auto" },
      "[hidden]:where(:not([hidden='until-found']))": {
        display: "none !important",
      },
    },
    s = {
      [n || "html"]: {
        lineHeight: 1.5,
        "--font-fallback":
          "ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'",
        WebkitTextSizeAdjust: "100%",
        WebkitFontSmoothing: "antialiased",
        MozOsxFontSmoothing: "grayscale",
        textRendering: "optimizeLegibility",
        touchAction: "manipulation",
        MozTabSize: "4",
        tabSize: "4",
        fontFamily: "var(--global-font-body, var(--font-fallback))",
      },
    };
  if (r === "element") {
    const a = Object.entries(i).reduce(
      (l, [c, u]) => ((l[c] = { [o]: u }), l),
      {},
    );
    Object.assign(s, a);
  } else o ? (s[o] = i) : Object.assign(s, i);
  return s;
}
function fF(e) {
  const { conditions: t, isValidProperty: n } = e;
  return function (o) {
    return dr(o, (i) => i, {
      getKey: (i, s) =>
        Tt(s) && !t.has(i) && !n(i)
          ? gF(i)
              .map((a) => "&" + a)
              .join(", ")
          : i,
    });
  };
}
function gF(e) {
  const t = [];
  let n = 0,
    r = "",
    o = !1;
  for (let i = 0; i < e.length; i++) {
    const s = e[i];
    if (s === "\\" && !o) {
      ((o = !0), (r += s));
      continue;
    }
    if (o) {
      ((o = !1), (r += s));
      continue;
    }
    (s === "(" ? n++ : s === ")" && n--,
      s === "," && n === 0 ? (t.push(r.trim()), (r = "")) : (r += s));
  }
  return (r && t.push(r.trim()), t);
}
const hF = (e = {}) => {
    const t = (o) => {
        var i;
        return {
          base: ((i = e.base) == null ? void 0 : i[o]) ?? {},
          variants: {},
          defaultVariants: e.defaultVariants ?? {},
          compoundVariants: e.compoundVariants ? pF(e.compoundVariants, o) : [],
        };
      },
      r = (e.slots ?? []).map((o) => [o, t(o)]);
    for (const [o, i] of Object.entries(e.variants ?? {}))
      for (const [s, a] of Object.entries(i))
        r.forEach(([l, c]) => {
          var u;
          ((u = c.variants)[o] ?? (u[o] = {}), (c.variants[o][s] = a[l] ?? {}));
        });
    return Object.fromEntries(r);
  },
  pF = (e, t) =>
    e.filter((n) => n.css[t]).map((n) => ({ ...n, css: n.css[t] }));
function mF(e) {
  const { cva: t } = e;
  return function (r = {}) {
    const o = Object.entries(hF(r)).map(([d, f]) => [d, t(f)]);
    function i(d) {
      const f = o.map(([g, h]) => [g, h(d)]);
      return Object.fromEntries(f);
    }
    const s = r.variants ?? {},
      a = Object.keys(s);
    function l(d) {
      var p;
      const f = px(d, ["recipe"]),
        [g, h] = Gd(f, a);
      return (
        a.includes("colorPalette") ||
          (g.colorPalette =
            d.colorPalette ||
            ((p = r.defaultVariants) == null ? void 0 : p.colorPalette)),
        a.includes("orientation") && (h.orientation = d.orientation),
        [g, h]
      );
    }
    const c = Object.fromEntries(
      Object.entries(s).map(([d, f]) => [d, Object.keys(f)]),
    );
    let u = {};
    return (
      r.className &&
        (u = Object.fromEntries(
          r.slots.map((d) => [d, `${r.className}__${d}`]),
        )),
      Object.assign(i, {
        variantMap: c,
        variantKeys: a,
        splitVariantProps: l,
        classNameMap: u,
      })
    );
  };
}
const vF = () => (e) => Array.from(new Set(e)),
  yF = /([\0-\x1f\x7f]|^-?\d)|^-$|^-|[^\x80-\uFFFF\w-]/g,
  bF = function (e, t) {
    return t
      ? e === "\0"
        ? "�"
        : e === "-" && e.length === 1
          ? "\\-"
          : e.slice(0, -1) + "\\" + e.charCodeAt(e.length - 1).toString(16)
      : "\\" + e;
  },
  Vx = (e) => (e + "").replace(yF, bF),
  Fx = (e, t) => {
    let n = "",
      r = 0,
      o = "char",
      i = "",
      s = "";
    const a = [];
    for (; r < e.length; ) {
      const l = e[r];
      if (l === "{") {
        const u = e.indexOf("}", r);
        if (u === -1) break;
        const d = e.slice(r + 1, u),
          f = t(d);
        ((n += f ?? d), (r = u + 1));
        continue;
      }
      if (o === "token" && l === ",") {
        (e[r] === "" && r++, (o = "fallback"), a.push(o));
        const u = t(i);
        (u != null && u.endsWith(")") && (n += u.slice(0, -1)),
          (i = ""),
          (s = ""));
        continue;
      }
      if (o === "fallback" && s + l === ", var(") {
        const f = xF(e.slice(r + 1)) + r + 1,
          g = e.slice(r + 1, f);
        if (f === -1) break;
        ((n += ", var(" + g + ")"), (r = f + 1), (o = a.pop() ?? o), (s = ""));
        continue;
      }
      if (o === "token" || o === "fallback") {
        if ((r++, l === ")")) {
          ((o = a.pop() ?? o ?? "char"), (s += l));
          const u = i && (t(i) ?? Vx(i));
          if (s) {
            if (
              ((s = s.slice(1).trim()),
              !s.startsWith("token(") &&
                s.endsWith(")") &&
                (s = s.slice(0, -1)),
              s.includes("token("))
            ) {
              const f = Fx(s, t);
              f && (s = f.slice(0, -1));
            } else if (s) {
              const f = t(s);
              f && (s = f);
            }
          }
          const d = n.at(-1);
          (s
            ? d != null && d.trim()
              ? (n += u.slice(0, -1) + (", " + s + ")"))
              : (n += s)
            : (n += u || ")"),
            (i = ""),
            (s = ""),
            (o = "char"));
          continue;
        }
        (o === "token" && (i += l), o === "fallback" && (s += l));
        continue;
      }
      const c = e.indexOf("token(", r);
      if (c !== -1) {
        const u = c + 6;
        ((n += e.slice(r, c)), (r = u), (o = "token"), a.push(o));
        continue;
      }
      ((n += l), r++);
    }
    return n;
  },
  xF = (e) => {
    let t = 0;
    const n = ["("];
    for (; t < e.length; ) {
      const r = e[t];
      if (r === "(") n.push(r);
      else if (r === ")" && (n.pop(), n.length === 0)) return t;
      t++;
    }
    return t;
  };
function Dx(e) {
  const t = {};
  return (
    e.forEach((n, r) => {
      n instanceof Map ? (t[r] = Object.fromEntries(n)) : (t[r] = n);
    }),
    t
  );
}
const $x = /({([^}]*)})/g,
  SF = /[{}]/g,
  wF = /\w+\.\w+/,
  Mx = (e) => {
    if (!ar(e)) return [];
    const t = e.match($x);
    return t ? t.map((n) => n.replace(SF, "")).map((n) => n.trim()) : [];
  },
  CF = (e) => $x.test(e);
function Lx(e) {
  var n, r, o;
  if (!((n = e.extensions) != null && n.references))
    return (
      ((o = (r = e.extensions) == null ? void 0 : r.cssVar) == null
        ? void 0
        : o.ref) ?? e.value
    );
  const t = e.extensions.references ?? {};
  return (
    (e.value = Object.keys(t).reduce((i, s) => {
      const a = t[s];
      if (a.extensions.conditions) return i;
      const l = Lx(a);
      return i.replace(`{${s}}`, l);
    }, e.value)),
    delete e.extensions.references,
    e.value
  );
}
function zx(e) {
  return Tt(e) && e.reference ? e.reference : String(e);
}
const Wl = (e, ...t) => t.map(zx).join(` ${e} `).replace(/calc/g, ""),
  Wp = (...e) => `calc(${Wl("+", ...e)})`,
  Hp = (...e) => `calc(${Wl("-", ...e)})`,
  Wu = (...e) => `calc(${Wl("*", ...e)})`,
  Gp = (...e) => `calc(${Wl("/", ...e)})`,
  Kp = (e) => {
    const t = zx(e);
    return t != null && !Number.isNaN(parseFloat(t))
      ? String(t).startsWith("-")
        ? String(t).slice(1)
        : `-${t}`
      : Wu(t, -1);
  },
  _o = Object.assign(
    (e) => ({
      add: (...t) => _o(Wp(e, ...t)),
      subtract: (...t) => _o(Hp(e, ...t)),
      multiply: (...t) => _o(Wu(e, ...t)),
      divide: (...t) => _o(Gp(e, ...t)),
      negate: () => _o(Kp(e)),
      toString: () => e.toString(),
    }),
    { add: Wp, subtract: Hp, multiply: Wu, divide: Gp, negate: Kp },
  ),
  EF = {
    enforce: "pre",
    transform(e) {
      const {
        prefix: t,
        allTokens: n,
        formatCssVar: r,
        formatTokenName: o,
        registerToken: i,
      } = e;
      n.filter(({ extensions: a }) => a.category === "spacing").forEach((a) => {
        const l = a.path.slice(),
          c = r(l, t);
        if (ar(a.value) && a.value === "0rem") return;
        const u = structuredClone(a);
        (Object.assign(u.extensions, {
          negative: !0,
          prop: `-${a.extensions.prop}`,
          originalPath: l,
        }),
          (u.value = _o.negate(c.ref)));
        const d = u.path[u.path.length - 1];
        (d != null && (u.path[u.path.length - 1] = `-${d}`),
          u.path && (u.name = o(u.path)),
          i(u));
      });
    },
  },
  IF = new Set(["spacing", "sizes", "borderWidths", "fontSizes", "radii"]),
  RF = {
    enforce: "post",
    transform(e) {
      e.allTokens
        .filter((n) => IF.has(n.extensions.category) && !n.extensions.negative)
        .forEach((n) => {
          Object.assign(n.extensions, { pixelValue: Rx(n.value) });
        });
    },
  },
  kF = {
    enforce: "post",
    transform(e) {
      const { allTokens: t, registerToken: n, formatTokenName: r } = e,
        o = t.filter(({ extensions: a }) => a.category === "colors"),
        i = new Map(),
        s = new Map();
      (o.forEach((a) => {
        const { colorPalette: l } = a.extensions;
        l &&
          (l.keys.forEach((c) => {
            i.set(r(c), c);
          }),
          l.roots.forEach((c) => {
            var f;
            const u = r(c),
              d = s.get(u) || [];
            if (
              (d.push(a), s.set(u, d), a.extensions.default && c.length === 1)
            ) {
              const g = (f = l.keys[0]) == null ? void 0 : f.filter(Boolean);
              if (!g.length) return;
              const h = c.concat(g);
              i.set(r(h), []);
            }
          }));
      }),
        i.forEach((a) => {
          const l = ["colors", "colorPalette", ...a].filter(Boolean),
            c = r(l),
            u = r(l.slice(1));
          n(
            {
              name: c,
              value: c,
              originalValue: c,
              path: l,
              extensions: {
                condition: "base",
                originalPath: l,
                category: "colors",
                prop: u,
                virtual: !0,
              },
            },
            "pre",
          );
        }));
    },
  },
  PF = {
    enforce: "post",
    transform(e) {
      e.allTokens = e.allTokens.filter((t) => t.value !== "");
    },
  },
  TF = [EF, kF, RF, PF],
  OF = {
    type: "extensions",
    enforce: "pre",
    name: "tokens/css-var",
    transform(e, t) {
      const { prefix: n, formatCssVar: r } = t,
        { negative: o, originalPath: i } = e.extensions,
        s = o ? i : e.path;
      return { cssVar: r(s.filter(Boolean), n) };
    },
  },
  _F = {
    enforce: "post",
    type: "value",
    name: "tokens/conditionals",
    transform(e, t) {
      const { prefix: n, formatCssVar: r } = t,
        o = Mx(e.value);
      return (
        o.length &&
          o.forEach((i) => {
            const s = r(i.split("."), n);
            e.value = e.value.replace(`{${s.ref}}`, s);
          }),
        e.value
      );
    },
  },
  AF = {
    type: "extensions",
    enforce: "pre",
    name: "tokens/colors/colorPalette",
    match(e) {
      return e.extensions.category === "colors" && !e.extensions.virtual;
    },
    transform(e, t) {
      let n = e.path.slice();
      if ((n.pop(), n.shift(), n.length === 0)) {
        const a = [...e.path];
        (a.shift(), (n = a));
      }
      if (n.length === 0) return {};
      const r = n.reduce((a, l, c, u) => {
          const d = u.slice(0, c + 1);
          return (a.push(d), a);
        }, []),
        o = n[0],
        i = t.formatTokenName(n),
        s = e.path
          .slice(e.path.indexOf(o) + 1)
          .reduce((a, l, c, u) => (a.push(u.slice(c)), a), []);
      return (
        s.length === 0 && s.push([""]),
        { colorPalette: { value: i, roots: r, keys: s } }
      );
    },
  },
  NF = [OF, _F, AF],
  qp = (e) => Tt(e) && Object.prototype.hasOwnProperty.call(e, "value");
function VF(e) {
  return e
    ? {
        breakpoints: $V(e, (t) => ({ value: t })),
        sizes: Object.fromEntries(
          Object.entries(e).map(([t, n]) => [`breakpoint-${t}`, { value: n }]),
        ),
      }
    : { breakpoints: {}, sizes: {} };
}
function FF(e) {
  const {
      prefix: t = "",
      tokens: n = {},
      semanticTokens: r = {},
      breakpoints: o = {},
    } = e,
    i = (L) => L.join("."),
    s = (L, M) => bx(L.join("-"), { prefix: M }),
    a = [],
    l = new Map(),
    c = new Map(),
    u = new Map(),
    d = new Map(),
    f = new Map(),
    g = new Map(),
    h = new Map(),
    p = new Map(),
    v = [];
  function b(L, M) {
    (a.push(L),
      l.set(L.name, L),
      M &&
        p.forEach((Y) => {
          Y.enforce === M && ee(Y, L);
        }));
  }
  const S = VF(o),
    w = Ol({
      ...n,
      breakpoints: S.breakpoints,
      sizes: { ...n.sizes, ...S.sizes },
    });
  function E() {
    (dr(
      w,
      (L, M) => {
        const Y = M.includes("DEFAULT");
        M = Yp(M);
        const ne = M[0],
          ue = i(M),
          ye = ar(L) ? { value: L } : L,
          Ae = {
            value: ye.value,
            originalValue: ye.value,
            name: ue,
            path: M,
            extensions: {
              condition: "base",
              originalPath: M,
              category: ne,
              prop: i(M.slice(1)),
            },
          };
        (Y && (Ae.extensions.default = !0), b(Ae));
      },
      { stop: qp },
    ),
      dr(
        r,
        (L, M) => {
          const Y = M.includes("DEFAULT");
          M = Bx(Yp(M));
          const ne = M[0],
            ue = i(M),
            ye = ar(L.value) ? { value: { base: L.value } } : L,
            Ae = {
              value: ye.value.base || "",
              originalValue: ye.value.base || "",
              name: ue,
              path: M,
              extensions: {
                originalPath: M,
                category: ne,
                conditions: ye.value,
                condition: "base",
                prop: i(M.slice(1)),
              },
            };
          (Y && (Ae.extensions.default = !0), b(Ae));
        },
        { stop: qp },
      ));
  }
  function R(L) {
    return l.get(L);
  }
  function N(L) {
    const { condition: M } = L.extensions;
    M && (c.has(M) || c.set(M, new Set()), c.get(M).add(L));
  }
  function I(L) {
    const { category: M, prop: Y } = L.extensions;
    M && (h.has(M) || h.set(M, new Map()), h.get(M).set(Y, L));
  }
  function T(L) {
    const { condition: M, negative: Y, virtual: ne, cssVar: ue } = L.extensions;
    Y ||
      ne ||
      !M ||
      !ue ||
      (u.has(M) || u.set(M, new Map()), u.get(M).set(ue.var, L.value));
  }
  function k(L) {
    const { category: M, prop: Y, cssVar: ne, negative: ue } = L.extensions;
    if (!M) return;
    g.has(M) || g.set(M, new Map());
    const ye = ue
      ? L.extensions.conditions
        ? L.originalValue
        : L.value
      : ne.ref;
    (g.get(M).set(Y, ye), f.set([M, Y].join("."), ye));
  }
  function m(L) {
    const { colorPalette: M, virtual: Y, default: ne } = L.extensions;
    !M ||
      Y ||
      M.roots.forEach((ue) => {
        var Be;
        const ye = i(ue);
        d.has(ye) || d.set(ye, new Map());
        const Ae = $F([...L.path], [...ue]),
          et = i(Ae),
          nt = R(et);
        if (!nt || !nt.extensions.cssVar) return;
        const { var: dn } = nt.extensions.cssVar;
        if (
          (d.get(ye).set(dn, L.extensions.cssVar.ref), ne && ue.length === 1)
        ) {
          const Rt = i(["colors", "colorPalette"]),
            C = R(Rt);
          if (!C) return;
          const _ = i(L.path),
            O = R(_);
          if (!O) return;
          const q = (Be = M.keys[0]) == null ? void 0 : Be.filter(Boolean);
          if (!q.length) return;
          const W = i(ue.concat(q));
          (d.has(W) || d.set(W, new Map()),
            d.get(W).set(C.extensions.cssVar.var, O.extensions.cssVar.ref));
        }
      });
  }
  let A = {};
  function V() {
    (a.forEach((L) => {
      (N(L), I(L), T(L), k(L), m(L));
    }),
      (A = Dx(g)));
  }
  const P = (L, M) => {
      var nt;
      if (!L || typeof L != "string") return { invalid: !0, value: L };
      const [Y, ne] = L.split("/");
      if (!Y || !ne) return { invalid: !0, value: Y };
      const ue = M(Y),
        ye = (nt = R(`opacity.${ne}`)) == null ? void 0 : nt.value;
      if (!ye && isNaN(Number(ne))) return { invalid: !0, value: Y };
      const Ae = ye ? Number(ye) * 100 + "%" : `${ne}%`,
        et = ue ?? Y;
      return {
        invalid: !1,
        color: et,
        value: `color-mix(in srgb, ${et} ${Ae}, transparent)`,
      };
    },
    F = vn((L, M) => f.get(L) ?? M),
    $ = vn((L) => A[L] || null),
    H = vn((L) =>
      Fx(L, (M) => {
        if (!M) return;
        if (M.includes("/")) {
          const ne = P(M, (ue) => F(ue));
          if (ne.invalid)
            throw new Error("Invalid color mix at " + M + ": " + ne.value);
          return ne.value;
        }
        const Y = F(M);
        return Y || (wF.test(M) ? Vx(M) : M);
      }),
    ),
    B = {
      prefix: t,
      allTokens: a,
      tokenMap: l,
      registerToken: b,
      getByName: R,
      formatTokenName: i,
      formatCssVar: s,
      flatMap: f,
      cssVarMap: u,
      categoryMap: h,
      colorPaletteMap: d,
      getVar: F,
      getCategoryValues: $,
      expandReferenceInValue: H,
    };
  function j(...L) {
    L.forEach((M) => {
      p.set(M.name, M);
    });
  }
  function G(...L) {
    v.push(...L);
  }
  function ee(L, M) {
    if (M.extensions.references || (Hd(L.match) && !L.match(M))) return;
    const ne = ((ue) => L.transform(ue, B))(M);
    switch (!0) {
      case L.type === "extensions":
        Object.assign(M.extensions, ne);
        break;
      case L.type === "value":
        M.value = ne;
        break;
      default:
        M[L.type] = ne;
        break;
    }
  }
  function ae(L) {
    v.forEach((M) => {
      M.enforce === L && M.transform(B);
    });
  }
  function K(L) {
    p.forEach((M) => {
      M.enforce === L &&
        a.forEach((Y) => {
          ee(M, Y);
        });
    });
  }
  function we() {
    a.forEach((L) => {
      const M = DF(L);
      !M ||
        M.length === 0 ||
        M.forEach((Y) => {
          b(Y);
        });
    });
  }
  function Te(L) {
    return Mx(L)
      .map((Y) => R(Y))
      .filter(Boolean);
  }
  function De() {
    a.forEach((L) => {
      if (!CF(L.value)) return;
      const M = Te(L.value);
      L.extensions.references = M.reduce((Y, ne) => ((Y[ne.name] = ne), Y), {});
    });
  }
  function ft() {
    a.forEach((L) => {
      Lx(L);
    });
  }
  function ze() {
    (ae("pre"), K("pre"), we(), De(), ft(), ae("post"), K("post"), V());
  }
  return (E(), j(...NF), G(...TF), ze(), B);
}
function Yp(e) {
  return e[0] === "DEFAULT" ? e : e.filter((t) => t !== "DEFAULT");
}
function Bx(e) {
  return e.filter((t) => t !== "base");
}
function DF(e) {
  if (!e.extensions.conditions) return;
  const { conditions: t } = e.extensions,
    n = [];
  return (
    dr(t, (r, o) => {
      const i = Bx(o);
      if (!i.length) return;
      const s = structuredClone(e);
      ((s.value = r), (s.extensions.condition = i.join(":")), n.push(s));
    }),
    n
  );
}
function $F(e, t) {
  const n = e.findIndex((r, o) => t.every((i, s) => e[o + s] === i));
  return (
    n === -1 || (e.splice(n, t.length), e.splice(n, 0, "colorPalette")),
    e
  );
}
vF()([
  "aspectRatios",
  "zIndex",
  "opacity",
  "colors",
  "fonts",
  "fontSizes",
  "fontWeights",
  "lineHeights",
  "letterSpacings",
  "sizes",
  "shadows",
  "spacing",
  "radii",
  "cursor",
  "borders",
  "borderWidths",
  "borderStyles",
  "durations",
  "easings",
  "animations",
  "blurs",
  "gradients",
  "breakpoints",
  "assets",
]);
function MF(e) {
  return Object.fromEntries(Object.entries(e).map(([t, n]) => [t, n]));
}
function LF(e) {
  const t = MF(e.config),
    n = e.tokens,
    r = new Map(),
    o = new Map();
  function i(T, k) {
    ((t[T] = k), s(T, k));
  }
  const s = (T, k) => {
      const m = p(k);
      m && (o.set(T, m), d(T, k));
    },
    a = () => {
      for (const [T, k] of Object.entries(t)) k && s(T, k);
    },
    l = () => {
      for (const [T, k] of Object.entries(t)) {
        const { shorthand: m } = k ?? {};
        if (!m) continue;
        (Array.isArray(m) ? m : [m]).forEach((V) => r.set(V, T));
      }
    },
    c = () => {
      const T = Dx(n.colorPaletteMap);
      i("colorPalette", { values: Object.keys(T), transform: vn((k) => T[k]) });
    },
    u = new Map(),
    d = (T, k) => {
      if (!k) return;
      const m = p(k, (V) => `type:Tokens["${V}"]`);
      if (typeof m == "object" && m.type) {
        u.set(T, new Set([`type:${m.type}`]));
        return;
      }
      if (m) {
        const V = new Set(Object.keys(m));
        u.set(T, V);
      }
      const A = u.get(T) ?? new Set();
      k.property && u.set(T, A.add(`CssProperties["${k.property}"]`));
    },
    f = () => {
      for (const [T, k] of Object.entries(t)) k && d(T, k);
    },
    g = (T, k) => {
      const m = u.get(T) ?? new Set();
      u.set(T, new Set([...m, ...k]));
    },
    h = () => {
      const T = new Map();
      for (const [k, m] of u.entries()) {
        if (m.size === 0) {
          T.set(k, ["string"]);
          continue;
        }
        const A = Array.from(m).map((V) =>
          V.startsWith("CssProperties")
            ? V
            : V.startsWith("type:")
              ? V.replace("type:", "")
              : JSON.stringify(V),
        );
        T.set(k, A);
      }
      return T;
    },
    p = (T, k) => {
      const { values: m } = T,
        A = (V) => {
          const P = k == null ? void 0 : k(V);
          return P ? { [P]: P } : void 0;
        };
      return ar(m)
        ? ((A == null ? void 0 : A(m)) ?? n.getCategoryValues(m) ?? {})
        : Array.isArray(m)
          ? m.reduce((V, P) => ((V[P] = P), V), {})
          : Hd(m)
            ? m(k ? A : n.getCategoryValues)
            : m;
    },
    v = vn((T, k) => ({ [T]: T.startsWith("--") ? n.getVar(k, k) : k })),
    b = Object.assign(n.getVar, { raw: (T) => n.getByName(T) }),
    S = vn((T, k) => {
      var F;
      const m = R(T);
      ar(k) && !k.includes("_EMO_") && (k = n.expandReferenceInValue(k));
      const A = t[m];
      if (!A) return v(m, k);
      const V = (F = o.get(m)) == null ? void 0 : F[k];
      if (!A.transform) return v(T, V ?? k);
      const P = ($) => gV($, b);
      return A.transform(V ?? k, { raw: k, token: b, utils: { colorMix: P } });
    });
  function w() {
    (l(), c(), a(), f());
  }
  w();
  const E = r.size > 0,
    R = vn((T) => r.get(T) ?? T);
  return {
    keys: () => [...Array.from(r.keys()), ...Object.keys(t)],
    hasShorthand: E,
    transform: S,
    shorthands: r,
    resolveShorthand: R,
    register: i,
    getTypes: h,
    addPropertyType: g,
  };
}
function zF(...e) {
  const t = yx(...e),
    {
      theme: n = {},
      utilities: r = {},
      globalCss: o = {},
      cssVarsRoot: i = ":where(:root, :host)",
      cssVarsPrefix: s = "chakra",
      preflight: a,
    } = t,
    l = cF(t),
    c = FF({
      breakpoints: n.breakpoints,
      tokens: n.tokens,
      semanticTokens: n.semanticTokens,
      prefix: s,
    }),
    u = UV(n.breakpoints ?? {}),
    d = KV({ conditions: t.conditions ?? {}, breakpoints: u }),
    f = LF({ config: r, tokens: c });
  function g() {
    const { textStyles: j, layerStyles: G, animationStyles: ee } = n,
      ae = Ol({ textStyle: j, layerStyle: G, animationStyle: ee });
    for (const [K, we] of Object.entries(ae)) {
      const Te = MV(we ?? {}, (De) => Tt(De) && "value" in De);
      f.register(K, {
        values: Object.keys(Te),
        transform(De) {
          return w(Te[De]);
        },
      });
    }
  }
  (g(), f.addPropertyType("animationName", Object.keys(n.keyframes ?? {})));
  const h = new Set(["css", ...f.keys(), ...d.keys()]),
    p = vn((j) => h.has(j) || DV(j)),
    v = (j) =>
      Array.isArray(j)
        ? j.reduce((G, ee, ae) => {
            const K = d.breakpoints[ae];
            return (ee != null && (G[K] = ee), G);
          }, {})
        : j,
    b = uF({ utility: f, normalize: v }),
    S = fF({ conditions: d, isValidProperty: p }),
    w = Ax({ transform: f.transform, conditions: d, normalize: b }),
    E = sF({ css: w, conditions: d, normalize: b, layers: l }),
    R = mF({ cva: E });
  function N() {
    const j = {};
    for (const [G, ee] of c.cssVarMap.entries()) {
      const ae = Object.fromEntries(ee);
      if (Object.keys(ae).length === 0) continue;
      const K = G === "base" ? i : d.resolve(G),
        we = K.startsWith("@"),
        Te = w(S({ [K]: we ? { [i]: ae } : ae }));
      hi(j, Te);
    }
    return l.wrap("tokens", j);
  }
  function I() {
    const j = Object.fromEntries(
        Object.entries(n.keyframes ?? {}).map(([ee, ae]) => [
          `@keyframes ${ee}`,
          ae,
        ]),
      ),
      G = Object.assign({}, j, w(S(o)));
    return l.wrap("base", G);
  }
  function T(j) {
    return Gd(j, p);
  }
  function k() {
    const j = dF({ preflight: a });
    return l.wrap("reset", j);
  }
  const m = BF(c),
    A = (j, G) => {
      var ee;
      return ((ee = m.get(j)) == null ? void 0 : ee.value) || G;
    };
  A.var = (j, G) => {
    var ee;
    return ((ee = m.get(j)) == null ? void 0 : ee.variable) || G;
  };
  function V(j, G) {
    var ee;
    return ((ee = n.recipes) == null ? void 0 : ee[j]) ?? G;
  }
  function P(j, G) {
    var ee;
    return ((ee = n.slotRecipes) == null ? void 0 : ee[j]) ?? G;
  }
  function F(j) {
    return Object.hasOwnProperty.call(n.recipes ?? {}, j);
  }
  function $(j) {
    return Object.hasOwnProperty.call(n.slotRecipes ?? {}, j);
  }
  function H(j) {
    return F(j) || $(j);
  }
  const B = [k(), I(), N()];
  return {
    $$chakra: !0,
    _config: t,
    _global: B,
    breakpoints: u,
    tokens: c,
    conditions: d,
    utility: f,
    token: A,
    properties: h,
    layers: l,
    isValidProperty: p,
    splitCssProps: T,
    normalizeValue: v,
    getTokenCss: N,
    getGlobalCss: I,
    getPreflightCss: k,
    css: w,
    cva: E,
    sva: R,
    getRecipe: V,
    getSlotRecipe: P,
    hasRecipe: H,
    isRecipe: F,
    isSlotRecipe: $,
  };
}
function BF(e) {
  const t = new Map();
  return (
    e.allTokens.forEach((n) => {
      const { cssVar: r, virtual: o, conditions: i } = n.extensions,
        s = i || o ? r.ref : n.value;
      t.set(n.name, { value: s, variable: r.ref });
    }),
    t
  );
}
const jF = {
    sm: "480px",
    md: "768px",
    lg: "1024px",
    xl: "1280px",
    "2xl": "1536px",
  },
  Gc = "var(--chakra-empty,/*!*/ /*!*/)",
  UF = mV({
    "*": {
      fontFeatureSettings: '"cv11"',
      "--ring-inset": Gc,
      "--ring-offset-width": "0px",
      "--ring-offset-color": "#fff",
      "--ring-color": "rgba(66, 153, 225, 0.6)",
      "--ring-offset-shadow": "0 0 #0000",
      "--ring-shadow": "0 0 #0000",
      ...Object.fromEntries(
        [
          "brightness",
          "contrast",
          "grayscale",
          "hue-rotate",
          "invert",
          "saturate",
          "sepia",
          "drop-shadow",
        ].map((e) => [`--${e}`, Gc]),
      ),
      ...Object.fromEntries(
        [
          "blur",
          "brightness",
          "contrast",
          "grayscale",
          "hue-rotate",
          "invert",
          "opacity",
          "saturate",
          "sepia",
        ].map((e) => [`--backdrop-${e}`, Gc]),
      ),
      "--global-font-mono": "fonts.mono",
      "--global-font-body": "fonts.body",
      "--global-color-border": "colors.border",
    },
    html: { color: "fg", bg: "bg", lineHeight: "1.5", colorPalette: "gray" },
    "*::placeholder, *[data-placeholder]": { color: "fg.muted/80" },
    "*::selection": { bg: "colorPalette.emphasized/80" },
  }),
  WF = bV({
    "fill.muted": {
      value: { background: "colorPalette.muted", color: "colorPalette.fg" },
    },
    "fill.subtle": {
      value: { background: "colorPalette.subtle", color: "colorPalette.fg" },
    },
    "fill.surface": {
      value: {
        background: "colorPalette.subtle",
        color: "colorPalette.fg",
        boxShadow: "0 0 0px 1px var(--shadow-color)",
        boxShadowColor: "colorPalette.muted",
      },
    },
    "fill.solid": {
      value: {
        background: "colorPalette.solid",
        color: "colorPalette.contrast",
      },
    },
    "outline.subtle": {
      value: {
        color: "colorPalette.fg",
        boxShadow: "inset 0 0 0px 1px var(--shadow-color)",
        boxShadowColor: "colorPalette.subtle",
      },
    },
    "outline.solid": {
      value: {
        borderWidth: "1px",
        borderColor: "colorPalette.solid",
        color: "colorPalette.fg",
      },
    },
    "indicator.bottom": {
      value: {
        position: "relative",
        "--indicator-color-fallback": "colors.colorPalette.solid",
        _before: {
          content: '""',
          position: "absolute",
          bottom: "var(--indicator-offset-y, 0)",
          insetInline: "var(--indicator-offset-x, 0)",
          height: "var(--indicator-thickness, 2px)",
          background: "var(--indicator-color, var(--indicator-color-fallback))",
        },
      },
    },
    "indicator.top": {
      value: {
        position: "relative",
        "--indicator-color-fallback": "colors.colorPalette.solid",
        _before: {
          content: '""',
          position: "absolute",
          top: "var(--indicator-offset-y, 0)",
          insetInline: "var(--indicator-offset-x, 0)",
          height: "var(--indicator-thickness, 2px)",
          background: "var(--indicator-color, var(--indicator-color-fallback))",
        },
      },
    },
    "indicator.start": {
      value: {
        position: "relative",
        "--indicator-color-fallback": "colors.colorPalette.solid",
        _before: {
          content: '""',
          position: "absolute",
          insetInlineStart: "var(--indicator-offset-x, 0)",
          insetBlock: "var(--indicator-offset-y, 0)",
          width: "var(--indicator-thickness, 2px)",
          background: "var(--indicator-color, var(--indicator-color-fallback))",
        },
      },
    },
    "indicator.end": {
      value: {
        position: "relative",
        "--indicator-color-fallback": "colors.colorPalette.solid",
        _before: {
          content: '""',
          position: "absolute",
          insetInlineEnd: "var(--indicator-offset-x, 0)",
          insetBlock: "var(--indicator-offset-y, 0)",
          width: "var(--indicator-thickness, 2px)",
          background: "var(--indicator-color, var(--indicator-color-fallback))",
        },
      },
    },
    disabled: { value: { opacity: "0.5", cursor: "not-allowed" } },
    none: { value: {} },
  }),
  HF = yV({
    "slide-fade-in": {
      value: {
        transformOrigin: "var(--transform-origin)",
        "&[data-placement^=top]": {
          animationName: "slide-from-bottom, fade-in",
        },
        "&[data-placement^=bottom]": {
          animationName: "slide-from-top, fade-in",
        },
        "&[data-placement^=left]": {
          animationName: "slide-from-right, fade-in",
        },
        "&[data-placement^=right]": {
          animationName: "slide-from-left, fade-in",
        },
      },
    },
    "slide-fade-out": {
      value: {
        transformOrigin: "var(--transform-origin)",
        "&[data-placement^=top]": {
          animationName: "slide-to-bottom, fade-out",
        },
        "&[data-placement^=bottom]": {
          animationName: "slide-to-top, fade-out",
        },
        "&[data-placement^=left]": {
          animationName: "slide-to-right, fade-out",
        },
        "&[data-placement^=right]": {
          animationName: "slide-to-left, fade-out",
        },
      },
    },
    "scale-fade-in": {
      value: {
        transformOrigin: "var(--transform-origin)",
        animationName: "scale-in, fade-in",
      },
    },
    "scale-fade-out": {
      value: {
        transformOrigin: "var(--transform-origin)",
        animationName: "scale-out, fade-out",
      },
    },
  }),
  Cf = tt({
    className: "chakra-badge",
    base: {
      display: "inline-flex",
      alignItems: "center",
      borderRadius: "l2",
      gap: "1",
      fontWeight: "medium",
      fontVariantNumeric: "tabular-nums",
      whiteSpace: "nowrap",
      userSelect: "none",
    },
    variants: {
      variant: {
        solid: { bg: "colorPalette.solid", color: "colorPalette.contrast" },
        subtle: { bg: "colorPalette.subtle", color: "colorPalette.fg" },
        outline: {
          color: "colorPalette.fg",
          shadow: "inset 0 0 0px 1px var(--shadow-color)",
          shadowColor: "colorPalette.muted",
        },
        surface: {
          bg: "colorPalette.subtle",
          color: "colorPalette.fg",
          shadow: "inset 0 0 0px 1px var(--shadow-color)",
          shadowColor: "colorPalette.muted",
        },
        plain: { color: "colorPalette.fg" },
      },
      size: {
        xs: { textStyle: "2xs", px: "1", minH: "4" },
        sm: { textStyle: "xs", px: "1.5", minH: "5" },
        md: { textStyle: "sm", px: "2", minH: "6" },
        lg: { textStyle: "sm", px: "2.5", minH: "7" },
      },
    },
    defaultVariants: { variant: "subtle", size: "sm" },
  }),
  GF = tt({
    className: "chakra-button",
    base: {
      display: "inline-flex",
      appearance: "none",
      alignItems: "center",
      justifyContent: "center",
      userSelect: "none",
      position: "relative",
      borderRadius: "l2",
      whiteSpace: "nowrap",
      verticalAlign: "middle",
      borderWidth: "1px",
      borderColor: "transparent",
      cursor: "button",
      flexShrink: "0",
      outline: "0",
      lineHeight: "1.2",
      isolation: "isolate",
      fontWeight: "medium",
      transitionProperty: "common",
      transitionDuration: "moderate",
      focusVisibleRing: "outside",
      _disabled: { layerStyle: "disabled" },
      _icon: { flexShrink: "0" },
    },
    variants: {
      size: {
        "2xs": {
          h: "6",
          minW: "6",
          textStyle: "xs",
          px: "2",
          gap: "1",
          _icon: { width: "3.5", height: "3.5" },
        },
        xs: {
          h: "8",
          minW: "8",
          textStyle: "xs",
          px: "2.5",
          gap: "1",
          _icon: { width: "4", height: "4" },
        },
        sm: {
          h: "9",
          minW: "9",
          px: "3.5",
          textStyle: "sm",
          gap: "2",
          _icon: { width: "4", height: "4" },
        },
        md: {
          h: "10",
          minW: "10",
          textStyle: "sm",
          px: "4",
          gap: "2",
          _icon: { width: "5", height: "5" },
        },
        lg: {
          h: "11",
          minW: "11",
          textStyle: "md",
          px: "5",
          gap: "3",
          _icon: { width: "5", height: "5" },
        },
        xl: {
          h: "12",
          minW: "12",
          textStyle: "md",
          px: "5",
          gap: "2.5",
          _icon: { width: "5", height: "5" },
        },
        "2xl": {
          h: "16",
          minW: "16",
          textStyle: "lg",
          px: "7",
          gap: "3",
          _icon: { width: "6", height: "6" },
        },
      },
      variant: {
        solid: {
          bg: "colorPalette.solid",
          color: "colorPalette.contrast",
          borderColor: "transparent",
          _hover: { bg: "colorPalette.solid/90" },
          _expanded: { bg: "colorPalette.solid/90" },
        },
        subtle: {
          bg: "colorPalette.subtle",
          color: "colorPalette.fg",
          borderColor: "transparent",
          _hover: { bg: "colorPalette.muted" },
          _expanded: { bg: "colorPalette.muted" },
        },
        surface: {
          bg: "colorPalette.subtle",
          color: "colorPalette.fg",
          shadow: "0 0 0px 1px var(--shadow-color)",
          shadowColor: "colorPalette.muted",
          _hover: { bg: "colorPalette.muted" },
          _expanded: { bg: "colorPalette.muted" },
        },
        outline: {
          borderWidth: "1px",
          borderColor: "colorPalette.muted",
          color: "colorPalette.fg",
          _hover: { bg: "colorPalette.subtle" },
          _expanded: { bg: "colorPalette.subtle" },
        },
        ghost: {
          bg: "transparent",
          color: "colorPalette.fg",
          _hover: { bg: "colorPalette.subtle" },
          _expanded: { bg: "colorPalette.subtle" },
        },
        plain: { color: "colorPalette.fg" },
      },
    },
    defaultVariants: { size: "md", variant: "solid" },
  }),
  ht = tt({
    className: "chakra-checkmark",
    base: {
      display: "inline-flex",
      alignItems: "center",
      justifyContent: "center",
      flexShrink: "0",
      color: "white",
      borderWidth: "1px",
      borderColor: "transparent",
      borderRadius: "l1",
      cursor: "checkbox",
      focusVisibleRing: "outside",
      _icon: { boxSize: "full" },
      _invalid: { colorPalette: "red", borderColor: "border.error" },
      _disabled: { opacity: "0.5", cursor: "disabled" },
    },
    variants: {
      size: {
        xs: { boxSize: "3" },
        sm: { boxSize: "4" },
        md: { boxSize: "5", p: "0.5" },
        lg: { boxSize: "6", p: "0.5" },
      },
      variant: {
        solid: {
          borderColor: "border.emphasized",
          "&:is([data-state=checked], [data-state=indeterminate])": {
            bg: "colorPalette.solid",
            color: "colorPalette.contrast",
            borderColor: "colorPalette.solid",
          },
        },
        outline: {
          borderColor: "border",
          "&:is([data-state=checked], [data-state=indeterminate])": {
            color: "colorPalette.fg",
            borderColor: "colorPalette.solid",
          },
        },
        subtle: {
          bg: "colorPalette.muted",
          borderColor: "colorPalette.muted",
          "&:is([data-state=checked], [data-state=indeterminate])": {
            color: "colorPalette.fg",
          },
        },
        plain: {
          "&:is([data-state=checked], [data-state=indeterminate])": {
            color: "colorPalette.fg",
          },
        },
        inverted: {
          borderColor: "border",
          color: "colorPalette.fg",
          "&:is([data-state=checked], [data-state=indeterminate])": {
            borderColor: "colorPalette.solid",
          },
        },
      },
    },
    defaultVariants: { variant: "solid", size: "md" },
  }),
  { variants: KF, defaultVariants: qF } = Cf,
  YF = tt({
    className: "chakra-code",
    base: {
      fontFamily: "mono",
      alignItems: "center",
      display: "inline-flex",
      borderRadius: "l2",
    },
    variants: KF,
    defaultVariants: qF,
  }),
  jx = tt({
    className: "color-swatch",
    base: {
      boxSize: "var(--swatch-size)",
      shadow: "inset 0 0 0 1px rgba(0, 0, 0, 0.1)",
      "--checker-size": "8px",
      "--checker-bg": "colors.bg",
      "--checker-fg": "colors.bg.emphasized",
      background:
        "linear-gradient(var(--color), var(--color)), repeating-conic-gradient(var(--checker-fg) 0%, var(--checker-fg) 25%, var(--checker-bg) 0%, var(--checker-bg) 50%) 0% 50% / var(--checker-size) var(--checker-size) !important",
      display: "inline-flex",
      alignItems: "center",
      justifyContent: "center",
      flexShrink: "0",
    },
    variants: {
      size: {
        "2xs": { "--swatch-size": "sizes.3.5" },
        xs: { "--swatch-size": "sizes.4" },
        sm: { "--swatch-size": "sizes.4.5" },
        md: { "--swatch-size": "sizes.5" },
        lg: { "--swatch-size": "sizes.6" },
        xl: { "--swatch-size": "sizes.7" },
        "2xl": { "--swatch-size": "sizes.8" },
        inherit: { "--swatch-size": "inherit" },
        full: { "--swatch-size": "100%" },
      },
      shape: {
        square: { borderRadius: "none" },
        circle: { borderRadius: "full" },
        rounded: { borderRadius: "l1" },
      },
    },
    defaultVariants: { size: "md", shape: "rounded" },
  }),
  XF = tt({
    className: "chakra-container",
    base: {
      position: "relative",
      maxWidth: "8xl",
      w: "100%",
      mx: "auto",
      px: { base: "4", md: "6", lg: "8" },
    },
    variants: {
      centerContent: {
        true: {
          display: "flex",
          flexDirection: "column",
          alignItems: "center",
        },
      },
      fluid: { true: { maxWidth: "full" } },
    },
  }),
  JF = tt({
    className: "chakra-heading",
    base: { fontFamily: "heading", fontWeight: "semibold" },
    variants: {
      size: {
        xs: { textStyle: "xs" },
        sm: { textStyle: "sm" },
        md: { textStyle: "md" },
        lg: { textStyle: "lg" },
        xl: { textStyle: "xl" },
        "2xl": { textStyle: "2xl" },
        "3xl": { textStyle: "3xl" },
        "4xl": { textStyle: "4xl" },
        "5xl": { textStyle: "5xl" },
        "6xl": { textStyle: "6xl" },
        "7xl": { textStyle: "7xl" },
      },
    },
    defaultVariants: { size: "xl" },
  }),
  QF = tt({
    className: "chakra-icon",
    base: {
      display: "inline-block",
      lineHeight: "1em",
      flexShrink: "0",
      color: "currentcolor",
      verticalAlign: "middle",
    },
    variants: {
      size: {
        inherit: {},
        xs: { boxSize: "3" },
        sm: { boxSize: "4" },
        md: { boxSize: "5" },
        lg: { boxSize: "6" },
        xl: { boxSize: "7" },
        "2xl": { boxSize: "8" },
      },
    },
    defaultVariants: { size: "inherit" },
  }),
  qe = tt({
    className: "chakra-input",
    base: {
      width: "100%",
      minWidth: "0",
      outline: "0",
      position: "relative",
      appearance: "none",
      textAlign: "start",
      borderRadius: "l2",
      _disabled: { layerStyle: "disabled" },
      height: "var(--input-height)",
      minW: "var(--input-height)",
      "--focus-color": "colors.colorPalette.focusRing",
      "--error-color": "colors.border.error",
      _invalid: {
        focusRingColor: "var(--error-color)",
        borderColor: "var(--error-color)",
      },
    },
    variants: {
      size: {
        "2xs": { textStyle: "xs", px: "2", "--input-height": "sizes.7" },
        xs: { textStyle: "xs", px: "2", "--input-height": "sizes.8" },
        sm: { textStyle: "sm", px: "2.5", "--input-height": "sizes.9" },
        md: { textStyle: "sm", px: "3", "--input-height": "sizes.10" },
        lg: { textStyle: "md", px: "4", "--input-height": "sizes.11" },
        xl: { textStyle: "md", px: "4.5", "--input-height": "sizes.12" },
        "2xl": { textStyle: "lg", px: "5", "--input-height": "sizes.16" },
      },
      variant: {
        outline: {
          bg: "transparent",
          borderWidth: "1px",
          borderColor: "border",
          focusVisibleRing: "inside",
          focusRingColor: "var(--focus-color)",
        },
        subtle: {
          borderWidth: "1px",
          borderColor: "transparent",
          bg: "bg.muted",
          focusVisibleRing: "inside",
          focusRingColor: "var(--focus-color)",
        },
        flushed: {
          bg: "transparent",
          borderBottomWidth: "1px",
          borderBottomColor: "border",
          borderRadius: "0",
          px: "0",
          _focusVisible: {
            borderColor: "var(--focus-color)",
            boxShadow: "0px 1px 0px 0px var(--focus-color)",
            _invalid: {
              borderColor: "var(--error-color)",
              boxShadow: "0px 1px 0px 0px var(--error-color)",
            },
          },
        },
      },
    },
    defaultVariants: { size: "md", variant: "outline" },
  }),
  ZF = tt({
    className: "chakra-input-addon",
    base: {
      flex: "0 0 auto",
      width: "auto",
      display: "flex",
      alignItems: "center",
      whiteSpace: "nowrap",
      alignSelf: "stretch",
      borderRadius: "l2",
    },
    variants: {
      size: qe.variants.size,
      variant: {
        outline: { borderWidth: "1px", borderColor: "border", bg: "bg.muted" },
        subtle: {
          borderWidth: "1px",
          borderColor: "transparent",
          bg: "bg.emphasized",
        },
        flushed: {
          borderBottom: "1px solid",
          borderColor: "inherit",
          borderRadius: "0",
          px: "0",
          bg: "transparent",
        },
      },
    },
    defaultVariants: { size: "md", variant: "outline" },
  }),
  e2 = tt({
    className: "chakra-kbd",
    base: {
      display: "inline-flex",
      alignItems: "center",
      fontWeight: "medium",
      fontFamily: "mono",
      flexShrink: "0",
      whiteSpace: "nowrap",
      wordSpacing: "-0.5em",
      userSelect: "none",
      px: "1",
      borderRadius: "l2",
    },
    variants: {
      variant: {
        raised: {
          bg: "colorPalette.subtle",
          color: "colorPalette.fg",
          borderWidth: "1px",
          borderBottomWidth: "2px",
          borderColor: "colorPalette.muted",
        },
        outline: { borderWidth: "1px", color: "colorPalette.fg" },
        subtle: { bg: "colorPalette.muted", color: "colorPalette.fg" },
        plain: { color: "colorPalette.fg" },
      },
      size: {
        sm: { textStyle: "xs", height: "4.5" },
        md: { textStyle: "sm", height: "5" },
        lg: { textStyle: "md", height: "6" },
      },
    },
    defaultVariants: { size: "md", variant: "raised" },
  }),
  t2 = tt({
    className: "chakra-link",
    base: {
      display: "inline-flex",
      alignItems: "center",
      outline: "none",
      gap: "1.5",
      cursor: "pointer",
      borderRadius: "l1",
      focusRing: "outside",
    },
    variants: {
      variant: {
        underline: {
          color: "colorPalette.fg",
          textDecoration: "underline",
          textUnderlineOffset: "3px",
          textDecorationColor: "currentColor/20",
        },
        plain: {
          color: "colorPalette.fg",
          _hover: {
            textDecoration: "underline",
            textUnderlineOffset: "3px",
            textDecorationColor: "currentColor/20",
          },
        },
      },
    },
    defaultVariants: { variant: "plain" },
  }),
  n2 = tt({
    className: "chakra-mark",
    base: { bg: "transparent", color: "inherit", whiteSpace: "nowrap" },
    variants: {
      variant: {
        subtle: { bg: "colorPalette.subtle", color: "inherit" },
        solid: { bg: "colorPalette.solid", color: "colorPalette.contrast" },
        text: { fontWeight: "medium" },
        plain: {},
      },
    },
  }),
  pt = tt({
    className: "chakra-radiomark",
    base: {
      display: "inline-flex",
      alignItems: "center",
      justifyContent: "center",
      flexShrink: 0,
      verticalAlign: "top",
      color: "white",
      borderWidth: "1px",
      borderColor: "transparent",
      borderRadius: "full",
      cursor: "radio",
      _focusVisible: {
        outline: "2px solid",
        outlineColor: "colorPalette.focusRing",
        outlineOffset: "2px",
      },
      _invalid: { colorPalette: "red", borderColor: "red.500" },
      _disabled: { opacity: "0.5", cursor: "disabled" },
      "& .dot": {
        height: "100%",
        width: "100%",
        borderRadius: "full",
        bg: "currentColor",
        scale: "0.4",
      },
    },
    variants: {
      variant: {
        solid: {
          borderWidth: "1px",
          borderColor: "border.emphasized",
          _checked: {
            bg: "colorPalette.solid",
            color: "colorPalette.contrast",
            borderColor: "colorPalette.solid",
          },
        },
        subtle: {
          borderWidth: "1px",
          bg: "colorPalette.muted",
          borderColor: "colorPalette.muted",
          color: "transparent",
          _checked: { color: "colorPalette.fg" },
        },
        outline: {
          borderWidth: "1px",
          borderColor: "inherit",
          _checked: {
            color: "colorPalette.fg",
            borderColor: "colorPalette.solid",
          },
          "& .dot": { scale: "0.6" },
        },
        inverted: {
          bg: "bg",
          borderWidth: "1px",
          borderColor: "inherit",
          _checked: {
            color: "colorPalette.solid",
            borderColor: "currentcolor",
          },
        },
      },
      size: {
        xs: { boxSize: "3" },
        sm: { boxSize: "4" },
        md: { boxSize: "5" },
        lg: { boxSize: "6" },
      },
    },
    defaultVariants: { variant: "solid", size: "md" },
  }),
  r2 = tt({
    className: "chakra-separator",
    base: { display: "block", borderColor: "border" },
    variants: {
      variant: {
        solid: { borderStyle: "solid" },
        dashed: { borderStyle: "dashed" },
        dotted: { borderStyle: "dotted" },
      },
      orientation: {
        vertical: { borderInlineStartWidth: "var(--separator-thickness)" },
        horizontal: { borderTopWidth: "var(--separator-thickness)" },
      },
      size: {
        xs: { "--separator-thickness": "0.5px" },
        sm: { "--separator-thickness": "1px" },
        md: { "--separator-thickness": "2px" },
        lg: { "--separator-thickness": "3px" },
      },
    },
    defaultVariants: {
      size: "sm",
      variant: "solid",
      orientation: "horizontal",
    },
  }),
  o2 = tt({
    className: "chakra-skeleton",
    base: {},
    variants: {
      loading: {
        true: {
          borderRadius: "l2",
          boxShadow: "none",
          backgroundClip: "padding-box",
          cursor: "default",
          color: "transparent",
          pointerEvents: "none",
          userSelect: "none",
          flexShrink: "0",
          "&::before, &::after, *": { visibility: "hidden" },
        },
        false: {
          background: "unset",
          animation: "fade-in var(--fade-duration, 0.1s) ease-out !important",
        },
      },
      variant: {
        pulse: {
          background: "bg.emphasized",
          animation: "pulse",
          animationDuration: "var(--duration, 1.2s)",
        },
        shine: {
          "--animate-from": "200%",
          "--animate-to": "-200%",
          "--start-color": "colors.bg.muted",
          "--end-color": "colors.bg.emphasized",
          backgroundImage:
            "linear-gradient(270deg,var(--start-color),var(--end-color),var(--end-color),var(--start-color))",
          backgroundSize: "400% 100%",
          animation: "bg-position var(--duration, 5s) ease-in-out infinite",
        },
        none: { animation: "none" },
      },
    },
    defaultVariants: { variant: "pulse", loading: !0 },
  }),
  i2 = tt({
    className: "chakra-skip-nav",
    base: {
      display: "inline-flex",
      bg: "bg.panel",
      padding: "2.5",
      borderRadius: "l2",
      fontWeight: "semibold",
      focusVisibleRing: "outside",
      textStyle: "sm",
      userSelect: "none",
      border: "0",
      height: "1px",
      width: "1px",
      margin: "-1px",
      outline: "0",
      overflow: "hidden",
      position: "absolute",
      clip: "rect(0 0 0 0)",
      _focusVisible: {
        clip: "auto",
        width: "auto",
        height: "auto",
        position: "fixed",
        top: "6",
        insetStart: "6",
      },
    },
  }),
  s2 = tt({
    className: "chakra-spinner",
    base: {
      display: "inline-block",
      borderColor: "currentColor",
      borderStyle: "solid",
      borderWidth: "2px",
      borderRadius: "full",
      width: "var(--spinner-size)",
      height: "var(--spinner-size)",
      animation: "spin",
      animationDuration: "slowest",
      "--spinner-track-color": "transparent",
      borderBottomColor: "var(--spinner-track-color)",
      borderInlineStartColor: "var(--spinner-track-color)",
    },
    variants: {
      size: {
        inherit: { "--spinner-size": "1em" },
        xs: { "--spinner-size": "sizes.3" },
        sm: { "--spinner-size": "sizes.4" },
        md: { "--spinner-size": "sizes.5" },
        lg: { "--spinner-size": "sizes.8" },
        xl: { "--spinner-size": "sizes.10" },
      },
    },
    defaultVariants: { size: "md" },
  }),
  a2 = tt({
    className: "chakra-textarea",
    base: {
      width: "100%",
      minWidth: "0",
      outline: "0",
      position: "relative",
      appearance: "none",
      textAlign: "start",
      borderRadius: "l2",
      _disabled: { layerStyle: "disabled" },
      "--focus-color": "colors.colorPalette.focusRing",
      "--error-color": "colors.border.error",
      _invalid: {
        focusRingColor: "var(--error-color)",
        borderColor: "var(--error-color)",
      },
    },
    variants: {
      size: {
        xs: { textStyle: "xs", px: "2", py: "1.5", scrollPaddingBottom: "1.5" },
        sm: { textStyle: "sm", px: "2.5", py: "2", scrollPaddingBottom: "2" },
        md: { textStyle: "sm", px: "3", py: "2", scrollPaddingBottom: "2" },
        lg: { textStyle: "md", px: "4", py: "3", scrollPaddingBottom: "3" },
        xl: {
          textStyle: "md",
          px: "4.5",
          py: "3.5",
          scrollPaddingBottom: "3.5",
        },
      },
      variant: {
        outline: {
          bg: "transparent",
          borderWidth: "1px",
          borderColor: "border",
          focusVisibleRing: "inside",
        },
        subtle: {
          borderWidth: "1px",
          borderColor: "transparent",
          bg: "bg.muted",
          focusVisibleRing: "inside",
        },
        flushed: {
          bg: "transparent",
          borderBottomWidth: "1px",
          borderBottomColor: "border",
          borderRadius: "0",
          px: "0",
          _focusVisible: {
            borderColor: "var(--focus-color)",
            boxShadow: "0px 1px 0px 0px var(--focus-color)",
          },
        },
      },
    },
    defaultVariants: { size: "md", variant: "outline" },
  }),
  l2 = {
    badge: Cf,
    button: GF,
    code: YF,
    container: XF,
    heading: JF,
    input: qe,
    inputAddon: ZF,
    kbd: e2,
    link: t2,
    mark: n2,
    separator: r2,
    skeleton: o2,
    skipNavLink: i2,
    spinner: s2,
    textarea: a2,
    icon: QF,
    checkmark: ht,
    radiomark: pt,
    colorSwatch: jx,
  },
  c2 = Sf.colors({
    bg: {
      DEFAULT: { value: { _light: "{colors.white}", _dark: "{colors.black}" } },
      subtle: {
        value: { _light: "{colors.gray.50}", _dark: "{colors.gray.950}" },
      },
      muted: {
        value: { _light: "{colors.gray.100}", _dark: "{colors.gray.900}" },
      },
      emphasized: {
        value: { _light: "{colors.gray.200}", _dark: "{colors.gray.800}" },
      },
      inverted: {
        value: { _light: "{colors.black}", _dark: "{colors.white}" },
      },
      panel: {
        value: { _light: "{colors.white}", _dark: "{colors.gray.950}" },
      },
      error: {
        value: { _light: "{colors.red.50}", _dark: "{colors.red.950}" },
      },
      warning: {
        value: { _light: "{colors.orange.50}", _dark: "{colors.orange.950}" },
      },
      success: {
        value: { _light: "{colors.green.50}", _dark: "{colors.green.950}" },
      },
      info: {
        value: { _light: "{colors.blue.50}", _dark: "{colors.blue.950}" },
      },
    },
    fg: {
      DEFAULT: {
        value: { _light: "{colors.black}", _dark: "{colors.gray.50}" },
      },
      muted: {
        value: { _light: "{colors.gray.600}", _dark: "{colors.gray.400}" },
      },
      subtle: {
        value: { _light: "{colors.gray.400}", _dark: "{colors.gray.500}" },
      },
      inverted: {
        value: { _light: "{colors.gray.50}", _dark: "{colors.black}" },
      },
      error: {
        value: { _light: "{colors.red.500}", _dark: "{colors.red.400}" },
      },
      warning: {
        value: { _light: "{colors.orange.600}", _dark: "{colors.orange.300}" },
      },
      success: {
        value: { _light: "{colors.green.600}", _dark: "{colors.green.300}" },
      },
      info: {
        value: { _light: "{colors.blue.600}", _dark: "{colors.blue.300}" },
      },
    },
    border: {
      DEFAULT: {
        value: { _light: "{colors.gray.200}", _dark: "{colors.gray.800}" },
      },
      muted: {
        value: { _light: "{colors.gray.100}", _dark: "{colors.gray.900}" },
      },
      subtle: {
        value: { _light: "{colors.gray.50}", _dark: "{colors.gray.950}" },
      },
      emphasized: {
        value: { _light: "{colors.gray.300}", _dark: "{colors.gray.700}" },
      },
      inverted: {
        value: { _light: "{colors.gray.800}", _dark: "{colors.gray.200}" },
      },
      error: {
        value: { _light: "{colors.red.500}", _dark: "{colors.red.400}" },
      },
      warning: {
        value: { _light: "{colors.orange.500}", _dark: "{colors.orange.400}" },
      },
      success: {
        value: { _light: "{colors.green.500}", _dark: "{colors.green.400}" },
      },
      info: {
        value: { _light: "{colors.blue.500}", _dark: "{colors.blue.400}" },
      },
    },
    gray: {
      contrast: {
        value: { _light: "{colors.white}", _dark: "{colors.black}" },
      },
      fg: {
        value: { _light: "{colors.gray.800}", _dark: "{colors.gray.200}" },
      },
      subtle: {
        value: { _light: "{colors.gray.100}", _dark: "{colors.gray.900}" },
      },
      muted: {
        value: { _light: "{colors.gray.200}", _dark: "{colors.gray.800}" },
      },
      emphasized: {
        value: { _light: "{colors.gray.300}", _dark: "{colors.gray.700}" },
      },
      solid: {
        value: { _light: "{colors.gray.900}", _dark: "{colors.white}" },
      },
      focusRing: {
        value: { _light: "{colors.gray.400}", _dark: "{colors.gray.400}" },
      },
    },
    red: {
      contrast: { value: { _light: "white", _dark: "white" } },
      fg: { value: { _light: "{colors.red.700}", _dark: "{colors.red.300}" } },
      subtle: {
        value: { _light: "{colors.red.100}", _dark: "{colors.red.900}" },
      },
      muted: {
        value: { _light: "{colors.red.200}", _dark: "{colors.red.800}" },
      },
      emphasized: {
        value: { _light: "{colors.red.300}", _dark: "{colors.red.700}" },
      },
      solid: {
        value: { _light: "{colors.red.600}", _dark: "{colors.red.600}" },
      },
      focusRing: {
        value: { _light: "{colors.red.500}", _dark: "{colors.red.500}" },
      },
    },
    orange: {
      contrast: { value: { _light: "white", _dark: "black" } },
      fg: {
        value: { _light: "{colors.orange.700}", _dark: "{colors.orange.300}" },
      },
      subtle: {
        value: { _light: "{colors.orange.100}", _dark: "{colors.orange.900}" },
      },
      muted: {
        value: { _light: "{colors.orange.200}", _dark: "{colors.orange.800}" },
      },
      emphasized: {
        value: { _light: "{colors.orange.300}", _dark: "{colors.orange.700}" },
      },
      solid: {
        value: { _light: "{colors.orange.600}", _dark: "{colors.orange.500}" },
      },
      focusRing: {
        value: { _light: "{colors.orange.500}", _dark: "{colors.orange.500}" },
      },
    },
    green: {
      contrast: { value: { _light: "white", _dark: "white" } },
      fg: {
        value: { _light: "{colors.green.700}", _dark: "{colors.green.300}" },
      },
      subtle: {
        value: { _light: "{colors.green.100}", _dark: "{colors.green.900}" },
      },
      muted: {
        value: { _light: "{colors.green.200}", _dark: "{colors.green.800}" },
      },
      emphasized: {
        value: { _light: "{colors.green.300}", _dark: "{colors.green.700}" },
      },
      solid: {
        value: { _light: "{colors.green.600}", _dark: "{colors.green.600}" },
      },
      focusRing: {
        value: { _light: "{colors.green.500}", _dark: "{colors.green.500}" },
      },
    },
    blue: {
      contrast: { value: { _light: "white", _dark: "white" } },
      fg: {
        value: { _light: "{colors.blue.700}", _dark: "{colors.blue.300}" },
      },
      subtle: {
        value: { _light: "{colors.blue.100}", _dark: "{colors.blue.900}" },
      },
      muted: {
        value: { _light: "{colors.blue.200}", _dark: "{colors.blue.800}" },
      },
      emphasized: {
        value: { _light: "{colors.blue.300}", _dark: "{colors.blue.700}" },
      },
      solid: {
        value: { _light: "{colors.blue.600}", _dark: "{colors.blue.600}" },
      },
      focusRing: {
        value: { _light: "{colors.blue.500}", _dark: "{colors.blue.500}" },
      },
    },
    yellow: {
      contrast: { value: { _light: "black", _dark: "black" } },
      fg: {
        value: { _light: "{colors.yellow.800}", _dark: "{colors.yellow.300}" },
      },
      subtle: {
        value: { _light: "{colors.yellow.100}", _dark: "{colors.yellow.900}" },
      },
      muted: {
        value: { _light: "{colors.yellow.200}", _dark: "{colors.yellow.800}" },
      },
      emphasized: {
        value: { _light: "{colors.yellow.300}", _dark: "{colors.yellow.700}" },
      },
      solid: {
        value: { _light: "{colors.yellow.300}", _dark: "{colors.yellow.300}" },
      },
      focusRing: {
        value: { _light: "{colors.yellow.500}", _dark: "{colors.yellow.500}" },
      },
    },
    teal: {
      contrast: { value: { _light: "white", _dark: "white" } },
      fg: {
        value: { _light: "{colors.teal.700}", _dark: "{colors.teal.300}" },
      },
      subtle: {
        value: { _light: "{colors.teal.100}", _dark: "{colors.teal.900}" },
      },
      muted: {
        value: { _light: "{colors.teal.200}", _dark: "{colors.teal.800}" },
      },
      emphasized: {
        value: { _light: "{colors.teal.300}", _dark: "{colors.teal.700}" },
      },
      solid: {
        value: { _light: "{colors.teal.600}", _dark: "{colors.teal.600}" },
      },
      focusRing: {
        value: { _light: "{colors.teal.500}", _dark: "{colors.teal.500}" },
      },
    },
    purple: {
      contrast: { value: { _light: "white", _dark: "white" } },
      fg: {
        value: { _light: "{colors.purple.700}", _dark: "{colors.purple.300}" },
      },
      subtle: {
        value: { _light: "{colors.purple.100}", _dark: "{colors.purple.900}" },
      },
      muted: {
        value: { _light: "{colors.purple.200}", _dark: "{colors.purple.800}" },
      },
      emphasized: {
        value: { _light: "{colors.purple.300}", _dark: "{colors.purple.700}" },
      },
      solid: {
        value: { _light: "{colors.purple.600}", _dark: "{colors.purple.600}" },
      },
      focusRing: {
        value: { _light: "{colors.purple.500}", _dark: "{colors.purple.500}" },
      },
    },
    pink: {
      contrast: { value: { _light: "white", _dark: "white" } },
      fg: {
        value: { _light: "{colors.pink.700}", _dark: "{colors.pink.300}" },
      },
      subtle: {
        value: { _light: "{colors.pink.100}", _dark: "{colors.pink.900}" },
      },
      muted: {
        value: { _light: "{colors.pink.200}", _dark: "{colors.pink.800}" },
      },
      emphasized: {
        value: { _light: "{colors.pink.300}", _dark: "{colors.pink.700}" },
      },
      solid: {
        value: { _light: "{colors.pink.600}", _dark: "{colors.pink.600}" },
      },
      focusRing: {
        value: { _light: "{colors.pink.500}", _dark: "{colors.pink.500}" },
      },
    },
    cyan: {
      contrast: { value: { _light: "white", _dark: "white" } },
      fg: {
        value: { _light: "{colors.cyan.700}", _dark: "{colors.cyan.300}" },
      },
      subtle: {
        value: { _light: "{colors.cyan.100}", _dark: "{colors.cyan.900}" },
      },
      muted: {
        value: { _light: "{colors.cyan.200}", _dark: "{colors.cyan.800}" },
      },
      emphasized: {
        value: { _light: "{colors.cyan.300}", _dark: "{colors.cyan.700}" },
      },
      solid: {
        value: { _light: "{colors.cyan.600}", _dark: "{colors.cyan.600}" },
      },
      focusRing: {
        value: { _light: "{colors.cyan.500}", _dark: "{colors.cyan.500}" },
      },
    },
  }),
  u2 = Sf.radii({
    l1: { value: "{radii.xs}" },
    l2: { value: "{radii.sm}" },
    l3: { value: "{radii.md}" },
  }),
  d2 = Sf.shadows({
    xs: {
      value: {
        _light:
          "0px 1px 2px {colors.gray.900/10}, 0px 0px 1px {colors.gray.900/20}",
        _dark: "0px 1px 1px {black/64}, 0px 0px 1px inset {colors.gray.300/20}",
      },
    },
    sm: {
      value: {
        _light:
          "0px 2px 4px {colors.gray.900/10}, 0px 0px 1px {colors.gray.900/30}",
        _dark: "0px 2px 4px {black/64}, 0px 0px 1px inset {colors.gray.300/30}",
      },
    },
    md: {
      value: {
        _light:
          "0px 4px 8px {colors.gray.900/10}, 0px 0px 1px {colors.gray.900/30}",
        _dark: "0px 4px 8px {black/64}, 0px 0px 1px inset {colors.gray.300/30}",
      },
    },
    lg: {
      value: {
        _light:
          "0px 8px 16px {colors.gray.900/10}, 0px 0px 1px {colors.gray.900/30}",
        _dark:
          "0px 8px 16px {black/64}, 0px 0px 1px inset {colors.gray.300/30}",
      },
    },
    xl: {
      value: {
        _light:
          "0px 16px 24px {colors.gray.900/10}, 0px 0px 1px {colors.gray.900/30}",
        _dark:
          "0px 16px 24px {black/64}, 0px 0px 1px inset {colors.gray.300/30}",
      },
    },
    "2xl": {
      value: {
        _light:
          "0px 24px 40px {colors.gray.900/16}, 0px 0px 1px {colors.gray.900/30}",
        _dark:
          "0px 24px 40px {black/64}, 0px 0px 1px inset {colors.gray.300/30}",
      },
    },
    inner: {
      value: {
        _light: "inset 0 2px 4px 0 {black/5}",
        _dark: "inset 0 2px 4px 0 black",
      },
    },
    inset: {
      value: {
        _light: "inset 0 0 0 1px {black/5}",
        _dark: "inset 0 0 0 1px {colors.gray.300/5}",
      },
    },
  }),
  f2 = wb.extendWith("itemBody"),
  g2 = te("action-bar").parts(
    "positioner",
    "content",
    "separator",
    "selectionTrigger",
    "closeTrigger",
  ),
  h2 = te("alert").parts(
    "title",
    "description",
    "root",
    "indicator",
    "content",
  ),
  p2 = te("breadcrumb").parts(
    "link",
    "currentLink",
    "item",
    "list",
    "root",
    "ellipsis",
    "separator",
  ),
  m2 = te("blockquote").parts("root", "icon", "content", "caption"),
  v2 = te("card").parts(
    "root",
    "header",
    "body",
    "footer",
    "title",
    "description",
  ),
  y2 = te("checkbox-card", [
    "root",
    "control",
    "label",
    "description",
    "addon",
    "indicator",
    "content",
  ]),
  b2 = te("data-list").parts("root", "item", "itemLabel", "itemValue"),
  x2 = vf.extendWith("header", "body", "footer", "backdrop"),
  S2 = vf.extendWith("header", "body", "footer", "backdrop"),
  w2 = jb.extendWith("textarea"),
  C2 = te("empty-state", [
    "root",
    "content",
    "indicator",
    "title",
    "description",
  ]),
  E2 = Ub.extendWith("requiredIndicator"),
  I2 = Wb.extendWith("content"),
  R2 = Hb.extendWith("itemContent", "dropzoneContent", "fileText"),
  k2 = te("list").parts("root", "item", "indicator"),
  P2 = Yb.extendWith("itemCommand"),
  T2 = te("select").parts("root", "field", "indicator"),
  O2 = ox.extendWith("header", "body", "footer"),
  Ux = xf.extendWith("itemAddon", "itemIndicator"),
  _2 = Ux.extendWith("itemContent", "itemDescription"),
  A2 = sx.extendWith("itemIndicator"),
  N2 = lx.extendWith("indicatorGroup"),
  V2 = zb.extendWith("indicatorGroup", "empty"),
  F2 = ux.extendWith("markerIndicator"),
  D2 = te("stat").parts(
    "root",
    "label",
    "helpText",
    "valueText",
    "valueUnit",
    "indicator",
  ),
  $2 = te("status").parts("root", "indicator"),
  M2 = te("steps", [
    "root",
    "list",
    "item",
    "trigger",
    "indicator",
    "separator",
    "content",
    "title",
    "description",
    "nextTrigger",
    "prevTrigger",
    "progress",
  ]),
  L2 = dx.extendWith("indicator"),
  z2 = te("table").parts(
    "root",
    "header",
    "body",
    "row",
    "columnHeader",
    "cell",
    "footer",
    "caption",
  ),
  B2 = te("toast").parts(
    "root",
    "title",
    "description",
    "indicator",
    "closeTrigger",
    "actionTrigger",
  ),
  j2 = te("tabs").parts(
    "root",
    "trigger",
    "list",
    "content",
    "contentGroup",
    "indicator",
  ),
  U2 = te("tag").parts(
    "root",
    "label",
    "closeTrigger",
    "startElement",
    "endElement",
  ),
  W2 = te("timeline").parts(
    "root",
    "item",
    "content",
    "separator",
    "indicator",
    "connector",
    "title",
    "description",
  ),
  H2 = fA.extendWith("channelText");
Ob.extendWith("valueText");
const G2 = ie({
    className: "chakra-accordion",
    slots: f2.keys(),
    base: {
      root: { width: "full", "--accordion-radius": "radii.l2" },
      item: { overflowAnchor: "none" },
      itemTrigger: {
        display: "flex",
        alignItems: "center",
        textAlign: "start",
        width: "full",
        outline: "0",
        gap: "3",
        fontWeight: "medium",
        borderRadius: "var(--accordion-radius)",
        _focusVisible: {
          outline: "2px solid",
          outlineColor: "colorPalette.focusRing",
        },
        _disabled: { layerStyle: "disabled" },
      },
      itemBody: {
        pt: "var(--accordion-padding-y)",
        pb: "calc(var(--accordion-padding-y) * 2)",
      },
      itemContent: {
        overflow: "hidden",
        borderRadius: "var(--accordion-radius)",
        _open: {
          animationName: "expand-height, fade-in",
          animationDuration: "moderate",
        },
        _closed: {
          animationName: "collapse-height, fade-out",
          animationDuration: "moderate",
        },
      },
      itemIndicator: {
        transition: "rotate 0.2s",
        transformOrigin: "center",
        color: "fg.subtle",
        _open: { rotate: "180deg" },
        _icon: { width: "1.2em", height: "1.2em" },
      },
    },
    variants: {
      variant: {
        outline: { item: { borderBottomWidth: "1px" } },
        subtle: {
          itemTrigger: { px: "var(--accordion-padding-x)" },
          itemContent: { px: "var(--accordion-padding-x)" },
          item: {
            borderRadius: "var(--accordion-radius)",
            _open: { bg: "colorPalette.subtle" },
          },
        },
        enclosed: {
          root: {
            borderWidth: "1px",
            borderRadius: "var(--accordion-radius)",
            divideY: "1px",
            overflow: "hidden",
          },
          itemTrigger: { px: "var(--accordion-padding-x)" },
          itemContent: { px: "var(--accordion-padding-x)" },
          item: { _open: { bg: "bg.subtle" } },
        },
        plain: {},
      },
      size: {
        sm: {
          root: {
            "--accordion-padding-x": "spacing.3",
            "--accordion-padding-y": "spacing.2",
          },
          itemTrigger: { textStyle: "sm", py: "var(--accordion-padding-y)" },
        },
        md: {
          root: {
            "--accordion-padding-x": "spacing.4",
            "--accordion-padding-y": "spacing.2",
          },
          itemTrigger: { textStyle: "md", py: "var(--accordion-padding-y)" },
        },
        lg: {
          root: {
            "--accordion-padding-x": "spacing.4.5",
            "--accordion-padding-y": "spacing.2.5",
          },
          itemTrigger: { textStyle: "lg", py: "var(--accordion-padding-y)" },
        },
      },
    },
    defaultVariants: { size: "md", variant: "outline" },
  }),
  K2 = ie({
    className: "chakra-action-bar",
    slots: g2.keys(),
    base: {
      positioner: {
        position: "fixed",
        display: "flex",
        justifyContent: "center",
        pointerEvents: "none",
        insetInline: "0",
        top: "unset",
        bottom: "calc(env(safe-area-inset-bottom) + 20px)",
      },
      content: {
        bg: "bg.panel",
        shadow: "md",
        display: "flex",
        alignItems: "center",
        gap: "3",
        borderRadius: "l3",
        py: "2.5",
        px: "3",
        pointerEvents: "auto",
        translate: "calc(-1 * var(--scrollbar-width) / 2) 0px",
        _open: {
          animationName: "slide-from-bottom, fade-in",
          animationDuration: "moderate",
        },
        _closed: {
          animationName: "slide-to-bottom, fade-out",
          animationDuration: "faster",
        },
      },
      separator: { width: "1px", height: "5", bg: "border" },
      selectionTrigger: {
        display: "inline-flex",
        alignItems: "center",
        gap: "2",
        alignSelf: "stretch",
        textStyle: "sm",
        px: "4",
        py: "1",
        borderRadius: "l2",
        borderWidth: "1px",
        borderStyle: "dashed",
      },
    },
  }),
  q2 = ie({
    slots: h2.keys(),
    className: "chakra-alert",
    base: {
      root: {
        width: "full",
        display: "flex",
        alignItems: "flex-start",
        position: "relative",
        borderRadius: "l3",
      },
      title: { fontWeight: "medium" },
      description: { display: "inline" },
      indicator: {
        display: "inline-flex",
        alignItems: "center",
        justifyContent: "center",
        flexShrink: "0",
        width: "1em",
        height: "1em",
        _icon: { boxSize: "full" },
      },
      content: { display: "flex", flex: "1", gap: "1" },
    },
    variants: {
      status: {
        info: { root: { colorPalette: "blue" } },
        warning: { root: { colorPalette: "orange" } },
        success: { root: { colorPalette: "green" } },
        error: { root: { colorPalette: "red" } },
        neutral: { root: { colorPalette: "gray" } },
      },
      inline: {
        true: {
          content: {
            display: "inline-flex",
            flexDirection: "row",
            alignItems: "center",
          },
        },
        false: { content: { display: "flex", flexDirection: "column" } },
      },
      variant: {
        subtle: {
          root: { bg: "colorPalette.subtle", color: "colorPalette.fg" },
        },
        surface: {
          root: {
            bg: "colorPalette.subtle",
            color: "colorPalette.fg",
            shadow: "inset 0 0 0px 1px var(--shadow-color)",
            shadowColor: "colorPalette.muted",
          },
          indicator: { color: "colorPalette.fg" },
        },
        outline: {
          root: {
            color: "colorPalette.fg",
            shadow: "inset 0 0 0px 1px var(--shadow-color)",
            shadowColor: "colorPalette.muted",
          },
          indicator: { color: "colorPalette.fg" },
        },
        solid: {
          root: { bg: "colorPalette.solid", color: "colorPalette.contrast" },
          indicator: { color: "colorPalette.contrast" },
        },
      },
      size: {
        sm: {
          root: { gap: "2", px: "3", py: "3", textStyle: "xs" },
          indicator: { textStyle: "lg" },
        },
        md: {
          root: { gap: "3", px: "4", py: "4", textStyle: "sm" },
          indicator: { textStyle: "xl" },
        },
        lg: {
          root: { gap: "3", px: "4", py: "4", textStyle: "md" },
          indicator: { textStyle: "2xl" },
        },
      },
    },
    defaultVariants: {
      status: "info",
      variant: "subtle",
      size: "md",
      inline: !1,
    },
  }),
  Y2 = ie({
    slots: Ib.keys(),
    className: "chakra-avatar",
    base: {
      root: {
        display: "inline-flex",
        alignItems: "center",
        justifyContent: "center",
        fontWeight: "medium",
        position: "relative",
        verticalAlign: "top",
        flexShrink: "0",
        userSelect: "none",
        width: "var(--avatar-size)",
        height: "var(--avatar-size)",
        fontSize: "var(--avatar-font-size)",
        borderRadius: "var(--avatar-radius)",
        "&[data-group-item]": { borderWidth: "2px", borderColor: "bg" },
      },
      image: {
        width: "100%",
        height: "100%",
        objectFit: "cover",
        borderRadius: "var(--avatar-radius)",
      },
      fallback: {
        lineHeight: "1",
        textTransform: "uppercase",
        fontWeight: "medium",
        fontSize: "var(--avatar-font-size)",
        borderRadius: "var(--avatar-radius)",
      },
    },
    variants: {
      size: {
        full: {
          root: { "--avatar-size": "100%", "--avatar-font-size": "100%" },
        },
        "2xs": {
          root: {
            "--avatar-font-size": "fontSizes.2xs",
            "--avatar-size": "sizes.6",
          },
        },
        xs: {
          root: {
            "--avatar-font-size": "fontSizes.xs",
            "--avatar-size": "sizes.8",
          },
        },
        sm: {
          root: {
            "--avatar-font-size": "fontSizes.sm",
            "--avatar-size": "sizes.9",
          },
        },
        md: {
          root: {
            "--avatar-font-size": "fontSizes.md",
            "--avatar-size": "sizes.10",
          },
        },
        lg: {
          root: {
            "--avatar-font-size": "fontSizes.md",
            "--avatar-size": "sizes.11",
          },
        },
        xl: {
          root: {
            "--avatar-font-size": "fontSizes.lg",
            "--avatar-size": "sizes.12",
          },
        },
        "2xl": {
          root: {
            "--avatar-font-size": "fontSizes.xl",
            "--avatar-size": "sizes.16",
          },
        },
      },
      variant: {
        solid: {
          root: { bg: "colorPalette.solid", color: "colorPalette.contrast" },
        },
        subtle: {
          root: { bg: "colorPalette.muted", color: "colorPalette.fg" },
        },
        outline: {
          root: {
            color: "colorPalette.fg",
            borderWidth: "1px",
            borderColor: "colorPalette.muted",
          },
        },
      },
      shape: {
        square: {},
        rounded: { root: { "--avatar-radius": "radii.l3" } },
        full: { root: { "--avatar-radius": "radii.full" } },
      },
      borderless: {
        true: { root: { "&[data-group-item]": { borderWidth: "0px" } } },
      },
    },
    defaultVariants: { size: "md", shape: "full", variant: "subtle" },
  }),
  X2 = ie({
    className: "chakra-blockquote",
    slots: m2.keys(),
    base: {
      root: {
        position: "relative",
        display: "flex",
        flexDirection: "column",
        gap: "2",
      },
      caption: { textStyle: "sm", color: "fg.muted" },
      icon: { boxSize: "5" },
    },
    variants: {
      justify: {
        start: { root: { alignItems: "flex-start", textAlign: "start" } },
        center: { root: { alignItems: "center", textAlign: "center" } },
        end: { root: { alignItems: "flex-end", textAlign: "end" } },
      },
      variant: {
        subtle: {
          root: {
            paddingX: "5",
            borderStartWidth: "4px",
            borderStartColor: "colorPalette.muted",
          },
          icon: { color: "colorPalette.fg" },
        },
        solid: {
          root: {
            paddingX: "5",
            borderStartWidth: "4px",
            borderStartColor: "colorPalette.solid",
          },
          icon: { color: "colorPalette.solid" },
        },
        plain: {
          root: { paddingX: "5" },
          icon: { color: "colorPalette.solid" },
        },
      },
    },
    defaultVariants: { variant: "subtle", justify: "start" },
  }),
  J2 = ie({
    className: "chakra-breadcrumb",
    slots: p2.keys(),
    base: {
      list: {
        display: "flex",
        alignItems: "center",
        wordBreak: "break-word",
        color: "fg.muted",
        listStyle: "none",
      },
      link: {
        outline: "0",
        textDecoration: "none",
        borderRadius: "l1",
        focusRing: "outside",
        display: "inline-flex",
        alignItems: "center",
        gap: "2",
      },
      item: { display: "inline-flex", alignItems: "center" },
      separator: {
        color: "fg.muted",
        opacity: "0.8",
        _icon: { boxSize: "1em" },
        _rtl: { rotate: "180deg" },
      },
      ellipsis: {
        display: "inline-flex",
        alignItems: "center",
        justifyContent: "center",
        _icon: { boxSize: "1em" },
      },
    },
    variants: {
      variant: {
        underline: {
          link: {
            color: "colorPalette.fg",
            textDecoration: "underline",
            textUnderlineOffset: "0.2em",
            textDecorationColor: "colorPalette.muted",
          },
          currentLink: { color: "colorPalette.fg" },
        },
        plain: {
          link: { color: "fg.muted", _hover: { color: "fg" } },
          currentLink: { color: "fg" },
        },
      },
      size: {
        sm: { list: { gap: "1", textStyle: "xs" } },
        md: { list: { gap: "1.5", textStyle: "sm" } },
        lg: { list: { gap: "2", textStyle: "md" } },
      },
    },
    defaultVariants: { variant: "plain", size: "md" },
  }),
  Q2 = ie({
    className: "chakra-card",
    slots: v2.keys(),
    base: {
      root: {
        display: "flex",
        flexDirection: "column",
        position: "relative",
        minWidth: "0",
        wordWrap: "break-word",
        borderRadius: "l3",
        color: "fg",
        textAlign: "start",
      },
      title: { fontWeight: "semibold" },
      description: { color: "fg.muted", fontSize: "sm" },
      header: {
        paddingInline: "var(--card-padding)",
        paddingTop: "var(--card-padding)",
        display: "flex",
        flexDirection: "column",
        gap: "1.5",
      },
      body: {
        padding: "var(--card-padding)",
        flex: "1",
        display: "flex",
        flexDirection: "column",
      },
      footer: {
        display: "flex",
        alignItems: "center",
        gap: "2",
        paddingInline: "var(--card-padding)",
        paddingBottom: "var(--card-padding)",
      },
    },
    variants: {
      size: {
        sm: {
          root: { "--card-padding": "spacing.4" },
          title: { textStyle: "md" },
        },
        md: {
          root: { "--card-padding": "spacing.6" },
          title: { textStyle: "lg" },
        },
        lg: {
          root: { "--card-padding": "spacing.7" },
          title: { textStyle: "xl" },
        },
      },
      variant: {
        elevated: { root: { bg: "bg.panel", boxShadow: "md" } },
        outline: {
          root: { bg: "bg.panel", borderWidth: "1px", borderColor: "border" },
        },
        subtle: { root: { bg: "bg.muted" } },
      },
    },
    defaultVariants: { variant: "outline", size: "md" },
  });
var uv, dv, fv, gv, hv, pv, mv, vv, yv, bv, xv, Sv, wv, Cv;
const Z2 = ie({
  slots: dA.keys(),
  className: "chakra-checkbox",
  base: {
    root: {
      display: "inline-flex",
      gap: "2",
      alignItems: "center",
      verticalAlign: "top",
      position: "relative",
    },
    control: ht.base,
    label: {
      fontWeight: "medium",
      userSelect: "none",
      _disabled: { opacity: "0.5" },
    },
  },
  variants: {
    size: {
      xs: {
        root: { gap: "1.5" },
        label: { textStyle: "xs" },
        control:
          (dv = (uv = ht.variants) == null ? void 0 : uv.size) == null
            ? void 0
            : dv.xs,
      },
      sm: {
        root: { gap: "2" },
        label: { textStyle: "sm" },
        control:
          (gv = (fv = ht.variants) == null ? void 0 : fv.size) == null
            ? void 0
            : gv.sm,
      },
      md: {
        root: { gap: "2.5" },
        label: { textStyle: "sm" },
        control:
          (pv = (hv = ht.variants) == null ? void 0 : hv.size) == null
            ? void 0
            : pv.md,
      },
      lg: {
        root: { gap: "3" },
        label: { textStyle: "md" },
        control:
          (vv = (mv = ht.variants) == null ? void 0 : mv.size) == null
            ? void 0
            : vv.lg,
      },
    },
    variant: {
      outline: {
        control:
          (bv = (yv = ht.variants) == null ? void 0 : yv.variant) == null
            ? void 0
            : bv.outline,
      },
      solid: {
        control:
          (Sv = (xv = ht.variants) == null ? void 0 : xv.variant) == null
            ? void 0
            : Sv.solid,
      },
      subtle: {
        control:
          (Cv = (wv = ht.variants) == null ? void 0 : wv.variant) == null
            ? void 0
            : Cv.subtle,
      },
    },
  },
  defaultVariants: { variant: "solid", size: "md" },
});
var Ev, Iv, Rv, kv, Pv, Tv, Ov;
const eD = ie({
    slots: y2.keys(),
    className: "chakra-checkbox-card",
    base: {
      root: {
        display: "flex",
        flexDirection: "column",
        userSelect: "none",
        position: "relative",
        borderRadius: "l2",
        flex: "1",
        focusVisibleRing: "outside",
        _disabled: { opacity: "0.8" },
        _invalid: { outline: "2px solid", outlineColor: "border.error" },
      },
      control: {
        display: "inline-flex",
        flex: "1",
        position: "relative",
        borderRadius: "inherit",
        justifyContent: "var(--checkbox-card-justify)",
        alignItems: "var(--checkbox-card-align)",
      },
      label: {
        fontWeight: "medium",
        display: "flex",
        alignItems: "center",
        gap: "2",
        flex: "1",
        _disabled: { opacity: "0.5" },
      },
      description: {
        opacity: "0.64",
        textStyle: "sm",
        _disabled: { opacity: "0.5" },
      },
      addon: { _disabled: { opacity: "0.5" } },
      indicator: ht.base,
      content: {
        display: "flex",
        flexDirection: "column",
        flex: "1",
        gap: "1",
        justifyContent: "var(--checkbox-card-justify)",
        alignItems: "var(--checkbox-card-align)",
      },
    },
    variants: {
      size: {
        sm: {
          root: { textStyle: "sm" },
          control: { padding: "3", gap: "1.5" },
          addon: { px: "3", py: "1.5", borderTopWidth: "1px" },
          indicator: (Ev = ht.variants) == null ? void 0 : Ev.size.sm,
        },
        md: {
          root: { textStyle: "sm" },
          control: { padding: "4", gap: "2.5" },
          addon: { px: "4", py: "2", borderTopWidth: "1px" },
          indicator: (Iv = ht.variants) == null ? void 0 : Iv.size.md,
        },
        lg: {
          root: { textStyle: "md" },
          control: { padding: "4", gap: "3.5" },
          addon: { px: "4", py: "2", borderTopWidth: "1px" },
          indicator: (Rv = ht.variants) == null ? void 0 : Rv.size.lg,
        },
      },
      variant: {
        surface: {
          root: {
            borderWidth: "1px",
            borderColor: "border",
            _checked: {
              bg: "colorPalette.subtle",
              color: "colorPalette.fg",
              borderColor: "colorPalette.muted",
            },
            _disabled: { bg: "bg.muted" },
          },
          indicator: (kv = ht.variants) == null ? void 0 : kv.variant.solid,
        },
        subtle: {
          root: { bg: "bg.muted" },
          control: {
            _checked: { bg: "colorPalette.muted", color: "colorPalette.fg" },
          },
          indicator: (Pv = ht.variants) == null ? void 0 : Pv.variant.plain,
        },
        outline: {
          root: {
            borderWidth: "1px",
            borderColor: "border",
            _checked: {
              boxShadow: "0 0 0 1px var(--shadow-color)",
              boxShadowColor: "colorPalette.solid",
              borderColor: "colorPalette.solid",
            },
          },
          indicator: (Tv = ht.variants) == null ? void 0 : Tv.variant.solid,
        },
        solid: {
          root: {
            borderWidth: "1px",
            _checked: {
              bg: "colorPalette.solid",
              color: "colorPalette.contrast",
              borderColor: "colorPalette.solid",
            },
          },
          indicator: (Ov = ht.variants) == null ? void 0 : Ov.variant.inverted,
        },
      },
      justify: {
        start: { root: { "--checkbox-card-justify": "flex-start" } },
        end: { root: { "--checkbox-card-justify": "flex-end" } },
        center: { root: { "--checkbox-card-justify": "center" } },
      },
      align: {
        start: {
          root: { "--checkbox-card-align": "flex-start" },
          content: { textAlign: "start" },
        },
        end: {
          root: { "--checkbox-card-align": "flex-end" },
          content: { textAlign: "end" },
        },
        center: {
          root: { "--checkbox-card-align": "center" },
          content: { textAlign: "center" },
        },
      },
      orientation: {
        vertical: { control: { flexDirection: "column" } },
        horizontal: { control: { flexDirection: "row" } },
      },
    },
    defaultVariants: {
      size: "md",
      variant: "outline",
      align: "start",
      orientation: "horizontal",
    },
  }),
  tD = ie({
    slots: ob.keys(),
    className: "chakra-collapsible",
    base: {
      content: {
        overflow: "hidden",
        _open: {
          animationName: "expand-height, fade-in",
          animationDuration: "moderate",
        },
        _closed: {
          animationName: "collapse-height, fade-out",
          animationDuration: "moderate",
        },
      },
    },
  });
var _v, Av, Nv, Vv, Fv, Dv, $v, Mv, Lv, zv, Bv, jv, Uv, Wv, Hv, Gv, Kv, qv;
const nD = ie({
    className: "colorPicker",
    slots: H2.keys(),
    base: {
      root: { display: "flex", flexDirection: "column", gap: "1.5" },
      label: {
        color: "fg",
        fontWeight: "medium",
        textStyle: "sm",
        _disabled: { opacity: "0.5" },
      },
      valueText: { textAlign: "start" },
      control: {
        display: "flex",
        alignItems: "center",
        flexDirection: "row",
        gap: "2",
        position: "relative",
      },
      swatchTrigger: {
        display: "flex",
        alignItems: "center",
        justifyContent: "center",
      },
      trigger: {
        display: "flex",
        alignItems: "center",
        justifyContent: "center",
        flexDirection: "row",
        flexShrink: "0",
        gap: "2",
        textStyle: "sm",
        minH: "var(--input-height)",
        minW: "var(--input-height)",
        px: "1",
        rounded: "l2",
        _disabled: { opacity: "0.5" },
        "--focus-color": "colors.colorPalette.focusRing",
        "&:focus-visible": {
          borderColor: "var(--focus-color)",
          outline: "1px solid var(--focus-color)",
        },
        "&[data-fit-content]": {
          "--input-height": "unset",
          px: "0",
          border: "0",
        },
      },
      content: {
        display: "flex",
        flexDirection: "column",
        bg: "bg.panel",
        borderRadius: "l3",
        boxShadow: "lg",
        width: "64",
        p: "4",
        gap: "3",
        zIndex: "dropdown",
        _open: { animationStyle: "slide-fade-in", animationDuration: "fast" },
        _closed: {
          animationStyle: "slide-fade-out",
          animationDuration: "faster",
        },
      },
      area: { height: "180px", borderRadius: "l2", overflow: "hidden" },
      areaThumb: {
        borderRadius: "full",
        height: "var(--thumb-size)",
        width: "var(--thumb-size)",
        borderWidth: "2px",
        borderColor: "white",
        shadow: "sm",
        focusVisibleRing: "mixed",
        focusRingColor: "white",
      },
      areaBackground: { height: "full" },
      channelSlider: { borderRadius: "l2", flex: "1" },
      channelSliderTrack: {
        height: "var(--slider-height)",
        borderRadius: "inherit",
        boxShadow: "inset 0 0 0 1px rgba(0,0,0,0.1)",
      },
      channelText: {
        textStyle: "xs",
        color: "fg.muted",
        fontWeight: "medium",
        textTransform: "capitalize",
      },
      swatchGroup: {
        display: "flex",
        flexDirection: "row",
        flexWrap: "wrap",
        gap: "2",
      },
      swatch: { ...jx.base, borderRadius: "l1" },
      swatchIndicator: { color: "white", rounded: "full" },
      channelSliderThumb: {
        borderRadius: "full",
        height: "var(--thumb-size)",
        width: "var(--thumb-size)",
        borderWidth: "2px",
        borderColor: "white",
        shadow: "sm",
        transform: "translate(-50%, -50%)",
        focusVisibleRing: "outside",
        focusRingOffset: "1px",
      },
      channelInput: {
        ...qe.base,
        "&::-webkit-inner-spin-button, &::-webkit-outer-spin-button": {
          WebkitAppearance: "none",
          margin: 0,
        },
      },
      formatSelect: {
        textStyle: "xs",
        textTransform: "uppercase",
        borderWidth: "1px",
        minH: "6",
        focusRing: "inside",
        rounded: "l2",
      },
      transparencyGrid: { borderRadius: "l2" },
      view: { display: "flex", flexDirection: "column", gap: "2" },
    },
    variants: {
      size: {
        "2xs": {
          channelInput:
            (Av = (_v = qe.variants) == null ? void 0 : _v.size) == null
              ? void 0
              : Av["2xs"],
          swatch: { "--swatch-size": "sizes.4.5" },
          trigger: { "--input-height": "sizes.7" },
          area: { "--thumb-size": "sizes.3" },
          channelSlider: {
            "--slider-height": "sizes.3",
            "--thumb-size": "sizes.3",
          },
        },
        xs: {
          channelInput:
            (Vv = (Nv = qe.variants) == null ? void 0 : Nv.size) == null
              ? void 0
              : Vv.xs,
          swatch: { "--swatch-size": "sizes.5" },
          trigger: { "--input-height": "sizes.8" },
          area: { "--thumb-size": "sizes.3.5" },
          channelSlider: {
            "--slider-height": "sizes.3.5",
            "--thumb-size": "sizes.3.5",
          },
        },
        sm: {
          channelInput:
            (Dv = (Fv = qe.variants) == null ? void 0 : Fv.size) == null
              ? void 0
              : Dv.sm,
          swatch: { "--swatch-size": "sizes.6" },
          trigger: { "--input-height": "sizes.9" },
          area: { "--thumb-size": "sizes.3.5" },
          channelSlider: {
            "--slider-height": "sizes.3.5",
            "--thumb-size": "sizes.3.5",
          },
        },
        md: {
          channelInput:
            (Mv = ($v = qe.variants) == null ? void 0 : $v.size) == null
              ? void 0
              : Mv.md,
          swatch: { "--swatch-size": "sizes.7" },
          trigger: { "--input-height": "sizes.10" },
          area: { "--thumb-size": "sizes.3.5" },
          channelSlider: {
            "--slider-height": "sizes.3.5",
            "--thumb-size": "sizes.3.5",
          },
        },
        lg: {
          channelInput:
            (zv = (Lv = qe.variants) == null ? void 0 : Lv.size) == null
              ? void 0
              : zv.lg,
          swatch: { "--swatch-size": "sizes.7" },
          trigger: { "--input-height": "sizes.11" },
          area: { "--thumb-size": "sizes.3.5" },
          channelSlider: {
            "--slider-height": "sizes.3.5",
            "--thumb-size": "sizes.3.5",
          },
        },
        xl: {
          channelInput:
            (jv = (Bv = qe.variants) == null ? void 0 : Bv.size) == null
              ? void 0
              : jv.xl,
          swatch: { "--swatch-size": "sizes.8" },
          trigger: { "--input-height": "sizes.12" },
          area: { "--thumb-size": "sizes.3.5" },
          channelSlider: {
            "--slider-height": "sizes.3.5",
            "--thumb-size": "sizes.3.5",
          },
        },
        "2xl": {
          channelInput:
            (Wv = (Uv = qe.variants) == null ? void 0 : Uv.size) == null
              ? void 0
              : Wv["2xl"],
          swatch: { "--swatch-size": "sizes.10" },
          trigger: { "--input-height": "sizes.16" },
          area: { "--thumb-size": "sizes.3.5" },
          channelSlider: {
            "--slider-height": "sizes.3.5",
            "--thumb-size": "sizes.3.5",
          },
        },
      },
      variant: {
        outline: {
          channelInput:
            (Gv = (Hv = qe.variants) == null ? void 0 : Hv.variant) == null
              ? void 0
              : Gv.outline,
          trigger: { borderWidth: "1px" },
        },
        subtle: {
          channelInput:
            (qv = (Kv = qe.variants) == null ? void 0 : Kv.variant) == null
              ? void 0
              : qv.subtle,
          trigger: {
            borderWidth: "1px",
            borderColor: "transparent",
            bg: "bg.muted",
          },
        },
      },
    },
    defaultVariants: { size: "md", variant: "outline" },
  }),
  rD = ie({
    className: "chakra-combobox",
    slots: V2.keys(),
    base: {
      root: {
        display: "flex",
        flexDirection: "column",
        gap: "1.5",
        width: "full",
      },
      label: {
        fontWeight: "medium",
        userSelect: "none",
        textStyle: "sm",
        _disabled: { layerStyle: "disabled" },
      },
      input: {
        display: "flex",
        alignItems: "center",
        justifyContent: "space-between",
        background: "bg.panel",
        width: "full",
        minH: "var(--combobox-input-height)",
        px: "var(--combobox-input-padding-x)",
        "--input-height": "var(--combobox-input-height)",
        borderRadius: "l2",
        outline: 0,
        userSelect: "none",
        textAlign: "start",
        _placeholderShown: { color: "fg.muted" },
        _disabled: { layerStyle: "disabled" },
        "--focus-color": "colors.colorPalette.focusRing",
        "--error-color": "colors.border.error",
        _invalid: {
          focusRingColor: "var(--error-color)",
          borderColor: "var(--error-color)",
        },
      },
      trigger: {
        display: "inline-flex",
        alignItems: "center",
        justifyContent: "center",
        "--input-height": "var(--combobox-input-height)",
      },
      clearTrigger: {
        color: "fg.muted",
        pointerEvents: "auto",
        focusVisibleRing: "inside",
        focusRingWidth: "2px",
        rounded: "l1",
      },
      control: { pos: "relative" },
      indicatorGroup: {
        display: "flex",
        alignItems: "center",
        justifyContent: "center",
        gap: "1",
        pos: "absolute",
        insetEnd: "0",
        top: "0",
        bottom: "0",
        px: "var(--combobox-input-padding-x)",
        _icon: { boxSize: "var(--combobox-indicator-size)" },
        "[data-disabled] &": { opacity: 0.5 },
      },
      content: {
        background: "bg.panel",
        display: "flex",
        flexDirection: "column",
        zIndex: "dropdown",
        borderRadius: "l2",
        outline: 0,
        maxH: "96",
        overflowY: "auto",
        boxShadow: "md",
        _open: { animationStyle: "slide-fade-in", animationDuration: "fast" },
        _closed: { animationStyle: "slide-fade-out", animationDuration: "0s" },
        "&[data-empty]:not(:has([data-scope=combobox][data-part=empty]))": {
          opacity: 0,
        },
      },
      item: {
        position: "relative",
        userSelect: "none",
        display: "flex",
        alignItems: "center",
        gap: "2",
        py: "var(--combobox-item-padding-y)",
        px: "var(--combobox-item-padding-x)",
        cursor: "option",
        justifyContent: "space-between",
        flex: "1",
        textAlign: "start",
        borderRadius: "l1",
        _highlighted: { bg: "bg.emphasized/60" },
        _disabled: { pointerEvents: "none", opacity: "0.5" },
        _icon: { boxSize: "var(--combobox-indicator-size)" },
      },
      empty: {
        py: "var(--combobox-item-padding-y)",
        px: "var(--combobox-item-padding-x)",
      },
      itemText: { flex: "1" },
      itemGroup: { pb: "var(--combobox-item-padding-y)", _last: { pb: "0" } },
      itemGroupLabel: {
        fontWeight: "medium",
        py: "var(--combobox-item-padding-y)",
        px: "var(--combobox-item-padding-x)",
      },
    },
    variants: {
      variant: {
        outline: {
          input: {
            bg: "transparent",
            borderWidth: "1px",
            borderColor: "border",
            focusVisibleRing: "inside",
          },
        },
        subtle: {
          input: {
            borderWidth: "1px",
            borderColor: "transparent",
            bg: "bg.muted",
            focusVisibleRing: "inside",
          },
        },
        flushed: {
          input: {
            bg: "transparent",
            borderBottomWidth: "1px",
            borderBottomColor: "border",
            borderRadius: "0",
            px: "0",
            _focusVisible: {
              borderColor: "var(--focus-color)",
              boxShadow: "0px 1px 0px 0px var(--focus-color)",
            },
          },
          indicatorGroup: { px: "0" },
        },
      },
      size: {
        xs: {
          root: {
            "--combobox-input-height": "sizes.8",
            "--combobox-input-padding-x": "spacing.2",
            "--combobox-indicator-size": "sizes.3.5",
          },
          input: { textStyle: "xs" },
          content: {
            "--combobox-item-padding-x": "spacing.1.5",
            "--combobox-item-padding-y": "spacing.1",
            "--combobox-indicator-size": "sizes.3.5",
            p: "1",
            textStyle: "xs",
          },
          trigger: { textStyle: "xs", gap: "1" },
        },
        sm: {
          root: {
            "--combobox-input-height": "sizes.9",
            "--combobox-input-padding-x": "spacing.2.5",
            "--combobox-indicator-size": "sizes.4",
          },
          input: { textStyle: "sm" },
          content: {
            "--combobox-item-padding-x": "spacing.2",
            "--combobox-item-padding-y": "spacing.1.5",
            "--combobox-indicator-size": "sizes.4",
            p: "1",
            textStyle: "sm",
          },
          trigger: { textStyle: "sm", gap: "1" },
        },
        md: {
          root: {
            "--combobox-input-height": "sizes.10",
            "--combobox-input-padding-x": "spacing.3",
            "--combobox-indicator-size": "sizes.4",
          },
          input: { textStyle: "sm" },
          content: {
            "--combobox-item-padding-x": "spacing.2",
            "--combobox-item-padding-y": "spacing.1.5",
            "--combobox-indicator-size": "sizes.4",
            p: "1",
            textStyle: "sm",
          },
          itemIndicator: {
            display: "flex",
            alignItems: "center",
            justifyContent: "center",
          },
          trigger: { textStyle: "sm", gap: "2" },
        },
        lg: {
          root: {
            "--combobox-input-height": "sizes.12",
            "--combobox-input-padding-x": "spacing.4",
            "--combobox-indicator-size": "sizes.5",
          },
          input: { textStyle: "md" },
          content: {
            "--combobox-item-padding-y": "spacing.2",
            "--combobox-item-padding-x": "spacing.3",
            "--combobox-indicator-size": "sizes.5",
            p: "1.5",
            textStyle: "md",
          },
          trigger: { textStyle: "md", py: "3", gap: "2" },
        },
      },
    },
    defaultVariants: { size: "md", variant: "outline" },
  }),
  oD = ie({
    slots: b2.keys(),
    className: "chakra-data-list",
    base: {
      itemLabel: { display: "flex", alignItems: "center", gap: "1" },
      itemValue: { display: "flex", minWidth: "0", flex: "1" },
    },
    variants: {
      orientation: {
        horizontal: {
          root: { display: "flex", flexDirection: "column" },
          item: { display: "inline-flex", alignItems: "center", gap: "4" },
          itemLabel: { minWidth: "120px" },
        },
        vertical: {
          root: { display: "flex", flexDirection: "column" },
          item: { display: "flex", flexDirection: "column", gap: "1" },
        },
      },
      size: {
        sm: { root: { gap: "3" }, item: { textStyle: "xs" } },
        md: { root: { gap: "4" }, item: { textStyle: "sm" } },
        lg: { root: { gap: "5" }, item: { textStyle: "md" } },
      },
      variant: {
        subtle: { itemLabel: { color: "fg.muted" } },
        bold: {
          itemLabel: { fontWeight: "medium" },
          itemValue: { color: "fg.muted" },
        },
      },
    },
    defaultVariants: { size: "md", orientation: "vertical", variant: "subtle" },
  }),
  iD = ie({
    slots: x2.keys(),
    className: "chakra-dialog",
    base: {
      backdrop: {
        bg: "blackAlpha.500",
        pos: "fixed",
        left: 0,
        top: 0,
        w: "100vw",
        h: "100dvh",
        zIndex: "overlay",
        _open: { animationName: "fade-in", animationDuration: "slow" },
        _closed: { animationName: "fade-out", animationDuration: "moderate" },
      },
      positioner: {
        display: "flex",
        width: "100vw",
        height: "100dvh",
        position: "fixed",
        left: 0,
        top: 0,
        "--dialog-z-index": "zIndex.modal",
        zIndex: "calc(var(--dialog-z-index) + var(--layer-index, 0))",
        justifyContent: "center",
        overscrollBehaviorY: "none",
      },
      content: {
        display: "flex",
        flexDirection: "column",
        position: "relative",
        width: "100%",
        outline: 0,
        borderRadius: "l3",
        textStyle: "sm",
        my: "var(--dialog-margin, var(--dialog-base-margin))",
        "--dialog-z-index": "zIndex.modal",
        zIndex: "calc(var(--dialog-z-index) + var(--layer-index, 0))",
        bg: "bg.panel",
        boxShadow: "lg",
        _open: { animationDuration: "moderate" },
        _closed: { animationDuration: "faster" },
      },
      header: { display: "flex", gap: "2", flex: 0, px: "6", pt: "6", pb: "4" },
      body: { flex: "1", px: "6", pt: "2", pb: "6" },
      footer: {
        display: "flex",
        alignItems: "center",
        justifyContent: "flex-end",
        gap: "3",
        px: "6",
        pt: "2",
        pb: "4",
      },
      title: { textStyle: "lg", fontWeight: "semibold" },
      description: { color: "fg.muted" },
      closeTrigger: { pos: "absolute", top: "2", insetEnd: "2" },
    },
    variants: {
      placement: {
        center: {
          positioner: { alignItems: "center" },
          content: { "--dialog-base-margin": "auto", mx: "auto" },
        },
        top: {
          positioner: { alignItems: "flex-start" },
          content: { "--dialog-base-margin": "spacing.16", mx: "auto" },
        },
        bottom: {
          positioner: { alignItems: "flex-end" },
          content: { "--dialog-base-margin": "spacing.16", mx: "auto" },
        },
      },
      scrollBehavior: {
        inside: {
          positioner: { overflow: "hidden" },
          content: { maxH: "calc(100% - 7.5rem)" },
          body: { overflow: "auto" },
        },
        outside: { positioner: { overflow: "auto", pointerEvents: "auto" } },
      },
      size: {
        xs: { content: { maxW: "sm" } },
        sm: { content: { maxW: "md" } },
        md: { content: { maxW: "lg" } },
        lg: { content: { maxW: "2xl" } },
        xl: { content: { maxW: "4xl" } },
        cover: {
          positioner: { padding: "10" },
          content: { width: "100%", height: "100%", "--dialog-margin": "0" },
        },
        full: {
          content: {
            maxW: "100vw",
            minH: "100vh",
            "--dialog-margin": "0",
            borderRadius: "0",
          },
        },
      },
      motionPreset: {
        scale: {
          content: {
            _open: { animationName: "scale-in, fade-in" },
            _closed: { animationName: "scale-out, fade-out" },
          },
        },
        "slide-in-bottom": {
          content: {
            _open: { animationName: "slide-from-bottom, fade-in" },
            _closed: { animationName: "slide-to-bottom, fade-out" },
          },
        },
        "slide-in-top": {
          content: {
            _open: { animationName: "slide-from-top, fade-in" },
            _closed: { animationName: "slide-to-top, fade-out" },
          },
        },
        "slide-in-left": {
          content: {
            _open: { animationName: "slide-from-left, fade-in" },
            _closed: { animationName: "slide-to-left, fade-out" },
          },
        },
        "slide-in-right": {
          content: {
            _open: { animationName: "slide-from-right, fade-in" },
            _closed: { animationName: "slide-to-right, fade-out" },
          },
        },
        none: {},
      },
    },
    defaultVariants: {
      size: "md",
      scrollBehavior: "outside",
      placement: "top",
      motionPreset: "scale",
    },
  }),
  sD = ie({
    slots: S2.keys(),
    className: "chakra-drawer",
    base: {
      backdrop: {
        bg: "blackAlpha.500",
        pos: "fixed",
        insetInlineStart: 0,
        top: 0,
        w: "100vw",
        h: "100dvh",
        zIndex: "overlay",
        _open: { animationName: "fade-in", animationDuration: "slow" },
        _closed: { animationName: "fade-out", animationDuration: "moderate" },
      },
      positioner: {
        display: "flex",
        width: "100vw",
        height: "100dvh",
        position: "fixed",
        insetInlineStart: 0,
        top: 0,
        zIndex: "modal",
        overscrollBehaviorY: "none",
      },
      content: {
        display: "flex",
        flexDirection: "column",
        position: "relative",
        width: "100%",
        outline: 0,
        zIndex: "modal",
        textStyle: "sm",
        maxH: "100dvh",
        color: "inherit",
        bg: "bg.panel",
        boxShadow: "lg",
        _open: {
          animationDuration: "slowest",
          animationTimingFunction: "ease-in-smooth",
        },
        _closed: {
          animationDuration: "slower",
          animationTimingFunction: "ease-in-smooth",
        },
      },
      header: {
        display: "flex",
        alignItems: "center",
        gap: "2",
        flex: 0,
        px: "6",
        pt: "6",
        pb: "4",
      },
      body: { px: "6", py: "2", flex: "1", overflow: "auto" },
      footer: {
        display: "flex",
        alignItems: "center",
        justifyContent: "flex-end",
        gap: "3",
        px: "6",
        pt: "2",
        pb: "4",
      },
      title: { flex: "1", textStyle: "lg", fontWeight: "semibold" },
      description: { color: "fg.muted" },
      closeTrigger: { pos: "absolute", top: "3", insetEnd: "2" },
    },
    variants: {
      size: {
        xs: { content: { maxW: "xs" } },
        sm: { content: { maxW: "md" } },
        md: { content: { maxW: "lg" } },
        lg: { content: { maxW: "2xl" } },
        xl: { content: { maxW: "4xl" } },
        full: { content: { maxW: "100vw", h: "100dvh" } },
      },
      placement: {
        start: {
          positioner: { justifyContent: "flex-start", alignItems: "stretch" },
          content: {
            _open: {
              animationName: {
                base: "slide-from-left-full, fade-in",
                _rtl: "slide-from-right-full, fade-in",
              },
            },
            _closed: {
              animationName: {
                base: "slide-to-left-full, fade-out",
                _rtl: "slide-to-right-full, fade-out",
              },
            },
          },
        },
        end: {
          positioner: { justifyContent: "flex-end", alignItems: "stretch" },
          content: {
            _open: {
              animationName: {
                base: "slide-from-right-full, fade-in",
                _rtl: "slide-from-left-full, fade-in",
              },
            },
            _closed: {
              animationName: {
                base: "slide-to-right-full, fade-out",
                _rtl: "slide-to-left-full, fade-out",
              },
            },
          },
        },
        top: {
          positioner: { justifyContent: "stretch", alignItems: "flex-start" },
          content: {
            maxW: "100%",
            _open: { animationName: "slide-from-top-full, fade-in" },
            _closed: { animationName: "slide-to-top-full, fade-out" },
          },
        },
        bottom: {
          positioner: { justifyContent: "stretch", alignItems: "flex-end" },
          content: {
            maxW: "100%",
            _open: { animationName: "slide-from-bottom-full, fade-in" },
            _closed: { animationName: "slide-to-bottom-full, fade-out" },
          },
        },
      },
      contained: {
        true: { positioner: { padding: "4" }, content: { borderRadius: "l3" } },
      },
    },
    defaultVariants: { size: "xs", placement: "end" },
  }),
  Xp = pi({
    fontSize: "inherit",
    fontWeight: "inherit",
    textAlign: "inherit",
    bg: "transparent",
    borderRadius: "l2",
  }),
  aD = ie({
    slots: w2.keys(),
    className: "chakra-editable",
    base: {
      root: {
        display: "inline-flex",
        alignItems: "center",
        position: "relative",
        gap: "1.5",
        width: "full",
      },
      preview: {
        ...Xp,
        py: "1",
        px: "1",
        display: "inline-flex",
        alignItems: "center",
        transitionProperty: "common",
        transitionDuration: "normal",
        cursor: "text",
        _hover: { bg: "bg.muted" },
        _disabled: { userSelect: "none" },
      },
      input: {
        ...Xp,
        outline: "0",
        py: "1",
        px: "1",
        transitionProperty: "common",
        transitionDuration: "normal",
        width: "full",
        focusVisibleRing: "inside",
        focusRingWidth: "2px",
        _placeholder: { opacity: 0.6 },
      },
      control: { display: "inline-flex", alignItems: "center", gap: "1.5" },
    },
    variants: {
      size: {
        sm: {
          root: { textStyle: "sm" },
          preview: { minH: "8" },
          input: { minH: "8" },
        },
        md: {
          root: { textStyle: "sm" },
          preview: { minH: "9" },
          input: { minH: "9" },
        },
        lg: {
          root: { textStyle: "md" },
          preview: { minH: "10" },
          input: { minH: "10" },
        },
      },
    },
    defaultVariants: { size: "md" },
  }),
  lD = ie({
    slots: C2.keys(),
    className: "chakra-empty-state",
    base: {
      root: { width: "full" },
      content: {
        display: "flex",
        flexDirection: "column",
        alignItems: "center",
        justifyContent: "center",
      },
      indicator: {
        display: "flex",
        alignItems: "center",
        justifyContent: "center",
        color: "fg.subtle",
        _icon: { boxSize: "1em" },
      },
      title: { fontWeight: "semibold" },
      description: { textStyle: "sm", color: "fg.muted" },
    },
    variants: {
      size: {
        sm: {
          root: { px: "4", py: "6" },
          title: { textStyle: "md" },
          content: { gap: "4" },
          indicator: { textStyle: "2xl" },
        },
        md: {
          root: { px: "8", py: "12" },
          title: { textStyle: "lg" },
          content: { gap: "6" },
          indicator: { textStyle: "4xl" },
        },
        lg: {
          root: { px: "12", py: "16" },
          title: { textStyle: "xl" },
          content: { gap: "8" },
          indicator: { textStyle: "6xl" },
        },
      },
    },
    defaultVariants: { size: "md" },
  }),
  cD = ie({
    className: "chakra-field",
    slots: E2.keys(),
    base: {
      requiredIndicator: { color: "fg.error", lineHeight: "1" },
      root: {
        display: "flex",
        width: "100%",
        position: "relative",
        gap: "1.5",
      },
      label: {
        display: "flex",
        alignItems: "center",
        textAlign: "start",
        textStyle: "sm",
        fontWeight: "medium",
        gap: "1",
        userSelect: "none",
        _disabled: { opacity: "0.5" },
      },
      errorText: {
        display: "inline-flex",
        alignItems: "center",
        fontWeight: "medium",
        gap: "1",
        color: "fg.error",
        textStyle: "xs",
      },
      helperText: { color: "fg.muted", textStyle: "xs" },
    },
    variants: {
      orientation: {
        vertical: {
          root: { flexDirection: "column", alignItems: "flex-start" },
        },
        horizontal: {
          root: {
            flexDirection: "row",
            alignItems: "center",
            justifyContent: "space-between",
          },
          label: { flex: "0 0 var(--field-label-width, 80px)" },
        },
      },
    },
    defaultVariants: { orientation: "vertical" },
  }),
  uD = ie({
    className: "fieldset",
    slots: I2.keys(),
    base: {
      root: { display: "flex", flexDirection: "column", width: "full" },
      content: { display: "flex", flexDirection: "column", width: "full" },
      legend: {
        color: "fg",
        fontWeight: "medium",
        _disabled: { opacity: "0.5" },
      },
      helperText: { color: "fg.muted", textStyle: "sm" },
      errorText: {
        display: "inline-flex",
        alignItems: "center",
        color: "fg.error",
        gap: "2",
        fontWeight: "medium",
        textStyle: "sm",
      },
    },
    variants: {
      size: {
        sm: {
          root: { spaceY: "2" },
          content: { gap: "1.5" },
          legend: { textStyle: "sm" },
        },
        md: {
          root: { spaceY: "4" },
          content: { gap: "4" },
          legend: { textStyle: "sm" },
        },
        lg: {
          root: { spaceY: "6" },
          content: { gap: "4" },
          legend: { textStyle: "md" },
        },
      },
    },
    defaultVariants: { size: "md" },
  }),
  dD = ie({
    className: "chakra-file-upload",
    slots: R2.keys(),
    base: {
      root: {
        display: "flex",
        flexDirection: "column",
        gap: "4",
        width: "100%",
        alignItems: "flex-start",
      },
      label: { fontWeight: "medium", textStyle: "sm" },
      dropzone: {
        background: "bg",
        borderRadius: "l3",
        borderWidth: "2px",
        borderStyle: "dashed",
        display: "flex",
        alignItems: "center",
        flexDirection: "column",
        gap: "4",
        justifyContent: "center",
        minHeight: "2xs",
        px: "3",
        py: "2",
        transition: "backgrounds",
        focusVisibleRing: "outside",
        _hover: { bg: "bg.subtle" },
        _dragging: {
          bg: "colorPalette.subtle",
          borderStyle: "solid",
          borderColor: "colorPalette.solid",
        },
      },
      dropzoneContent: {
        display: "flex",
        flexDirection: "column",
        alignItems: "center",
        textAlign: "center",
        gap: "1",
        textStyle: "sm",
      },
      item: {
        pos: "relative",
        textStyle: "sm",
        animationName: "fade-in",
        animationDuration: "moderate",
        background: "bg",
        borderRadius: "l2",
        borderWidth: "1px",
        width: "100%",
        display: "flex",
        alignItems: "center",
        gap: "3",
        p: "4",
      },
      itemGroup: {
        width: "100%",
        display: "flex",
        flexDirection: "column",
        gap: "3",
        _empty: { display: "none" },
      },
      itemName: { color: "fg", fontWeight: "medium", lineClamp: "1" },
      itemContent: {
        display: "flex",
        flexDirection: "column",
        gap: "0.5",
        flex: "1",
      },
      itemSizeText: { color: "fg.muted", textStyle: "xs" },
      itemDeleteTrigger: {
        display: "flex",
        alignItems: "center",
        justifyContent: "center",
        alignSelf: "flex-start",
        boxSize: "5",
        p: "2px",
        color: "fg.muted",
        cursor: "button",
      },
      itemPreview: { color: "fg.muted", _icon: { boxSize: "4.5" } },
    },
    defaultVariants: {},
  }),
  fD = ie({
    className: "chakra-hover-card",
    slots: qb.keys(),
    base: {
      content: {
        position: "relative",
        display: "flex",
        flexDirection: "column",
        textStyle: "sm",
        "--hovercard-bg": "colors.bg.panel",
        bg: "var(--hovercard-bg)",
        boxShadow: "lg",
        maxWidth: "80",
        borderRadius: "l3",
        zIndex: "popover",
        transformOrigin: "var(--transform-origin)",
        outline: "0",
        _open: { animationStyle: "slide-fade-in", animationDuration: "fast" },
        _closed: {
          animationStyle: "slide-fade-out",
          animationDuration: "faster",
        },
      },
      arrow: {
        "--arrow-size": "sizes.3",
        "--arrow-background": "var(--hovercard-bg)",
      },
      arrowTip: { borderTopWidth: "0.5px", borderInlineStartWidth: "0.5px" },
    },
    variants: {
      size: {
        xs: { content: { padding: "3" } },
        sm: { content: { padding: "4" } },
        md: { content: { padding: "5" } },
        lg: { content: { padding: "6" } },
      },
    },
    defaultVariants: { size: "md" },
  }),
  gD = ie({
    className: "chakra-list",
    slots: k2.keys(),
    base: {
      root: {
        display: "flex",
        flexDirection: "column",
        gap: "var(--list-gap)",
        "& :where(ul, ol)": { marginTop: "var(--list-gap)" },
      },
      item: { whiteSpace: "normal", display: "list-item" },
      indicator: {
        marginEnd: "2",
        minHeight: "1lh",
        flexShrink: 0,
        display: "inline-block",
        verticalAlign: "middle",
      },
    },
    variants: {
      variant: {
        marker: {
          root: { listStyle: "revert" },
          item: { _marker: { color: "fg.subtle" } },
        },
        plain: { item: { alignItems: "flex-start", display: "inline-flex" } },
      },
      align: {
        center: { item: { alignItems: "center" } },
        start: { item: { alignItems: "flex-start" } },
        end: { item: { alignItems: "flex-end" } },
      },
    },
    defaultVariants: { variant: "marker" },
  }),
  hD = ie({
    className: "chakra-menu",
    slots: P2.keys(),
    base: {
      content: {
        outline: 0,
        bg: "bg.panel",
        boxShadow: "lg",
        color: "fg",
        maxHeight: "var(--available-height)",
        "--menu-z-index": "zIndex.dropdown",
        zIndex: "calc(var(--menu-z-index) + var(--layer-index, 0))",
        borderRadius: "l2",
        overflow: "hidden",
        overflowY: "auto",
        _open: { animationStyle: "slide-fade-in", animationDuration: "fast" },
        _closed: {
          animationStyle: "slide-fade-out",
          animationDuration: "faster",
        },
      },
      item: {
        textDecoration: "none",
        color: "fg",
        userSelect: "none",
        borderRadius: "l1",
        width: "100%",
        display: "flex",
        cursor: "menuitem",
        alignItems: "center",
        textAlign: "start",
        position: "relative",
        flex: "0 0 auto",
        outline: 0,
        _disabled: { layerStyle: "disabled" },
        "&[data-type]": { ps: "8" },
      },
      itemText: { flex: "1" },
      itemIndicator: {
        position: "absolute",
        insetStart: "2",
        transform: "translateY(-50%)",
        top: "50%",
      },
      itemGroupLabel: {
        px: "2",
        py: "1.5",
        fontWeight: "semibold",
        textStyle: "sm",
      },
      indicator: {
        display: "inline-flex",
        alignItems: "center",
        justifyContent: "center",
        flexShrink: "0",
      },
      itemCommand: {
        opacity: "0.6",
        textStyle: "xs",
        ms: "auto",
        ps: "4",
        letterSpacing: "widest",
        fontFamily: "inherit",
      },
      separator: { height: "1px", bg: "bg.muted", my: "1", mx: "-1" },
    },
    variants: {
      variant: {
        subtle: { item: { _highlighted: { bg: "bg.emphasized/60" } } },
        solid: {
          item: {
            _highlighted: {
              bg: "colorPalette.solid",
              color: "colorPalette.contrast",
            },
          },
        },
      },
      size: {
        sm: {
          content: { minW: "8rem", padding: "1" },
          item: { gap: "1", textStyle: "xs", py: "1", px: "1.5" },
        },
        md: {
          content: { minW: "8rem", padding: "1.5" },
          item: { gap: "2", textStyle: "sm", py: "1.5", px: "2" },
        },
      },
    },
    defaultVariants: { size: "md", variant: "subtle" },
  }),
  Sa = ie({
    className: "chakra-select",
    slots: N2.keys(),
    base: {
      root: {
        display: "flex",
        flexDirection: "column",
        gap: "1.5",
        width: "full",
      },
      trigger: {
        display: "flex",
        alignItems: "center",
        justifyContent: "space-between",
        width: "full",
        minH: "var(--select-trigger-height)",
        "--input-height": "var(--select-trigger-height)",
        px: "var(--select-trigger-padding-x)",
        borderRadius: "l2",
        userSelect: "none",
        textAlign: "start",
        focusVisibleRing: "inside",
        _placeholderShown: { color: "fg.muted/80" },
        _disabled: { layerStyle: "disabled" },
        _invalid: { borderColor: "border.error" },
      },
      indicatorGroup: {
        display: "flex",
        alignItems: "center",
        gap: "1",
        pos: "absolute",
        insetEnd: "0",
        top: "0",
        bottom: "0",
        px: "var(--select-trigger-padding-x)",
        pointerEvents: "none",
      },
      indicator: {
        display: "flex",
        alignItems: "center",
        justifyContent: "center",
        color: {
          base: "fg.muted",
          _disabled: "fg.subtle",
          _invalid: "fg.error",
        },
      },
      content: {
        background: "bg.panel",
        display: "flex",
        flexDirection: "column",
        zIndex: "dropdown",
        borderRadius: "l2",
        outline: 0,
        maxH: "96",
        overflowY: "auto",
        boxShadow: "md",
        _open: { animationStyle: "slide-fade-in", animationDuration: "fast" },
        _closed: {
          animationStyle: "slide-fade-out",
          animationDuration: "fastest",
        },
      },
      item: {
        position: "relative",
        userSelect: "none",
        display: "flex",
        alignItems: "center",
        gap: "2",
        cursor: "option",
        justifyContent: "space-between",
        flex: "1",
        textAlign: "start",
        borderRadius: "l1",
        _highlighted: { bg: "bg.emphasized/60" },
        _disabled: { pointerEvents: "none", opacity: "0.5" },
        _icon: { width: "4", height: "4" },
      },
      control: { pos: "relative" },
      itemText: { flex: "1" },
      itemGroup: { _first: { mt: "0" } },
      itemGroupLabel: { py: "1", fontWeight: "medium" },
      label: {
        fontWeight: "medium",
        userSelect: "none",
        textStyle: "sm",
        _disabled: { layerStyle: "disabled" },
      },
      valueText: { lineClamp: "1", maxW: "80%" },
      clearTrigger: {
        color: "fg.muted",
        pointerEvents: "auto",
        focusVisibleRing: "inside",
        focusRingWidth: "2px",
        rounded: "l1",
      },
    },
    variants: {
      variant: {
        outline: {
          trigger: {
            bg: "transparent",
            borderWidth: "1px",
            borderColor: "border",
            _expanded: { borderColor: "border.emphasized" },
          },
        },
        subtle: {
          trigger: {
            borderWidth: "1px",
            borderColor: "transparent",
            bg: "bg.muted",
          },
        },
      },
      size: {
        xs: {
          root: {
            "--select-trigger-height": "sizes.8",
            "--select-trigger-padding-x": "spacing.2",
          },
          content: { p: "1", gap: "1", textStyle: "xs" },
          trigger: { textStyle: "xs", gap: "1" },
          item: { py: "1", px: "2" },
          itemGroupLabel: { py: "1", px: "2" },
          indicator: { _icon: { width: "3.5", height: "3.5" } },
        },
        sm: {
          root: {
            "--select-trigger-height": "sizes.9",
            "--select-trigger-padding-x": "spacing.2.5",
          },
          content: { p: "1", textStyle: "sm" },
          trigger: { textStyle: "sm", gap: "1" },
          indicator: { _icon: { width: "4", height: "4" } },
          item: { py: "1", px: "1.5" },
          itemGroup: { mt: "1" },
          itemGroupLabel: { py: "1", px: "1.5" },
        },
        md: {
          root: {
            "--select-trigger-height": "sizes.10",
            "--select-trigger-padding-x": "spacing.3",
          },
          content: { p: "1", textStyle: "sm" },
          itemGroup: { mt: "1.5" },
          item: { py: "1.5", px: "2" },
          itemIndicator: {
            display: "flex",
            alignItems: "center",
            justifyContent: "center",
          },
          itemGroupLabel: { py: "1.5", px: "2" },
          trigger: { textStyle: "sm", gap: "2" },
          indicator: { _icon: { width: "4", height: "4" } },
        },
        lg: {
          root: {
            "--select-trigger-height": "sizes.12",
            "--select-trigger-padding-x": "spacing.4",
          },
          content: { p: "1.5", textStyle: "md" },
          itemGroup: { mt: "2" },
          item: { py: "2", px: "3" },
          itemGroupLabel: { py: "2", px: "3" },
          trigger: { textStyle: "md", py: "3", gap: "2" },
          indicator: { _icon: { width: "5", height: "5" } },
        },
      },
    },
    defaultVariants: { size: "md", variant: "outline" },
  });
var Yv, Xv;
const pD = ie({
  className: "chakra-native-select",
  slots: T2.keys(),
  base: {
    root: {
      height: "fit-content",
      display: "flex",
      width: "100%",
      position: "relative",
    },
    field: {
      width: "100%",
      minWidth: "0",
      outline: "0",
      appearance: "none",
      borderRadius: "l2",
      "--error-color": "colors.border.error",
      _disabled: { layerStyle: "disabled" },
      _invalid: {
        focusRingColor: "var(--error-color)",
        borderColor: "var(--error-color)",
      },
      focusVisibleRing: "inside",
      lineHeight: "normal",
      "& > option, & > optgroup": { bg: "bg" },
    },
    indicator: {
      position: "absolute",
      display: "inline-flex",
      alignItems: "center",
      justifyContent: "center",
      pointerEvents: "none",
      top: "50%",
      transform: "translateY(-50%)",
      height: "100%",
      color: "fg.muted",
      _disabled: { opacity: "0.5" },
      _invalid: { color: "fg.error" },
      _icon: { width: "1em", height: "1em" },
    },
  },
  variants: {
    variant: {
      outline: {
        field: (Yv = Sa.variants) == null ? void 0 : Yv.variant.outline.trigger,
      },
      subtle: {
        field: (Xv = Sa.variants) == null ? void 0 : Xv.variant.subtle.trigger,
      },
      plain: {
        field: { bg: "transparent", color: "fg", focusRingWidth: "2px" },
      },
    },
    size: {
      xs: {
        field: { textStyle: "xs", ps: "2", pe: "6", height: "6" },
        indicator: { textStyle: "sm", insetEnd: "1.5" },
      },
      sm: {
        field: { textStyle: "sm", ps: "2.5", pe: "8", height: "8" },
        indicator: { textStyle: "md", insetEnd: "2" },
      },
      md: {
        field: { textStyle: "sm", ps: "3", pe: "8", height: "10" },
        indicator: { textStyle: "lg", insetEnd: "2" },
      },
      lg: {
        field: { textStyle: "md", ps: "4", pe: "8", height: "11" },
        indicator: { textStyle: "xl", insetEnd: "3" },
      },
      xl: {
        field: { textStyle: "md", ps: "4.5", pe: "10", height: "12" },
        indicator: { textStyle: "xl", insetEnd: "3" },
      },
    },
  },
  defaultVariants: Sa.defaultVariants,
});
function Hu(e, t) {
  const n = {};
  for (const r in e) {
    const o = t(r, e[r]);
    n[o[0]] = o[1];
  }
  return n;
}
const Jp = pi({
    display: "flex",
    justifyContent: "center",
    alignItems: "center",
    flex: "1",
    userSelect: "none",
    cursor: "button",
    lineHeight: "1",
    color: "fg.muted",
    "--stepper-base-radius": "radii.l1",
    "--stepper-radius": "calc(var(--stepper-base-radius) + 1px)",
    _icon: { boxSize: "1em" },
    _disabled: { opacity: "0.5" },
    _hover: { bg: "bg.muted" },
    _active: { bg: "bg.emphasized" },
  }),
  mD = ie({
    className: "chakra-number-input",
    slots: ex.keys(),
    base: {
      root: { position: "relative", zIndex: "0", isolation: "isolate" },
      input: {
        ...qe.base,
        verticalAlign: "top",
        pe: "calc(var(--stepper-width) + 0.5rem)",
      },
      control: {
        display: "flex",
        flexDirection: "column",
        position: "absolute",
        top: "0",
        insetEnd: "0px",
        margin: "1px",
        width: "var(--stepper-width)",
        height: "calc(100% - 2px)",
        zIndex: "1",
        borderStartWidth: "1px",
        divideY: "1px",
      },
      incrementTrigger: { ...Jp, borderTopEndRadius: "var(--stepper-radius)" },
      decrementTrigger: {
        ...Jp,
        borderBottomEndRadius: "var(--stepper-radius)",
      },
      valueText: {
        fontWeight: "medium",
        fontFeatureSettings: "pnum",
        fontVariantNumeric: "proportional-nums",
      },
    },
    variants: {
      size: {
        xs: {
          input: qe.variants.size.xs,
          control: { fontSize: "2xs", "--stepper-width": "sizes.4" },
        },
        sm: {
          input: qe.variants.size.sm,
          control: { fontSize: "xs", "--stepper-width": "sizes.5" },
        },
        md: {
          input: qe.variants.size.md,
          control: { fontSize: "sm", "--stepper-width": "sizes.6" },
        },
        lg: {
          input: qe.variants.size.lg,
          control: { fontSize: "sm", "--stepper-width": "sizes.6" },
        },
      },
      variant: Hu(qe.variants.variant, (e, t) => [e, { input: t }]),
    },
    defaultVariants: { size: "md", variant: "outline" },
  }),
  { variants: Qp, defaultVariants: vD } = qe,
  yD = ie({
    className: "chakra-pin-input",
    slots: rx.keys(),
    base: {
      input: { ...qe.base, textAlign: "center", width: "var(--input-height)" },
      control: { display: "inline-flex", gap: "2", isolation: "isolate" },
    },
    variants: {
      size: Hu(Qp.size, (e, t) => [e, { input: { ...t, px: "1" } }]),
      variant: Hu(Qp.variant, (e, t) => [e, { input: t }]),
      attached: {
        true: {
          control: { gap: "0", spaceX: "-1px" },
          input: {
            _notFirst: { borderStartRadius: "0" },
            _notLast: { borderEndRadius: "0" },
            _focusVisible: { zIndex: "1" },
          },
        },
      },
    },
    defaultVariants: vD,
  }),
  bD = ie({
    className: "chakra-popover",
    slots: O2.keys(),
    base: {
      content: {
        position: "relative",
        display: "flex",
        flexDirection: "column",
        textStyle: "sm",
        "--popover-bg": "colors.bg.panel",
        bg: "var(--popover-bg)",
        boxShadow: "lg",
        "--popover-size": "sizes.xs",
        "--popover-mobile-size": "calc(100dvw - 1rem)",
        width: {
          base: "min(var(--popover-mobile-size), var(--popover-size))",
          sm: "var(--popover-size)",
        },
        borderRadius: "l3",
        "--popover-z-index": "zIndex.popover",
        zIndex: "calc(var(--popover-z-index) + var(--layer-index, 0))",
        outline: "0",
        transformOrigin: "var(--transform-origin)",
        maxHeight: "var(--available-height)",
        _open: { animationStyle: "scale-fade-in", animationDuration: "fast" },
        _closed: {
          animationStyle: "scale-fade-out",
          animationDuration: "faster",
        },
      },
      header: {
        paddingInline: "var(--popover-padding)",
        paddingTop: "var(--popover-padding)",
      },
      body: { padding: "var(--popover-padding)", flex: "1" },
      footer: {
        display: "flex",
        alignItems: "center",
        paddingInline: "var(--popover-padding)",
        paddingBottom: "var(--popover-padding)",
      },
      arrow: {
        "--arrow-size": "sizes.3",
        "--arrow-background": "var(--popover-bg)",
      },
      arrowTip: { borderTopWidth: "1px", borderInlineStartWidth: "1px" },
    },
    variants: {
      size: {
        xs: { content: { "--popover-padding": "spacing.3" } },
        sm: { content: { "--popover-padding": "spacing.4" } },
        md: { content: { "--popover-padding": "spacing.5" } },
        lg: { content: { "--popover-padding": "spacing.6" } },
      },
    },
    defaultVariants: { size: "md" },
  }),
  xD = ie({
    slots: bf.keys(),
    className: "chakra-progress",
    base: {
      root: { textStyle: "sm", position: "relative" },
      track: { overflow: "hidden", position: "relative" },
      range: {
        display: "flex",
        alignItems: "center",
        justifyContent: "center",
        transitionProperty: "width, height",
        transitionDuration: "slow",
        height: "100%",
        bgColor: "var(--track-color)",
        _indeterminate: {
          "--animate-from-x": "-40%",
          "--animate-to-x": "100%",
          position: "absolute",
          willChange: "left",
          minWidth: "50%",
          animation: "position 1s ease infinite normal none running",
          backgroundImage:
            "linear-gradient(to right, transparent 0%, var(--track-color) 50%, transparent 100%)",
        },
      },
      label: {
        display: "inline-flex",
        fontWeight: "medium",
        alignItems: "center",
        gap: "1",
      },
      valueText: { textStyle: "xs", lineHeight: "1", fontWeight: "medium" },
    },
    variants: {
      variant: {
        outline: {
          track: { shadow: "inset", bgColor: "bg.muted" },
          range: { bgColor: "colorPalette.solid" },
        },
        subtle: {
          track: { bgColor: "colorPalette.muted" },
          range: { bgColor: "colorPalette.solid/72" },
        },
      },
      shape: {
        square: {},
        rounded: { track: { borderRadius: "l1" } },
        full: { track: { borderRadius: "full" } },
      },
      striped: {
        true: {
          range: {
            backgroundImage:
              "linear-gradient(45deg, var(--stripe-color) 25%, transparent 25%, transparent 50%, var(--stripe-color) 50%, var(--stripe-color) 75%, transparent 75%, transparent)",
            backgroundSize: "var(--stripe-size) var(--stripe-size)",
            "--stripe-size": "1rem",
            "--stripe-color": {
              _light: "rgba(255, 255, 255, 0.3)",
              _dark: "rgba(0, 0, 0, 0.3)",
            },
          },
        },
      },
      animated: {
        true: {
          range: {
            "--animate-from": "var(--stripe-size)",
            animation: "bg-position 1s linear infinite",
          },
        },
      },
      size: {
        xs: { track: { h: "1.5" } },
        sm: { track: { h: "2" } },
        md: { track: { h: "2.5" } },
        lg: { track: { h: "3" } },
        xl: { track: { h: "4" } },
      },
    },
    defaultVariants: { variant: "outline", size: "md", shape: "rounded" },
  }),
  SD = ie({
    className: "chakra-progress-circle",
    slots: bf.keys(),
    base: {
      root: { display: "inline-flex", textStyle: "sm", position: "relative" },
      circle: { _indeterminate: { animation: "spin 2s linear infinite" } },
      circleTrack: {
        "--track-color": "colors.colorPalette.muted",
        stroke: "var(--track-color)",
      },
      circleRange: {
        stroke: "colorPalette.solid",
        transitionProperty: "stroke-dashoffset, stroke-dasharray",
        transitionDuration: "0.6s",
        _indeterminate: { animation: "circular-progress 1.5s linear infinite" },
      },
      label: { display: "inline-flex" },
      valueText: {
        lineHeight: "1",
        fontWeight: "medium",
        letterSpacing: "tight",
        fontVariantNumeric: "tabular-nums",
      },
    },
    variants: {
      size: {
        xs: {
          circle: { "--size": "24px", "--thickness": "4px" },
          valueText: { textStyle: "2xs" },
        },
        sm: {
          circle: { "--size": "32px", "--thickness": "5px" },
          valueText: { textStyle: "2xs" },
        },
        md: {
          circle: { "--size": "40px", "--thickness": "6px" },
          valueText: { textStyle: "xs" },
        },
        lg: {
          circle: { "--size": "48px", "--thickness": "7px" },
          valueText: { textStyle: "sm" },
        },
        xl: {
          circle: { "--size": "64px", "--thickness": "8px" },
          valueText: { textStyle: "sm" },
        },
      },
    },
    defaultVariants: { size: "md" },
  }),
  wD = ie({
    slots: ix.keys(),
    className: "chakra-qr-code",
    base: {
      root: {
        position: "relative",
        width: "fit-content",
        "--qr-code-overlay-size": "calc(var(--qr-code-size) / 3)",
      },
      frame: {
        width: "var(--qr-code-size)",
        height: "var(--qr-code-size)",
        fill: "currentColor",
      },
      overlay: {
        display: "flex",
        alignItems: "center",
        justifyContent: "center",
        width: "var(--qr-code-overlay-size)",
        height: "var(--qr-code-overlay-size)",
        padding: "1",
        bg: "bg",
        rounded: "l1",
      },
    },
    variants: {
      size: {
        "2xs": { root: { "--qr-code-size": "40px" } },
        xs: { root: { "--qr-code-size": "64px" } },
        sm: { root: { "--qr-code-size": "80px" } },
        md: { root: { "--qr-code-size": "120px" } },
        lg: { root: { "--qr-code-size": "160px" } },
        xl: { root: { "--qr-code-size": "200px" } },
        "2xl": { root: { "--qr-code-size": "240px" } },
        full: { root: { "--qr-code-size": "100%" } },
      },
    },
    defaultVariants: { size: "md" },
  });
var Jv, Qv, Zv, ey, ty, ny, ry;
const CD = ie({
  className: "chakra-radio-card",
  slots: _2.keys(),
  base: {
    root: {
      display: "flex",
      flexDirection: "column",
      gap: "1.5",
      isolation: "isolate",
    },
    item: {
      flex: "1",
      display: "flex",
      flexDirection: "column",
      userSelect: "none",
      position: "relative",
      borderRadius: "l2",
      _focus: { bg: "colorPalette.muted/20" },
      _disabled: { opacity: "0.8", borderColor: "border.disabled" },
      _checked: { zIndex: "1" },
    },
    label: {
      display: "inline-flex",
      fontWeight: "medium",
      textStyle: "sm",
      _disabled: { opacity: "0.5" },
    },
    itemText: { fontWeight: "medium", flex: "1" },
    itemDescription: { opacity: "0.64", textStyle: "sm" },
    itemControl: {
      display: "inline-flex",
      flex: "1",
      pos: "relative",
      rounded: "inherit",
      justifyContent: "var(--radio-card-justify)",
      alignItems: "var(--radio-card-align)",
      _disabled: { bg: "bg.muted" },
    },
    itemIndicator: pt.base,
    itemAddon: { roundedBottom: "inherit", _disabled: { color: "fg.muted" } },
    itemContent: {
      display: "flex",
      flexDirection: "column",
      flex: "1",
      gap: "1",
      justifyContent: "var(--radio-card-justify)",
      alignItems: "var(--radio-card-align)",
    },
  },
  variants: {
    size: {
      sm: {
        item: { textStyle: "sm" },
        itemControl: { padding: "3", gap: "1.5" },
        itemAddon: { px: "3", py: "1.5", borderTopWidth: "1px" },
        itemIndicator: (Jv = pt.variants) == null ? void 0 : Jv.size.sm,
      },
      md: {
        item: { textStyle: "sm" },
        itemControl: { padding: "4", gap: "2.5" },
        itemAddon: { px: "4", py: "2", borderTopWidth: "1px" },
        itemIndicator: (Qv = pt.variants) == null ? void 0 : Qv.size.md,
      },
      lg: {
        item: { textStyle: "md" },
        itemControl: { padding: "4", gap: "3.5" },
        itemAddon: { px: "4", py: "2", borderTopWidth: "1px" },
        itemIndicator: (Zv = pt.variants) == null ? void 0 : Zv.size.lg,
      },
    },
    variant: {
      surface: {
        item: {
          borderWidth: "1px",
          _checked: {
            bg: "colorPalette.subtle",
            color: "colorPalette.fg",
            borderColor: "colorPalette.muted",
          },
        },
        itemIndicator: (ey = pt.variants) == null ? void 0 : ey.variant.solid,
      },
      subtle: {
        item: { bg: "bg.muted" },
        itemControl: {
          _checked: { bg: "colorPalette.muted", color: "colorPalette.fg" },
        },
        itemIndicator: (ty = pt.variants) == null ? void 0 : ty.variant.outline,
      },
      outline: {
        item: {
          borderWidth: "1px",
          _checked: {
            boxShadow: "0 0 0 1px var(--shadow-color)",
            boxShadowColor: "colorPalette.solid",
            borderColor: "colorPalette.solid",
          },
        },
        itemIndicator: (ny = pt.variants) == null ? void 0 : ny.variant.solid,
      },
      solid: {
        item: {
          borderWidth: "1px",
          _checked: {
            bg: "colorPalette.solid",
            color: "colorPalette.contrast",
            borderColor: "colorPalette.solid",
          },
        },
        itemIndicator:
          (ry = pt.variants) == null ? void 0 : ry.variant.inverted,
      },
    },
    justify: {
      start: { item: { "--radio-card-justify": "flex-start" } },
      end: { item: { "--radio-card-justify": "flex-end" } },
      center: { item: { "--radio-card-justify": "center" } },
    },
    align: {
      start: {
        item: { "--radio-card-align": "flex-start" },
        itemControl: { textAlign: "start" },
      },
      end: {
        item: { "--radio-card-align": "flex-end" },
        itemControl: { textAlign: "end" },
      },
      center: {
        item: { "--radio-card-align": "center" },
        itemControl: { textAlign: "center" },
      },
    },
    orientation: {
      vertical: { itemControl: { flexDirection: "column" } },
      horizontal: { itemControl: { flexDirection: "row" } },
    },
  },
  defaultVariants: {
    size: "md",
    variant: "outline",
    align: "start",
    orientation: "horizontal",
  },
});
var oy, iy, sy, ay, ly, cy, uy, dy, fy, gy, hy, py, my, vy;
const ED = ie({
    className: "chakra-radio-group",
    slots: Ux.keys(),
    base: {
      item: {
        display: "inline-flex",
        alignItems: "center",
        position: "relative",
        fontWeight: "medium",
        _disabled: { cursor: "disabled" },
      },
      itemControl: pt.base,
      label: {
        userSelect: "none",
        textStyle: "sm",
        _disabled: { opacity: "0.5" },
      },
    },
    variants: {
      variant: {
        outline: {
          itemControl:
            (iy = (oy = pt.variants) == null ? void 0 : oy.variant) == null
              ? void 0
              : iy.outline,
        },
        subtle: {
          itemControl:
            (ay = (sy = pt.variants) == null ? void 0 : sy.variant) == null
              ? void 0
              : ay.subtle,
        },
        solid: {
          itemControl:
            (cy = (ly = pt.variants) == null ? void 0 : ly.variant) == null
              ? void 0
              : cy.solid,
        },
      },
      size: {
        xs: {
          item: { textStyle: "xs", gap: "1.5" },
          itemControl:
            (dy = (uy = pt.variants) == null ? void 0 : uy.size) == null
              ? void 0
              : dy.xs,
        },
        sm: {
          item: { textStyle: "sm", gap: "2" },
          itemControl:
            (gy = (fy = pt.variants) == null ? void 0 : fy.size) == null
              ? void 0
              : gy.sm,
        },
        md: {
          item: { textStyle: "sm", gap: "2.5" },
          itemControl:
            (py = (hy = pt.variants) == null ? void 0 : hy.size) == null
              ? void 0
              : py.md,
        },
        lg: {
          item: { textStyle: "md", gap: "3" },
          itemControl:
            (vy = (my = pt.variants) == null ? void 0 : my.size) == null
              ? void 0
              : vy.lg,
        },
      },
    },
    defaultVariants: { size: "md", variant: "solid" },
  }),
  ID = ie({
    className: "chakra-rating-group",
    slots: A2.keys(),
    base: {
      root: { display: "inline-flex" },
      control: { display: "inline-flex", alignItems: "center" },
      item: {
        display: "inline-flex",
        alignItems: "center",
        justifyContent: "center",
        userSelect: "none",
      },
      itemIndicator: {
        display: "inline-flex",
        alignItems: "center",
        justifyContent: "center",
        width: "1em",
        height: "1em",
        position: "relative",
        "--clip-path": { base: "inset(0 50% 0 0)", _rtl: "inset(0 0 0 50%)" },
        _icon: {
          stroke: "currentColor",
          width: "100%",
          height: "100%",
          display: "inline-block",
          flexShrink: 0,
          position: "absolute",
          left: 0,
          top: 0,
        },
        "& [data-bg]": { color: "bg.emphasized" },
        "& [data-fg]": { color: "transparent" },
        "&[data-highlighted]:not([data-half])": {
          "& [data-fg]": { color: "colorPalette.solid" },
        },
        "&[data-half]": {
          "& [data-fg]": {
            color: "colorPalette.solid",
            clipPath: "var(--clip-path)",
          },
        },
      },
    },
    variants: {
      size: {
        xs: { item: { textStyle: "sm" } },
        sm: { item: { textStyle: "md" } },
        md: { item: { textStyle: "xl" } },
        lg: { item: { textStyle: "2xl" } },
      },
    },
    defaultVariants: { size: "md" },
  }),
  RD = ie({
    className: "chakra-segment-group",
    slots: ax.keys(),
    base: {
      root: {
        "--segment-radius": "radii.l2",
        borderRadius: "l2",
        display: "inline-flex",
        boxShadow: "inset",
        minW: "max-content",
        textAlign: "center",
        position: "relative",
        isolation: "isolate",
        bg: "bg.muted",
        _vertical: { flexDirection: "column" },
      },
      item: {
        display: "flex",
        alignItems: "center",
        justifyContent: "center",
        userSelect: "none",
        fontSize: "sm",
        position: "relative",
        color: "fg",
        borderRadius: "var(--segment-radius)",
        _disabled: { opacity: "0.5" },
        "&:has(input:focus-visible)": { focusRing: "outside" },
        _before: {
          content: '""',
          position: "absolute",
          bg: "border",
          transition: "opacity 0.2s",
        },
        _horizontal: {
          _before: { insetInlineStart: 0, insetBlock: "1.5", width: "1px" },
        },
        _vertical: {
          _before: { insetBlockStart: 0, insetInline: "1.5", height: "1px" },
        },
        "& + &[data-state=checked], &[data-state=checked] + &, &:first-of-type":
          { _before: { opacity: "0" } },
        "&[data-state=checked][data-ssr]": {
          shadow: "sm",
          bg: "bg",
          borderRadius: "var(--segment-radius)",
        },
      },
      indicator: {
        shadow: "sm",
        pos: "absolute",
        bg: { _light: "bg", _dark: "bg.emphasized" },
        width: "var(--width)",
        height: "var(--height)",
        top: "var(--top)",
        left: "var(--left)",
        zIndex: -1,
        borderRadius: "var(--segment-radius)",
      },
    },
    variants: {
      size: {
        xs: { item: { textStyle: "xs", px: "3", gap: "1", height: "6" } },
        sm: { item: { textStyle: "sm", px: "4", gap: "2", height: "8" } },
        md: { item: { textStyle: "sm", px: "4", gap: "2", height: "10" } },
        lg: { item: { textStyle: "md", px: "4.5", gap: "3", height: "11" } },
      },
    },
    defaultVariants: { size: "md" },
  }),
  kD = ie({
    className: "chakra-slider",
    slots: F2.keys(),
    base: {
      root: {
        display: "flex",
        flexDirection: "column",
        gap: "1",
        textStyle: "sm",
        position: "relative",
        isolation: "isolate",
        touchAction: "none",
      },
      label: { fontWeight: "medium", textStyle: "sm" },
      control: {
        display: "inline-flex",
        alignItems: "center",
        position: "relative",
      },
      track: { overflow: "hidden", borderRadius: "full", flex: "1" },
      range: {
        width: "inherit",
        height: "inherit",
        _disabled: { bg: "border.emphasized!" },
      },
      markerGroup: { position: "absolute!", zIndex: "1" },
      marker: {
        "--marker-bg": { base: "white", _underValue: "colors.bg" },
        display: "flex",
        alignItems: "center",
        gap: "calc(var(--slider-thumb-size) / 2)",
        color: "fg.muted",
        textStyle: "xs",
      },
      markerIndicator: {
        width: "var(--slider-marker-size)",
        height: "var(--slider-marker-size)",
        borderRadius: "full",
        bg: "var(--marker-bg)",
      },
      thumb: {
        width: "var(--slider-thumb-size)",
        height: "var(--slider-thumb-size)",
        display: "flex",
        alignItems: "center",
        justifyContent: "center",
        outline: 0,
        zIndex: "2",
        borderRadius: "full",
        _focusVisible: {
          ring: "2px",
          ringColor: "colorPalette.focusRing",
          ringOffset: "2px",
          ringOffsetColor: "bg",
        },
      },
    },
    variants: {
      size: {
        sm: {
          root: {
            "--slider-thumb-size": "sizes.4",
            "--slider-track-size": "sizes.1.5",
            "--slider-marker-center": "6px",
            "--slider-marker-size": "sizes.1",
            "--slider-marker-inset": "3px",
          },
        },
        md: {
          root: {
            "--slider-thumb-size": "sizes.5",
            "--slider-track-size": "sizes.2",
            "--slider-marker-center": "8px",
            "--slider-marker-size": "sizes.1",
            "--slider-marker-inset": "4px",
          },
        },
        lg: {
          root: {
            "--slider-thumb-size": "sizes.6",
            "--slider-track-size": "sizes.2.5",
            "--slider-marker-center": "9px",
            "--slider-marker-size": "sizes.1.5",
            "--slider-marker-inset": "5px",
          },
        },
      },
      variant: {
        outline: {
          track: { shadow: "inset", bg: "bg.emphasized/72" },
          range: { bg: "colorPalette.solid" },
          thumb: {
            borderWidth: "2px",
            borderColor: "colorPalette.solid",
            bg: "bg",
            _disabled: {
              bg: "border.emphasized",
              borderColor: "border.emphasized",
            },
          },
        },
        solid: {
          track: { bg: "colorPalette.subtle", _disabled: { bg: "bg.muted" } },
          range: { bg: "colorPalette.solid" },
          thumb: {
            bg: "colorPalette.solid",
            _disabled: { bg: "border.emphasized" },
          },
        },
      },
      orientation: {
        vertical: {
          root: { display: "inline-flex" },
          control: {
            flexDirection: "column",
            height: "100%",
            minWidth: "var(--slider-thumb-size)",
            "&[data-has-mark-label], &:has(.chakra-slider__marker-label)": {
              marginEnd: "4",
            },
          },
          track: { width: "var(--slider-track-size)" },
          thumb: { left: "50%", translate: "-50% 0" },
          markerGroup: {
            insetStart: "var(--slider-marker-center)",
            insetBlock: "var(--slider-marker-inset)",
          },
          marker: { flexDirection: "row" },
        },
        horizontal: {
          control: {
            flexDirection: "row",
            width: "100%",
            minHeight: "var(--slider-thumb-size)",
            "&[data-has-mark-label], &:has(.chakra-slider__marker-label)": {
              marginBottom: "4",
            },
          },
          track: { height: "var(--slider-track-size)" },
          thumb: { top: "50%", translate: "0 -50%" },
          markerGroup: {
            top: "var(--slider-marker-center)",
            insetInline: "var(--slider-marker-inset)",
          },
          marker: { flexDirection: "column" },
        },
      },
    },
    defaultVariants: {
      size: "md",
      variant: "outline",
      orientation: "horizontal",
    },
  }),
  PD = ie({
    className: "chakra-stat",
    slots: D2.keys(),
    base: {
      root: {
        display: "flex",
        flexDirection: "column",
        gap: "1",
        position: "relative",
        flex: "1",
      },
      label: {
        display: "inline-flex",
        gap: "1.5",
        alignItems: "center",
        color: "fg.muted",
        textStyle: "sm",
      },
      helpText: { color: "fg.muted", textStyle: "xs" },
      valueUnit: {
        color: "fg.muted",
        textStyle: "xs",
        fontWeight: "initial",
        letterSpacing: "initial",
      },
      valueText: {
        verticalAlign: "baseline",
        fontWeight: "semibold",
        letterSpacing: "tight",
        fontFeatureSettings: "pnum",
        fontVariantNumeric: "proportional-nums",
        display: "inline-flex",
        gap: "1",
      },
      indicator: {
        display: "inline-flex",
        alignItems: "center",
        justifyContent: "center",
        marginEnd: 1,
        "& :where(svg)": { w: "1em", h: "1em" },
        "&[data-type=up]": { color: "fg.success" },
        "&[data-type=down]": { color: "fg.error" },
      },
    },
    variants: {
      size: {
        sm: { valueText: { textStyle: "xl" } },
        md: { valueText: { textStyle: "2xl" } },
        lg: { valueText: { textStyle: "3xl" } },
      },
    },
    defaultVariants: { size: "md" },
  }),
  TD = ie({
    className: "chakra-status",
    slots: $2.keys(),
    base: {
      root: { display: "inline-flex", alignItems: "center", gap: "2" },
      indicator: {
        width: "0.64em",
        height: "0.64em",
        flexShrink: 0,
        borderRadius: "full",
        forcedColorAdjust: "none",
        bg: "colorPalette.solid",
      },
    },
    variants: {
      size: {
        sm: { root: { textStyle: "xs" } },
        md: { root: { textStyle: "sm" } },
        lg: { root: { textStyle: "md" } },
      },
    },
    defaultVariants: { size: "md" },
  }),
  OD = ie({
    className: "chakra-steps",
    slots: M2.keys(),
    base: {
      root: { display: "flex", width: "full" },
      list: {
        display: "flex",
        justifyContent: "space-between",
        "--steps-gutter": "spacing.3",
        "--steps-thickness": "2px",
      },
      title: { fontWeight: "medium", color: "fg" },
      description: { color: "fg.muted" },
      separator: { bg: "border", flex: "1" },
      indicator: {
        display: "flex",
        justifyContent: "center",
        alignItems: "center",
        flexShrink: "0",
        borderRadius: "full",
        fontWeight: "medium",
        width: "var(--steps-size)",
        height: "var(--steps-size)",
        _icon: {
          flexShrink: "0",
          width: "var(--steps-icon-size)",
          height: "var(--steps-icon-size)",
        },
      },
      item: {
        position: "relative",
        display: "flex",
        gap: "3",
        flex: "1 0 0",
        "&:last-of-type": {
          flex: "initial",
          "& [data-part=separator]": { display: "none" },
        },
      },
      trigger: {
        display: "flex",
        alignItems: "center",
        gap: "3",
        textAlign: "start",
        focusVisibleRing: "outside",
        borderRadius: "l2",
      },
      content: { focusVisibleRing: "outside" },
    },
    variants: {
      orientation: {
        vertical: {
          root: { flexDirection: "row", height: "100%" },
          list: { flexDirection: "column", alignItems: "flex-start" },
          separator: {
            position: "absolute",
            width: "var(--steps-thickness)",
            height: "100%",
            maxHeight:
              "calc(100% - var(--steps-size) - var(--steps-gutter) * 2)",
            top: "calc(var(--steps-size) + var(--steps-gutter))",
            insetStart: "calc(var(--steps-size) / 2 - 1px)",
          },
          item: { alignItems: "flex-start" },
        },
        horizontal: {
          root: { flexDirection: "column", width: "100%" },
          list: { flexDirection: "row", alignItems: "center" },
          separator: {
            width: "100%",
            height: "var(--steps-thickness)",
            marginX: "var(--steps-gutter)",
          },
          item: { alignItems: "center" },
        },
      },
      variant: {
        solid: {
          indicator: {
            _incomplete: { borderWidth: "var(--steps-thickness)" },
            _current: {
              bg: "colorPalette.muted",
              borderWidth: "var(--steps-thickness)",
              borderColor: "colorPalette.solid",
              color: "colorPalette.fg",
            },
            _complete: {
              bg: "colorPalette.solid",
              borderColor: "colorPalette.solid",
              color: "colorPalette.contrast",
            },
          },
          separator: { _complete: { bg: "colorPalette.solid" } },
        },
        subtle: {
          indicator: {
            _incomplete: { bg: "bg.muted" },
            _current: { bg: "colorPalette.muted", color: "colorPalette.fg" },
            _complete: {
              bg: "colorPalette.emphasized",
              color: "colorPalette.fg",
            },
          },
          separator: { _complete: { bg: "colorPalette.emphasized" } },
        },
      },
      size: {
        xs: {
          root: { gap: "2.5" },
          list: {
            "--steps-size": "sizes.6",
            "--steps-icon-size": "sizes.3.5",
            textStyle: "xs",
          },
          title: { textStyle: "sm" },
        },
        sm: {
          root: { gap: "3" },
          list: {
            "--steps-size": "sizes.8",
            "--steps-icon-size": "sizes.4",
            textStyle: "xs",
          },
          title: { textStyle: "sm" },
        },
        md: {
          root: { gap: "4" },
          list: {
            "--steps-size": "sizes.10",
            "--steps-icon-size": "sizes.4",
            textStyle: "sm",
          },
          title: { textStyle: "sm" },
        },
        lg: {
          root: { gap: "6" },
          list: {
            "--steps-size": "sizes.11",
            "--steps-icon-size": "sizes.5",
            textStyle: "md",
          },
          title: { textStyle: "md" },
        },
      },
    },
    defaultVariants: {
      size: "md",
      variant: "solid",
      orientation: "horizontal",
    },
  }),
  _D = ie({
    slots: L2.keys(),
    className: "chakra-switch",
    base: {
      root: {
        display: "inline-flex",
        gap: "2.5",
        alignItems: "center",
        position: "relative",
        verticalAlign: "middle",
        "--switch-diff": "calc(var(--switch-width) - var(--switch-height))",
        "--switch-x": {
          base: "var(--switch-diff)",
          _rtl: "calc(var(--switch-diff) * -1)",
        },
      },
      label: {
        lineHeight: "1",
        userSelect: "none",
        fontSize: "sm",
        fontWeight: "medium",
        _disabled: { opacity: "0.5" },
      },
      indicator: {
        position: "absolute",
        height: "var(--switch-height)",
        width: "var(--switch-height)",
        fontSize: "var(--switch-indicator-font-size)",
        fontWeight: "medium",
        flexShrink: 0,
        userSelect: "none",
        display: "grid",
        placeContent: "center",
        transition: "inset-inline-start 0.12s ease",
        insetInlineStart: "calc(var(--switch-x) - 2px)",
        _checked: { insetInlineStart: "2px" },
      },
      control: {
        display: "inline-flex",
        gap: "0.5rem",
        flexShrink: 0,
        justifyContent: "flex-start",
        cursor: "switch",
        borderRadius: "full",
        position: "relative",
        width: "var(--switch-width)",
        height: "var(--switch-height)",
        transition: "backgrounds",
        _disabled: { opacity: "0.5", cursor: "not-allowed" },
        _invalid: {
          outline: "2px solid",
          outlineColor: "border.error",
          outlineOffset: "2px",
        },
      },
      thumb: {
        display: "flex",
        alignItems: "center",
        justifyContent: "center",
        flexShrink: 0,
        transitionProperty: "translate",
        transitionDuration: "fast",
        borderRadius: "inherit",
        _checked: { translate: "var(--switch-x) 0" },
      },
    },
    variants: {
      variant: {
        solid: {
          control: {
            borderRadius: "full",
            bg: "bg.emphasized",
            focusVisibleRing: "outside",
            _checked: { bg: "colorPalette.solid" },
          },
          thumb: {
            bg: "white",
            width: "var(--switch-height)",
            height: "var(--switch-height)",
            scale: "0.8",
            boxShadow: "sm",
            _checked: { bg: "colorPalette.contrast" },
          },
        },
        raised: {
          control: {
            borderRadius: "full",
            height: "calc(var(--switch-height) / 2)",
            bg: "bg.muted",
            boxShadow: "inset",
            _checked: { bg: "colorPalette.solid/60" },
          },
          thumb: {
            width: "var(--switch-height)",
            height: "var(--switch-height)",
            position: "relative",
            top: "calc(var(--switch-height) * -0.25)",
            bg: "white",
            boxShadow: "xs",
            focusVisibleRing: "outside",
            _checked: { bg: "colorPalette.solid" },
          },
        },
      },
      size: {
        xs: {
          root: {
            "--switch-width": "sizes.6",
            "--switch-height": "sizes.3",
            "--switch-indicator-font-size": "fontSizes.xs",
          },
        },
        sm: {
          root: {
            "--switch-width": "sizes.8",
            "--switch-height": "sizes.4",
            "--switch-indicator-font-size": "fontSizes.xs",
          },
        },
        md: {
          root: {
            "--switch-width": "sizes.10",
            "--switch-height": "sizes.5",
            "--switch-indicator-font-size": "fontSizes.sm",
          },
        },
        lg: {
          root: {
            "--switch-width": "sizes.12",
            "--switch-height": "sizes.6",
            "--switch-indicator-font-size": "fontSizes.md",
          },
        },
      },
    },
    defaultVariants: { variant: "solid", size: "md" },
  }),
  AD = ie({
    className: "chakra-table",
    slots: z2.keys(),
    base: {
      root: {
        fontVariantNumeric: "lining-nums tabular-nums",
        borderCollapse: "collapse",
        width: "full",
        textAlign: "start",
        verticalAlign: "top",
      },
      row: { _selected: { bg: "colorPalette.subtle" } },
      cell: { textAlign: "start", alignItems: "center" },
      columnHeader: { fontWeight: "medium", textAlign: "start", color: "fg" },
      caption: { fontWeight: "medium", textStyle: "xs" },
      footer: { fontWeight: "medium" },
    },
    variants: {
      interactive: {
        true: { body: { "& tr": { _hover: { bg: "colorPalette.subtle" } } } },
      },
      stickyHeader: {
        true: {
          header: {
            "& :where(tr)": {
              top: "var(--table-sticky-offset, 0)",
              position: "sticky",
              zIndex: 1,
            },
          },
        },
      },
      striped: {
        true: { row: { "&:nth-of-type(odd) td": { bg: "bg.muted" } } },
      },
      showColumnBorder: {
        true: {
          columnHeader: {
            "&:not(:last-of-type)": { borderInlineEndWidth: "1px" },
          },
          cell: { "&:not(:last-of-type)": { borderInlineEndWidth: "1px" } },
        },
      },
      variant: {
        line: {
          columnHeader: { borderBottomWidth: "1px" },
          cell: { borderBottomWidth: "1px" },
          row: { bg: "bg" },
        },
        outline: {
          root: { boxShadow: "0 0 0 1px {colors.border}", overflow: "hidden" },
          columnHeader: { borderBottomWidth: "1px" },
          header: { bg: "bg.muted" },
          row: { "&:not(:last-of-type)": { borderBottomWidth: "1px" } },
          footer: { borderTopWidth: "1px" },
        },
      },
      size: {
        sm: {
          root: { textStyle: "sm" },
          columnHeader: { px: "2", py: "2" },
          cell: { px: "2", py: "2" },
        },
        md: {
          root: { textStyle: "sm" },
          columnHeader: { px: "3", py: "3" },
          cell: { px: "3", py: "3" },
        },
        lg: {
          root: { textStyle: "md" },
          columnHeader: { px: "4", py: "3" },
          cell: { px: "4", py: "3" },
        },
      },
    },
    defaultVariants: { variant: "line", size: "md" },
  }),
  ND = ie({
    slots: j2.keys(),
    className: "chakra-tabs",
    base: {
      root: {
        "--tabs-trigger-radius": "radii.l2",
        position: "relative",
        _horizontal: { display: "block" },
        _vertical: { display: "flex" },
      },
      list: {
        display: "inline-flex",
        position: "relative",
        isolation: "isolate",
        "--tabs-indicator-shadow": "shadows.xs",
        "--tabs-indicator-bg": "colors.bg",
        minH: "var(--tabs-height)",
        _horizontal: { flexDirection: "row" },
        _vertical: { flexDirection: "column" },
      },
      trigger: {
        outline: "0",
        minW: "var(--tabs-height)",
        height: "var(--tabs-height)",
        display: "flex",
        alignItems: "center",
        fontWeight: "medium",
        position: "relative",
        cursor: "button",
        gap: "2",
        _focusVisible: {
          zIndex: 1,
          outline: "2px solid",
          outlineColor: "colorPalette.focusRing",
        },
        _disabled: { cursor: "not-allowed", opacity: 0.5 },
      },
      content: {
        focusVisibleRing: "inside",
        _horizontal: { width: "100%", pt: "var(--tabs-content-padding)" },
        _vertical: { height: "100%", ps: "var(--tabs-content-padding)" },
      },
      indicator: {
        width: "var(--width)",
        height: "var(--height)",
        borderRadius: "var(--tabs-indicator-radius)",
        bg: "var(--tabs-indicator-bg)",
        shadow: "var(--tabs-indicator-shadow)",
        zIndex: -1,
      },
    },
    variants: {
      fitted: {
        true: {
          list: { display: "flex" },
          trigger: { flex: 1, textAlign: "center", justifyContent: "center" },
        },
      },
      justify: {
        start: { list: { justifyContent: "flex-start" } },
        center: { list: { justifyContent: "center" } },
        end: { list: { justifyContent: "flex-end" } },
      },
      size: {
        sm: {
          root: {
            "--tabs-height": "sizes.9",
            "--tabs-content-padding": "spacing.3",
          },
          trigger: { py: "1", px: "3", textStyle: "sm" },
        },
        md: {
          root: {
            "--tabs-height": "sizes.10",
            "--tabs-content-padding": "spacing.4",
          },
          trigger: { py: "2", px: "4", textStyle: "sm" },
        },
        lg: {
          root: {
            "--tabs-height": "sizes.11",
            "--tabs-content-padding": "spacing.4.5",
          },
          trigger: { py: "2", px: "4.5", textStyle: "md" },
        },
      },
      variant: {
        line: {
          list: {
            display: "flex",
            borderColor: "border",
            _horizontal: { borderBottomWidth: "1px" },
            _vertical: { borderEndWidth: "1px" },
          },
          trigger: {
            color: "fg.muted",
            _disabled: { _active: { bg: "initial" } },
            _selected: {
              color: "fg",
              _horizontal: {
                layerStyle: "indicator.bottom",
                "--indicator-offset-y": "-1px",
                "--indicator-color": "colors.colorPalette.solid",
              },
              _vertical: {
                layerStyle: "indicator.end",
                "--indicator-offset-x": "-1px",
              },
            },
          },
        },
        subtle: {
          trigger: {
            borderRadius: "var(--tabs-trigger-radius)",
            color: "fg.muted",
            _selected: { bg: "colorPalette.subtle", color: "colorPalette.fg" },
          },
        },
        enclosed: {
          list: {
            bg: "bg.muted",
            padding: "1",
            borderRadius: "l3",
            minH: "calc(var(--tabs-height) - 4px)",
          },
          trigger: {
            justifyContent: "center",
            color: "fg.muted",
            borderRadius: "var(--tabs-trigger-radius)",
            _selected: { bg: "bg", color: "colorPalette.fg", shadow: "xs" },
          },
        },
        outline: {
          list: {
            "--line-thickness": "1px",
            "--line-offset": "calc(var(--line-thickness) * -1)",
            borderColor: "border",
            display: "flex",
            _horizontal: {
              _before: {
                content: '""',
                position: "absolute",
                bottom: "0px",
                width: "100%",
                borderBottomWidth: "var(--line-thickness)",
                borderBottomColor: "border",
              },
            },
            _vertical: {
              _before: {
                content: '""',
                position: "absolute",
                insetInline: "var(--line-offset)",
                height: "calc(100% - calc(var(--line-thickness) * 2))",
                borderEndWidth: "var(--line-thickness)",
                borderEndColor: "border",
              },
            },
          },
          trigger: {
            color: "fg.muted",
            borderWidth: "1px",
            borderColor: "transparent",
            _selected: { bg: "currentBg", color: "colorPalette.fg" },
            _horizontal: {
              borderTopRadius: "var(--tabs-trigger-radius)",
              marginBottom: "var(--line-offset)",
              marginEnd: { _notLast: "var(--line-offset)" },
              _selected: {
                borderColor: "border",
                borderBottomColor: "transparent",
              },
            },
            _vertical: {
              borderStartRadius: "var(--tabs-trigger-radius)",
              marginEnd: "var(--line-offset)",
              marginBottom: { _notLast: "var(--line-offset)" },
              _selected: {
                borderColor: "border",
                borderEndColor: "transparent",
              },
            },
          },
        },
        plain: {
          trigger: {
            color: "fg.muted",
            _selected: { color: "colorPalette.fg" },
            borderRadius: "var(--tabs-trigger-radius)",
            "&[data-selected][data-ssr]": {
              bg: "var(--tabs-indicator-bg)",
              shadow: "var(--tabs-indicator-shadow)",
              borderRadius: "var(--tabs-indicator-radius)",
            },
          },
        },
      },
    },
    defaultVariants: { size: "md", variant: "line" },
  });
var yy;
const Jt = (yy = Cf.variants) == null ? void 0 : yy.variant,
  VD = ie({
    slots: U2.keys(),
    className: "chakra-tag",
    base: {
      root: {
        display: "inline-flex",
        alignItems: "center",
        verticalAlign: "top",
        maxWidth: "100%",
        userSelect: "none",
        borderRadius: "l2",
        focusVisibleRing: "outside",
      },
      label: { lineClamp: "1" },
      closeTrigger: {
        display: "flex",
        alignItems: "center",
        justifyContent: "center",
        outline: "0",
        borderRadius: "l1",
        color: "currentColor",
        focusVisibleRing: "inside",
        focusRingWidth: "2px",
      },
      startElement: {
        flexShrink: 0,
        boxSize: "var(--tag-element-size)",
        ms: "var(--tag-element-offset)",
        "&:has([data-scope=avatar])": {
          boxSize: "var(--tag-avatar-size)",
          ms: "calc(var(--tag-element-offset) * 1.5)",
        },
        _icon: { boxSize: "100%" },
      },
      endElement: {
        flexShrink: 0,
        boxSize: "var(--tag-element-size)",
        me: "var(--tag-element-offset)",
        _icon: { boxSize: "100%" },
        "&:has(button)": { ms: "calc(var(--tag-element-offset) * -1)" },
      },
    },
    variants: {
      size: {
        sm: {
          root: {
            px: "1.5",
            minH: "4.5",
            gap: "1",
            "--tag-avatar-size": "spacing.3",
            "--tag-element-size": "spacing.3",
            "--tag-element-offset": "-2px",
          },
          label: { textStyle: "xs" },
        },
        md: {
          root: {
            px: "1.5",
            minH: "5",
            gap: "1",
            "--tag-avatar-size": "spacing.3.5",
            "--tag-element-size": "spacing.3.5",
            "--tag-element-offset": "-2px",
          },
          label: { textStyle: "xs" },
        },
        lg: {
          root: {
            px: "2",
            minH: "6",
            gap: "1.5",
            "--tag-avatar-size": "spacing.4.5",
            "--tag-element-size": "spacing.4",
            "--tag-element-offset": "-3px",
          },
          label: { textStyle: "sm" },
        },
        xl: {
          root: {
            px: "2.5",
            minH: "8",
            gap: "1.5",
            "--tag-avatar-size": "spacing.6",
            "--tag-element-size": "spacing.4.5",
            "--tag-element-offset": "-4px",
          },
          label: { textStyle: "sm" },
        },
      },
      variant: {
        subtle: { root: Jt == null ? void 0 : Jt.subtle },
        solid: { root: Jt == null ? void 0 : Jt.solid },
        outline: { root: Jt == null ? void 0 : Jt.outline },
        surface: { root: Jt == null ? void 0 : Jt.surface },
      },
    },
    defaultVariants: { size: "md", variant: "surface" },
  }),
  FD = ie({
    slots: W2.keys(),
    className: "chakra-timeline",
    base: {
      root: {
        display: "flex",
        flexDirection: "column",
        width: "full",
        "--timeline-thickness": "1px",
        "--timeline-gutter": "4px",
      },
      item: {
        display: "flex",
        position: "relative",
        alignItems: "flex-start",
        flexShrink: 0,
        gap: "4",
        _last: { "& :where(.chakra-timeline__separator)": { display: "none" } },
      },
      separator: {
        position: "absolute",
        borderStartWidth: "var(--timeline-thickness)",
        ms: "calc(-1 * var(--timeline-thickness) / 2)",
        insetInlineStart: "calc(var(--timeline-indicator-size) / 2)",
        insetBlock: "0",
        borderColor: "border",
      },
      indicator: {
        outline: "2px solid {colors.bg}",
        position: "relative",
        flexShrink: "0",
        boxSize: "var(--timeline-indicator-size)",
        fontSize: "var(--timeline-font-size)",
        display: "flex",
        alignItems: "center",
        justifyContent: "center",
        borderRadius: "full",
        fontWeight: "medium",
      },
      connector: { alignSelf: "stretch", position: "relative" },
      content: {
        pb: "6",
        display: "flex",
        flexDirection: "column",
        width: "full",
        gap: "2",
      },
      title: {
        display: "flex",
        fontWeight: "medium",
        flexWrap: "wrap",
        gap: "1.5",
        alignItems: "center",
        mt: "var(--timeline-margin)",
      },
      description: { color: "fg.muted", textStyle: "xs" },
    },
    variants: {
      variant: {
        subtle: { indicator: { bg: "colorPalette.muted" } },
        solid: {
          indicator: {
            bg: "colorPalette.solid",
            color: "colorPalette.contrast",
          },
        },
        outline: {
          indicator: {
            bg: "currentBg",
            borderWidth: "1px",
            borderColor: "colorPalette.muted",
          },
        },
        plain: {},
      },
      size: {
        sm: {
          root: {
            "--timeline-indicator-size": "sizes.4",
            "--timeline-font-size": "fontSizes.2xs",
          },
          title: { textStyle: "xs" },
        },
        md: {
          root: {
            "--timeline-indicator-size": "sizes.5",
            "--timeline-font-size": "fontSizes.xs",
          },
          title: { textStyle: "sm" },
        },
        lg: {
          root: {
            "--timeline-indicator-size": "sizes.6",
            "--timeline-font-size": "fontSizes.xs",
          },
          title: { mt: "0.5", textStyle: "sm" },
        },
        xl: {
          root: {
            "--timeline-indicator-size": "sizes.8",
            "--timeline-font-size": "fontSizes.sm",
          },
          title: { mt: "1.5", textStyle: "sm" },
        },
      },
    },
    defaultVariants: { size: "md", variant: "solid" },
  }),
  DD = ie({
    slots: B2.keys(),
    className: "chakra-toast",
    base: {
      root: {
        width: "full",
        display: "flex",
        alignItems: "flex-start",
        position: "relative",
        gap: "3",
        py: "4",
        ps: "4",
        pe: "6",
        borderRadius: "l2",
        translate: "var(--x) var(--y)",
        scale: "var(--scale)",
        zIndex: "var(--z-index)",
        height: "var(--height)",
        opacity: "var(--opacity)",
        willChange: "translate, opacity, scale",
        transition:
          "translate 400ms, scale 400ms, opacity 400ms, height 400ms, box-shadow 200ms",
        transitionTimingFunction: "cubic-bezier(0.21, 1.02, 0.73, 1)",
        _closed: {
          transition: "translate 400ms, scale 400ms, opacity 200ms",
          transitionTimingFunction: "cubic-bezier(0.06, 0.71, 0.55, 1)",
        },
        bg: "bg.panel",
        color: "fg",
        boxShadow: "xl",
        "--toast-trigger-bg": "colors.bg.muted",
        "&[data-type=warning]": {
          bg: "orange.solid",
          color: "orange.contrast",
          "--toast-trigger-bg": "{white/10}",
          "--toast-border-color": "{white/40}",
        },
        "&[data-type=success]": {
          bg: "green.solid",
          color: "green.contrast",
          "--toast-trigger-bg": "{white/10}",
          "--toast-border-color": "{white/40}",
        },
        "&[data-type=error]": {
          bg: "red.solid",
          color: "red.contrast",
          "--toast-trigger-bg": "{white/10}",
          "--toast-border-color": "{white/40}",
        },
      },
      title: { fontWeight: "medium", textStyle: "sm", marginEnd: "2" },
      description: { display: "inline", textStyle: "sm", opacity: "0.8" },
      indicator: { flexShrink: "0", boxSize: "5" },
      actionTrigger: {
        textStyle: "sm",
        fontWeight: "medium",
        height: "8",
        px: "3",
        borderRadius: "l2",
        alignSelf: "center",
        borderWidth: "1px",
        borderColor: "var(--toast-border-color, inherit)",
        transition: "background 200ms",
        _hover: { bg: "var(--toast-trigger-bg)" },
      },
      closeTrigger: {
        position: "absolute",
        top: "1",
        insetEnd: "1",
        padding: "1",
        display: "inline-flex",
        alignItems: "center",
        justifyContent: "center",
        color: "{currentColor/60}",
        borderRadius: "l2",
        textStyle: "md",
        transition: "background 200ms",
        _icon: { boxSize: "1em" },
      },
    },
  }),
  $D = ie({
    slots: fx.keys(),
    className: "chakra-tooltip",
    base: {
      content: {
        "--tooltip-bg": "colors.bg.inverted",
        bg: "var(--tooltip-bg)",
        color: "fg.inverted",
        px: "2.5",
        py: "1",
        borderRadius: "l2",
        fontWeight: "medium",
        textStyle: "xs",
        boxShadow: "md",
        maxW: "xs",
        zIndex: "tooltip",
        transformOrigin: "var(--transform-origin)",
        _open: { animationStyle: "scale-fade-in", animationDuration: "fast" },
        _closed: {
          animationStyle: "scale-fade-out",
          animationDuration: "fast",
        },
      },
      arrow: {
        "--arrow-size": "sizes.2",
        "--arrow-background": "var(--tooltip-bg)",
      },
      arrowTip: {
        borderTopWidth: "1px",
        borderInlineStartWidth: "1px",
        borderColor: "var(--tooltip-bg)",
      },
    },
  }),
  Zp = pi({
    display: "flex",
    alignItems: "center",
    gap: "var(--tree-item-gap)",
    rounded: "l2",
    userSelect: "none",
    position: "relative",
    "--tree-depth": "calc(var(--depth) - 1)",
    "--tree-indentation-offset":
      "calc(var(--tree-indentation) * var(--tree-depth))",
    "--tree-icon-offset":
      "calc(var(--tree-icon-size) * var(--tree-depth) * 0.5)",
    "--tree-offset":
      "calc(var(--tree-padding-inline) + var(--tree-indentation-offset) + var(--tree-icon-offset))",
    ps: "var(--tree-offset)",
    pe: "var(--tree-padding-inline)",
    py: "var(--tree-padding-block)",
    focusVisibleRing: "inside",
    focusRingColor: "border.emphasized",
    focusRingWidth: "2px",
    "&:hover, &:focus-visible": { bg: "bg.muted" },
    _disabled: { layerStyle: "disabled" },
  }),
  em = pi({ flex: "1" }),
  tm = pi({
    _selected: { bg: "colorPalette.subtle", color: "colorPalette.fg" },
  }),
  nm = pi({ _selected: { layerStyle: "fill.solid" } }),
  MD = ie({
    slots: gx.keys(),
    className: "chakra-tree-view",
    base: {
      root: {
        width: "full",
        display: "flex",
        flexDirection: "column",
        gap: "2",
      },
      tree: {
        display: "flex",
        flexDirection: "column",
        "--tree-item-gap": "spacing.2",
        _icon: { boxSize: "var(--tree-icon-size)" },
      },
      label: { fontWeight: "medium", textStyle: "sm" },
      branch: { position: "relative" },
      branchContent: { position: "relative" },
      branchIndentGuide: {
        height: "100%",
        width: "1px",
        bg: "border",
        position: "absolute",
        "--tree-depth": "calc(var(--depth) - 1)",
        "--tree-indentation-offset":
          "calc(var(--tree-indentation) * var(--tree-depth))",
        "--tree-offset":
          "calc(var(--tree-padding-inline) + var(--tree-indentation-offset))",
        "--tree-icon-offset":
          "calc(var(--tree-icon-size) * 0.5 * var(--depth))",
        insetInlineStart: "calc(var(--tree-offset) + var(--tree-icon-offset))",
        zIndex: "1",
      },
      branchIndicator: {
        color: "fg.muted",
        transformOrigin: "center",
        transitionDuration: "normal",
        transitionProperty: "transform",
        transitionTimingFunction: "default",
        _open: { transform: "rotate(90deg)" },
      },
      branchTrigger: {
        display: "inline-flex",
        alignItems: "center",
        justifyContent: "center",
      },
      branchControl: Zp,
      item: Zp,
      itemText: em,
      branchText: em,
      nodeCheckbox: { display: "inline-flex" },
    },
    variants: {
      size: {
        md: {
          tree: {
            textStyle: "sm",
            "--tree-indentation": "spacing.4",
            "--tree-padding-inline": "spacing.3",
            "--tree-padding-block": "spacing.1.5",
            "--tree-icon-size": "spacing.4",
          },
        },
        sm: {
          tree: {
            textStyle: "sm",
            "--tree-indentation": "spacing.4",
            "--tree-padding-inline": "spacing.3",
            "--tree-padding-block": "spacing.1",
            "--tree-icon-size": "spacing.3",
          },
        },
        xs: {
          tree: {
            textStyle: "xs",
            "--tree-indentation": "spacing.4",
            "--tree-padding-inline": "spacing.2",
            "--tree-padding-block": "spacing.1",
            "--tree-icon-size": "spacing.3",
          },
        },
      },
      variant: {
        subtle: { branchControl: tm, item: tm },
        solid: { branchControl: nm, item: nm },
      },
      animateContent: {
        true: {
          branchContent: {
            _open: {
              animationName: "expand-height, fade-in",
              animationDuration: "moderate",
            },
            _closed: {
              animationName: "collapse-height, fade-out",
              animationDuration: "moderate",
            },
          },
        },
      },
    },
    defaultVariants: { size: "md", variant: "subtle" },
  }),
  LD = {
    accordion: G2,
    actionBar: K2,
    alert: q2,
    avatar: Y2,
    blockquote: X2,
    breadcrumb: J2,
    card: Q2,
    checkbox: Z2,
    checkboxCard: eD,
    collapsible: tD,
    dataList: oD,
    dialog: iD,
    drawer: sD,
    editable: aD,
    emptyState: lD,
    field: cD,
    fieldset: uD,
    fileUpload: dD,
    hoverCard: fD,
    list: gD,
    menu: hD,
    nativeSelect: pD,
    numberInput: mD,
    pinInput: yD,
    popover: bD,
    progress: xD,
    progressCircle: SD,
    radioCard: CD,
    radioGroup: ED,
    ratingGroup: ID,
    segmentGroup: RD,
    select: Sa,
    combobox: rD,
    slider: kD,
    stat: PD,
    steps: OD,
    switch: _D,
    table: AD,
    tabs: ND,
    tag: VD,
    toast: DD,
    tooltip: $D,
    status: TD,
    timeline: FD,
    colorPicker: nD,
    qrCode: wD,
    treeView: MD,
  },
  zD = vV({
    "2xs": { value: { fontSize: "2xs", lineHeight: "0.75rem" } },
    xs: { value: { fontSize: "xs", lineHeight: "1rem" } },
    sm: { value: { fontSize: "sm", lineHeight: "1.25rem" } },
    md: { value: { fontSize: "md", lineHeight: "1.5rem" } },
    lg: { value: { fontSize: "lg", lineHeight: "1.75rem" } },
    xl: { value: { fontSize: "xl", lineHeight: "1.875rem" } },
    "2xl": { value: { fontSize: "2xl", lineHeight: "2rem" } },
    "3xl": { value: { fontSize: "3xl", lineHeight: "2.375rem" } },
    "4xl": {
      value: {
        fontSize: "4xl",
        lineHeight: "2.75rem",
        letterSpacing: "-0.025em",
      },
    },
    "5xl": {
      value: {
        fontSize: "5xl",
        lineHeight: "3.75rem",
        letterSpacing: "-0.025em",
      },
    },
    "6xl": {
      value: {
        fontSize: "6xl",
        lineHeight: "4.5rem",
        letterSpacing: "-0.025em",
      },
    },
    "7xl": {
      value: {
        fontSize: "7xl",
        lineHeight: "5.75rem",
        letterSpacing: "-0.025em",
      },
    },
    none: { value: {} },
    label: {
      value: { fontSize: "sm", lineHeight: "1.25rem", fontWeight: "medium" },
    },
  }),
  BD = Ze.animations({
    spin: { value: "spin 1s linear infinite" },
    ping: { value: "ping 1s cubic-bezier(0, 0, 0.2, 1) infinite" },
    pulse: { value: "pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite" },
    bounce: { value: "bounce 1s infinite" },
  }),
  jD = Ze.aspectRatios({
    square: { value: "1 / 1" },
    landscape: { value: "4 / 3" },
    portrait: { value: "3 / 4" },
    wide: { value: "16 / 9" },
    ultrawide: { value: "18 / 5" },
    golden: { value: "1.618 / 1" },
  }),
  UD = Ze.blurs({
    none: { value: " " },
    sm: { value: "4px" },
    md: { value: "8px" },
    lg: { value: "12px" },
    xl: { value: "16px" },
    "2xl": { value: "24px" },
    "3xl": { value: "40px" },
    "4xl": { value: "64px" },
  }),
  WD = Ze.borders({
    xs: { value: "0.5px solid" },
    sm: { value: "1px solid" },
    md: { value: "2px solid" },
    lg: { value: "4px solid" },
    xl: { value: "8px solid" },
  }),
  HD = Ze.colors({
    transparent: { value: "transparent" },
    current: { value: "currentColor" },
    black: { value: "#09090B" },
    white: { value: "#FFFFFF" },
    whiteAlpha: {
      50: { value: "rgba(255, 255, 255, 0.04)" },
      100: { value: "rgba(255, 255, 255, 0.06)" },
      200: { value: "rgba(255, 255, 255, 0.08)" },
      300: { value: "rgba(255, 255, 255, 0.16)" },
      400: { value: "rgba(255, 255, 255, 0.24)" },
      500: { value: "rgba(255, 255, 255, 0.36)" },
      600: { value: "rgba(255, 255, 255, 0.48)" },
      700: { value: "rgba(255, 255, 255, 0.64)" },
      800: { value: "rgba(255, 255, 255, 0.80)" },
      900: { value: "rgba(255, 255, 255, 0.92)" },
      950: { value: "rgba(255, 255, 255, 0.95)" },
    },
    blackAlpha: {
      50: { value: "rgba(0, 0, 0, 0.04)" },
      100: { value: "rgba(0, 0, 0, 0.06)" },
      200: { value: "rgba(0, 0, 0, 0.08)" },
      300: { value: "rgba(0, 0, 0, 0.16)" },
      400: { value: "rgba(0, 0, 0, 0.24)" },
      500: { value: "rgba(0, 0, 0, 0.36)" },
      600: { value: "rgba(0, 0, 0, 0.48)" },
      700: { value: "rgba(0, 0, 0, 0.64)" },
      800: { value: "rgba(0, 0, 0, 0.80)" },
      900: { value: "rgba(0, 0, 0, 0.92)" },
      950: { value: "rgba(0, 0, 0, 0.95)" },
    },
    gray: {
      50: { value: "#fafafa" },
      100: { value: "#f4f4f5" },
      200: { value: "#e4e4e7" },
      300: { value: "#d4d4d8" },
      400: { value: "#a1a1aa" },
      500: { value: "#71717a" },
      600: { value: "#52525b" },
      700: { value: "#3f3f46" },
      800: { value: "#27272a" },
      900: { value: "#18181b" },
      950: { value: "#111111" },
    },
    red: {
      50: { value: "#fef2f2" },
      100: { value: "#fee2e2" },
      200: { value: "#fecaca" },
      300: { value: "#fca5a5" },
      400: { value: "#f87171" },
      500: { value: "#ef4444" },
      600: { value: "#dc2626" },
      700: { value: "#991919" },
      800: { value: "#511111" },
      900: { value: "#300c0c" },
      950: { value: "#1f0808" },
    },
    orange: {
      50: { value: "#fff7ed" },
      100: { value: "#ffedd5" },
      200: { value: "#fed7aa" },
      300: { value: "#fdba74" },
      400: { value: "#fb923c" },
      500: { value: "#f97316" },
      600: { value: "#ea580c" },
      700: { value: "#92310a" },
      800: { value: "#6c2710" },
      900: { value: "#3b1106" },
      950: { value: "#220a04" },
    },
    yellow: {
      50: { value: "#fefce8" },
      100: { value: "#fef9c3" },
      200: { value: "#fef08a" },
      300: { value: "#fde047" },
      400: { value: "#facc15" },
      500: { value: "#eab308" },
      600: { value: "#ca8a04" },
      700: { value: "#845209" },
      800: { value: "#713f12" },
      900: { value: "#422006" },
      950: { value: "#281304" },
    },
    green: {
      50: { value: "#f0fdf4" },
      100: { value: "#dcfce7" },
      200: { value: "#bbf7d0" },
      300: { value: "#86efac" },
      400: { value: "#4ade80" },
      500: { value: "#22c55e" },
      600: { value: "#16a34a" },
      700: { value: "#116932" },
      800: { value: "#124a28" },
      900: { value: "#042713" },
      950: { value: "#03190c" },
    },
    teal: {
      50: { value: "#f0fdfa" },
      100: { value: "#ccfbf1" },
      200: { value: "#99f6e4" },
      300: { value: "#5eead4" },
      400: { value: "#2dd4bf" },
      500: { value: "#14b8a6" },
      600: { value: "#0d9488" },
      700: { value: "#0c5d56" },
      800: { value: "#114240" },
      900: { value: "#032726" },
      950: { value: "#021716" },
    },
    blue: {
      50: { value: "#eff6ff" },
      100: { value: "#dbeafe" },
      200: { value: "#bfdbfe" },
      300: { value: "#a3cfff" },
      400: { value: "#60a5fa" },
      500: { value: "#3b82f6" },
      600: { value: "#2563eb" },
      700: { value: "#173da6" },
      800: { value: "#1a3478" },
      900: { value: "#14204a" },
      950: { value: "#0c142e" },
    },
    cyan: {
      50: { value: "#ecfeff" },
      100: { value: "#cffafe" },
      200: { value: "#a5f3fc" },
      300: { value: "#67e8f9" },
      400: { value: "#22d3ee" },
      500: { value: "#06b6d4" },
      600: { value: "#0891b2" },
      700: { value: "#0c5c72" },
      800: { value: "#134152" },
      900: { value: "#072a38" },
      950: { value: "#051b24" },
    },
    purple: {
      50: { value: "#faf5ff" },
      100: { value: "#f3e8ff" },
      200: { value: "#e9d5ff" },
      300: { value: "#d8b4fe" },
      400: { value: "#c084fc" },
      500: { value: "#a855f7" },
      600: { value: "#9333ea" },
      700: { value: "#641ba3" },
      800: { value: "#4a1772" },
      900: { value: "#2f0553" },
      950: { value: "#1a032e" },
    },
    pink: {
      50: { value: "#fdf2f8" },
      100: { value: "#fce7f3" },
      200: { value: "#fbcfe8" },
      300: { value: "#f9a8d4" },
      400: { value: "#f472b6" },
      500: { value: "#ec4899" },
      600: { value: "#db2777" },
      700: { value: "#a41752" },
      800: { value: "#6d0e34" },
      900: { value: "#45061f" },
      950: { value: "#2c0514" },
    },
  }),
  GD = Ze.cursor({
    button: { value: "pointer" },
    checkbox: { value: "default" },
    disabled: { value: "not-allowed" },
    menuitem: { value: "default" },
    option: { value: "default" },
    radio: { value: "default" },
    slider: { value: "default" },
    switch: { value: "pointer" },
  }),
  KD = Ze.durations({
    fastest: { value: "50ms" },
    faster: { value: "100ms" },
    fast: { value: "150ms" },
    moderate: { value: "200ms" },
    slow: { value: "300ms" },
    slower: { value: "400ms" },
    slowest: { value: "500ms" },
  }),
  qD = Ze.easings({
    "ease-in": { value: "cubic-bezier(0.42, 0, 1, 1)" },
    "ease-out": { value: "cubic-bezier(0, 0, 0.58, 1)" },
    "ease-in-out": { value: "cubic-bezier(0.42, 0, 0.58, 1)" },
    "ease-in-smooth": { value: "cubic-bezier(0.32, 0.72, 0, 1)" },
  }),
  YD = Ze.fontSizes({
    "2xs": { value: "0.625rem" },
    xs: { value: "0.75rem" },
    sm: { value: "0.875rem" },
    md: { value: "1rem" },
    lg: { value: "1.125rem" },
    xl: { value: "1.25rem" },
    "2xl": { value: "1.5rem" },
    "3xl": { value: "1.875rem" },
    "4xl": { value: "2.25rem" },
    "5xl": { value: "3rem" },
    "6xl": { value: "3.75rem" },
    "7xl": { value: "4.5rem" },
    "8xl": { value: "6rem" },
    "9xl": { value: "8rem" },
  }),
  XD = Ze.fontWeights({
    thin: { value: "100" },
    extralight: { value: "200" },
    light: { value: "300" },
    normal: { value: "400" },
    medium: { value: "500" },
    semibold: { value: "600" },
    bold: { value: "700" },
    extrabold: { value: "800" },
    black: { value: "900" },
  }),
  rm =
    '-apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"',
  JD = Ze.fonts({
    heading: { value: `Inter, ${rm}` },
    body: { value: `Inter, ${rm}` },
    mono: {
      value:
        'SFMono-Regular,Menlo,Monaco,Consolas,"Liberation Mono","Courier New",monospace',
    },
  }),
  QD = pV({
    spin: {
      "0%": { transform: "rotate(0deg)" },
      "100%": { transform: "rotate(360deg)" },
    },
    pulse: { "50%": { opacity: "0.5" } },
    ping: { "75%, 100%": { transform: "scale(2)", opacity: "0" } },
    bounce: {
      "0%, 100%": {
        transform: "translateY(-25%)",
        animationTimingFunction: "cubic-bezier(0.8,0,1,1)",
      },
      "50%": {
        transform: "none",
        animationTimingFunction: "cubic-bezier(0,0,0.2,1)",
      },
    },
    "bg-position": {
      from: { backgroundPosition: "var(--animate-from, 1rem) 0" },
      to: { backgroundPosition: "var(--animate-to, 0) 0" },
    },
    position: {
      from: {
        insetInlineStart: "var(--animate-from-x)",
        insetBlockStart: "var(--animate-from-y)",
      },
      to: {
        insetInlineStart: "var(--animate-to-x)",
        insetBlockStart: "var(--animate-to-y)",
      },
    },
    "circular-progress": {
      "0%": { strokeDasharray: "1, 400", strokeDashoffset: "0" },
      "50%": { strokeDasharray: "400, 400", strokeDashoffset: "-100%" },
      "100%": { strokeDasharray: "400, 400", strokeDashoffset: "-260%" },
    },
    "expand-height": { from: { height: "0" }, to: { height: "var(--height)" } },
    "collapse-height": {
      from: { height: "var(--height)" },
      to: { height: "0" },
    },
    "expand-width": { from: { width: "0" }, to: { width: "var(--width)" } },
    "collapse-width": { from: { height: "var(--width)" }, to: { height: "0" } },
    "fade-in": { from: { opacity: 0 }, to: { opacity: 1 } },
    "fade-out": { from: { opacity: 1 }, to: { opacity: 0 } },
    "slide-from-left-full": {
      from: { translate: "-100% 0" },
      to: { translate: "0 0" },
    },
    "slide-from-right-full": {
      from: { translate: "100% 0" },
      to: { translate: "0 0" },
    },
    "slide-from-top-full": {
      from: { translate: "0 -100%" },
      to: { translate: "0 0" },
    },
    "slide-from-bottom-full": {
      from: { translate: "0 100%" },
      to: { translate: "0 0" },
    },
    "slide-to-left-full": {
      from: { translate: "0 0" },
      to: { translate: "-100% 0" },
    },
    "slide-to-right-full": {
      from: { translate: "0 0" },
      to: { translate: "100% 0" },
    },
    "slide-to-top-full": {
      from: { translate: "0 0" },
      to: { translate: "0 -100%" },
    },
    "slide-to-bottom-full": {
      from: { translate: "0 0" },
      to: { translate: "0 100%" },
    },
    "slide-from-top": {
      "0%": { translate: "0 -0.5rem" },
      to: { translate: "0" },
    },
    "slide-from-bottom": {
      "0%": { translate: "0 0.5rem" },
      to: { translate: "0" },
    },
    "slide-from-left": {
      "0%": { translate: "-0.5rem 0" },
      to: { translate: "0" },
    },
    "slide-from-right": {
      "0%": { translate: "0.5rem 0" },
      to: { translate: "0" },
    },
    "slide-to-top": {
      "0%": { translate: "0" },
      to: { translate: "0 -0.5rem" },
    },
    "slide-to-bottom": {
      "0%": { translate: "0" },
      to: { translate: "0 0.5rem" },
    },
    "slide-to-left": {
      "0%": { translate: "0" },
      to: { translate: "-0.5rem 0" },
    },
    "slide-to-right": {
      "0%": { translate: "0" },
      to: { translate: "0.5rem 0" },
    },
    "scale-in": { from: { scale: "0.95" }, to: { scale: "1" } },
    "scale-out": { from: { scale: "1" }, to: { scale: "0.95" } },
  }),
  ZD = Ze.letterSpacings({
    tighter: { value: "-0.05em" },
    tight: { value: "-0.025em" },
    wide: { value: "0.025em" },
    wider: { value: "0.05em" },
    widest: { value: "0.1em" },
  }),
  e$ = Ze.lineHeights({
    shorter: { value: 1.25 },
    short: { value: 1.375 },
    moderate: { value: 1.5 },
    tall: { value: 1.625 },
    taller: { value: 2 },
  }),
  t$ = Ze.radii({
    none: { value: "0" },
    "2xs": { value: "0.0625rem" },
    xs: { value: "0.125rem" },
    sm: { value: "0.25rem" },
    md: { value: "0.375rem" },
    lg: { value: "0.5rem" },
    xl: { value: "0.75rem" },
    "2xl": { value: "1rem" },
    "3xl": { value: "1.5rem" },
    "4xl": { value: "2rem" },
    full: { value: "9999px" },
  }),
  Wx = Ze.spacing({
    0.5: { value: "0.125rem" },
    1: { value: "0.25rem" },
    1.5: { value: "0.375rem" },
    2: { value: "0.5rem" },
    2.5: { value: "0.625rem" },
    3: { value: "0.75rem" },
    3.5: { value: "0.875rem" },
    4: { value: "1rem" },
    4.5: { value: "1.125rem" },
    5: { value: "1.25rem" },
    6: { value: "1.5rem" },
    7: { value: "1.75rem" },
    8: { value: "2rem" },
    9: { value: "2.25rem" },
    10: { value: "2.5rem" },
    11: { value: "2.75rem" },
    12: { value: "3rem" },
    14: { value: "3.5rem" },
    16: { value: "4rem" },
    20: { value: "5rem" },
    24: { value: "6rem" },
    28: { value: "7rem" },
    32: { value: "8rem" },
    36: { value: "9rem" },
    40: { value: "10rem" },
    44: { value: "11rem" },
    48: { value: "12rem" },
    52: { value: "13rem" },
    56: { value: "14rem" },
    60: { value: "15rem" },
    64: { value: "16rem" },
    72: { value: "18rem" },
    80: { value: "20rem" },
    96: { value: "24rem" },
  }),
  n$ = Ze.sizes({
    "3xs": { value: "14rem" },
    "2xs": { value: "16rem" },
    xs: { value: "20rem" },
    sm: { value: "24rem" },
    md: { value: "28rem" },
    lg: { value: "32rem" },
    xl: { value: "36rem" },
    "2xl": { value: "42rem" },
    "3xl": { value: "48rem" },
    "4xl": { value: "56rem" },
    "5xl": { value: "64rem" },
    "6xl": { value: "72rem" },
    "7xl": { value: "80rem" },
    "8xl": { value: "90rem" },
  }),
  r$ = Ze.sizes({
    max: { value: "max-content" },
    min: { value: "min-content" },
    fit: { value: "fit-content" },
    prose: { value: "60ch" },
    full: { value: "100%" },
    dvh: { value: "100dvh" },
    svh: { value: "100svh" },
    lvh: { value: "100lvh" },
    dvw: { value: "100dvw" },
    svw: { value: "100svw" },
    lvw: { value: "100lvw" },
    vw: { value: "100vw" },
    vh: { value: "100vh" },
  }),
  o$ = Ze.sizes({
    "1/2": { value: "50%" },
    "1/3": { value: "33.333333%" },
    "2/3": { value: "66.666667%" },
    "1/4": { value: "25%" },
    "3/4": { value: "75%" },
    "1/5": { value: "20%" },
    "2/5": { value: "40%" },
    "3/5": { value: "60%" },
    "4/5": { value: "80%" },
    "1/6": { value: "16.666667%" },
    "2/6": { value: "33.333333%" },
    "3/6": { value: "50%" },
    "4/6": { value: "66.666667%" },
    "5/6": { value: "83.333333%" },
    "1/12": { value: "8.333333%" },
    "2/12": { value: "16.666667%" },
    "3/12": { value: "25%" },
    "4/12": { value: "33.333333%" },
    "5/12": { value: "41.666667%" },
    "6/12": { value: "50%" },
    "7/12": { value: "58.333333%" },
    "8/12": { value: "66.666667%" },
    "9/12": { value: "75%" },
    "10/12": { value: "83.333333%" },
    "11/12": { value: "91.666667%" },
  }),
  i$ = Ze.sizes({ ...n$, ...Wx, ...o$, ...r$ }),
  s$ = Ze.zIndex({
    hide: { value: -1 },
    base: { value: 0 },
    docked: { value: 10 },
    dropdown: { value: 1e3 },
    sticky: { value: 1100 },
    banner: { value: 1200 },
    overlay: { value: 1300 },
    modal: { value: 1400 },
    popover: { value: 1500 },
    skipNav: { value: 1600 },
    toast: { value: 1700 },
    tooltip: { value: 1800 },
    max: { value: 2147483647 },
  }),
  a$ = vx({
    preflight: !0,
    cssVarsPrefix: "chakra",
    cssVarsRoot: ":where(html, .chakra-theme)",
    globalCss: UF,
    theme: {
      breakpoints: jF,
      keyframes: QD,
      tokens: {
        aspectRatios: jD,
        animations: BD,
        blurs: UD,
        borders: WD,
        colors: HD,
        durations: KD,
        easings: qD,
        fonts: JD,
        fontSizes: YD,
        fontWeights: XD,
        letterSpacings: ZD,
        lineHeights: e$,
        radii: t$,
        spacing: Wx,
        sizes: i$,
        zIndex: s$,
        cursor: GD,
      },
      semanticTokens: { colors: c2, shadows: d2, radii: u2 },
      recipes: l2,
      slotRecipes: LD,
      textStyles: zD,
      layerStyles: WF,
      animationStyles: HF,
    },
  }),
  l$ = yx(kV, a$),
  c$ = zF(l$);
let u$ = { data: "" },
  d$ = (e) =>
    typeof window == "object"
      ? (
          (e ? e.querySelector("#_goober") : window._goober) ||
          Object.assign(
            (e || document.head).appendChild(document.createElement("style")),
            { innerHTML: " ", id: "_goober" },
          )
        ).firstChild
      : e || u$,
  f$ = /(?:([\u0080-\uFFFF\w-%@]+) *:? *([^{;]+?);|([^;}{]*?) *{)|(}\s*)/g,
  g$ = /\/\*[^]*?\*\/|  +/g,
  om = /\n+/g,
  xr = (e, t) => {
    let n = "",
      r = "",
      o = "";
    for (let i in e) {
      let s = e[i];
      i[0] == "@"
        ? i[1] == "i"
          ? (n = i + " " + s + ";")
          : (r +=
              i[1] == "f"
                ? xr(s, i)
                : i + "{" + xr(s, i[1] == "k" ? "" : t) + "}")
        : typeof s == "object"
          ? (r += xr(
              s,
              t
                ? t.replace(/([^,])+/g, (a) =>
                    i.replace(/([^,]*:\S+\([^)]*\))|([^,])+/g, (l) =>
                      /&/.test(l) ? l.replace(/&/g, a) : a ? a + " " + l : l,
                    ),
                  )
                : i,
            ))
          : s != null &&
            ((i = /^--/.test(i) ? i : i.replace(/[A-Z]/g, "-$&").toLowerCase()),
            (o += xr.p ? xr.p(i, s) : i + ":" + s + ";"));
    }
    return n + (t && o ? t + "{" + o + "}" : o) + r;
  },
  Gn = {},
  Hx = (e) => {
    if (typeof e == "object") {
      let t = "";
      for (let n in e) t += n + Hx(e[n]);
      return t;
    }
    return e;
  },
  h$ = (e, t, n, r, o) => {
    let i = Hx(e),
      s =
        Gn[i] ||
        (Gn[i] = ((l) => {
          let c = 0,
            u = 11;
          for (; c < l.length; ) u = (101 * u + l.charCodeAt(c++)) >>> 0;
          return "go" + u;
        })(i));
    if (!Gn[s]) {
      let l =
        i !== e
          ? e
          : ((c) => {
              let u,
                d,
                f = [{}];
              for (; (u = f$.exec(c.replace(g$, ""))); )
                u[4]
                  ? f.shift()
                  : u[3]
                    ? ((d = u[3].replace(om, " ").trim()),
                      f.unshift((f[0][d] = f[0][d] || {})))
                    : (f[0][u[1]] = u[2].replace(om, " ").trim());
              return f[0];
            })(e);
      Gn[s] = xr(o ? { ["@keyframes " + s]: l } : l, n ? "" : "." + s);
    }
    let a = n && Gn.g ? Gn.g : null;
    return (
      n && (Gn.g = Gn[s]),
      ((l, c, u, d) => {
        d
          ? (c.data = c.data.replace(d, l))
          : c.data.indexOf(l) === -1 && (c.data = u ? l + c.data : c.data + l);
      })(Gn[s], t, r, a),
      s
    );
  },
  p$ = (e, t, n) =>
    e.reduce((r, o, i) => {
      let s = t[i];
      if (s && s.call) {
        let a = s(n),
          l = (a && a.props && a.props.className) || (/^go/.test(a) && a);
        s = l
          ? "." + l
          : a && typeof a == "object"
            ? a.props
              ? ""
              : xr(a, "")
            : a === !1
              ? ""
              : a;
      }
      return r + o + (s ?? "");
    }, "");
function Hl(e) {
  let t = this || {},
    n = e.call ? e(t.p) : e;
  return h$(
    n.unshift
      ? n.raw
        ? p$(n, [].slice.call(arguments, 1), t.p)
        : n.reduce((r, o) => Object.assign(r, o && o.call ? o(t.p) : o), {})
      : n,
    d$(t.target),
    t.g,
    t.o,
    t.k,
  );
}
let Gx, Gu, Ku;
Hl.bind({ g: 1 });
let fr = Hl.bind({ k: 1 });
function m$(e, t, n, r) {
  ((xr.p = t), (Gx = e), (Gu = n), (Ku = r));
}
function Dr(e, t) {
  let n = this || {};
  return function () {
    let r = arguments;
    function o(i, s) {
      let a = Object.assign({}, i),
        l = a.className || o.className;
      ((n.p = Object.assign({ theme: Gu && Gu() }, a)),
        (n.o = / *go\d+/.test(l)),
        (a.className = Hl.apply(n, r) + (l ? " " + l : "")));
      let c = e;
      return (
        e[0] && ((c = a.as || e), delete a.as),
        Ku && c[0] && Ku(a),
        Gx(c, a)
      );
    }
    return o;
  };
}
var v$ = (e) => typeof e == "function",
  Ja = (e, t) => (v$(e) ? e(t) : e),
  y$ = (() => {
    let e = 0;
    return () => (++e).toString();
  })(),
  Kx = (() => {
    let e;
    return () => {
      if (e === void 0 && typeof window < "u") {
        let t = matchMedia("(prefers-reduced-motion: reduce)");
        e = !t || t.matches;
      }
      return e;
    };
  })(),
  b$ = 20,
  qx = (e, t) => {
    switch (t.type) {
      case 0:
        return { ...e, toasts: [t.toast, ...e.toasts].slice(0, b$) };
      case 1:
        return {
          ...e,
          toasts: e.toasts.map((i) =>
            i.id === t.toast.id ? { ...i, ...t.toast } : i,
          ),
        };
      case 2:
        let { toast: n } = t;
        return qx(e, {
          type: e.toasts.find((i) => i.id === n.id) ? 1 : 0,
          toast: n,
        });
      case 3:
        let { toastId: r } = t;
        return {
          ...e,
          toasts: e.toasts.map((i) =>
            i.id === r || r === void 0
              ? { ...i, dismissed: !0, visible: !1 }
              : i,
          ),
        };
      case 4:
        return t.toastId === void 0
          ? { ...e, toasts: [] }
          : { ...e, toasts: e.toasts.filter((i) => i.id !== t.toastId) };
      case 5:
        return { ...e, pausedAt: t.time };
      case 6:
        let o = t.time - (e.pausedAt || 0);
        return {
          ...e,
          pausedAt: void 0,
          toasts: e.toasts.map((i) => ({
            ...i,
            pauseDuration: i.pauseDuration + o,
          })),
        };
    }
  },
  wa = [],
  Yr = { toasts: [], pausedAt: void 0 },
  ho = (e) => {
    ((Yr = qx(Yr, e)),
      wa.forEach((t) => {
        t(Yr);
      }));
  },
  x$ = { blank: 4e3, error: 4e3, success: 2e3, loading: 1 / 0, custom: 4e3 },
  S$ = (e = {}) => {
    let [t, n] = x.useState(Yr),
      r = x.useRef(Yr);
    x.useEffect(
      () => (
        r.current !== Yr && n(Yr),
        wa.push(n),
        () => {
          let i = wa.indexOf(n);
          i > -1 && wa.splice(i, 1);
        }
      ),
      [],
    );
    let o = t.toasts.map((i) => {
      var s, a, l;
      return {
        ...e,
        ...e[i.type],
        ...i,
        removeDelay:
          i.removeDelay ||
          ((s = e[i.type]) == null ? void 0 : s.removeDelay) ||
          (e == null ? void 0 : e.removeDelay),
        duration:
          i.duration ||
          ((a = e[i.type]) == null ? void 0 : a.duration) ||
          (e == null ? void 0 : e.duration) ||
          x$[i.type],
        style: {
          ...e.style,
          ...((l = e[i.type]) == null ? void 0 : l.style),
          ...i.style,
        },
      };
    });
    return { ...t, toasts: o };
  },
  w$ = (e, t = "blank", n) => ({
    createdAt: Date.now(),
    visible: !0,
    dismissed: !1,
    type: t,
    ariaProps: { role: "status", "aria-live": "polite" },
    message: e,
    pauseDuration: 0,
    ...n,
    id: (n == null ? void 0 : n.id) || y$(),
  }),
  Is = (e) => (t, n) => {
    let r = w$(t, e, n);
    return (ho({ type: 2, toast: r }), r.id);
  },
  ce = (e, t) => Is("blank")(e, t);
ce.error = Is("error");
ce.success = Is("success");
ce.loading = Is("loading");
ce.custom = Is("custom");
ce.dismiss = (e) => {
  ho({ type: 3, toastId: e });
};
ce.remove = (e) => ho({ type: 4, toastId: e });
ce.promise = (e, t, n) => {
  let r = ce.loading(t.loading, { ...n, ...(n == null ? void 0 : n.loading) });
  return (
    typeof e == "function" && (e = e()),
    e
      .then((o) => {
        let i = t.success ? Ja(t.success, o) : void 0;
        return (
          i
            ? ce.success(i, {
                id: r,
                ...n,
                ...(n == null ? void 0 : n.success),
              })
            : ce.dismiss(r),
          o
        );
      })
      .catch((o) => {
        let i = t.error ? Ja(t.error, o) : void 0;
        i
          ? ce.error(i, { id: r, ...n, ...(n == null ? void 0 : n.error) })
          : ce.dismiss(r);
      }),
    e
  );
};
var C$ = (e, t) => {
    ho({ type: 1, toast: { id: e, height: t } });
  },
  E$ = () => {
    ho({ type: 5, time: Date.now() });
  },
  Gi = new Map(),
  I$ = 1e3,
  R$ = (e, t = I$) => {
    if (Gi.has(e)) return;
    let n = setTimeout(() => {
      (Gi.delete(e), ho({ type: 4, toastId: e }));
    }, t);
    Gi.set(e, n);
  },
  k$ = (e) => {
    let { toasts: t, pausedAt: n } = S$(e);
    x.useEffect(() => {
      if (n) return;
      let i = Date.now(),
        s = t.map((a) => {
          if (a.duration === 1 / 0) return;
          let l = (a.duration || 0) + a.pauseDuration - (i - a.createdAt);
          if (l < 0) {
            a.visible && ce.dismiss(a.id);
            return;
          }
          return setTimeout(() => ce.dismiss(a.id), l);
        });
      return () => {
        s.forEach((a) => a && clearTimeout(a));
      };
    }, [t, n]);
    let r = x.useCallback(() => {
        n && ho({ type: 6, time: Date.now() });
      }, [n]),
      o = x.useCallback(
        (i, s) => {
          let {
              reverseOrder: a = !1,
              gutter: l = 8,
              defaultPosition: c,
            } = s || {},
            u = t.filter(
              (g) => (g.position || c) === (i.position || c) && g.height,
            ),
            d = u.findIndex((g) => g.id === i.id),
            f = u.filter((g, h) => h < d && g.visible).length;
          return u
            .filter((g) => g.visible)
            .slice(...(a ? [f + 1] : [0, f]))
            .reduce((g, h) => g + (h.height || 0) + l, 0);
        },
        [t],
      );
    return (
      x.useEffect(() => {
        t.forEach((i) => {
          if (i.dismissed) R$(i.id, i.removeDelay);
          else {
            let s = Gi.get(i.id);
            s && (clearTimeout(s), Gi.delete(i.id));
          }
        });
      }, [t]),
      {
        toasts: t,
        handlers: {
          updateHeight: C$,
          startPause: E$,
          endPause: r,
          calculateOffset: o,
        },
      }
    );
  },
  P$ = fr`
from {
  transform: scale(0) rotate(45deg);
	opacity: 0;
}
to {
 transform: scale(1) rotate(45deg);
  opacity: 1;
}`,
  T$ = fr`
from {
  transform: scale(0);
  opacity: 0;
}
to {
  transform: scale(1);
  opacity: 1;
}`,
  O$ = fr`
from {
  transform: scale(0) rotate(90deg);
	opacity: 0;
}
to {
  transform: scale(1) rotate(90deg);
	opacity: 1;
}`,
  _$ = Dr("div")`
  width: 20px;
  opacity: 0;
  height: 20px;
  border-radius: 10px;
  background: ${(e) => e.primary || "#ff4b4b"};
  position: relative;
  transform: rotate(45deg);

  animation: ${P$} 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275)
    forwards;
  animation-delay: 100ms;

  &:after,
  &:before {
    content: '';
    animation: ${T$} 0.15s ease-out forwards;
    animation-delay: 150ms;
    position: absolute;
    border-radius: 3px;
    opacity: 0;
    background: ${(e) => e.secondary || "#fff"};
    bottom: 9px;
    left: 4px;
    height: 2px;
    width: 12px;
  }

  &:before {
    animation: ${O$} 0.15s ease-out forwards;
    animation-delay: 180ms;
    transform: rotate(90deg);
  }
`,
  A$ = fr`
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
`,
  N$ = Dr("div")`
  width: 12px;
  height: 12px;
  box-sizing: border-box;
  border: 2px solid;
  border-radius: 100%;
  border-color: ${(e) => e.secondary || "#e0e0e0"};
  border-right-color: ${(e) => e.primary || "#616161"};
  animation: ${A$} 1s linear infinite;
`,
  V$ = fr`
from {
  transform: scale(0) rotate(45deg);
	opacity: 0;
}
to {
  transform: scale(1) rotate(45deg);
	opacity: 1;
}`,
  F$ = fr`
0% {
	height: 0;
	width: 0;
	opacity: 0;
}
40% {
  height: 0;
	width: 6px;
	opacity: 1;
}
100% {
  opacity: 1;
  height: 10px;
}`,
  D$ = Dr("div")`
  width: 20px;
  opacity: 0;
  height: 20px;
  border-radius: 10px;
  background: ${(e) => e.primary || "#61d345"};
  position: relative;
  transform: rotate(45deg);

  animation: ${V$} 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275)
    forwards;
  animation-delay: 100ms;
  &:after {
    content: '';
    box-sizing: border-box;
    animation: ${F$} 0.2s ease-out forwards;
    opacity: 0;
    animation-delay: 200ms;
    position: absolute;
    border-right: 2px solid;
    border-bottom: 2px solid;
    border-color: ${(e) => e.secondary || "#fff"};
    bottom: 6px;
    left: 6px;
    height: 10px;
    width: 6px;
  }
`,
  $$ = Dr("div")`
  position: absolute;
`,
  M$ = Dr("div")`
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  min-width: 20px;
  min-height: 20px;
`,
  L$ = fr`
from {
  transform: scale(0.6);
  opacity: 0.4;
}
to {
  transform: scale(1);
  opacity: 1;
}`,
  z$ = Dr("div")`
  position: relative;
  transform: scale(0.6);
  opacity: 0.4;
  min-width: 20px;
  animation: ${L$} 0.3s 0.12s cubic-bezier(0.175, 0.885, 0.32, 1.275)
    forwards;
`,
  B$ = ({ toast: e }) => {
    let { icon: t, type: n, iconTheme: r } = e;
    return t !== void 0
      ? typeof t == "string"
        ? x.createElement(z$, null, t)
        : t
      : n === "blank"
        ? null
        : x.createElement(
            M$,
            null,
            x.createElement(N$, { ...r }),
            n !== "loading" &&
              x.createElement(
                $$,
                null,
                n === "error"
                  ? x.createElement(_$, { ...r })
                  : x.createElement(D$, { ...r }),
              ),
          );
  },
  j$ = (e) => `
0% {transform: translate3d(0,${e * -200}%,0) scale(.6); opacity:.5;}
100% {transform: translate3d(0,0,0) scale(1); opacity:1;}
`,
  U$ = (e) => `
0% {transform: translate3d(0,0,-1px) scale(1); opacity:1;}
100% {transform: translate3d(0,${e * -150}%,-1px) scale(.6); opacity:0;}
`,
  W$ = "0%{opacity:0;} 100%{opacity:1;}",
  H$ = "0%{opacity:1;} 100%{opacity:0;}",
  G$ = Dr("div")`
  display: flex;
  align-items: center;
  background: #fff;
  color: #363636;
  line-height: 1.3;
  will-change: transform;
  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1), 0 3px 3px rgba(0, 0, 0, 0.05);
  max-width: 350px;
  pointer-events: auto;
  padding: 8px 10px;
  border-radius: 8px;
`,
  K$ = Dr("div")`
  display: flex;
  justify-content: center;
  margin: 4px 10px;
  color: inherit;
  flex: 1 1 auto;
  white-space: pre-line;
`,
  q$ = (e, t) => {
    let n = e.includes("top") ? 1 : -1,
      [r, o] = Kx() ? [W$, H$] : [j$(n), U$(n)];
    return {
      animation: t
        ? `${fr(r)} 0.35s cubic-bezier(.21,1.02,.73,1) forwards`
        : `${fr(o)} 0.4s forwards cubic-bezier(.06,.71,.55,1)`,
    };
  },
  Y$ = x.memo(({ toast: e, position: t, style: n, children: r }) => {
    let o = e.height
        ? q$(e.position || t || "top-center", e.visible)
        : { opacity: 0 },
      i = x.createElement(B$, { toast: e }),
      s = x.createElement(K$, { ...e.ariaProps }, Ja(e.message, e));
    return x.createElement(
      G$,
      { className: e.className, style: { ...o, ...n, ...e.style } },
      typeof r == "function"
        ? r({ icon: i, message: s })
        : x.createElement(x.Fragment, null, i, s),
    );
  });
m$(x.createElement);
var X$ = ({
    id: e,
    className: t,
    style: n,
    onHeightUpdate: r,
    children: o,
  }) => {
    let i = x.useCallback(
      (s) => {
        if (s) {
          let a = () => {
            let l = s.getBoundingClientRect().height;
            r(e, l);
          };
          (a(),
            new MutationObserver(a).observe(s, {
              subtree: !0,
              childList: !0,
              characterData: !0,
            }));
        }
      },
      [e, r],
    );
    return x.createElement("div", { ref: i, className: t, style: n }, o);
  },
  J$ = (e, t) => {
    let n = e.includes("top"),
      r = n ? { top: 0 } : { bottom: 0 },
      o = e.includes("center")
        ? { justifyContent: "center" }
        : e.includes("right")
          ? { justifyContent: "flex-end" }
          : {};
    return {
      left: 0,
      right: 0,
      display: "flex",
      position: "absolute",
      transition: Kx() ? void 0 : "all 230ms cubic-bezier(.21,1.02,.73,1)",
      transform: `translateY(${t * (n ? 1 : -1)}px)`,
      ...r,
      ...o,
    };
  },
  Q$ = Hl`
  z-index: 9999;
  > * {
    pointer-events: auto;
  }
`,
  Js = 16,
  Z$ = ({
    reverseOrder: e,
    position: t = "top-center",
    toastOptions: n,
    gutter: r,
    children: o,
    containerStyle: i,
    containerClassName: s,
  }) => {
    let { toasts: a, handlers: l } = k$(n);
    return x.createElement(
      "div",
      {
        id: "_rht_toaster",
        style: {
          position: "fixed",
          zIndex: 9999,
          top: Js,
          left: Js,
          right: Js,
          bottom: Js,
          pointerEvents: "none",
          ...i,
        },
        className: s,
        onMouseEnter: l.startPause,
        onMouseLeave: l.endPause,
      },
      a.map((c) => {
        let u = c.position || t,
          d = l.calculateOffset(c, {
            reverseOrder: e,
            gutter: r,
            defaultPosition: t,
          }),
          f = J$(u, d);
        return x.createElement(
          X$,
          {
            id: c.id,
            key: c.id,
            onHeightUpdate: l.updateHeight,
            className: c.visible ? Q$ : "",
            style: f,
          },
          c.type === "custom"
            ? Ja(c.message, c)
            : o
              ? o(c)
              : x.createElement(Y$, { toast: c, position: u }),
        );
      }),
    );
  };
/**
 * @remix-run/router v1.23.0
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */ function cs() {
  return (
    (cs = Object.assign
      ? Object.assign.bind()
      : function (e) {
          for (var t = 1; t < arguments.length; t++) {
            var n = arguments[t];
            for (var r in n)
              Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);
          }
          return e;
        }),
    cs.apply(this, arguments)
  );
}
var Er;
(function (e) {
  ((e.Pop = "POP"), (e.Push = "PUSH"), (e.Replace = "REPLACE"));
})(Er || (Er = {}));
const im = "popstate";
function e5(e) {
  e === void 0 && (e = {});
  function t(r, o) {
    let { pathname: i, search: s, hash: a } = r.location;
    return qu(
      "",
      { pathname: i, search: s, hash: a },
      (o.state && o.state.usr) || null,
      (o.state && o.state.key) || "default",
    );
  }
  function n(r, o) {
    return typeof o == "string" ? o : Xx(o);
  }
  return n5(t, n, null, e);
}
function Qe(e, t) {
  if (e === !1 || e === null || typeof e > "u") throw new Error(t);
}
function Yx(e, t) {
  if (!e) {
    typeof console < "u" && console.warn(t);
    try {
      throw new Error(t);
    } catch {}
  }
}
function t5() {
  return Math.random().toString(36).substr(2, 8);
}
function sm(e, t) {
  return { usr: e.state, key: e.key, idx: t };
}
function qu(e, t, n, r) {
  return (
    n === void 0 && (n = null),
    cs(
      { pathname: typeof e == "string" ? e : e.pathname, search: "", hash: "" },
      typeof t == "string" ? mi(t) : t,
      { state: n, key: (t && t.key) || r || t5() },
    )
  );
}
function Xx(e) {
  let { pathname: t = "/", search: n = "", hash: r = "" } = e;
  return (
    n && n !== "?" && (t += n.charAt(0) === "?" ? n : "?" + n),
    r && r !== "#" && (t += r.charAt(0) === "#" ? r : "#" + r),
    t
  );
}
function mi(e) {
  let t = {};
  if (e) {
    let n = e.indexOf("#");
    n >= 0 && ((t.hash = e.substr(n)), (e = e.substr(0, n)));
    let r = e.indexOf("?");
    (r >= 0 && ((t.search = e.substr(r)), (e = e.substr(0, r))),
      e && (t.pathname = e));
  }
  return t;
}
function n5(e, t, n, r) {
  r === void 0 && (r = {});
  let { window: o = document.defaultView, v5Compat: i = !1 } = r,
    s = o.history,
    a = Er.Pop,
    l = null,
    c = u();
  c == null && ((c = 0), s.replaceState(cs({}, s.state, { idx: c }), ""));
  function u() {
    return (s.state || { idx: null }).idx;
  }
  function d() {
    a = Er.Pop;
    let v = u(),
      b = v == null ? null : v - c;
    ((c = v), l && l({ action: a, location: p.location, delta: b }));
  }
  function f(v, b) {
    a = Er.Push;
    let S = qu(p.location, v, b);
    c = u() + 1;
    let w = sm(S, c),
      E = p.createHref(S);
    try {
      s.pushState(w, "", E);
    } catch (R) {
      if (R instanceof DOMException && R.name === "DataCloneError") throw R;
      o.location.assign(E);
    }
    i && l && l({ action: a, location: p.location, delta: 1 });
  }
  function g(v, b) {
    a = Er.Replace;
    let S = qu(p.location, v, b);
    c = u();
    let w = sm(S, c),
      E = p.createHref(S);
    (s.replaceState(w, "", E),
      i && l && l({ action: a, location: p.location, delta: 0 }));
  }
  function h(v) {
    let b = o.location.origin !== "null" ? o.location.origin : o.location.href,
      S = typeof v == "string" ? v : Xx(v);
    return (
      (S = S.replace(/ $/, "%20")),
      Qe(
        b,
        "No window.location.(origin|href) available to create URL for href: " +
          S,
      ),
      new URL(S, b)
    );
  }
  let p = {
    get action() {
      return a;
    },
    get location() {
      return e(o, s);
    },
    listen(v) {
      if (l) throw new Error("A history only accepts one active listener");
      return (
        o.addEventListener(im, d),
        (l = v),
        () => {
          (o.removeEventListener(im, d), (l = null));
        }
      );
    },
    createHref(v) {
      return t(o, v);
    },
    createURL: h,
    encodeLocation(v) {
      let b = h(v);
      return { pathname: b.pathname, search: b.search, hash: b.hash };
    },
    push: f,
    replace: g,
    go(v) {
      return s.go(v);
    },
  };
  return p;
}
var am;
(function (e) {
  ((e.data = "data"),
    (e.deferred = "deferred"),
    (e.redirect = "redirect"),
    (e.error = "error"));
})(am || (am = {}));
function r5(e, t, n) {
  return (n === void 0 && (n = "/"), o5(e, t, n));
}
function o5(e, t, n, r) {
  let o = typeof t == "string" ? mi(t) : t,
    i = Zx(o.pathname || "/", n);
  if (i == null) return null;
  let s = Jx(e);
  i5(s);
  let a = null;
  for (let l = 0; a == null && l < s.length; ++l) {
    let c = v5(i);
    a = h5(s[l], c);
  }
  return a;
}
function Jx(e, t, n, r) {
  (t === void 0 && (t = []),
    n === void 0 && (n = []),
    r === void 0 && (r = ""));
  let o = (i, s, a) => {
    let l = {
      relativePath: a === void 0 ? i.path || "" : a,
      caseSensitive: i.caseSensitive === !0,
      childrenIndex: s,
      route: i,
    };
    l.relativePath.startsWith("/") &&
      (Qe(
        l.relativePath.startsWith(r),
        'Absolute route path "' +
          l.relativePath +
          '" nested under path ' +
          ('"' + r + '" is not valid. An absolute child route path ') +
          "must start with the combined path of all its parent routes.",
      ),
      (l.relativePath = l.relativePath.slice(r.length)));
    let c = no([r, l.relativePath]),
      u = n.concat(l);
    (i.children &&
      i.children.length > 0 &&
      (Qe(
        i.index !== !0,
        "Index routes must not have child routes. Please remove " +
          ('all child routes from route path "' + c + '".'),
      ),
      Jx(i.children, t, u, c)),
      !(i.path == null && !i.index) &&
        t.push({ path: c, score: f5(c, i.index), routesMeta: u }));
  };
  return (
    e.forEach((i, s) => {
      var a;
      if (i.path === "" || !((a = i.path) != null && a.includes("?"))) o(i, s);
      else for (let l of Qx(i.path)) o(i, s, l);
    }),
    t
  );
}
function Qx(e) {
  let t = e.split("/");
  if (t.length === 0) return [];
  let [n, ...r] = t,
    o = n.endsWith("?"),
    i = n.replace(/\?$/, "");
  if (r.length === 0) return o ? [i, ""] : [i];
  let s = Qx(r.join("/")),
    a = [];
  return (
    a.push(...s.map((l) => (l === "" ? i : [i, l].join("/")))),
    o && a.push(...s),
    a.map((l) => (e.startsWith("/") && l === "" ? "/" : l))
  );
}
function i5(e) {
  e.sort((t, n) =>
    t.score !== n.score
      ? n.score - t.score
      : g5(
          t.routesMeta.map((r) => r.childrenIndex),
          n.routesMeta.map((r) => r.childrenIndex),
        ),
  );
}
const s5 = /^:[\w-]+$/,
  a5 = 3,
  l5 = 2,
  c5 = 1,
  u5 = 10,
  d5 = -2,
  lm = (e) => e === "*";
function f5(e, t) {
  let n = e.split("/"),
    r = n.length;
  return (
    n.some(lm) && (r += d5),
    t && (r += l5),
    n
      .filter((o) => !lm(o))
      .reduce((o, i) => o + (s5.test(i) ? a5 : i === "" ? c5 : u5), r)
  );
}
function g5(e, t) {
  return e.length === t.length && e.slice(0, -1).every((r, o) => r === t[o])
    ? e[e.length - 1] - t[t.length - 1]
    : 0;
}
function h5(e, t, n) {
  let { routesMeta: r } = e,
    o = {},
    i = "/",
    s = [];
  for (let a = 0; a < r.length; ++a) {
    let l = r[a],
      c = a === r.length - 1,
      u = i === "/" ? t : t.slice(i.length) || "/",
      d = p5(
        { path: l.relativePath, caseSensitive: l.caseSensitive, end: c },
        u,
      ),
      f = l.route;
    if (!d) return null;
    (Object.assign(o, d.params),
      s.push({
        params: o,
        pathname: no([i, d.pathname]),
        pathnameBase: S5(no([i, d.pathnameBase])),
        route: f,
      }),
      d.pathnameBase !== "/" && (i = no([i, d.pathnameBase])));
  }
  return s;
}
function p5(e, t) {
  typeof e == "string" && (e = { path: e, caseSensitive: !1, end: !0 });
  let [n, r] = m5(e.path, e.caseSensitive, e.end),
    o = t.match(n);
  if (!o) return null;
  let i = o[0],
    s = i.replace(/(.)\/+$/, "$1"),
    a = o.slice(1);
  return {
    params: r.reduce((c, u, d) => {
      let { paramName: f, isOptional: g } = u;
      if (f === "*") {
        let p = a[d] || "";
        s = i.slice(0, i.length - p.length).replace(/(.)\/+$/, "$1");
      }
      const h = a[d];
      return (
        g && !h ? (c[f] = void 0) : (c[f] = (h || "").replace(/%2F/g, "/")),
        c
      );
    }, {}),
    pathname: i,
    pathnameBase: s,
    pattern: e,
  };
}
function m5(e, t, n) {
  (t === void 0 && (t = !1),
    n === void 0 && (n = !0),
    Yx(
      e === "*" || !e.endsWith("*") || e.endsWith("/*"),
      'Route path "' +
        e +
        '" will be treated as if it were ' +
        ('"' + e.replace(/\*$/, "/*") + '" because the `*` character must ') +
        "always follow a `/` in the pattern. To get rid of this warning, " +
        ('please change the route path to "' + e.replace(/\*$/, "/*") + '".'),
    ));
  let r = [],
    o =
      "^" +
      e
        .replace(/\/*\*?$/, "")
        .replace(/^\/*/, "/")
        .replace(/[\\.*+^${}|()[\]]/g, "\\$&")
        .replace(
          /\/:([\w-]+)(\?)?/g,
          (s, a, l) => (
            r.push({ paramName: a, isOptional: l != null }),
            l ? "/?([^\\/]+)?" : "/([^\\/]+)"
          ),
        );
  return (
    e.endsWith("*")
      ? (r.push({ paramName: "*" }),
        (o += e === "*" || e === "/*" ? "(.*)$" : "(?:\\/(.+)|\\/*)$"))
      : n
        ? (o += "\\/*$")
        : e !== "" && e !== "/" && (o += "(?:(?=\\/|$))"),
    [new RegExp(o, t ? void 0 : "i"), r]
  );
}
function v5(e) {
  try {
    return e
      .split("/")
      .map((t) => decodeURIComponent(t).replace(/\//g, "%2F"))
      .join("/");
  } catch (t) {
    return (
      Yx(
        !1,
        'The URL path "' +
          e +
          '" could not be decoded because it is is a malformed URL segment. This is probably due to a bad percent ' +
          ("encoding (" + t + ")."),
      ),
      e
    );
  }
}
function Zx(e, t) {
  if (t === "/") return e;
  if (!e.toLowerCase().startsWith(t.toLowerCase())) return null;
  let n = t.endsWith("/") ? t.length - 1 : t.length,
    r = e.charAt(n);
  return r && r !== "/" ? null : e.slice(n) || "/";
}
function y5(e, t) {
  t === void 0 && (t = "/");
  let {
    pathname: n,
    search: r = "",
    hash: o = "",
  } = typeof e == "string" ? mi(e) : e;
  return {
    pathname: n ? (n.startsWith("/") ? n : b5(n, t)) : t,
    search: w5(r),
    hash: C5(o),
  };
}
function b5(e, t) {
  let n = t.replace(/\/+$/, "").split("/");
  return (
    e.split("/").forEach((o) => {
      o === ".." ? n.length > 1 && n.pop() : o !== "." && n.push(o);
    }),
    n.length > 1 ? n.join("/") : "/"
  );
}
function Kc(e, t, n, r) {
  return (
    "Cannot include a '" +
    e +
    "' character in a manually specified " +
    ("`to." +
      t +
      "` field [" +
      JSON.stringify(r) +
      "].  Please separate it out to the ") +
    ("`to." + n + "` field. Alternatively you may provide the full path as ") +
    'a string in <Link to="..."> and the router will parse it for you.'
  );
}
function x5(e) {
  return e.filter(
    (t, n) => n === 0 || (t.route.path && t.route.path.length > 0),
  );
}
function eS(e, t) {
  let n = x5(e);
  return t
    ? n.map((r, o) => (o === n.length - 1 ? r.pathname : r.pathnameBase))
    : n.map((r) => r.pathnameBase);
}
function tS(e, t, n, r) {
  r === void 0 && (r = !1);
  let o;
  typeof e == "string"
    ? (o = mi(e))
    : ((o = cs({}, e)),
      Qe(
        !o.pathname || !o.pathname.includes("?"),
        Kc("?", "pathname", "search", o),
      ),
      Qe(
        !o.pathname || !o.pathname.includes("#"),
        Kc("#", "pathname", "hash", o),
      ),
      Qe(!o.search || !o.search.includes("#"), Kc("#", "search", "hash", o)));
  let i = e === "" || o.pathname === "",
    s = i ? "/" : o.pathname,
    a;
  if (s == null) a = n;
  else {
    let d = t.length - 1;
    if (!r && s.startsWith("..")) {
      let f = s.split("/");
      for (; f[0] === ".."; ) (f.shift(), (d -= 1));
      o.pathname = f.join("/");
    }
    a = d >= 0 ? t[d] : "/";
  }
  let l = y5(o, a),
    c = s && s !== "/" && s.endsWith("/"),
    u = (i || s === ".") && n.endsWith("/");
  return (!l.pathname.endsWith("/") && (c || u) && (l.pathname += "/"), l);
}
const no = (e) => e.join("/").replace(/\/\/+/g, "/"),
  S5 = (e) => e.replace(/\/+$/, "").replace(/^\/*/, "/"),
  w5 = (e) => (!e || e === "?" ? "" : e.startsWith("?") ? e : "?" + e),
  C5 = (e) => (!e || e === "#" ? "" : e.startsWith("#") ? e : "#" + e);
function E5(e) {
  return (
    e != null &&
    typeof e.status == "number" &&
    typeof e.statusText == "string" &&
    typeof e.internal == "boolean" &&
    "data" in e
  );
}
const nS = ["post", "put", "patch", "delete"];
new Set(nS);
const I5 = ["get", ...nS];
new Set(I5);
/**
 * React Router v6.30.1
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */ function us() {
  return (
    (us = Object.assign
      ? Object.assign.bind()
      : function (e) {
          for (var t = 1; t < arguments.length; t++) {
            var n = arguments[t];
            for (var r in n)
              Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);
          }
          return e;
        }),
    us.apply(this, arguments)
  );
}
const Ef = x.createContext(null),
  R5 = x.createContext(null),
  Rs = x.createContext(null),
  Gl = x.createContext(null),
  po = x.createContext({ outlet: null, matches: [], isDataRoute: !1 }),
  rS = x.createContext(null);
function ks() {
  return x.useContext(Gl) != null;
}
function If() {
  return (ks() || Qe(!1), x.useContext(Gl).location);
}
function oS(e) {
  x.useContext(Rs).static || x.useLayoutEffect(e);
}
function Rf() {
  let { isDataRoute: e } = x.useContext(po);
  return e ? L5() : k5();
}
function k5() {
  ks() || Qe(!1);
  let e = x.useContext(Ef),
    { basename: t, future: n, navigator: r } = x.useContext(Rs),
    { matches: o } = x.useContext(po),
    { pathname: i } = If(),
    s = JSON.stringify(eS(o, n.v7_relativeSplatPath)),
    a = x.useRef(!1);
  return (
    oS(() => {
      a.current = !0;
    }),
    x.useCallback(
      function (c, u) {
        if ((u === void 0 && (u = {}), !a.current)) return;
        if (typeof c == "number") {
          r.go(c);
          return;
        }
        let d = tS(c, JSON.parse(s), i, u.relative === "path");
        (e == null &&
          t !== "/" &&
          (d.pathname = d.pathname === "/" ? t : no([t, d.pathname])),
          (u.replace ? r.replace : r.push)(d, u.state, u));
      },
      [t, r, s, i, e],
    )
  );
}
function P5(e, t) {
  return T5(e, t);
}
function T5(e, t, n, r) {
  ks() || Qe(!1);
  let { navigator: o } = x.useContext(Rs),
    { matches: i } = x.useContext(po),
    s = i[i.length - 1],
    a = s ? s.params : {};
  s && s.pathname;
  let l = s ? s.pathnameBase : "/";
  s && s.route;
  let c = If(),
    u;
  if (t) {
    var d;
    let v = typeof t == "string" ? mi(t) : t;
    (l === "/" || ((d = v.pathname) != null && d.startsWith(l)) || Qe(!1),
      (u = v));
  } else u = c;
  let f = u.pathname || "/",
    g = f;
  if (l !== "/") {
    let v = l.replace(/^\//, "").split("/");
    g = "/" + f.replace(/^\//, "").split("/").slice(v.length).join("/");
  }
  let h = r5(e, { pathname: g }),
    p = V5(
      h &&
        h.map((v) =>
          Object.assign({}, v, {
            params: Object.assign({}, a, v.params),
            pathname: no([
              l,
              o.encodeLocation
                ? o.encodeLocation(v.pathname).pathname
                : v.pathname,
            ]),
            pathnameBase:
              v.pathnameBase === "/"
                ? l
                : no([
                    l,
                    o.encodeLocation
                      ? o.encodeLocation(v.pathnameBase).pathname
                      : v.pathnameBase,
                  ]),
          }),
        ),
      i,
      n,
      r,
    );
  return t && p
    ? x.createElement(
        Gl.Provider,
        {
          value: {
            location: us(
              {
                pathname: "/",
                search: "",
                hash: "",
                state: null,
                key: "default",
              },
              u,
            ),
            navigationType: Er.Pop,
          },
        },
        p,
      )
    : p;
}
function O5() {
  let e = M5(),
    t = E5(e)
      ? e.status + " " + e.statusText
      : e instanceof Error
        ? e.message
        : JSON.stringify(e),
    n = e instanceof Error ? e.stack : null,
    o = { padding: "0.5rem", backgroundColor: "rgba(200,200,200, 0.5)" };
  return x.createElement(
    x.Fragment,
    null,
    x.createElement("h2", null, "Unexpected Application Error!"),
    x.createElement("h3", { style: { fontStyle: "italic" } }, t),
    n ? x.createElement("pre", { style: o }, n) : null,
    null,
  );
}
const _5 = x.createElement(O5, null);
class A5 extends x.Component {
  constructor(t) {
    (super(t),
      (this.state = {
        location: t.location,
        revalidation: t.revalidation,
        error: t.error,
      }));
  }
  static getDerivedStateFromError(t) {
    return { error: t };
  }
  static getDerivedStateFromProps(t, n) {
    return n.location !== t.location ||
      (n.revalidation !== "idle" && t.revalidation === "idle")
      ? { error: t.error, location: t.location, revalidation: t.revalidation }
      : {
          error: t.error !== void 0 ? t.error : n.error,
          location: n.location,
          revalidation: t.revalidation || n.revalidation,
        };
  }
  componentDidCatch(t, n) {
    console.error(
      "React Router caught the following error during render",
      t,
      n,
    );
  }
  render() {
    return this.state.error !== void 0
      ? x.createElement(
          po.Provider,
          { value: this.props.routeContext },
          x.createElement(rS.Provider, {
            value: this.state.error,
            children: this.props.component,
          }),
        )
      : this.props.children;
  }
}
function N5(e) {
  let { routeContext: t, match: n, children: r } = e,
    o = x.useContext(Ef);
  return (
    o &&
      o.static &&
      o.staticContext &&
      (n.route.errorElement || n.route.ErrorBoundary) &&
      (o.staticContext._deepestRenderedBoundaryId = n.route.id),
    x.createElement(po.Provider, { value: t }, r)
  );
}
function V5(e, t, n, r) {
  var o;
  if (
    (t === void 0 && (t = []),
    n === void 0 && (n = null),
    r === void 0 && (r = null),
    e == null)
  ) {
    var i;
    if (!n) return null;
    if (n.errors) e = n.matches;
    else if (
      (i = r) != null &&
      i.v7_partialHydration &&
      t.length === 0 &&
      !n.initialized &&
      n.matches.length > 0
    )
      e = n.matches;
    else return null;
  }
  let s = e,
    a = (o = n) == null ? void 0 : o.errors;
  if (a != null) {
    let u = s.findIndex(
      (d) => d.route.id && (a == null ? void 0 : a[d.route.id]) !== void 0,
    );
    (u >= 0 || Qe(!1), (s = s.slice(0, Math.min(s.length, u + 1))));
  }
  let l = !1,
    c = -1;
  if (n && r && r.v7_partialHydration)
    for (let u = 0; u < s.length; u++) {
      let d = s[u];
      if (
        ((d.route.HydrateFallback || d.route.hydrateFallbackElement) && (c = u),
        d.route.id)
      ) {
        let { loaderData: f, errors: g } = n,
          h =
            d.route.loader &&
            f[d.route.id] === void 0 &&
            (!g || g[d.route.id] === void 0);
        if (d.route.lazy || h) {
          ((l = !0), c >= 0 ? (s = s.slice(0, c + 1)) : (s = [s[0]]));
          break;
        }
      }
    }
  return s.reduceRight((u, d, f) => {
    let g,
      h = !1,
      p = null,
      v = null;
    n &&
      ((g = a && d.route.id ? a[d.route.id] : void 0),
      (p = d.route.errorElement || _5),
      l &&
        (c < 0 && f === 0
          ? (z5("route-fallback"), (h = !0), (v = null))
          : c === f &&
            ((h = !0), (v = d.route.hydrateFallbackElement || null))));
    let b = t.concat(s.slice(0, f + 1)),
      S = () => {
        let w;
        return (
          g
            ? (w = p)
            : h
              ? (w = v)
              : d.route.Component
                ? (w = x.createElement(d.route.Component, null))
                : d.route.element
                  ? (w = d.route.element)
                  : (w = u),
          x.createElement(N5, {
            match: d,
            routeContext: { outlet: u, matches: b, isDataRoute: n != null },
            children: w,
          })
        );
      };
    return n && (d.route.ErrorBoundary || d.route.errorElement || f === 0)
      ? x.createElement(A5, {
          location: n.location,
          revalidation: n.revalidation,
          component: p,
          error: g,
          children: S(),
          routeContext: { outlet: null, matches: b, isDataRoute: !0 },
        })
      : S();
  }, null);
}
var iS = (function (e) {
    return (
      (e.UseBlocker = "useBlocker"),
      (e.UseRevalidator = "useRevalidator"),
      (e.UseNavigateStable = "useNavigate"),
      e
    );
  })(iS || {}),
  sS = (function (e) {
    return (
      (e.UseBlocker = "useBlocker"),
      (e.UseLoaderData = "useLoaderData"),
      (e.UseActionData = "useActionData"),
      (e.UseRouteError = "useRouteError"),
      (e.UseNavigation = "useNavigation"),
      (e.UseRouteLoaderData = "useRouteLoaderData"),
      (e.UseMatches = "useMatches"),
      (e.UseRevalidator = "useRevalidator"),
      (e.UseNavigateStable = "useNavigate"),
      (e.UseRouteId = "useRouteId"),
      e
    );
  })(sS || {});
function F5(e) {
  let t = x.useContext(Ef);
  return (t || Qe(!1), t);
}
function D5(e) {
  let t = x.useContext(R5);
  return (t || Qe(!1), t);
}
function $5(e) {
  let t = x.useContext(po);
  return (t || Qe(!1), t);
}
function aS(e) {
  let t = $5(),
    n = t.matches[t.matches.length - 1];
  return (n.route.id || Qe(!1), n.route.id);
}
function M5() {
  var e;
  let t = x.useContext(rS),
    n = D5(),
    r = aS();
  return t !== void 0 ? t : (e = n.errors) == null ? void 0 : e[r];
}
function L5() {
  let { router: e } = F5(iS.UseNavigateStable),
    t = aS(sS.UseNavigateStable),
    n = x.useRef(!1);
  return (
    oS(() => {
      n.current = !0;
    }),
    x.useCallback(
      function (o, i) {
        (i === void 0 && (i = {}),
          n.current &&
            (typeof o == "number"
              ? e.navigate(o)
              : e.navigate(o, us({ fromRouteId: t }, i))));
      },
      [e, t],
    )
  );
}
const cm = {};
function z5(e, t, n) {
  cm[e] || (cm[e] = !0);
}
function B5(e, t) {
  (e == null || e.v7_startTransition, e == null || e.v7_relativeSplatPath);
}
function Pi(e) {
  let { to: t, replace: n, state: r, relative: o } = e;
  ks() || Qe(!1);
  let { future: i, static: s } = x.useContext(Rs),
    { matches: a } = x.useContext(po),
    { pathname: l } = If(),
    c = Rf(),
    u = tS(t, eS(a, i.v7_relativeSplatPath), l, o === "path"),
    d = JSON.stringify(u);
  return (
    x.useEffect(
      () => c(JSON.parse(d), { replace: n, state: r, relative: o }),
      [c, d, o, n, r],
    ),
    null
  );
}
function Ao(e) {
  Qe(!1);
}
function j5(e) {
  let {
    basename: t = "/",
    children: n = null,
    location: r,
    navigationType: o = Er.Pop,
    navigator: i,
    static: s = !1,
    future: a,
  } = e;
  ks() && Qe(!1);
  let l = t.replace(/^\/*/, "/"),
    c = x.useMemo(
      () => ({
        basename: l,
        navigator: i,
        static: s,
        future: us({ v7_relativeSplatPath: !1 }, a),
      }),
      [l, a, i, s],
    );
  typeof r == "string" && (r = mi(r));
  let {
      pathname: u = "/",
      search: d = "",
      hash: f = "",
      state: g = null,
      key: h = "default",
    } = r,
    p = x.useMemo(() => {
      let v = Zx(u, l);
      return v == null
        ? null
        : {
            location: { pathname: v, search: d, hash: f, state: g, key: h },
            navigationType: o,
          };
    }, [l, u, d, f, g, h, o]);
  return p == null
    ? null
    : x.createElement(
        Rs.Provider,
        { value: c },
        x.createElement(Gl.Provider, { children: n, value: p }),
      );
}
function U5(e) {
  let { children: t, location: n } = e;
  return P5(Yu(t), n);
}
new Promise(() => {});
function Yu(e, t) {
  t === void 0 && (t = []);
  let n = [];
  return (
    x.Children.forEach(e, (r, o) => {
      if (!x.isValidElement(r)) return;
      let i = [...t, o];
      if (r.type === x.Fragment) {
        n.push.apply(n, Yu(r.props.children, i));
        return;
      }
      (r.type !== Ao && Qe(!1), !r.props.index || !r.props.children || Qe(!1));
      let s = {
        id: r.props.id || i.join("-"),
        caseSensitive: r.props.caseSensitive,
        element: r.props.element,
        Component: r.props.Component,
        index: r.props.index,
        path: r.props.path,
        loader: r.props.loader,
        action: r.props.action,
        errorElement: r.props.errorElement,
        ErrorBoundary: r.props.ErrorBoundary,
        hasErrorBoundary:
          r.props.ErrorBoundary != null || r.props.errorElement != null,
        shouldRevalidate: r.props.shouldRevalidate,
        handle: r.props.handle,
        lazy: r.props.lazy,
      };
      (r.props.children && (s.children = Yu(r.props.children, i)), n.push(s));
    }),
    n
  );
}
/**
 * React Router DOM v6.30.1
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */ const W5 = "6";
try {
  window.__reactRouterVersion = W5;
} catch {}
const H5 = "startTransition",
  um = _a[H5];
function G5(e) {
  let { basename: t, children: n, future: r, window: o } = e,
    i = x.useRef();
  i.current == null && (i.current = e5({ window: o, v5Compat: !0 }));
  let s = i.current,
    [a, l] = x.useState({ action: s.action, location: s.location }),
    { v7_startTransition: c } = r || {},
    u = x.useCallback(
      (d) => {
        c && um ? um(() => l(d)) : l(d);
      },
      [l, c],
    );
  return (
    x.useLayoutEffect(() => s.listen(u), [s, u]),
    x.useEffect(() => B5(r), [r]),
    x.createElement(j5, {
      basename: t,
      children: n,
      location: a.location,
      navigationType: a.action,
      navigator: s,
      future: r,
    })
  );
}
var dm;
(function (e) {
  ((e.UseScrollRestoration = "useScrollRestoration"),
    (e.UseSubmit = "useSubmit"),
    (e.UseSubmitFetcher = "useSubmitFetcher"),
    (e.UseFetcher = "useFetcher"),
    (e.useViewTransitionState = "useViewTransitionState"));
})(dm || (dm = {}));
var fm;
(function (e) {
  ((e.UseFetcher = "useFetcher"),
    (e.UseFetchers = "useFetchers"),
    (e.UseScrollRestoration = "useScrollRestoration"));
})(fm || (fm = {}));
const K5 = "/assets/ikusi-logo.png";
function kf() {
  var l, c, u, d;
  const [e, t] = x.useState(!1),
    [n, r] = x.useState(!1),
    o = Rf(),
    { user: i } = $d(),
    s =
      ((l = i == null ? void 0 : i.email) == null
        ? void 0
        : l.includes("admin")) ||
      ((c = i == null ? void 0 : i.email) == null
        ? void 0
        : c.includes("valencia94")) ||
      ((u = i == null ? void 0 : i.email) == null
        ? void 0
        : u.endsWith("@ikusi.com")) ||
      ((d = i == null ? void 0 : i.email) == null
        ? void 0
        : d.endsWith("@company.com")),
    a = async () => {
      r(!0);
      try {
        (localStorage.clear(),
          t(!1),
          jo || (await pl({ global: !0 })),
          setTimeout(() => {
            window.location.href = "/login";
          }, 100));
      } catch (f) {
        (console.error("Logout error:", f),
          localStorage.clear(),
          t(!1),
          setTimeout(() => {
            window.location.href = "/login";
          }, 100));
      }
    };
  return y.jsxs("header", {
    className:
      "sticky top-0 z-50 flex items-center justify-between bg-gradient-to-r from-green-500 to-teal-500 px-6 py-5 shadow-xl",
    children: [
      y.jsxs("div", {
        className: "flex items-center gap-5",
        children: [
          y.jsx("img", {
            src: K5,
            alt: "Ikusi logo",
            className: "h-12 w-auto drop-shadow-sm",
          }),
          y.jsxs("div", {
            className: "leading-tight text-white",
            children: [
              y.jsx("h1", {
                className: "text-2xl font-bold tracking-tight",
                children: "Acta Platform",
              }),
              y.jsx("p", {
                className: "text-sm opacity-90 font-medium",
                children: "invisible technology, visible transformation",
              }),
            ],
          }),
        ],
      }),
      y.jsxs("nav", {
        className: "hidden md:flex items-center gap-8 text-white",
        children: [
          y.jsxs("button", {
            onClick: () => o("/dashboard"),
            className:
              "flex items-center gap-2 px-4 py-2 rounded-lg hover:bg-white/10 transition-colors font-medium",
            children: [y.jsx(ag, { className: "h-5 w-5" }), "Dashboard"],
          }),
          s &&
            y.jsxs("button", {
              onClick: () => o("/admin"),
              className:
                "flex items-center gap-2 px-4 py-2 rounded-lg hover:bg-white/10 transition-colors font-medium",
              children: [y.jsx(Aa, { className: "h-5 w-5" }), "Admin"],
            }),
        ],
      }),
      y.jsxs("div", {
        className: "relative",
        children: [
          y.jsx("button", {
            onClick: () => t((f) => !f),
            "aria-label": "Toggle menu",
            className:
              "text-white hover:opacity-90 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-300",
            children: y.jsx(Cw, { className: "h-6 w-6" }),
          }),
          e &&
            y.jsxs("div", {
              className: Ct(
                "absolute right-0 top-full mt-2 w-48 rounded-lg bg-white py-1 shadow-lg",
                "ring-1 ring-black ring-opacity-5 focus:outline-none z-50",
              ),
              children: [
                y.jsxs("button", {
                  className:
                    "flex w-full items-center px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 focus:bg-gray-100 focus:outline-none",
                  onClick: () => {
                    (t(!1), o("/dashboard"));
                  },
                  children: [
                    y.jsx(ag, { className: "mr-3 h-4 w-4" }),
                    "Dashboard",
                  ],
                }),
                s &&
                  y.jsxs("button", {
                    className:
                      "flex w-full items-center px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 focus:bg-gray-100 focus:outline-none",
                    onClick: () => {
                      (t(!1), o("/admin"));
                    },
                    children: [
                      y.jsx(Aa, { className: "mr-3 h-4 w-4" }),
                      "Admin",
                    ],
                  }),
                y.jsxs("button", {
                  className:
                    "flex w-full items-center px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 focus:bg-gray-100 focus:outline-none",
                  onClick: () => {
                    (t(!1), o("/profile"));
                  },
                  children: [
                    y.jsx(Ew, { className: "mr-3 h-4 w-4" }),
                    "Profile",
                  ],
                }),
                y.jsx("button", {
                  className:
                    "flex w-full items-center px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 focus:bg-gray-100 focus:outline-none disabled:opacity-50",
                  onClick: a,
                  disabled: n,
                  children: n
                    ? y.jsxs(y.Fragment, {
                        children: [
                          y.jsx("div", {
                            className:
                              "mr-3 h-4 w-4 animate-spin rounded-full border-2 border-gray-300 border-t-gray-600",
                          }),
                          "Signing out...",
                        ],
                      })
                    : y.jsxs(y.Fragment, {
                        children: [
                          y.jsx(Iw, { className: "mr-3 h-4 w-4" }),
                          "Log out",
                        ],
                      }),
                }),
              ],
            }),
        ],
      }),
    ],
  });
}
const ds = { black: "#000", white: "#fff" },
  wo = {
    300: "#e57373",
    400: "#ef5350",
    500: "#f44336",
    700: "#d32f2f",
    800: "#c62828",
  },
  Co = {
    50: "#f3e5f5",
    200: "#ce93d8",
    300: "#ba68c8",
    400: "#ab47bc",
    500: "#9c27b0",
    700: "#7b1fa2",
  },
  Eo = {
    50: "#e3f2fd",
    200: "#90caf9",
    400: "#42a5f5",
    700: "#1976d2",
    800: "#1565c0",
  },
  Io = {
    300: "#4fc3f7",
    400: "#29b6f6",
    500: "#03a9f4",
    700: "#0288d1",
    900: "#01579b",
  },
  Ro = {
    300: "#81c784",
    400: "#66bb6a",
    500: "#4caf50",
    700: "#388e3c",
    800: "#2e7d32",
    900: "#1b5e20",
  },
  Ti = {
    300: "#ffb74d",
    400: "#ffa726",
    500: "#ff9800",
    700: "#f57c00",
    900: "#e65100",
  },
  q5 = {
    50: "#fafafa",
    100: "#f5f5f5",
    200: "#eeeeee",
    300: "#e0e0e0",
    400: "#bdbdbd",
    500: "#9e9e9e",
    600: "#757575",
    700: "#616161",
    800: "#424242",
    900: "#212121",
    A100: "#f5f5f5",
    A200: "#eeeeee",
    A400: "#bdbdbd",
    A700: "#616161",
  };
function fo(e, ...t) {
  const n = new URL(`https://mui.com/production-error/?code=${e}`);
  return (
    t.forEach((r) => n.searchParams.append("args[]", r)),
    `Minified MUI error #${e}; visit ${n} for the full message.`
  );
}
const Y5 = "$$material";
var _t = function () {
  return (
    (_t =
      Object.assign ||
      function (t) {
        for (var n, r = 1, o = arguments.length; r < o; r++) {
          n = arguments[r];
          for (var i in n)
            Object.prototype.hasOwnProperty.call(n, i) && (t[i] = n[i]);
        }
        return t;
      }),
    _t.apply(this, arguments)
  );
};
function fs(e, t, n) {
  if (n || arguments.length === 2)
    for (var r = 0, o = t.length, i; r < o; r++)
      (i || !(r in t)) &&
        (i || (i = Array.prototype.slice.call(t, 0, r)), (i[r] = t[r]));
  return e.concat(i || Array.prototype.slice.call(t));
}
var _e = "-ms-",
  Ki = "-moz-",
  be = "-webkit-",
  lS = "comm",
  Kl = "rule",
  Pf = "decl",
  X5 = "@import",
  cS = "@keyframes",
  J5 = "@layer",
  uS = Math.abs,
  Tf = String.fromCharCode,
  Xu = Object.assign;
function Q5(e, t) {
  return st(e, 0) ^ 45
    ? (((((((t << 2) ^ st(e, 0)) << 2) ^ st(e, 1)) << 2) ^ st(e, 2)) << 2) ^
        st(e, 3)
    : 0;
}
function dS(e) {
  return e.trim();
}
function Zn(e, t) {
  return (e = t.exec(e)) ? e[0] : e;
}
function de(e, t, n) {
  return e.replace(t, n);
}
function Ca(e, t, n) {
  return e.indexOf(t, n);
}
function st(e, t) {
  return e.charCodeAt(t) | 0;
}
function Yo(e, t, n) {
  return e.slice(t, n);
}
function Nn(e) {
  return e.length;
}
function fS(e) {
  return e.length;
}
function Li(e, t) {
  return (t.push(e), e);
}
function Z5(e, t) {
  return e.map(t).join("");
}
function gm(e, t) {
  return e.filter(function (n) {
    return !Zn(n, t);
  });
}
var ql = 1,
  Xo = 1,
  gS = 0,
  on = 0,
  Je = 0,
  vi = "";
function Yl(e, t, n, r, o, i, s, a) {
  return {
    value: e,
    root: t,
    parent: n,
    type: r,
    props: o,
    children: i,
    line: ql,
    column: Xo,
    length: s,
    return: "",
    siblings: a,
  };
}
function br(e, t) {
  return Xu(
    Yl("", null, null, "", null, null, 0, e.siblings),
    e,
    { length: -e.length },
    t,
  );
}
function ko(e) {
  for (; e.root; ) e = br(e.root, { children: [e] });
  Li(e, e.siblings);
}
function eM() {
  return Je;
}
function tM() {
  return (
    (Je = on > 0 ? st(vi, --on) : 0),
    Xo--,
    Je === 10 && ((Xo = 1), ql--),
    Je
  );
}
function bn() {
  return (
    (Je = on < gS ? st(vi, on++) : 0),
    Xo++,
    Je === 10 && ((Xo = 1), ql++),
    Je
  );
}
function ro() {
  return st(vi, on);
}
function Ea() {
  return on;
}
function Xl(e, t) {
  return Yo(vi, e, t);
}
function Ju(e) {
  switch (e) {
    case 0:
    case 9:
    case 10:
    case 13:
    case 32:
      return 5;
    case 33:
    case 43:
    case 44:
    case 47:
    case 62:
    case 64:
    case 126:
    case 59:
    case 123:
    case 125:
      return 4;
    case 58:
      return 3;
    case 34:
    case 39:
    case 40:
    case 91:
      return 2;
    case 41:
    case 93:
      return 1;
  }
  return 0;
}
function nM(e) {
  return ((ql = Xo = 1), (gS = Nn((vi = e))), (on = 0), []);
}
function rM(e) {
  return ((vi = ""), e);
}
function qc(e) {
  return dS(Xl(on - 1, Qu(e === 91 ? e + 2 : e === 40 ? e + 1 : e)));
}
function oM(e) {
  for (; (Je = ro()) && Je < 33; ) bn();
  return Ju(e) > 2 || Ju(Je) > 3 ? "" : " ";
}
function iM(e, t) {
  for (
    ;
    --t &&
    bn() &&
    !(Je < 48 || Je > 102 || (Je > 57 && Je < 65) || (Je > 70 && Je < 97));

  );
  return Xl(e, Ea() + (t < 6 && ro() == 32 && bn() == 32));
}
function Qu(e) {
  for (; bn(); )
    switch (Je) {
      case e:
        return on;
      case 34:
      case 39:
        e !== 34 && e !== 39 && Qu(Je);
        break;
      case 40:
        e === 41 && Qu(e);
        break;
      case 92:
        bn();
        break;
    }
  return on;
}
function sM(e, t) {
  for (; bn() && e + Je !== 57; ) if (e + Je === 84 && ro() === 47) break;
  return "/*" + Xl(t, on - 1) + "*" + Tf(e === 47 ? e : bn());
}
function aM(e) {
  for (; !Ju(ro()); ) bn();
  return Xl(e, on);
}
function lM(e) {
  return rM(Ia("", null, null, null, [""], (e = nM(e)), 0, [0], e));
}
function Ia(e, t, n, r, o, i, s, a, l) {
  for (
    var c = 0,
      u = 0,
      d = s,
      f = 0,
      g = 0,
      h = 0,
      p = 1,
      v = 1,
      b = 1,
      S = 0,
      w = "",
      E = o,
      R = i,
      N = r,
      I = w;
    v;

  )
    switch (((h = S), (S = bn()))) {
      case 40:
        if (h != 108 && st(I, d - 1) == 58) {
          Ca((I += de(qc(S), "&", "&\f")), "&\f", uS(c ? a[c - 1] : 0)) != -1 &&
            (b = -1);
          break;
        }
      case 34:
      case 39:
      case 91:
        I += qc(S);
        break;
      case 9:
      case 10:
      case 13:
      case 32:
        I += oM(h);
        break;
      case 92:
        I += iM(Ea() - 1, 7);
        continue;
      case 47:
        switch (ro()) {
          case 42:
          case 47:
            Li(cM(sM(bn(), Ea()), t, n, l), l);
            break;
          default:
            I += "/";
        }
        break;
      case 123 * p:
        a[c++] = Nn(I) * b;
      case 125 * p:
      case 59:
      case 0:
        switch (S) {
          case 0:
          case 125:
            v = 0;
          case 59 + u:
            (b == -1 && (I = de(I, /\f/g, "")),
              g > 0 &&
                Nn(I) - d &&
                Li(
                  g > 32
                    ? pm(I + ";", r, n, d - 1, l)
                    : pm(de(I, " ", "") + ";", r, n, d - 2, l),
                  l,
                ));
            break;
          case 59:
            I += ";";
          default:
            if (
              (Li(
                (N = hm(I, t, n, c, u, o, a, w, (E = []), (R = []), d, i)),
                i,
              ),
              S === 123)
            )
              if (u === 0) Ia(I, t, N, N, E, i, d, a, R);
              else
                switch (f === 99 && st(I, 3) === 110 ? 100 : f) {
                  case 100:
                  case 108:
                  case 109:
                  case 115:
                    Ia(
                      e,
                      N,
                      N,
                      r && Li(hm(e, N, N, 0, 0, o, a, w, o, (E = []), d, R), R),
                      o,
                      R,
                      d,
                      a,
                      r ? E : R,
                    );
                    break;
                  default:
                    Ia(I, N, N, N, [""], R, 0, a, R);
                }
        }
        ((c = u = g = 0), (p = b = 1), (w = I = ""), (d = s));
        break;
      case 58:
        ((d = 1 + Nn(I)), (g = h));
      default:
        if (p < 1) {
          if (S == 123) --p;
          else if (S == 125 && p++ == 0 && tM() == 125) continue;
        }
        switch (((I += Tf(S)), S * p)) {
          case 38:
            b = u > 0 ? 1 : ((I += "\f"), -1);
            break;
          case 44:
            ((a[c++] = (Nn(I) - 1) * b), (b = 1));
            break;
          case 64:
            (ro() === 45 && (I += qc(bn())),
              (f = ro()),
              (u = d = Nn((w = I += aM(Ea())))),
              S++);
            break;
          case 45:
            h === 45 && Nn(I) == 2 && (p = 0);
        }
    }
  return i;
}
function hm(e, t, n, r, o, i, s, a, l, c, u, d) {
  for (
    var f = o - 1, g = o === 0 ? i : [""], h = fS(g), p = 0, v = 0, b = 0;
    p < r;
    ++p
  )
    for (var S = 0, w = Yo(e, f + 1, (f = uS((v = s[p])))), E = e; S < h; ++S)
      (E = dS(v > 0 ? g[S] + " " + w : de(w, /&\f/g, g[S]))) && (l[b++] = E);
  return Yl(e, t, n, o === 0 ? Kl : a, l, c, u, d);
}
function cM(e, t, n, r) {
  return Yl(e, t, n, lS, Tf(eM()), Yo(e, 2, -2), 0, r);
}
function pm(e, t, n, r, o) {
  return Yl(e, t, n, Pf, Yo(e, 0, r), Yo(e, r + 1, -1), r, o);
}
function hS(e, t, n) {
  switch (Q5(e, t)) {
    case 5103:
      return be + "print-" + e + e;
    case 5737:
    case 4201:
    case 3177:
    case 3433:
    case 1641:
    case 4457:
    case 2921:
    case 5572:
    case 6356:
    case 5844:
    case 3191:
    case 6645:
    case 3005:
    case 6391:
    case 5879:
    case 5623:
    case 6135:
    case 4599:
    case 4855:
    case 4215:
    case 6389:
    case 5109:
    case 5365:
    case 5621:
    case 3829:
      return be + e + e;
    case 4789:
      return Ki + e + e;
    case 5349:
    case 4246:
    case 4810:
    case 6968:
    case 2756:
      return be + e + Ki + e + _e + e + e;
    case 5936:
      switch (st(e, t + 11)) {
        case 114:
          return be + e + _e + de(e, /[svh]\w+-[tblr]{2}/, "tb") + e;
        case 108:
          return be + e + _e + de(e, /[svh]\w+-[tblr]{2}/, "tb-rl") + e;
        case 45:
          return be + e + _e + de(e, /[svh]\w+-[tblr]{2}/, "lr") + e;
      }
    case 6828:
    case 4268:
    case 2903:
      return be + e + _e + e + e;
    case 6165:
      return be + e + _e + "flex-" + e + e;
    case 5187:
      return (
        be + e + de(e, /(\w+).+(:[^]+)/, be + "box-$1$2" + _e + "flex-$1$2") + e
      );
    case 5443:
      return (
        be +
        e +
        _e +
        "flex-item-" +
        de(e, /flex-|-self/g, "") +
        (Zn(e, /flex-|baseline/)
          ? ""
          : _e + "grid-row-" + de(e, /flex-|-self/g, "")) +
        e
      );
    case 4675:
      return (
        be +
        e +
        _e +
        "flex-line-pack" +
        de(e, /align-content|flex-|-self/g, "") +
        e
      );
    case 5548:
      return be + e + _e + de(e, "shrink", "negative") + e;
    case 5292:
      return be + e + _e + de(e, "basis", "preferred-size") + e;
    case 6060:
      return (
        be +
        "box-" +
        de(e, "-grow", "") +
        be +
        e +
        _e +
        de(e, "grow", "positive") +
        e
      );
    case 4554:
      return be + de(e, /([^-])(transform)/g, "$1" + be + "$2") + e;
    case 6187:
      return (
        de(
          de(de(e, /(zoom-|grab)/, be + "$1"), /(image-set)/, be + "$1"),
          e,
          "",
        ) + e
      );
    case 5495:
    case 3959:
      return de(e, /(image-set\([^]*)/, be + "$1$`$1");
    case 4968:
      return (
        de(
          de(e, /(.+:)(flex-)?(.*)/, be + "box-pack:$3" + _e + "flex-pack:$3"),
          /s.+-b[^;]+/,
          "justify",
        ) +
        be +
        e +
        e
      );
    case 4200:
      if (!Zn(e, /flex-|baseline/))
        return _e + "grid-column-align" + Yo(e, t) + e;
      break;
    case 2592:
    case 3360:
      return _e + de(e, "template-", "") + e;
    case 4384:
    case 3616:
      return n &&
        n.some(function (r, o) {
          return ((t = o), Zn(r.props, /grid-\w+-end/));
        })
        ? ~Ca(e + (n = n[t].value), "span", 0)
          ? e
          : _e +
            de(e, "-start", "") +
            e +
            _e +
            "grid-row-span:" +
            (~Ca(n, "span", 0) ? Zn(n, /\d+/) : +Zn(n, /\d+/) - +Zn(e, /\d+/)) +
            ";"
        : _e + de(e, "-start", "") + e;
    case 4896:
    case 4128:
      return n &&
        n.some(function (r) {
          return Zn(r.props, /grid-\w+-start/);
        })
        ? e
        : _e + de(de(e, "-end", "-span"), "span ", "") + e;
    case 4095:
    case 3583:
    case 4068:
    case 2532:
      return de(e, /(.+)-inline(.+)/, be + "$1$2") + e;
    case 8116:
    case 7059:
    case 5753:
    case 5535:
    case 5445:
    case 5701:
    case 4933:
    case 4677:
    case 5533:
    case 5789:
    case 5021:
    case 4765:
      if (Nn(e) - 1 - t > 6)
        switch (st(e, t + 1)) {
          case 109:
            if (st(e, t + 4) !== 45) break;
          case 102:
            return (
              de(
                e,
                /(.+:)(.+)-([^]+)/,
                "$1" +
                  be +
                  "$2-$3$1" +
                  Ki +
                  (st(e, t + 3) == 108 ? "$3" : "$2-$3"),
              ) + e
            );
          case 115:
            return ~Ca(e, "stretch", 0)
              ? hS(de(e, "stretch", "fill-available"), t, n) + e
              : e;
        }
      break;
    case 5152:
    case 5920:
      return de(
        e,
        /(.+?):(\d+)(\s*\/\s*(span)?\s*(\d+))?(.*)/,
        function (r, o, i, s, a, l, c) {
          return (
            _e +
            o +
            ":" +
            i +
            c +
            (s ? _e + o + "-span:" + (a ? l : +l - +i) + c : "") +
            e
          );
        },
      );
    case 4949:
      if (st(e, t + 6) === 121) return de(e, ":", ":" + be) + e;
      break;
    case 6444:
      switch (st(e, st(e, 14) === 45 ? 18 : 11)) {
        case 120:
          return (
            de(
              e,
              /(.+:)([^;\s!]+)(;|(\s+)?!.+)?/,
              "$1" +
                be +
                (st(e, 14) === 45 ? "inline-" : "") +
                "box$3$1" +
                be +
                "$2$3$1" +
                _e +
                "$2box$3",
            ) + e
          );
        case 100:
          return de(e, ":", ":" + _e) + e;
      }
      break;
    case 5719:
    case 2647:
    case 2135:
    case 3927:
    case 2391:
      return de(e, "scroll-", "scroll-snap-") + e;
  }
  return e;
}
function Qa(e, t) {
  for (var n = "", r = 0; r < e.length; r++) n += t(e[r], r, e, t) || "";
  return n;
}
function uM(e, t, n, r) {
  switch (e.type) {
    case J5:
      if (e.children.length) break;
    case X5:
    case Pf:
      return (e.return = e.return || e.value);
    case lS:
      return "";
    case cS:
      return (e.return = e.value + "{" + Qa(e.children, r) + "}");
    case Kl:
      if (!Nn((e.value = e.props.join(",")))) return "";
  }
  return Nn((n = Qa(e.children, r)))
    ? (e.return = e.value + "{" + n + "}")
    : "";
}
function dM(e) {
  var t = fS(e);
  return function (n, r, o, i) {
    for (var s = "", a = 0; a < t; a++) s += e[a](n, r, o, i) || "";
    return s;
  };
}
function fM(e) {
  return function (t) {
    t.root || ((t = t.return) && e(t));
  };
}
function gM(e, t, n, r) {
  if (e.length > -1 && !e.return)
    switch (e.type) {
      case Pf:
        e.return = hS(e.value, e.length, n);
        return;
      case cS:
        return Qa([br(e, { value: de(e.value, "@", "@" + be) })], r);
      case Kl:
        if (e.length)
          return Z5((n = e.props), function (o) {
            switch (Zn(o, (r = /(::plac\w+|:read-\w+)/))) {
              case ":read-only":
              case ":read-write":
                (ko(br(e, { props: [de(o, /:(read-\w+)/, ":" + Ki + "$1")] })),
                  ko(br(e, { props: [o] })),
                  Xu(e, { props: gm(n, r) }));
                break;
              case "::placeholder":
                (ko(
                  br(e, {
                    props: [de(o, /:(plac\w+)/, ":" + be + "input-$1")],
                  }),
                ),
                  ko(br(e, { props: [de(o, /:(plac\w+)/, ":" + Ki + "$1")] })),
                  ko(br(e, { props: [de(o, /:(plac\w+)/, _e + "input-$1")] })),
                  ko(br(e, { props: [o] })),
                  Xu(e, { props: gm(n, r) }));
                break;
            }
            return "";
          });
    }
}
var hM = {
    animationIterationCount: 1,
    aspectRatio: 1,
    borderImageOutset: 1,
    borderImageSlice: 1,
    borderImageWidth: 1,
    boxFlex: 1,
    boxFlexGroup: 1,
    boxOrdinalGroup: 1,
    columnCount: 1,
    columns: 1,
    flex: 1,
    flexGrow: 1,
    flexPositive: 1,
    flexShrink: 1,
    flexNegative: 1,
    flexOrder: 1,
    gridRow: 1,
    gridRowEnd: 1,
    gridRowSpan: 1,
    gridRowStart: 1,
    gridColumn: 1,
    gridColumnEnd: 1,
    gridColumnSpan: 1,
    gridColumnStart: 1,
    msGridRow: 1,
    msGridRowSpan: 1,
    msGridColumn: 1,
    msGridColumnSpan: 1,
    fontWeight: 1,
    lineHeight: 1,
    opacity: 1,
    order: 1,
    orphans: 1,
    tabSize: 1,
    widows: 1,
    zIndex: 1,
    zoom: 1,
    WebkitLineClamp: 1,
    fillOpacity: 1,
    floodOpacity: 1,
    stopOpacity: 1,
    strokeDasharray: 1,
    strokeDashoffset: 1,
    strokeMiterlimit: 1,
    strokeOpacity: 1,
    strokeWidth: 1,
  },
  Lt = {},
  Jo =
    (typeof process < "u" &&
      Lt !== void 0 &&
      (Lt.REACT_APP_SC_ATTR || Lt.SC_ATTR)) ||
    "data-styled",
  pS = "active",
  mS = "data-styled-version",
  Jl = "6.1.19",
  Of = `/*!sc*/
`,
  Za = typeof window < "u" && typeof document < "u",
  pM = !!(typeof SC_DISABLE_SPEEDY == "boolean"
    ? SC_DISABLE_SPEEDY
    : typeof process < "u" &&
        Lt !== void 0 &&
        Lt.REACT_APP_SC_DISABLE_SPEEDY !== void 0 &&
        Lt.REACT_APP_SC_DISABLE_SPEEDY !== ""
      ? Lt.REACT_APP_SC_DISABLE_SPEEDY !== "false" &&
        Lt.REACT_APP_SC_DISABLE_SPEEDY
      : typeof process < "u" &&
        Lt !== void 0 &&
        Lt.SC_DISABLE_SPEEDY !== void 0 &&
        Lt.SC_DISABLE_SPEEDY !== "" &&
        Lt.SC_DISABLE_SPEEDY !== "false" &&
        Lt.SC_DISABLE_SPEEDY),
  Ql = Object.freeze([]),
  Qo = Object.freeze({});
function mM(e, t, n) {
  return (
    n === void 0 && (n = Qo),
    (e.theme !== n.theme && e.theme) || t || n.theme
  );
}
var vS = new Set([
    "a",
    "abbr",
    "address",
    "area",
    "article",
    "aside",
    "audio",
    "b",
    "base",
    "bdi",
    "bdo",
    "big",
    "blockquote",
    "body",
    "br",
    "button",
    "canvas",
    "caption",
    "cite",
    "code",
    "col",
    "colgroup",
    "data",
    "datalist",
    "dd",
    "del",
    "details",
    "dfn",
    "dialog",
    "div",
    "dl",
    "dt",
    "em",
    "embed",
    "fieldset",
    "figcaption",
    "figure",
    "footer",
    "form",
    "h1",
    "h2",
    "h3",
    "h4",
    "h5",
    "h6",
    "header",
    "hgroup",
    "hr",
    "html",
    "i",
    "iframe",
    "img",
    "input",
    "ins",
    "kbd",
    "keygen",
    "label",
    "legend",
    "li",
    "link",
    "main",
    "map",
    "mark",
    "menu",
    "menuitem",
    "meta",
    "meter",
    "nav",
    "noscript",
    "object",
    "ol",
    "optgroup",
    "option",
    "output",
    "p",
    "param",
    "picture",
    "pre",
    "progress",
    "q",
    "rp",
    "rt",
    "ruby",
    "s",
    "samp",
    "script",
    "section",
    "select",
    "small",
    "source",
    "span",
    "strong",
    "style",
    "sub",
    "summary",
    "sup",
    "table",
    "tbody",
    "td",
    "textarea",
    "tfoot",
    "th",
    "thead",
    "time",
    "tr",
    "track",
    "u",
    "ul",
    "use",
    "var",
    "video",
    "wbr",
    "circle",
    "clipPath",
    "defs",
    "ellipse",
    "foreignObject",
    "g",
    "image",
    "line",
    "linearGradient",
    "marker",
    "mask",
    "path",
    "pattern",
    "polygon",
    "polyline",
    "radialGradient",
    "rect",
    "stop",
    "svg",
    "text",
    "tspan",
  ]),
  vM = /[!"#$%&'()*+,./:;<=>?@[\\\]^`{|}~-]+/g,
  yM = /(^-|-$)/g;
function mm(e) {
  return e.replace(vM, "-").replace(yM, "");
}
var bM = /(a)(d)/gi,
  Qs = 52,
  vm = function (e) {
    return String.fromCharCode(e + (e > 25 ? 39 : 97));
  };
function Zu(e) {
  var t,
    n = "";
  for (t = Math.abs(e); t > Qs; t = (t / Qs) | 0) n = vm(t % Qs) + n;
  return (vm(t % Qs) + n).replace(bM, "$1-$2");
}
var Yc,
  yS = 5381,
  $o = function (e, t) {
    for (var n = t.length; n; ) e = (33 * e) ^ t.charCodeAt(--n);
    return e;
  },
  bS = function (e) {
    return $o(yS, e);
  };
function xS(e) {
  return Zu(bS(e) >>> 0);
}
function xM(e) {
  return e.displayName || e.name || "Component";
}
function Xc(e) {
  return typeof e == "string" && !0;
}
var SS = typeof Symbol == "function" && Symbol.for,
  wS = SS ? Symbol.for("react.memo") : 60115,
  SM = SS ? Symbol.for("react.forward_ref") : 60112,
  wM = {
    childContextTypes: !0,
    contextType: !0,
    contextTypes: !0,
    defaultProps: !0,
    displayName: !0,
    getDefaultProps: !0,
    getDerivedStateFromError: !0,
    getDerivedStateFromProps: !0,
    mixins: !0,
    propTypes: !0,
    type: !0,
  },
  CM = {
    name: !0,
    length: !0,
    prototype: !0,
    caller: !0,
    callee: !0,
    arguments: !0,
    arity: !0,
  },
  CS = {
    $$typeof: !0,
    compare: !0,
    defaultProps: !0,
    displayName: !0,
    propTypes: !0,
    type: !0,
  },
  EM =
    (((Yc = {})[SM] = {
      $$typeof: !0,
      render: !0,
      defaultProps: !0,
      displayName: !0,
      propTypes: !0,
    }),
    (Yc[wS] = CS),
    Yc);
function ym(e) {
  return ("type" in (t = e) && t.type.$$typeof) === wS
    ? CS
    : "$$typeof" in e
      ? EM[e.$$typeof]
      : wM;
  var t;
}
var IM = Object.defineProperty,
  RM = Object.getOwnPropertyNames,
  bm = Object.getOwnPropertySymbols,
  kM = Object.getOwnPropertyDescriptor,
  PM = Object.getPrototypeOf,
  xm = Object.prototype;
function ES(e, t, n) {
  if (typeof t != "string") {
    if (xm) {
      var r = PM(t);
      r && r !== xm && ES(e, r, n);
    }
    var o = RM(t);
    bm && (o = o.concat(bm(t)));
    for (var i = ym(e), s = ym(t), a = 0; a < o.length; ++a) {
      var l = o[a];
      if (!(l in CM || (n && n[l]) || (s && l in s) || (i && l in i))) {
        var c = kM(t, l);
        try {
          IM(e, l, c);
        } catch {}
      }
    }
  }
  return e;
}
function Zo(e) {
  return typeof e == "function";
}
function _f(e) {
  return typeof e == "object" && "styledComponentId" in e;
}
function Xr(e, t) {
  return e && t ? "".concat(e, " ").concat(t) : e || t || "";
}
function ed(e, t) {
  if (e.length === 0) return "";
  for (var n = e[0], r = 1; r < e.length; r++) n += e[r];
  return n;
}
function gs(e) {
  return (
    e !== null &&
    typeof e == "object" &&
    e.constructor.name === Object.name &&
    !("props" in e && e.$$typeof)
  );
}
function td(e, t, n) {
  if ((n === void 0 && (n = !1), !n && !gs(e) && !Array.isArray(e))) return t;
  if (Array.isArray(t))
    for (var r = 0; r < t.length; r++) e[r] = td(e[r], t[r]);
  else if (gs(t)) for (var r in t) e[r] = td(e[r], t[r]);
  return e;
}
function Af(e, t) {
  Object.defineProperty(e, "toString", { value: t });
}
function Ps(e) {
  for (var t = [], n = 1; n < arguments.length; n++) t[n - 1] = arguments[n];
  return new Error(
    "An error occurred. See https://github.com/styled-components/styled-components/blob/main/packages/styled-components/src/utils/errors.md#"
      .concat(e, " for more information.")
      .concat(t.length > 0 ? " Args: ".concat(t.join(", ")) : ""),
  );
}
var TM = (function () {
    function e(t) {
      ((this.groupSizes = new Uint32Array(512)),
        (this.length = 512),
        (this.tag = t));
    }
    return (
      (e.prototype.indexOfGroup = function (t) {
        for (var n = 0, r = 0; r < t; r++) n += this.groupSizes[r];
        return n;
      }),
      (e.prototype.insertRules = function (t, n) {
        if (t >= this.groupSizes.length) {
          for (var r = this.groupSizes, o = r.length, i = o; t >= i; )
            if ((i <<= 1) < 0) throw Ps(16, "".concat(t));
          ((this.groupSizes = new Uint32Array(i)),
            this.groupSizes.set(r),
            (this.length = i));
          for (var s = o; s < i; s++) this.groupSizes[s] = 0;
        }
        for (
          var a = this.indexOfGroup(t + 1), l = ((s = 0), n.length);
          s < l;
          s++
        )
          this.tag.insertRule(a, n[s]) && (this.groupSizes[t]++, a++);
      }),
      (e.prototype.clearGroup = function (t) {
        if (t < this.length) {
          var n = this.groupSizes[t],
            r = this.indexOfGroup(t),
            o = r + n;
          this.groupSizes[t] = 0;
          for (var i = r; i < o; i++) this.tag.deleteRule(r);
        }
      }),
      (e.prototype.getGroup = function (t) {
        var n = "";
        if (t >= this.length || this.groupSizes[t] === 0) return n;
        for (
          var r = this.groupSizes[t],
            o = this.indexOfGroup(t),
            i = o + r,
            s = o;
          s < i;
          s++
        )
          n += "".concat(this.tag.getRule(s)).concat(Of);
        return n;
      }),
      e
    );
  })(),
  Ra = new Map(),
  el = new Map(),
  ka = 1,
  Zs = function (e) {
    if (Ra.has(e)) return Ra.get(e);
    for (; el.has(ka); ) ka++;
    var t = ka++;
    return (Ra.set(e, t), el.set(t, e), t);
  },
  OM = function (e, t) {
    ((ka = t + 1), Ra.set(e, t), el.set(t, e));
  },
  _M = "style[".concat(Jo, "][").concat(mS, '="').concat(Jl, '"]'),
  AM = new RegExp(
    "^".concat(Jo, '\\.g(\\d+)\\[id="([\\w\\d-]+)"\\].*?"([^"]*)'),
  ),
  NM = function (e, t, n) {
    for (var r, o = n.split(","), i = 0, s = o.length; i < s; i++)
      (r = o[i]) && e.registerName(t, r);
  },
  VM = function (e, t) {
    for (
      var n,
        r = ((n = t.textContent) !== null && n !== void 0 ? n : "").split(Of),
        o = [],
        i = 0,
        s = r.length;
      i < s;
      i++
    ) {
      var a = r[i].trim();
      if (a) {
        var l = a.match(AM);
        if (l) {
          var c = 0 | parseInt(l[1], 10),
            u = l[2];
          (c !== 0 && (OM(u, c), NM(e, u, l[3]), e.getTag().insertRules(c, o)),
            (o.length = 0));
        } else o.push(a);
      }
    }
  },
  Sm = function (e) {
    for (
      var t = document.querySelectorAll(_M), n = 0, r = t.length;
      n < r;
      n++
    ) {
      var o = t[n];
      o &&
        o.getAttribute(Jo) !== pS &&
        (VM(e, o), o.parentNode && o.parentNode.removeChild(o));
    }
  };
function FM() {
  return typeof __webpack_nonce__ < "u" ? __webpack_nonce__ : null;
}
var IS = function (e) {
    var t = document.head,
      n = e || t,
      r = document.createElement("style"),
      o = (function (a) {
        var l = Array.from(a.querySelectorAll("style[".concat(Jo, "]")));
        return l[l.length - 1];
      })(n),
      i = o !== void 0 ? o.nextSibling : null;
    (r.setAttribute(Jo, pS), r.setAttribute(mS, Jl));
    var s = FM();
    return (s && r.setAttribute("nonce", s), n.insertBefore(r, i), r);
  },
  DM = (function () {
    function e(t) {
      ((this.element = IS(t)),
        this.element.appendChild(document.createTextNode("")),
        (this.sheet = (function (n) {
          if (n.sheet) return n.sheet;
          for (var r = document.styleSheets, o = 0, i = r.length; o < i; o++) {
            var s = r[o];
            if (s.ownerNode === n) return s;
          }
          throw Ps(17);
        })(this.element)),
        (this.length = 0));
    }
    return (
      (e.prototype.insertRule = function (t, n) {
        try {
          return (this.sheet.insertRule(n, t), this.length++, !0);
        } catch {
          return !1;
        }
      }),
      (e.prototype.deleteRule = function (t) {
        (this.sheet.deleteRule(t), this.length--);
      }),
      (e.prototype.getRule = function (t) {
        var n = this.sheet.cssRules[t];
        return n && n.cssText ? n.cssText : "";
      }),
      e
    );
  })(),
  $M = (function () {
    function e(t) {
      ((this.element = IS(t)),
        (this.nodes = this.element.childNodes),
        (this.length = 0));
    }
    return (
      (e.prototype.insertRule = function (t, n) {
        if (t <= this.length && t >= 0) {
          var r = document.createTextNode(n);
          return (
            this.element.insertBefore(r, this.nodes[t] || null),
            this.length++,
            !0
          );
        }
        return !1;
      }),
      (e.prototype.deleteRule = function (t) {
        (this.element.removeChild(this.nodes[t]), this.length--);
      }),
      (e.prototype.getRule = function (t) {
        return t < this.length ? this.nodes[t].textContent : "";
      }),
      e
    );
  })(),
  MM = (function () {
    function e(t) {
      ((this.rules = []), (this.length = 0));
    }
    return (
      (e.prototype.insertRule = function (t, n) {
        return (
          t <= this.length && (this.rules.splice(t, 0, n), this.length++, !0)
        );
      }),
      (e.prototype.deleteRule = function (t) {
        (this.rules.splice(t, 1), this.length--);
      }),
      (e.prototype.getRule = function (t) {
        return t < this.length ? this.rules[t] : "";
      }),
      e
    );
  })(),
  wm = Za,
  LM = { isServer: !Za, useCSSOMInjection: !pM },
  RS = (function () {
    function e(t, n, r) {
      (t === void 0 && (t = Qo), n === void 0 && (n = {}));
      var o = this;
      ((this.options = _t(_t({}, LM), t)),
        (this.gs = n),
        (this.names = new Map(r)),
        (this.server = !!t.isServer),
        !this.server && Za && wm && ((wm = !1), Sm(this)),
        Af(this, function () {
          return (function (i) {
            for (
              var s = i.getTag(),
                a = s.length,
                l = "",
                c = function (d) {
                  var f = (function (b) {
                    return el.get(b);
                  })(d);
                  if (f === void 0) return "continue";
                  var g = i.names.get(f),
                    h = s.getGroup(d);
                  if (g === void 0 || !g.size || h.length === 0)
                    return "continue";
                  var p = ""
                      .concat(Jo, ".g")
                      .concat(d, '[id="')
                      .concat(f, '"]'),
                    v = "";
                  (g !== void 0 &&
                    g.forEach(function (b) {
                      b.length > 0 && (v += "".concat(b, ","));
                    }),
                    (l += ""
                      .concat(h)
                      .concat(p, '{content:"')
                      .concat(v, '"}')
                      .concat(Of)));
                },
                u = 0;
              u < a;
              u++
            )
              c(u);
            return l;
          })(o);
        }));
    }
    return (
      (e.registerId = function (t) {
        return Zs(t);
      }),
      (e.prototype.rehydrate = function () {
        !this.server && Za && Sm(this);
      }),
      (e.prototype.reconstructWithOptions = function (t, n) {
        return (
          n === void 0 && (n = !0),
          new e(
            _t(_t({}, this.options), t),
            this.gs,
            (n && this.names) || void 0,
          )
        );
      }),
      (e.prototype.allocateGSInstance = function (t) {
        return (this.gs[t] = (this.gs[t] || 0) + 1);
      }),
      (e.prototype.getTag = function () {
        return (
          this.tag ||
          (this.tag =
            ((t = (function (n) {
              var r = n.useCSSOMInjection,
                o = n.target;
              return n.isServer ? new MM(o) : r ? new DM(o) : new $M(o);
            })(this.options)),
            new TM(t)))
        );
        var t;
      }),
      (e.prototype.hasNameForId = function (t, n) {
        return this.names.has(t) && this.names.get(t).has(n);
      }),
      (e.prototype.registerName = function (t, n) {
        if ((Zs(t), this.names.has(t))) this.names.get(t).add(n);
        else {
          var r = new Set();
          (r.add(n), this.names.set(t, r));
        }
      }),
      (e.prototype.insertRules = function (t, n, r) {
        (this.registerName(t, n), this.getTag().insertRules(Zs(t), r));
      }),
      (e.prototype.clearNames = function (t) {
        this.names.has(t) && this.names.get(t).clear();
      }),
      (e.prototype.clearRules = function (t) {
        (this.getTag().clearGroup(Zs(t)), this.clearNames(t));
      }),
      (e.prototype.clearTag = function () {
        this.tag = void 0;
      }),
      e
    );
  })(),
  zM = /&/g,
  BM = /^\s*\/\/.*$/gm;
function kS(e, t) {
  return e.map(function (n) {
    return (
      n.type === "rule" &&
        ((n.value = "".concat(t, " ").concat(n.value)),
        (n.value = n.value.replaceAll(",", ",".concat(t, " "))),
        (n.props = n.props.map(function (r) {
          return "".concat(t, " ").concat(r);
        }))),
      Array.isArray(n.children) &&
        n.type !== "@keyframes" &&
        (n.children = kS(n.children, t)),
      n
    );
  });
}
function jM(e) {
  var t,
    n,
    r,
    o = Qo,
    i = o.options,
    s = i === void 0 ? Qo : i,
    a = o.plugins,
    l = a === void 0 ? Ql : a,
    c = function (f, g, h) {
      return h.startsWith(n) && h.endsWith(n) && h.replaceAll(n, "").length > 0
        ? ".".concat(t)
        : f;
    },
    u = l.slice();
  (u.push(function (f) {
    f.type === Kl &&
      f.value.includes("&") &&
      (f.props[0] = f.props[0].replace(zM, n).replace(r, c));
  }),
    s.prefix && u.push(gM),
    u.push(uM));
  var d = function (f, g, h, p) {
    (g === void 0 && (g = ""),
      h === void 0 && (h = ""),
      p === void 0 && (p = "&"),
      (t = p),
      (n = g),
      (r = new RegExp("\\".concat(n, "\\b"), "g")));
    var v = f.replace(BM, ""),
      b = lM(h || g ? "".concat(h, " ").concat(g, " { ").concat(v, " }") : v);
    s.namespace && (b = kS(b, s.namespace));
    var S = [];
    return (
      Qa(
        b,
        dM(
          u.concat(
            fM(function (w) {
              return S.push(w);
            }),
          ),
        ),
      ),
      S
    );
  };
  return (
    (d.hash = l.length
      ? l
          .reduce(function (f, g) {
            return (g.name || Ps(15), $o(f, g.name));
          }, yS)
          .toString()
      : ""),
    d
  );
}
var UM = new RS(),
  nd = jM(),
  PS = Le.createContext({
    shouldForwardProp: void 0,
    styleSheet: UM,
    stylis: nd,
  });
PS.Consumer;
Le.createContext(void 0);
function Cm() {
  return x.useContext(PS);
}
var TS = (function () {
    function e(t, n) {
      var r = this;
      ((this.inject = function (o, i) {
        i === void 0 && (i = nd);
        var s = r.name + i.hash;
        o.hasNameForId(r.id, s) ||
          o.insertRules(r.id, s, i(r.rules, s, "@keyframes"));
      }),
        (this.name = t),
        (this.id = "sc-keyframes-".concat(t)),
        (this.rules = n),
        Af(this, function () {
          throw Ps(12, String(r.name));
        }));
    }
    return (
      (e.prototype.getName = function (t) {
        return (t === void 0 && (t = nd), this.name + t.hash);
      }),
      e
    );
  })(),
  WM = function (e) {
    return e >= "A" && e <= "Z";
  };
function Em(e) {
  for (var t = "", n = 0; n < e.length; n++) {
    var r = e[n];
    if (n === 1 && r === "-" && e[0] === "-") return e;
    WM(r) ? (t += "-" + r.toLowerCase()) : (t += r);
  }
  return t.startsWith("ms-") ? "-" + t : t;
}
var OS = function (e) {
    return e == null || e === !1 || e === "";
  },
  _S = function (e) {
    var t,
      n,
      r = [];
    for (var o in e) {
      var i = e[o];
      e.hasOwnProperty(o) &&
        !OS(i) &&
        ((Array.isArray(i) && i.isCss) || Zo(i)
          ? r.push("".concat(Em(o), ":"), i, ";")
          : gs(i)
            ? r.push.apply(
                r,
                fs(fs(["".concat(o, " {")], _S(i), !1), ["}"], !1),
              )
            : r.push(
                ""
                  .concat(Em(o), ": ")
                  .concat(
                    ((t = o),
                    (n = i) == null || typeof n == "boolean" || n === ""
                      ? ""
                      : typeof n != "number" ||
                          n === 0 ||
                          t in hM ||
                          t.startsWith("--")
                        ? String(n).trim()
                        : "".concat(n, "px")),
                    ";",
                  ),
              ));
    }
    return r;
  };
function oo(e, t, n, r) {
  if (OS(e)) return [];
  if (_f(e)) return [".".concat(e.styledComponentId)];
  if (Zo(e)) {
    if (!Zo((i = e)) || (i.prototype && i.prototype.isReactComponent) || !t)
      return [e];
    var o = e(t);
    return oo(o, t, n, r);
  }
  var i;
  return e instanceof TS
    ? n
      ? (e.inject(n, r), [e.getName(r)])
      : [e]
    : gs(e)
      ? _S(e)
      : Array.isArray(e)
        ? Array.prototype.concat.apply(
            Ql,
            e.map(function (s) {
              return oo(s, t, n, r);
            }),
          )
        : [e.toString()];
}
function HM(e) {
  for (var t = 0; t < e.length; t += 1) {
    var n = e[t];
    if (Zo(n) && !_f(n)) return !1;
  }
  return !0;
}
var GM = bS(Jl),
  KM = (function () {
    function e(t, n, r) {
      ((this.rules = t),
        (this.staticRulesId = ""),
        (this.isStatic = (r === void 0 || r.isStatic) && HM(t)),
        (this.componentId = n),
        (this.baseHash = $o(GM, n)),
        (this.baseStyle = r),
        RS.registerId(n));
    }
    return (
      (e.prototype.generateAndInjectStyles = function (t, n, r) {
        var o = this.baseStyle
          ? this.baseStyle.generateAndInjectStyles(t, n, r)
          : "";
        if (this.isStatic && !r.hash)
          if (
            this.staticRulesId &&
            n.hasNameForId(this.componentId, this.staticRulesId)
          )
            o = Xr(o, this.staticRulesId);
          else {
            var i = ed(oo(this.rules, t, n, r)),
              s = Zu($o(this.baseHash, i) >>> 0);
            if (!n.hasNameForId(this.componentId, s)) {
              var a = r(i, ".".concat(s), void 0, this.componentId);
              n.insertRules(this.componentId, s, a);
            }
            ((o = Xr(o, s)), (this.staticRulesId = s));
          }
        else {
          for (
            var l = $o(this.baseHash, r.hash), c = "", u = 0;
            u < this.rules.length;
            u++
          ) {
            var d = this.rules[u];
            if (typeof d == "string") c += d;
            else if (d) {
              var f = ed(oo(d, t, n, r));
              ((l = $o(l, f + u)), (c += f));
            }
          }
          if (c) {
            var g = Zu(l >>> 0);
            (n.hasNameForId(this.componentId, g) ||
              n.insertRules(
                this.componentId,
                g,
                r(c, ".".concat(g), void 0, this.componentId),
              ),
              (o = Xr(o, g)));
          }
        }
        return o;
      }),
      e
    );
  })(),
  AS = Le.createContext(void 0);
AS.Consumer;
var Jc = {};
function qM(e, t, n) {
  var r = _f(e),
    o = e,
    i = !Xc(e),
    s = t.attrs,
    a = s === void 0 ? Ql : s,
    l = t.componentId,
    c =
      l === void 0
        ? (function (E, R) {
            var N = typeof E != "string" ? "sc" : mm(E);
            Jc[N] = (Jc[N] || 0) + 1;
            var I = "".concat(N, "-").concat(xS(Jl + N + Jc[N]));
            return R ? "".concat(R, "-").concat(I) : I;
          })(t.displayName, t.parentComponentId)
        : l,
    u = t.displayName,
    d =
      u === void 0
        ? (function (E) {
            return Xc(E) ? "styled.".concat(E) : "Styled(".concat(xM(E), ")");
          })(e)
        : u,
    f =
      t.displayName && t.componentId
        ? "".concat(mm(t.displayName), "-").concat(t.componentId)
        : t.componentId || c,
    g = r && o.attrs ? o.attrs.concat(a).filter(Boolean) : a,
    h = t.shouldForwardProp;
  if (r && o.shouldForwardProp) {
    var p = o.shouldForwardProp;
    if (t.shouldForwardProp) {
      var v = t.shouldForwardProp;
      h = function (E, R) {
        return p(E, R) && v(E, R);
      };
    } else h = p;
  }
  var b = new KM(n, f, r ? o.componentStyle : void 0);
  function S(E, R) {
    return (function (N, I, T) {
      var k = N.attrs,
        m = N.componentStyle,
        A = N.defaultProps,
        V = N.foldedComponentIds,
        P = N.styledComponentId,
        F = N.target,
        $ = Le.useContext(AS),
        H = Cm(),
        B = N.shouldForwardProp || H.shouldForwardProp,
        j = mM(I, $, A) || Qo,
        G = (function (De, ft, ze) {
          for (
            var L, M = _t(_t({}, ft), { className: void 0, theme: ze }), Y = 0;
            Y < De.length;
            Y += 1
          ) {
            var ne = Zo((L = De[Y])) ? L(M) : L;
            for (var ue in ne)
              M[ue] =
                ue === "className"
                  ? Xr(M[ue], ne[ue])
                  : ue === "style"
                    ? _t(_t({}, M[ue]), ne[ue])
                    : ne[ue];
          }
          return (
            ft.className && (M.className = Xr(M.className, ft.className)),
            M
          );
        })(k, I, j),
        ee = G.as || F,
        ae = {};
      for (var K in G)
        G[K] === void 0 ||
          K[0] === "$" ||
          K === "as" ||
          (K === "theme" && G.theme === j) ||
          (K === "forwardedAs"
            ? (ae.as = G.forwardedAs)
            : (B && !B(K, ee)) || (ae[K] = G[K]));
      var we = (function (De, ft) {
          var ze = Cm(),
            L = De.generateAndInjectStyles(ft, ze.styleSheet, ze.stylis);
          return L;
        })(m, G),
        Te = Xr(V, P);
      return (
        we && (Te += " " + we),
        G.className && (Te += " " + G.className),
        (ae[Xc(ee) && !vS.has(ee) ? "class" : "className"] = Te),
        T && (ae.ref = T),
        x.createElement(ee, ae)
      );
    })(w, E, R);
  }
  S.displayName = d;
  var w = Le.forwardRef(S);
  return (
    (w.attrs = g),
    (w.componentStyle = b),
    (w.displayName = d),
    (w.shouldForwardProp = h),
    (w.foldedComponentIds = r
      ? Xr(o.foldedComponentIds, o.styledComponentId)
      : ""),
    (w.styledComponentId = f),
    (w.target = r ? o.target : e),
    Object.defineProperty(w, "defaultProps", {
      get: function () {
        return this._foldedDefaultProps;
      },
      set: function (E) {
        this._foldedDefaultProps = r
          ? (function (R) {
              for (var N = [], I = 1; I < arguments.length; I++)
                N[I - 1] = arguments[I];
              for (var T = 0, k = N; T < k.length; T++) td(R, k[T], !0);
              return R;
            })({}, o.defaultProps, E)
          : E;
      },
    }),
    Af(w, function () {
      return ".".concat(w.styledComponentId);
    }),
    i &&
      ES(w, e, {
        attrs: !0,
        componentStyle: !0,
        displayName: !0,
        foldedComponentIds: !0,
        shouldForwardProp: !0,
        styledComponentId: !0,
        target: !0,
      }),
    w
  );
}
function Im(e, t) {
  for (var n = [e[0]], r = 0, o = t.length; r < o; r += 1)
    n.push(t[r], e[r + 1]);
  return n;
}
var Rm = function (e) {
  return Object.assign(e, { isCss: !0 });
};
function Zl(e) {
  for (var t = [], n = 1; n < arguments.length; n++) t[n - 1] = arguments[n];
  if (Zo(e) || gs(e)) return Rm(oo(Im(Ql, fs([e], t, !0))));
  var r = e;
  return t.length === 0 && r.length === 1 && typeof r[0] == "string"
    ? oo(r)
    : Rm(oo(Im(r, t)));
}
function rd(e, t, n) {
  if ((n === void 0 && (n = Qo), !t)) throw Ps(1, t);
  var r = function (o) {
    for (var i = [], s = 1; s < arguments.length; s++) i[s - 1] = arguments[s];
    return e(t, n, Zl.apply(void 0, fs([o], i, !1)));
  };
  return (
    (r.attrs = function (o) {
      return rd(
        e,
        t,
        _t(_t({}, n), {
          attrs: Array.prototype.concat(n.attrs, o).filter(Boolean),
        }),
      );
    }),
    (r.withConfig = function (o) {
      return rd(e, t, _t(_t({}, n), o));
    }),
    r
  );
}
var NS = function (e) {
    return rd(qM, e);
  },
  od = NS;
vS.forEach(function (e) {
  od[e] = NS(e);
});
function Ts(e) {
  for (var t = [], n = 1; n < arguments.length; n++) t[n - 1] = arguments[n];
  var r = ed(Zl.apply(void 0, fs([e], t, !1))),
    o = xS(r);
  return new TS(o, r);
}
/**
 * @mui/styled-engine-sc v6.4.9
 *
 * @license MIT
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ function YM(e, t) {
  let n;
  return (
    t
      ? (n = od(e).withConfig({
          displayName: t.label,
          shouldForwardProp: t.shouldForwardProp,
        }))
      : (n = od(e)),
    n
  );
}
function XM(e, t) {
  e.componentStyle && (e.componentStyle.rules = t(e.componentStyle.rules));
}
var VS = { exports: {} },
  ke = {};
/**
 * @license React
 * react-is.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var Nf = Symbol.for("react.transitional.element"),
  Vf = Symbol.for("react.portal"),
  ec = Symbol.for("react.fragment"),
  tc = Symbol.for("react.strict_mode"),
  nc = Symbol.for("react.profiler"),
  rc = Symbol.for("react.consumer"),
  oc = Symbol.for("react.context"),
  ic = Symbol.for("react.forward_ref"),
  sc = Symbol.for("react.suspense"),
  ac = Symbol.for("react.suspense_list"),
  lc = Symbol.for("react.memo"),
  cc = Symbol.for("react.lazy"),
  JM = Symbol.for("react.view_transition"),
  QM = Symbol.for("react.client.reference");
function cn(e) {
  if (typeof e == "object" && e !== null) {
    var t = e.$$typeof;
    switch (t) {
      case Nf:
        switch (((e = e.type), e)) {
          case ec:
          case nc:
          case tc:
          case sc:
          case ac:
          case JM:
            return e;
          default:
            switch (((e = e && e.$$typeof), e)) {
              case oc:
              case ic:
              case cc:
              case lc:
                return e;
              case rc:
                return e;
              default:
                return t;
            }
        }
      case Vf:
        return t;
    }
  }
}
ke.ContextConsumer = rc;
ke.ContextProvider = oc;
ke.Element = Nf;
ke.ForwardRef = ic;
ke.Fragment = ec;
ke.Lazy = cc;
ke.Memo = lc;
ke.Portal = Vf;
ke.Profiler = nc;
ke.StrictMode = tc;
ke.Suspense = sc;
ke.SuspenseList = ac;
ke.isContextConsumer = function (e) {
  return cn(e) === rc;
};
ke.isContextProvider = function (e) {
  return cn(e) === oc;
};
ke.isElement = function (e) {
  return typeof e == "object" && e !== null && e.$$typeof === Nf;
};
ke.isForwardRef = function (e) {
  return cn(e) === ic;
};
ke.isFragment = function (e) {
  return cn(e) === ec;
};
ke.isLazy = function (e) {
  return cn(e) === cc;
};
ke.isMemo = function (e) {
  return cn(e) === lc;
};
ke.isPortal = function (e) {
  return cn(e) === Vf;
};
ke.isProfiler = function (e) {
  return cn(e) === nc;
};
ke.isStrictMode = function (e) {
  return cn(e) === tc;
};
ke.isSuspense = function (e) {
  return cn(e) === sc;
};
ke.isSuspenseList = function (e) {
  return cn(e) === ac;
};
ke.isValidElementType = function (e) {
  return (
    typeof e == "string" ||
    typeof e == "function" ||
    e === ec ||
    e === nc ||
    e === tc ||
    e === sc ||
    e === ac ||
    (typeof e == "object" &&
      e !== null &&
      (e.$$typeof === cc ||
        e.$$typeof === lc ||
        e.$$typeof === oc ||
        e.$$typeof === rc ||
        e.$$typeof === ic ||
        e.$$typeof === QM ||
        e.getModuleId !== void 0))
  );
};
ke.typeOf = cn;
VS.exports = ke;
var FS = VS.exports;
function tr(e) {
  if (typeof e != "object" || e === null) return !1;
  const t = Object.getPrototypeOf(e);
  return (
    (t === null ||
      t === Object.prototype ||
      Object.getPrototypeOf(t) === null) &&
    !(Symbol.toStringTag in e) &&
    !(Symbol.iterator in e)
  );
}
function DS(e) {
  if (x.isValidElement(e) || FS.isValidElementType(e) || !tr(e)) return e;
  const t = {};
  return (
    Object.keys(e).forEach((n) => {
      t[n] = DS(e[n]);
    }),
    t
  );
}
function Gt(e, t, n = { clone: !0 }) {
  const r = n.clone ? { ...e } : e;
  return (
    tr(e) &&
      tr(t) &&
      Object.keys(t).forEach((o) => {
        x.isValidElement(t[o]) || FS.isValidElementType(t[o])
          ? (r[o] = t[o])
          : tr(t[o]) && Object.prototype.hasOwnProperty.call(e, o) && tr(e[o])
            ? (r[o] = Gt(e[o], t[o], n))
            : n.clone
              ? (r[o] = tr(t[o]) ? DS(t[o]) : t[o])
              : (r[o] = t[o]);
      }),
    r
  );
}
const ZM = (e) => {
  const t = Object.keys(e).map((n) => ({ key: n, val: e[n] })) || [];
  return (
    t.sort((n, r) => n.val - r.val),
    t.reduce((n, r) => ({ ...n, [r.key]: r.val }), {})
  );
};
function eL(e) {
  const {
      values: t = { xs: 0, sm: 600, md: 900, lg: 1200, xl: 1536 },
      unit: n = "px",
      step: r = 5,
      ...o
    } = e,
    i = ZM(t),
    s = Object.keys(i);
  function a(f) {
    return `@media (min-width:${typeof t[f] == "number" ? t[f] : f}${n})`;
  }
  function l(f) {
    return `@media (max-width:${(typeof t[f] == "number" ? t[f] : f) - r / 100}${n})`;
  }
  function c(f, g) {
    const h = s.indexOf(g);
    return `@media (min-width:${typeof t[f] == "number" ? t[f] : f}${n}) and (max-width:${(h !== -1 && typeof t[s[h]] == "number" ? t[s[h]] : g) - r / 100}${n})`;
  }
  function u(f) {
    return s.indexOf(f) + 1 < s.length ? c(f, s[s.indexOf(f) + 1]) : a(f);
  }
  function d(f) {
    const g = s.indexOf(f);
    return g === 0
      ? a(s[1])
      : g === s.length - 1
        ? l(s[g])
        : c(f, s[s.indexOf(f) + 1]).replace("@media", "@media not all and");
  }
  return {
    keys: s,
    values: i,
    up: a,
    down: l,
    between: c,
    only: u,
    not: d,
    unit: n,
    ...o,
  };
}
function km(e, t) {
  if (!e.containerQueries) return t;
  const n = Object.keys(t)
    .filter((r) => r.startsWith("@container"))
    .sort((r, o) => {
      var s, a;
      const i = /min-width:\s*([0-9.]+)/;
      return (
        +(((s = r.match(i)) == null ? void 0 : s[1]) || 0) -
        +(((a = o.match(i)) == null ? void 0 : a[1]) || 0)
      );
    });
  return n.length
    ? n.reduce(
        (r, o) => {
          const i = t[o];
          return (delete r[o], (r[o] = i), r);
        },
        { ...t },
      )
    : t;
}
function tL(e, t) {
  return (
    t === "@" ||
    (t.startsWith("@") &&
      (e.some((n) => t.startsWith(`@${n}`)) || !!t.match(/^@\d/)))
  );
}
function nL(e, t) {
  const n = t.match(/^@([^/]+)?\/?(.+)?$/);
  if (!n) return null;
  const [, r, o] = n,
    i = Number.isNaN(+r) ? r || 0 : +r;
  return e.containerQueries(o).up(i);
}
function rL(e) {
  const t = (i, s) => i.replace("@media", s ? `@container ${s}` : "@container");
  function n(i, s) {
    ((i.up = (...a) => t(e.breakpoints.up(...a), s)),
      (i.down = (...a) => t(e.breakpoints.down(...a), s)),
      (i.between = (...a) => t(e.breakpoints.between(...a), s)),
      (i.only = (...a) => t(e.breakpoints.only(...a), s)),
      (i.not = (...a) => {
        const l = t(e.breakpoints.not(...a), s);
        return l.includes("not all and")
          ? l
              .replace("not all and ", "")
              .replace("min-width:", "width<")
              .replace("max-width:", "width>")
              .replace("and", "or")
          : l;
      }));
  }
  const r = {},
    o = (i) => (n(r, i), r);
  return (n(o), { ...e, containerQueries: o });
}
const oL = { borderRadius: 4 };
function qi(e, t) {
  return t ? Gt(e, t, { clone: !1 }) : e;
}
const uc = { xs: 0, sm: 600, md: 900, lg: 1200, xl: 1536 },
  Pm = {
    keys: ["xs", "sm", "md", "lg", "xl"],
    up: (e) => `@media (min-width:${uc[e]}px)`,
  },
  iL = {
    containerQueries: (e) => ({
      up: (t) => {
        let n = typeof t == "number" ? t : uc[t] || t;
        return (
          typeof n == "number" && (n = `${n}px`),
          e ? `@container ${e} (min-width:${n})` : `@container (min-width:${n})`
        );
      },
    }),
  };
function gr(e, t, n) {
  const r = e.theme || {};
  if (Array.isArray(t)) {
    const i = r.breakpoints || Pm;
    return t.reduce((s, a, l) => ((s[i.up(i.keys[l])] = n(t[l])), s), {});
  }
  if (typeof t == "object") {
    const i = r.breakpoints || Pm;
    return Object.keys(t).reduce((s, a) => {
      if (tL(i.keys, a)) {
        const l = nL(r.containerQueries ? r : iL, a);
        l && (s[l] = n(t[a], a));
      } else if (Object.keys(i.values || uc).includes(a)) {
        const l = i.up(a);
        s[l] = n(t[a], a);
      } else {
        const l = a;
        s[l] = t[l];
      }
      return s;
    }, {});
  }
  return n(t);
}
function sL(e = {}) {
  var n;
  return (
    ((n = e.keys) == null
      ? void 0
      : n.reduce((r, o) => {
          const i = e.up(o);
          return ((r[i] = {}), r);
        }, {})) || {}
  );
}
function Tm(e, t) {
  return e.reduce((n, r) => {
    const o = n[r];
    return ((!o || Object.keys(o).length === 0) && delete n[r], n);
  }, t);
}
function at(e) {
  if (typeof e != "string") throw new Error(fo(7));
  return e.charAt(0).toUpperCase() + e.slice(1);
}
function dc(e, t, n = !0) {
  if (!t || typeof t != "string") return null;
  if (e && e.vars && n) {
    const r = `vars.${t}`
      .split(".")
      .reduce((o, i) => (o && o[i] ? o[i] : null), e);
    if (r != null) return r;
  }
  return t.split(".").reduce((r, o) => (r && r[o] != null ? r[o] : null), e);
}
function tl(e, t, n, r = n) {
  let o;
  return (
    typeof e == "function"
      ? (o = e(n))
      : Array.isArray(e)
        ? (o = e[n] || r)
        : (o = dc(e, n) || r),
    t && (o = t(o, r, e)),
    o
  );
}
function We(e) {
  const { prop: t, cssProperty: n = e.prop, themeKey: r, transform: o } = e,
    i = (s) => {
      if (s[t] == null) return null;
      const a = s[t],
        l = s.theme,
        c = dc(l, r) || {};
      return gr(s, a, (d) => {
        let f = tl(c, o, d);
        return (
          d === f &&
            typeof d == "string" &&
            (f = tl(c, o, `${t}${d === "default" ? "" : at(d)}`, d)),
          n === !1 ? f : { [n]: f }
        );
      });
    };
  return ((i.propTypes = {}), (i.filterProps = [t]), i);
}
function aL(e) {
  const t = {};
  return (n) => (t[n] === void 0 && (t[n] = e(n)), t[n]);
}
const lL = { m: "margin", p: "padding" },
  cL = {
    t: "Top",
    r: "Right",
    b: "Bottom",
    l: "Left",
    x: ["Left", "Right"],
    y: ["Top", "Bottom"],
  },
  Om = { marginX: "mx", marginY: "my", paddingX: "px", paddingY: "py" },
  uL = aL((e) => {
    if (e.length > 2)
      if (Om[e]) e = Om[e];
      else return [e];
    const [t, n] = e.split(""),
      r = lL[t],
      o = cL[n] || "";
    return Array.isArray(o) ? o.map((i) => r + i) : [r + o];
  }),
  Ff = [
    "m",
    "mt",
    "mr",
    "mb",
    "ml",
    "mx",
    "my",
    "margin",
    "marginTop",
    "marginRight",
    "marginBottom",
    "marginLeft",
    "marginX",
    "marginY",
    "marginInline",
    "marginInlineStart",
    "marginInlineEnd",
    "marginBlock",
    "marginBlockStart",
    "marginBlockEnd",
  ],
  Df = [
    "p",
    "pt",
    "pr",
    "pb",
    "pl",
    "px",
    "py",
    "padding",
    "paddingTop",
    "paddingRight",
    "paddingBottom",
    "paddingLeft",
    "paddingX",
    "paddingY",
    "paddingInline",
    "paddingInlineStart",
    "paddingInlineEnd",
    "paddingBlock",
    "paddingBlockStart",
    "paddingBlockEnd",
  ];
[...Ff, ...Df];
function Os(e, t, n, r) {
  const o = dc(e, t, !0) ?? n;
  return typeof o == "number" || typeof o == "string"
    ? (i) =>
        typeof i == "string"
          ? i
          : typeof o == "string"
            ? `calc(${i} * ${o})`
            : o * i
    : Array.isArray(o)
      ? (i) => {
          if (typeof i == "string") return i;
          const s = Math.abs(i),
            a = o[s];
          return i >= 0 ? a : typeof a == "number" ? -a : `-${a}`;
        }
      : typeof o == "function"
        ? o
        : () => {};
}
function $f(e) {
  return Os(e, "spacing", 8);
}
function _s(e, t) {
  return typeof t == "string" || t == null ? t : e(t);
}
function dL(e, t) {
  return (n) => e.reduce((r, o) => ((r[o] = _s(t, n)), r), {});
}
function fL(e, t, n, r) {
  if (!t.includes(n)) return null;
  const o = uL(n),
    i = dL(o, r),
    s = e[n];
  return gr(e, s, i);
}
function $S(e, t) {
  const n = $f(e.theme);
  return Object.keys(e)
    .map((r) => fL(e, t, r, n))
    .reduce(qi, {});
}
function $e(e) {
  return $S(e, Ff);
}
$e.propTypes = {};
$e.filterProps = Ff;
function Me(e) {
  return $S(e, Df);
}
Me.propTypes = {};
Me.filterProps = Df;
function MS(e = 8, t = $f({ spacing: e })) {
  if (e.mui) return e;
  const n = (...r) =>
    (r.length === 0 ? [1] : r)
      .map((i) => {
        const s = t(i);
        return typeof s == "number" ? `${s}px` : s;
      })
      .join(" ");
  return ((n.mui = !0), n);
}
function fc(...e) {
  const t = e.reduce(
      (r, o) => (
        o.filterProps.forEach((i) => {
          r[i] = o;
        }),
        r
      ),
      {},
    ),
    n = (r) => Object.keys(r).reduce((o, i) => (t[i] ? qi(o, t[i](r)) : o), {});
  return (
    (n.propTypes = {}),
    (n.filterProps = e.reduce((r, o) => r.concat(o.filterProps), [])),
    n
  );
}
function tn(e) {
  return typeof e != "number" ? e : `${e}px solid`;
}
function un(e, t) {
  return We({ prop: e, themeKey: "borders", transform: t });
}
const gL = un("border", tn),
  hL = un("borderTop", tn),
  pL = un("borderRight", tn),
  mL = un("borderBottom", tn),
  vL = un("borderLeft", tn),
  yL = un("borderColor"),
  bL = un("borderTopColor"),
  xL = un("borderRightColor"),
  SL = un("borderBottomColor"),
  wL = un("borderLeftColor"),
  CL = un("outline", tn),
  EL = un("outlineColor"),
  gc = (e) => {
    if (e.borderRadius !== void 0 && e.borderRadius !== null) {
      const t = Os(e.theme, "shape.borderRadius", 4),
        n = (r) => ({ borderRadius: _s(t, r) });
      return gr(e, e.borderRadius, n);
    }
    return null;
  };
gc.propTypes = {};
gc.filterProps = ["borderRadius"];
fc(gL, hL, pL, mL, vL, yL, bL, xL, SL, wL, gc, CL, EL);
const hc = (e) => {
  if (e.gap !== void 0 && e.gap !== null) {
    const t = Os(e.theme, "spacing", 8),
      n = (r) => ({ gap: _s(t, r) });
    return gr(e, e.gap, n);
  }
  return null;
};
hc.propTypes = {};
hc.filterProps = ["gap"];
const pc = (e) => {
  if (e.columnGap !== void 0 && e.columnGap !== null) {
    const t = Os(e.theme, "spacing", 8),
      n = (r) => ({ columnGap: _s(t, r) });
    return gr(e, e.columnGap, n);
  }
  return null;
};
pc.propTypes = {};
pc.filterProps = ["columnGap"];
const mc = (e) => {
  if (e.rowGap !== void 0 && e.rowGap !== null) {
    const t = Os(e.theme, "spacing", 8),
      n = (r) => ({ rowGap: _s(t, r) });
    return gr(e, e.rowGap, n);
  }
  return null;
};
mc.propTypes = {};
mc.filterProps = ["rowGap"];
const IL = We({ prop: "gridColumn" }),
  RL = We({ prop: "gridRow" }),
  kL = We({ prop: "gridAutoFlow" }),
  PL = We({ prop: "gridAutoColumns" }),
  TL = We({ prop: "gridAutoRows" }),
  OL = We({ prop: "gridTemplateColumns" }),
  _L = We({ prop: "gridTemplateRows" }),
  AL = We({ prop: "gridTemplateAreas" }),
  NL = We({ prop: "gridArea" });
fc(hc, pc, mc, IL, RL, kL, PL, TL, OL, _L, AL, NL);
function Bo(e, t) {
  return t === "grey" ? t : e;
}
const VL = We({ prop: "color", themeKey: "palette", transform: Bo }),
  FL = We({
    prop: "bgcolor",
    cssProperty: "backgroundColor",
    themeKey: "palette",
    transform: Bo,
  }),
  DL = We({ prop: "backgroundColor", themeKey: "palette", transform: Bo });
fc(VL, FL, DL);
function jt(e) {
  return e <= 1 && e !== 0 ? `${e * 100}%` : e;
}
const $L = We({ prop: "width", transform: jt }),
  Mf = (e) => {
    if (e.maxWidth !== void 0 && e.maxWidth !== null) {
      const t = (n) => {
        var o, i, s, a, l;
        const r =
          ((s =
            (i = (o = e.theme) == null ? void 0 : o.breakpoints) == null
              ? void 0
              : i.values) == null
            ? void 0
            : s[n]) || uc[n];
        return r
          ? ((l = (a = e.theme) == null ? void 0 : a.breakpoints) == null
              ? void 0
              : l.unit) !== "px"
            ? { maxWidth: `${r}${e.theme.breakpoints.unit}` }
            : { maxWidth: r }
          : { maxWidth: jt(n) };
      };
      return gr(e, e.maxWidth, t);
    }
    return null;
  };
Mf.filterProps = ["maxWidth"];
const ML = We({ prop: "minWidth", transform: jt }),
  LL = We({ prop: "height", transform: jt }),
  zL = We({ prop: "maxHeight", transform: jt }),
  BL = We({ prop: "minHeight", transform: jt });
We({ prop: "size", cssProperty: "width", transform: jt });
We({ prop: "size", cssProperty: "height", transform: jt });
const jL = We({ prop: "boxSizing" });
fc($L, Mf, ML, LL, zL, BL, jL);
const vc = {
  border: { themeKey: "borders", transform: tn },
  borderTop: { themeKey: "borders", transform: tn },
  borderRight: { themeKey: "borders", transform: tn },
  borderBottom: { themeKey: "borders", transform: tn },
  borderLeft: { themeKey: "borders", transform: tn },
  borderColor: { themeKey: "palette" },
  borderTopColor: { themeKey: "palette" },
  borderRightColor: { themeKey: "palette" },
  borderBottomColor: { themeKey: "palette" },
  borderLeftColor: { themeKey: "palette" },
  outline: { themeKey: "borders", transform: tn },
  outlineColor: { themeKey: "palette" },
  borderRadius: { themeKey: "shape.borderRadius", style: gc },
  color: { themeKey: "palette", transform: Bo },
  bgcolor: {
    themeKey: "palette",
    cssProperty: "backgroundColor",
    transform: Bo,
  },
  backgroundColor: { themeKey: "palette", transform: Bo },
  p: { style: Me },
  pt: { style: Me },
  pr: { style: Me },
  pb: { style: Me },
  pl: { style: Me },
  px: { style: Me },
  py: { style: Me },
  padding: { style: Me },
  paddingTop: { style: Me },
  paddingRight: { style: Me },
  paddingBottom: { style: Me },
  paddingLeft: { style: Me },
  paddingX: { style: Me },
  paddingY: { style: Me },
  paddingInline: { style: Me },
  paddingInlineStart: { style: Me },
  paddingInlineEnd: { style: Me },
  paddingBlock: { style: Me },
  paddingBlockStart: { style: Me },
  paddingBlockEnd: { style: Me },
  m: { style: $e },
  mt: { style: $e },
  mr: { style: $e },
  mb: { style: $e },
  ml: { style: $e },
  mx: { style: $e },
  my: { style: $e },
  margin: { style: $e },
  marginTop: { style: $e },
  marginRight: { style: $e },
  marginBottom: { style: $e },
  marginLeft: { style: $e },
  marginX: { style: $e },
  marginY: { style: $e },
  marginInline: { style: $e },
  marginInlineStart: { style: $e },
  marginInlineEnd: { style: $e },
  marginBlock: { style: $e },
  marginBlockStart: { style: $e },
  marginBlockEnd: { style: $e },
  displayPrint: {
    cssProperty: !1,
    transform: (e) => ({ "@media print": { display: e } }),
  },
  display: {},
  overflow: {},
  textOverflow: {},
  visibility: {},
  whiteSpace: {},
  flexBasis: {},
  flexDirection: {},
  flexWrap: {},
  justifyContent: {},
  alignItems: {},
  alignContent: {},
  order: {},
  flex: {},
  flexGrow: {},
  flexShrink: {},
  alignSelf: {},
  justifyItems: {},
  justifySelf: {},
  gap: { style: hc },
  rowGap: { style: mc },
  columnGap: { style: pc },
  gridColumn: {},
  gridRow: {},
  gridAutoFlow: {},
  gridAutoColumns: {},
  gridAutoRows: {},
  gridTemplateColumns: {},
  gridTemplateRows: {},
  gridTemplateAreas: {},
  gridArea: {},
  position: {},
  zIndex: { themeKey: "zIndex" },
  top: {},
  right: {},
  bottom: {},
  left: {},
  boxShadow: { themeKey: "shadows" },
  width: { transform: jt },
  maxWidth: { style: Mf },
  minWidth: { transform: jt },
  height: { transform: jt },
  maxHeight: { transform: jt },
  minHeight: { transform: jt },
  boxSizing: {},
  font: { themeKey: "font" },
  fontFamily: { themeKey: "typography" },
  fontSize: { themeKey: "typography" },
  fontStyle: { themeKey: "typography" },
  fontWeight: { themeKey: "typography" },
  letterSpacing: {},
  textTransform: {},
  lineHeight: {},
  textAlign: {},
  typography: { cssProperty: !1, themeKey: "typography" },
};
function UL(...e) {
  const t = e.reduce((r, o) => r.concat(Object.keys(o)), []),
    n = new Set(t);
  return e.every((r) => n.size === Object.keys(r).length);
}
function WL(e, t) {
  return typeof e == "function" ? e(t) : e;
}
function HL() {
  function e(n, r, o, i) {
    const s = { [n]: r, theme: o },
      a = i[n];
    if (!a) return { [n]: r };
    const { cssProperty: l = n, themeKey: c, transform: u, style: d } = a;
    if (r == null) return null;
    if (c === "typography" && r === "inherit") return { [n]: r };
    const f = dc(o, c) || {};
    return d
      ? d(s)
      : gr(s, r, (h) => {
          let p = tl(f, u, h);
          return (
            h === p &&
              typeof h == "string" &&
              (p = tl(f, u, `${n}${h === "default" ? "" : at(h)}`, h)),
            l === !1 ? p : { [l]: p }
          );
        });
  }
  function t(n) {
    const { sx: r, theme: o = {}, nested: i } = n || {};
    if (!r) return null;
    const s = o.unstable_sxConfig ?? vc;
    function a(l) {
      let c = l;
      if (typeof l == "function") c = l(o);
      else if (typeof l != "object") return l;
      if (!c) return null;
      const u = sL(o.breakpoints),
        d = Object.keys(u);
      let f = u;
      return (
        Object.keys(c).forEach((g) => {
          const h = WL(c[g], o);
          if (h != null)
            if (typeof h == "object")
              if (s[g]) f = qi(f, e(g, h, o, s));
              else {
                const p = gr({ theme: o }, h, (v) => ({ [g]: v }));
                UL(p, h)
                  ? (f[g] = t({ sx: h, theme: o, nested: !0 }))
                  : (f = qi(f, p));
              }
            else f = qi(f, e(g, h, o, s));
        }),
        !i && o.modularCssLayers
          ? { "@layer sx": km(o, Tm(d, f)) }
          : km(o, Tm(d, f))
      );
    }
    return Array.isArray(r) ? r.map(a) : a(r);
  }
  return t;
}
const ei = HL();
ei.filterProps = ["sx"];
function GL(e, t) {
  var r;
  const n = this;
  if (n.vars) {
    if (
      !((r = n.colorSchemes) != null && r[e]) ||
      typeof n.getColorSchemeSelector != "function"
    )
      return {};
    let o = n.getColorSchemeSelector(e);
    return o === "&"
      ? t
      : ((o.includes("data-") || o.includes(".")) &&
          (o = `*:where(${o.replace(/\s*&$/, "")}) &`),
        { [o]: t });
  }
  return n.palette.mode === e ? t : {};
}
function LS(e = {}, ...t) {
  const {
      breakpoints: n = {},
      palette: r = {},
      spacing: o,
      shape: i = {},
      ...s
    } = e,
    a = eL(n),
    l = MS(o);
  let c = Gt(
    {
      breakpoints: a,
      direction: "ltr",
      components: {},
      palette: { mode: "light", ...r },
      spacing: l,
      shape: { ...oL, ...i },
    },
    s,
  );
  return (
    (c = rL(c)),
    (c.applyStyles = GL),
    (c = t.reduce((u, d) => Gt(u, d), c)),
    (c.unstable_sxConfig = {
      ...vc,
      ...(s == null ? void 0 : s.unstable_sxConfig),
    }),
    (c.unstable_sx = function (d) {
      return ei({ sx: d, theme: this });
    }),
    c
  );
}
const _m = (e) => e,
  KL = () => {
    let e = _m;
    return {
      configure(t) {
        e = t;
      },
      generate(t) {
        return e(t);
      },
      reset() {
        e = _m;
      },
    };
  },
  qL = KL(),
  YL = {
    active: "active",
    checked: "checked",
    completed: "completed",
    disabled: "disabled",
    error: "error",
    expanded: "expanded",
    focused: "focused",
    focusVisible: "focusVisible",
    open: "open",
    readOnly: "readOnly",
    required: "required",
    selected: "selected",
  };
function yc(e, t, n = "Mui") {
  const r = YL[t];
  return r ? `${n}-${r}` : `${qL.generate(e)}-${t}`;
}
function bc(e, t, n = "Mui") {
  const r = {};
  return (
    t.forEach((o) => {
      r[o] = yc(e, o, n);
    }),
    r
  );
}
function zS(e) {
  const { variants: t, ...n } = e,
    r = { variants: t, style: n, isProcessed: !0 };
  return (
    r.style === n ||
      (t &&
        t.forEach((o) => {
          typeof o.style != "function" && (o.style = o.style);
        })),
    r
  );
}
const XL = LS();
function Qc(e) {
  return e !== "ownerState" && e !== "theme" && e !== "sx" && e !== "as";
}
function Jr(e, t) {
  return (
    t &&
      e &&
      typeof e == "object" &&
      e.styles &&
      !e.styles.startsWith("@layer") &&
      (e.styles = `@layer ${t}{${String(e.styles)}}`),
    e
  );
}
function JL(e) {
  return e ? (t, n) => n[e] : null;
}
function QL(e, t, n) {
  e.theme = tz(e.theme) ? n : e.theme[t] || e.theme;
}
function Pa(e, t, n) {
  const r = typeof t == "function" ? t(e) : t;
  if (Array.isArray(r)) return r.flatMap((o) => Pa(e, o, n));
  if (Array.isArray(r == null ? void 0 : r.variants)) {
    let o;
    if (r.isProcessed) o = n ? Jr(r.style, n) : r.style;
    else {
      const { variants: i, ...s } = r;
      o = n ? Jr(s, n) : s;
    }
    return BS(e, r.variants, [o], n);
  }
  return r != null && r.isProcessed
    ? n
      ? Jr(r.style, n)
      : r.style
    : n
      ? Jr(r, n)
      : r;
}
function BS(e, t, n = [], r = void 0) {
  var i;
  let o;
  e: for (let s = 0; s < t.length; s += 1) {
    const a = t[s];
    if (typeof a.props == "function") {
      if (
        (o ?? (o = { ...e, ...e.ownerState, ownerState: e.ownerState }),
        !a.props(o))
      )
        continue;
    } else
      for (const l in a.props)
        if (
          e[l] !== a.props[l] &&
          ((i = e.ownerState) == null ? void 0 : i[l]) !== a.props[l]
        )
          continue e;
    typeof a.style == "function"
      ? (o ?? (o = { ...e, ...e.ownerState, ownerState: e.ownerState }),
        n.push(r ? Jr(a.style(o), r) : a.style(o)))
      : n.push(r ? Jr(a.style, r) : a.style);
  }
  return n;
}
function ZL(e = {}) {
  const {
    themeId: t,
    defaultTheme: n = XL,
    rootShouldForwardProp: r = Qc,
    slotShouldForwardProp: o = Qc,
  } = e;
  function i(a) {
    QL(a, t, n);
  }
  return (a, l = {}) => {
    XM(a, (N) => N.filter((I) => I !== ei));
    const {
        name: c,
        slot: u,
        skipVariantsResolver: d,
        skipSx: f,
        overridesResolver: g = JL(rz(u)),
        ...h
      } = l,
      p = (c && c.startsWith("Mui")) || u ? "components" : "custom",
      v = d !== void 0 ? d : (u && u !== "Root" && u !== "root") || !1,
      b = f || !1;
    let S = Qc;
    u === "Root" || u === "root"
      ? (S = r)
      : u
        ? (S = o)
        : nz(a) && (S = void 0);
    const w = YM(a, { shouldForwardProp: S, label: ez(), ...h }),
      E = (N) => {
        if (N.__emotion_real === N) return N;
        if (typeof N == "function")
          return function (T) {
            return Pa(T, N, T.theme.modularCssLayers ? p : void 0);
          };
        if (tr(N)) {
          const I = zS(N);
          return function (k) {
            return I.variants
              ? Pa(k, I, k.theme.modularCssLayers ? p : void 0)
              : k.theme.modularCssLayers
                ? Jr(I.style, p)
                : I.style;
          };
        }
        return N;
      },
      R = (...N) => {
        const I = [],
          T = N.map(E),
          k = [];
        if (
          (I.push(i),
          c &&
            g &&
            k.push(function (P) {
              var B, j;
              const $ =
                (j = (B = P.theme.components) == null ? void 0 : B[c]) == null
                  ? void 0
                  : j.styleOverrides;
              if (!$) return null;
              const H = {};
              for (const G in $)
                H[G] = Pa(P, $[G], P.theme.modularCssLayers ? "theme" : void 0);
              return g(P, H);
            }),
          c &&
            !v &&
            k.push(function (P) {
              var H, B;
              const F = P.theme,
                $ =
                  (B =
                    (H = F == null ? void 0 : F.components) == null
                      ? void 0
                      : H[c]) == null
                    ? void 0
                    : B.variants;
              return $
                ? BS(P, $, [], P.theme.modularCssLayers ? "theme" : void 0)
                : null;
            }),
          b || k.push(ei),
          Array.isArray(T[0]))
        ) {
          const V = T.shift(),
            P = new Array(I.length).fill(""),
            F = new Array(k.length).fill("");
          let $;
          (($ = [...P, ...V, ...F]),
            ($.raw = [...P, ...V.raw, ...F]),
            I.unshift($));
        }
        const m = [...I, ...T, ...k],
          A = w(...m);
        return (a.muiName && (A.muiName = a.muiName), A);
      };
    return (w.withConfig && (R.withConfig = w.withConfig), R);
  };
}
function ez(e, t) {
  return void 0;
}
function tz(e) {
  for (const t in e) return !1;
  return !0;
}
function nz(e) {
  return typeof e == "string" && e.charCodeAt(0) > 96;
}
function rz(e) {
  return e && e.charAt(0).toLowerCase() + e.slice(1);
}
function nl(e, t) {
  const n = { ...t };
  for (const r in e)
    if (Object.prototype.hasOwnProperty.call(e, r)) {
      const o = r;
      if (o === "components" || o === "slots") n[o] = { ...e[o], ...n[o] };
      else if (o === "componentsProps" || o === "slotProps") {
        const i = e[o],
          s = t[o];
        if (!s) n[o] = i || {};
        else if (!i) n[o] = s;
        else {
          n[o] = { ...s };
          for (const a in i)
            if (Object.prototype.hasOwnProperty.call(i, a)) {
              const l = a;
              n[o][l] = nl(i[l], s[l]);
            }
        }
      } else n[o] === void 0 && (n[o] = e[o]);
    }
  return n;
}
const oz = typeof window < "u" ? x.useLayoutEffect : x.useEffect;
function iz(e, t = Number.MIN_SAFE_INTEGER, n = Number.MAX_SAFE_INTEGER) {
  return Math.max(t, Math.min(e, n));
}
function Lf(e, t = 0, n = 1) {
  return iz(e, t, n);
}
function sz(e) {
  e = e.slice(1);
  const t = new RegExp(`.{1,${e.length >= 6 ? 2 : 1}}`, "g");
  let n = e.match(t);
  return (
    n && n[0].length === 1 && (n = n.map((r) => r + r)),
    n
      ? `rgb${n.length === 4 ? "a" : ""}(${n.map((r, o) => (o < 3 ? parseInt(r, 16) : Math.round((parseInt(r, 16) / 255) * 1e3) / 1e3)).join(", ")})`
      : ""
  );
}
function Ar(e) {
  if (e.type) return e;
  if (e.charAt(0) === "#") return Ar(sz(e));
  const t = e.indexOf("("),
    n = e.substring(0, t);
  if (!["rgb", "rgba", "hsl", "hsla", "color"].includes(n))
    throw new Error(fo(9, e));
  let r = e.substring(t + 1, e.length - 1),
    o;
  if (n === "color") {
    if (
      ((r = r.split(" ")),
      (o = r.shift()),
      r.length === 4 && r[3].charAt(0) === "/" && (r[3] = r[3].slice(1)),
      !["srgb", "display-p3", "a98-rgb", "prophoto-rgb", "rec-2020"].includes(
        o,
      ))
    )
      throw new Error(fo(10, o));
  } else r = r.split(",");
  return (
    (r = r.map((i) => parseFloat(i))),
    { type: n, values: r, colorSpace: o }
  );
}
const az = (e) => {
    const t = Ar(e);
    return t.values
      .slice(0, 3)
      .map((n, r) => (t.type.includes("hsl") && r !== 0 ? `${n}%` : n))
      .join(" ");
  },
  zi = (e, t) => {
    try {
      return az(e);
    } catch {
      return e;
    }
  };
function xc(e) {
  const { type: t, colorSpace: n } = e;
  let { values: r } = e;
  return (
    t.includes("rgb")
      ? (r = r.map((o, i) => (i < 3 ? parseInt(o, 10) : o)))
      : t.includes("hsl") && ((r[1] = `${r[1]}%`), (r[2] = `${r[2]}%`)),
    t.includes("color") ? (r = `${n} ${r.join(" ")}`) : (r = `${r.join(", ")}`),
    `${t}(${r})`
  );
}
function jS(e) {
  e = Ar(e);
  const { values: t } = e,
    n = t[0],
    r = t[1] / 100,
    o = t[2] / 100,
    i = r * Math.min(o, 1 - o),
    s = (c, u = (c + n / 30) % 12) =>
      o - i * Math.max(Math.min(u - 3, 9 - u, 1), -1);
  let a = "rgb";
  const l = [
    Math.round(s(0) * 255),
    Math.round(s(8) * 255),
    Math.round(s(4) * 255),
  ];
  return (
    e.type === "hsla" && ((a += "a"), l.push(t[3])),
    xc({ type: a, values: l })
  );
}
function id(e) {
  e = Ar(e);
  let t = e.type === "hsl" || e.type === "hsla" ? Ar(jS(e)).values : e.values;
  return (
    (t = t.map(
      (n) => (
        e.type !== "color" && (n /= 255),
        n <= 0.03928 ? n / 12.92 : ((n + 0.055) / 1.055) ** 2.4
      ),
    )),
    Number((0.2126 * t[0] + 0.7152 * t[1] + 0.0722 * t[2]).toFixed(3))
  );
}
function lz(e, t) {
  const n = id(e),
    r = id(t);
  return (Math.max(n, r) + 0.05) / (Math.min(n, r) + 0.05);
}
function No(e, t) {
  return (
    (e = Ar(e)),
    (t = Lf(t)),
    (e.type === "rgb" || e.type === "hsl") && (e.type += "a"),
    e.type === "color" ? (e.values[3] = `/${t}`) : (e.values[3] = t),
    xc(e)
  );
}
function ea(e, t, n) {
  try {
    return No(e, t);
  } catch {
    return e;
  }
}
function zf(e, t) {
  if (((e = Ar(e)), (t = Lf(t)), e.type.includes("hsl"))) e.values[2] *= 1 - t;
  else if (e.type.includes("rgb") || e.type.includes("color"))
    for (let n = 0; n < 3; n += 1) e.values[n] *= 1 - t;
  return xc(e);
}
function Ee(e, t, n) {
  try {
    return zf(e, t);
  } catch {
    return e;
  }
}
function Bf(e, t) {
  if (((e = Ar(e)), (t = Lf(t)), e.type.includes("hsl")))
    e.values[2] += (100 - e.values[2]) * t;
  else if (e.type.includes("rgb"))
    for (let n = 0; n < 3; n += 1) e.values[n] += (255 - e.values[n]) * t;
  else if (e.type.includes("color"))
    for (let n = 0; n < 3; n += 1) e.values[n] += (1 - e.values[n]) * t;
  return xc(e);
}
function Ie(e, t, n) {
  try {
    return Bf(e, t);
  } catch {
    return e;
  }
}
function cz(e, t = 0.15) {
  return id(e) > 0.5 ? zf(e, t) : Bf(e, t);
}
function ta(e, t, n) {
  try {
    return cz(e, t);
  } catch {
    return e;
  }
}
let Am = 0;
function uz(e) {
  const [t, n] = x.useState(e),
    r = e || t;
  return (
    x.useEffect(() => {
      t == null && ((Am += 1), n(`mui-${Am}`));
    }, [t]),
    r
  );
}
const dz = { ..._a },
  Nm = dz.useId;
function fz(e) {
  if (Nm !== void 0) {
    const t = Nm();
    return e ?? t;
  }
  return uz(e);
}
function Ta(e) {
  const t = x.useRef(e);
  return (
    oz(() => {
      t.current = e;
    }),
    x.useRef((...n) => (0, t.current)(...n)).current
  );
}
function Vm(...e) {
  const t = x.useRef(void 0),
    n = x.useCallback((r) => {
      const o = e.map((i) => {
        if (i == null) return null;
        if (typeof i == "function") {
          const s = i,
            a = s(r);
          return typeof a == "function"
            ? a
            : () => {
                s(null);
              };
        }
        return (
          (i.current = r),
          () => {
            i.current = null;
          }
        );
      });
      return () => {
        o.forEach((i) => (i == null ? void 0 : i()));
      };
    }, e);
  return x.useMemo(
    () =>
      e.every((r) => r == null)
        ? null
        : (r) => {
            (t.current && (t.current(), (t.current = void 0)),
              r != null && (t.current = n(r)));
          },
    e,
  );
}
const Fm = {};
function US(e, t) {
  const n = x.useRef(Fm);
  return (n.current === Fm && (n.current = e(t)), n);
}
const gz = [];
function hz(e) {
  x.useEffect(e, gz);
}
class jf {
  constructor() {
    Oe(this, "currentId", null);
    Oe(this, "clear", () => {
      this.currentId !== null &&
        (clearTimeout(this.currentId), (this.currentId = null));
    });
    Oe(this, "disposeEffect", () => this.clear);
  }
  static create() {
    return new jf();
  }
  start(t, n) {
    (this.clear(),
      (this.currentId = setTimeout(() => {
        ((this.currentId = null), n());
      }, t)));
  }
}
function pz() {
  const e = US(jf.create).current;
  return (hz(e.disposeEffect), e);
}
function Dm(e) {
  try {
    return e.matches(":focus-visible");
  } catch {}
  return !1;
}
function Uf(e, t, n = void 0) {
  const r = {};
  for (const o in e) {
    const i = e[o];
    let s = "",
      a = !0;
    for (let l = 0; l < i.length; l += 1) {
      const c = i[l];
      c &&
        ((s += (a === !0 ? "" : " ") + t(c)),
        (a = !1),
        n && n[c] && (s += " " + n[c]));
    }
    r[o] = s;
  }
  return r;
}
const mz = x.createContext(void 0);
function vz(e) {
  const { theme: t, name: n, props: r } = e;
  if (!t || !t.components || !t.components[n]) return r;
  const o = t.components[n];
  return o.defaultProps
    ? nl(o.defaultProps, r)
    : !o.styleOverrides && !o.variants
      ? nl(o, r)
      : r;
}
function yz({ props: e, name: t }) {
  const n = x.useContext(mz);
  return vz({ props: e, name: t, theme: { components: n } });
}
const $m = { theme: void 0 };
function bz(e) {
  let t, n;
  return function (o) {
    let i = t;
    return (
      (i === void 0 || o.theme !== n) &&
        (($m.theme = o.theme), (i = zS(e($m))), (t = i), (n = o.theme)),
      i
    );
  };
}
function xz(e = "") {
  function t(...r) {
    if (!r.length) return "";
    const o = r[0];
    return typeof o == "string" &&
      !o.match(
        /(#|\(|\)|(-?(\d*\.)?\d+)(px|em|%|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc))|^(-?(\d*\.)?\d+)$|(\d+ \d+ \d+)/,
      )
      ? `, var(--${e ? `${e}-` : ""}${o}${t(...r.slice(1))})`
      : `, ${o}`;
  }
  return (r, ...o) => `var(--${e ? `${e}-` : ""}${r}${t(...o)})`;
}
const Mm = (e, t, n, r = []) => {
    let o = e;
    t.forEach((i, s) => {
      s === t.length - 1
        ? Array.isArray(o)
          ? (o[Number(i)] = n)
          : o && typeof o == "object" && (o[i] = n)
        : o &&
          typeof o == "object" &&
          (o[i] || (o[i] = r.includes(i) ? [] : {}), (o = o[i]));
    });
  },
  Sz = (e, t, n) => {
    function r(o, i = [], s = []) {
      Object.entries(o).forEach(([a, l]) => {
        (!n || (n && !n([...i, a]))) &&
          l != null &&
          (typeof l == "object" && Object.keys(l).length > 0
            ? r(l, [...i, a], Array.isArray(l) ? [...s, a] : s)
            : t([...i, a], l, s));
      });
    }
    r(e);
  },
  wz = (e, t) =>
    typeof t == "number"
      ? ["lineHeight", "fontWeight", "opacity", "zIndex"].some((r) =>
          e.includes(r),
        ) || e[e.length - 1].toLowerCase().includes("opacity")
        ? t
        : `${t}px`
      : t;
function Zc(e, t) {
  const { prefix: n, shouldSkipGeneratingVar: r } = t || {},
    o = {},
    i = {},
    s = {};
  return (
    Sz(
      e,
      (a, l, c) => {
        if (
          (typeof l == "string" || typeof l == "number") &&
          (!r || !r(a, l))
        ) {
          const u = `--${n ? `${n}-` : ""}${a.join("-")}`,
            d = wz(a, l);
          (Object.assign(o, { [u]: d }),
            Mm(i, a, `var(${u})`, c),
            Mm(s, a, `var(${u}, ${d})`, c));
        }
      },
      (a) => a[0] === "vars",
    ),
    { css: o, vars: i, varsWithDefaults: s }
  );
}
function Cz(e, t = {}) {
  const {
      getSelector: n = v,
      disableCssColorScheme: r,
      colorSchemeSelector: o,
    } = t,
    {
      colorSchemes: i = {},
      components: s,
      defaultColorScheme: a = "light",
      ...l
    } = e,
    { vars: c, css: u, varsWithDefaults: d } = Zc(l, t);
  let f = d;
  const g = {},
    { [a]: h, ...p } = i;
  if (
    (Object.entries(p || {}).forEach(([w, E]) => {
      const { vars: R, css: N, varsWithDefaults: I } = Zc(E, t);
      ((f = Gt(f, I)), (g[w] = { css: N, vars: R }));
    }),
    h)
  ) {
    const { css: w, vars: E, varsWithDefaults: R } = Zc(h, t);
    ((f = Gt(f, R)), (g[a] = { css: w, vars: E }));
  }
  function v(w, E) {
    var N, I;
    let R = o;
    if (
      (o === "class" && (R = ".%s"),
      o === "data" && (R = "[data-%s]"),
      o != null &&
        o.startsWith("data-") &&
        !o.includes("%s") &&
        (R = `[${o}="%s"]`),
      w)
    ) {
      if (R === "media")
        return e.defaultColorScheme === w
          ? ":root"
          : {
              [`@media (prefers-color-scheme: ${((I = (N = i[w]) == null ? void 0 : N.palette) == null ? void 0 : I.mode) || w})`]:
                { ":root": E },
            };
      if (R)
        return e.defaultColorScheme === w
          ? `:root, ${R.replace("%s", String(w))}`
          : R.replace("%s", String(w));
    }
    return ":root";
  }
  return {
    vars: f,
    generateThemeVars: () => {
      let w = { ...c };
      return (
        Object.entries(g).forEach(([, { vars: E }]) => {
          w = Gt(w, E);
        }),
        w
      );
    },
    generateStyleSheets: () => {
      var T, k;
      const w = [],
        E = e.defaultColorScheme || "light";
      function R(m, A) {
        Object.keys(A).length &&
          w.push(typeof m == "string" ? { [m]: { ...A } } : m);
      }
      R(n(void 0, { ...u }), u);
      const { [E]: N, ...I } = g;
      if (N) {
        const { css: m } = N,
          A =
            (k = (T = i[E]) == null ? void 0 : T.palette) == null
              ? void 0
              : k.mode,
          V = !r && A ? { colorScheme: A, ...m } : { ...m };
        R(n(E, { ...V }), V);
      }
      return (
        Object.entries(I).forEach(([m, { css: A }]) => {
          var F, $;
          const V =
              ($ = (F = i[m]) == null ? void 0 : F.palette) == null
                ? void 0
                : $.mode,
            P = !r && V ? { colorScheme: V, ...A } : { ...A };
          R(n(m, { ...P }), P);
        }),
        w
      );
    },
  };
}
function Ez(e) {
  return function (n) {
    return e === "media"
      ? `@media (prefers-color-scheme: ${n})`
      : e
        ? e.startsWith("data-") && !e.includes("%s")
          ? `[${e}="${n}"] &`
          : e === "class"
            ? `.${n} &`
            : e === "data"
              ? `[data-${n}] &`
              : `${e.replace("%s", n)} &`
        : "&";
  };
}
function WS() {
  return {
    text: {
      primary: "rgba(0, 0, 0, 0.87)",
      secondary: "rgba(0, 0, 0, 0.6)",
      disabled: "rgba(0, 0, 0, 0.38)",
    },
    divider: "rgba(0, 0, 0, 0.12)",
    background: { paper: ds.white, default: ds.white },
    action: {
      active: "rgba(0, 0, 0, 0.54)",
      hover: "rgba(0, 0, 0, 0.04)",
      hoverOpacity: 0.04,
      selected: "rgba(0, 0, 0, 0.08)",
      selectedOpacity: 0.08,
      disabled: "rgba(0, 0, 0, 0.26)",
      disabledBackground: "rgba(0, 0, 0, 0.12)",
      disabledOpacity: 0.38,
      focus: "rgba(0, 0, 0, 0.12)",
      focusOpacity: 0.12,
      activatedOpacity: 0.12,
    },
  };
}
const Iz = WS();
function HS() {
  return {
    text: {
      primary: ds.white,
      secondary: "rgba(255, 255, 255, 0.7)",
      disabled: "rgba(255, 255, 255, 0.5)",
      icon: "rgba(255, 255, 255, 0.5)",
    },
    divider: "rgba(255, 255, 255, 0.12)",
    background: { paper: "#121212", default: "#121212" },
    action: {
      active: ds.white,
      hover: "rgba(255, 255, 255, 0.08)",
      hoverOpacity: 0.08,
      selected: "rgba(255, 255, 255, 0.16)",
      selectedOpacity: 0.16,
      disabled: "rgba(255, 255, 255, 0.3)",
      disabledBackground: "rgba(255, 255, 255, 0.12)",
      disabledOpacity: 0.38,
      focus: "rgba(255, 255, 255, 0.12)",
      focusOpacity: 0.12,
      activatedOpacity: 0.24,
    },
  };
}
const Lm = HS();
function zm(e, t, n, r) {
  const o = r.light || r,
    i = r.dark || r * 1.5;
  e[t] ||
    (e.hasOwnProperty(n)
      ? (e[t] = e[n])
      : t === "light"
        ? (e.light = Bf(e.main, o))
        : t === "dark" && (e.dark = zf(e.main, i)));
}
function Rz(e = "light") {
  return e === "dark"
    ? { main: Eo[200], light: Eo[50], dark: Eo[400] }
    : { main: Eo[700], light: Eo[400], dark: Eo[800] };
}
function kz(e = "light") {
  return e === "dark"
    ? { main: Co[200], light: Co[50], dark: Co[400] }
    : { main: Co[500], light: Co[300], dark: Co[700] };
}
function Pz(e = "light") {
  return e === "dark"
    ? { main: wo[500], light: wo[300], dark: wo[700] }
    : { main: wo[700], light: wo[400], dark: wo[800] };
}
function Tz(e = "light") {
  return e === "dark"
    ? { main: Io[400], light: Io[300], dark: Io[700] }
    : { main: Io[700], light: Io[500], dark: Io[900] };
}
function Oz(e = "light") {
  return e === "dark"
    ? { main: Ro[400], light: Ro[300], dark: Ro[700] }
    : { main: Ro[800], light: Ro[500], dark: Ro[900] };
}
function _z(e = "light") {
  return e === "dark"
    ? { main: Ti[400], light: Ti[300], dark: Ti[700] }
    : { main: "#ed6c02", light: Ti[500], dark: Ti[900] };
}
function Wf(e) {
  const {
      mode: t = "light",
      contrastThreshold: n = 3,
      tonalOffset: r = 0.2,
      ...o
    } = e,
    i = e.primary || Rz(t),
    s = e.secondary || kz(t),
    a = e.error || Pz(t),
    l = e.info || Tz(t),
    c = e.success || Oz(t),
    u = e.warning || _z(t);
  function d(p) {
    return lz(p, Lm.text.primary) >= n ? Lm.text.primary : Iz.text.primary;
  }
  const f = ({
    color: p,
    name: v,
    mainShade: b = 500,
    lightShade: S = 300,
    darkShade: w = 700,
  }) => {
    if (
      ((p = { ...p }),
      !p.main && p[b] && (p.main = p[b]),
      !p.hasOwnProperty("main"))
    )
      throw new Error(fo(11, v ? ` (${v})` : "", b));
    if (typeof p.main != "string")
      throw new Error(fo(12, v ? ` (${v})` : "", JSON.stringify(p.main)));
    return (
      zm(p, "light", S, r),
      zm(p, "dark", w, r),
      p.contrastText || (p.contrastText = d(p.main)),
      p
    );
  };
  let g;
  return (
    t === "light" ? (g = WS()) : t === "dark" && (g = HS()),
    Gt(
      {
        common: { ...ds },
        mode: t,
        primary: f({ color: i, name: "primary" }),
        secondary: f({
          color: s,
          name: "secondary",
          mainShade: "A400",
          lightShade: "A200",
          darkShade: "A700",
        }),
        error: f({ color: a, name: "error" }),
        warning: f({ color: u, name: "warning" }),
        info: f({ color: l, name: "info" }),
        success: f({ color: c, name: "success" }),
        grey: q5,
        contrastThreshold: n,
        getContrastText: d,
        augmentColor: f,
        tonalOffset: r,
        ...g,
      },
      o,
    )
  );
}
function Az(e) {
  const t = {};
  return (
    Object.entries(e).forEach((r) => {
      const [o, i] = r;
      typeof i == "object" &&
        (t[o] =
          `${i.fontStyle ? `${i.fontStyle} ` : ""}${i.fontVariant ? `${i.fontVariant} ` : ""}${i.fontWeight ? `${i.fontWeight} ` : ""}${i.fontStretch ? `${i.fontStretch} ` : ""}${i.fontSize || ""}${i.lineHeight ? `/${i.lineHeight} ` : ""}${i.fontFamily || ""}`);
    }),
    t
  );
}
function Nz(e, t) {
  return {
    toolbar: {
      minHeight: 56,
      [e.up("xs")]: { "@media (orientation: landscape)": { minHeight: 48 } },
      [e.up("sm")]: { minHeight: 64 },
    },
    ...t,
  };
}
function Vz(e) {
  return Math.round(e * 1e5) / 1e5;
}
const Bm = { textTransform: "uppercase" },
  jm = '"Roboto", "Helvetica", "Arial", sans-serif';
function Fz(e, t) {
  const {
      fontFamily: n = jm,
      fontSize: r = 14,
      fontWeightLight: o = 300,
      fontWeightRegular: i = 400,
      fontWeightMedium: s = 500,
      fontWeightBold: a = 700,
      htmlFontSize: l = 16,
      allVariants: c,
      pxToRem: u,
      ...d
    } = typeof t == "function" ? t(e) : t,
    f = r / 14,
    g = u || ((v) => `${(v / l) * f}rem`),
    h = (v, b, S, w, E) => ({
      fontFamily: n,
      fontWeight: v,
      fontSize: g(b),
      lineHeight: S,
      ...(n === jm ? { letterSpacing: `${Vz(w / b)}em` } : {}),
      ...E,
      ...c,
    }),
    p = {
      h1: h(o, 96, 1.167, -1.5),
      h2: h(o, 60, 1.2, -0.5),
      h3: h(i, 48, 1.167, 0),
      h4: h(i, 34, 1.235, 0.25),
      h5: h(i, 24, 1.334, 0),
      h6: h(s, 20, 1.6, 0.15),
      subtitle1: h(i, 16, 1.75, 0.15),
      subtitle2: h(s, 14, 1.57, 0.1),
      body1: h(i, 16, 1.5, 0.15),
      body2: h(i, 14, 1.43, 0.15),
      button: h(s, 14, 1.75, 0.4, Bm),
      caption: h(i, 12, 1.66, 0.4),
      overline: h(i, 12, 2.66, 1, Bm),
      inherit: {
        fontFamily: "inherit",
        fontWeight: "inherit",
        fontSize: "inherit",
        lineHeight: "inherit",
        letterSpacing: "inherit",
      },
    };
  return Gt(
    {
      htmlFontSize: l,
      pxToRem: g,
      fontFamily: n,
      fontSize: r,
      fontWeightLight: o,
      fontWeightRegular: i,
      fontWeightMedium: s,
      fontWeightBold: a,
      ...p,
    },
    d,
    { clone: !1 },
  );
}
const Dz = 0.2,
  $z = 0.14,
  Mz = 0.12;
function Ne(...e) {
  return [
    `${e[0]}px ${e[1]}px ${e[2]}px ${e[3]}px rgba(0,0,0,${Dz})`,
    `${e[4]}px ${e[5]}px ${e[6]}px ${e[7]}px rgba(0,0,0,${$z})`,
    `${e[8]}px ${e[9]}px ${e[10]}px ${e[11]}px rgba(0,0,0,${Mz})`,
  ].join(",");
}
const Lz = [
    "none",
    Ne(0, 2, 1, -1, 0, 1, 1, 0, 0, 1, 3, 0),
    Ne(0, 3, 1, -2, 0, 2, 2, 0, 0, 1, 5, 0),
    Ne(0, 3, 3, -2, 0, 3, 4, 0, 0, 1, 8, 0),
    Ne(0, 2, 4, -1, 0, 4, 5, 0, 0, 1, 10, 0),
    Ne(0, 3, 5, -1, 0, 5, 8, 0, 0, 1, 14, 0),
    Ne(0, 3, 5, -1, 0, 6, 10, 0, 0, 1, 18, 0),
    Ne(0, 4, 5, -2, 0, 7, 10, 1, 0, 2, 16, 1),
    Ne(0, 5, 5, -3, 0, 8, 10, 1, 0, 3, 14, 2),
    Ne(0, 5, 6, -3, 0, 9, 12, 1, 0, 3, 16, 2),
    Ne(0, 6, 6, -3, 0, 10, 14, 1, 0, 4, 18, 3),
    Ne(0, 6, 7, -4, 0, 11, 15, 1, 0, 4, 20, 3),
    Ne(0, 7, 8, -4, 0, 12, 17, 2, 0, 5, 22, 4),
    Ne(0, 7, 8, -4, 0, 13, 19, 2, 0, 5, 24, 4),
    Ne(0, 7, 9, -4, 0, 14, 21, 2, 0, 5, 26, 4),
    Ne(0, 8, 9, -5, 0, 15, 22, 2, 0, 6, 28, 5),
    Ne(0, 8, 10, -5, 0, 16, 24, 2, 0, 6, 30, 5),
    Ne(0, 8, 11, -5, 0, 17, 26, 2, 0, 6, 32, 5),
    Ne(0, 9, 11, -5, 0, 18, 28, 2, 0, 7, 34, 6),
    Ne(0, 9, 12, -6, 0, 19, 29, 2, 0, 7, 36, 6),
    Ne(0, 10, 13, -6, 0, 20, 31, 3, 0, 8, 38, 7),
    Ne(0, 10, 13, -6, 0, 21, 33, 3, 0, 8, 40, 7),
    Ne(0, 10, 14, -6, 0, 22, 35, 3, 0, 8, 42, 7),
    Ne(0, 11, 14, -7, 0, 23, 36, 3, 0, 9, 44, 8),
    Ne(0, 11, 15, -7, 0, 24, 38, 3, 0, 9, 46, 8),
  ],
  zz = {
    easeInOut: "cubic-bezier(0.4, 0, 0.2, 1)",
    easeOut: "cubic-bezier(0.0, 0, 0.2, 1)",
    easeIn: "cubic-bezier(0.4, 0, 1, 1)",
    sharp: "cubic-bezier(0.4, 0, 0.6, 1)",
  },
  Bz = {
    shortest: 150,
    shorter: 200,
    short: 250,
    standard: 300,
    complex: 375,
    enteringScreen: 225,
    leavingScreen: 195,
  };
function Um(e) {
  return `${Math.round(e)}ms`;
}
function jz(e) {
  if (!e) return 0;
  const t = e / 36;
  return Math.min(Math.round((4 + 15 * t ** 0.25 + t / 5) * 10), 3e3);
}
function Uz(e) {
  const t = { ...zz, ...e.easing },
    n = { ...Bz, ...e.duration };
  return {
    getAutoHeightDuration: jz,
    create: (o = ["all"], i = {}) => {
      const {
        duration: s = n.standard,
        easing: a = t.easeInOut,
        delay: l = 0,
        ...c
      } = i;
      return (Array.isArray(o) ? o : [o])
        .map(
          (u) =>
            `${u} ${typeof s == "string" ? s : Um(s)} ${a} ${typeof l == "string" ? l : Um(l)}`,
        )
        .join(",");
    },
    ...e,
    easing: t,
    duration: n,
  };
}
const Wz = {
  mobileStepper: 1e3,
  fab: 1050,
  speedDial: 1050,
  appBar: 1100,
  drawer: 1200,
  modal: 1300,
  snackbar: 1400,
  tooltip: 1500,
};
function Hz(e) {
  return (
    tr(e) ||
    typeof e > "u" ||
    typeof e == "string" ||
    typeof e == "boolean" ||
    typeof e == "number" ||
    Array.isArray(e)
  );
}
function GS(e = {}) {
  const t = { ...e };
  function n(r) {
    const o = Object.entries(r);
    for (let i = 0; i < o.length; i++) {
      const [s, a] = o[i];
      !Hz(a) || s.startsWith("unstable_")
        ? delete r[s]
        : tr(a) && ((r[s] = { ...a }), n(r[s]));
    }
  }
  return (
    n(t),
    `import { unstable_createBreakpoints as createBreakpoints, createTransitions } from '@mui/material/styles';

const theme = ${JSON.stringify(t, null, 2)};

theme.breakpoints = createBreakpoints(theme.breakpoints || {});
theme.transitions = createTransitions(theme.transitions || {});

export default theme;`
  );
}
function sd(e = {}, ...t) {
  const {
    breakpoints: n,
    mixins: r = {},
    spacing: o,
    palette: i = {},
    transitions: s = {},
    typography: a = {},
    shape: l,
    ...c
  } = e;
  if (e.vars && e.generateThemeVars === void 0) throw new Error(fo(20));
  const u = Wf(i),
    d = LS(e);
  let f = Gt(d, {
    mixins: Nz(d.breakpoints, r),
    palette: u,
    shadows: Lz.slice(),
    typography: Fz(u, a),
    transitions: Uz(s),
    zIndex: { ...Wz },
  });
  return (
    (f = Gt(f, c)),
    (f = t.reduce((g, h) => Gt(g, h), f)),
    (f.unstable_sxConfig = {
      ...vc,
      ...(c == null ? void 0 : c.unstable_sxConfig),
    }),
    (f.unstable_sx = function (h) {
      return ei({ sx: h, theme: this });
    }),
    (f.toRuntimeSource = GS),
    f
  );
}
function Gz(e) {
  let t;
  return (
    e < 1 ? (t = 5.11916 * e ** 2) : (t = 4.5 * Math.log(e + 1) + 2),
    Math.round(t * 10) / 1e3
  );
}
const Kz = [...Array(25)].map((e, t) => {
  if (t === 0) return "none";
  const n = Gz(t);
  return `linear-gradient(rgba(255 255 255 / ${n}), rgba(255 255 255 / ${n}))`;
});
function KS(e) {
  return {
    inputPlaceholder: e === "dark" ? 0.5 : 0.42,
    inputUnderline: e === "dark" ? 0.7 : 0.42,
    switchTrackDisabled: e === "dark" ? 0.2 : 0.12,
    switchTrack: e === "dark" ? 0.3 : 0.38,
  };
}
function qS(e) {
  return e === "dark" ? Kz : [];
}
function qz(e) {
  const { palette: t = { mode: "light" }, opacity: n, overlays: r, ...o } = e,
    i = Wf(t);
  return {
    palette: i,
    opacity: { ...KS(i.mode), ...n },
    overlays: r || qS(i.mode),
    ...o,
  };
}
function Yz(e) {
  var t;
  return (
    !!e[0].match(
      /(cssVarPrefix|colorSchemeSelector|modularCssLayers|rootSelector|typography|mixins|breakpoints|direction|transitions)/,
    ) ||
    !!e[0].match(/sxConfig$/) ||
    (e[0] === "palette" &&
      !!((t = e[1]) != null && t.match(/(mode|contrastThreshold|tonalOffset)/)))
  );
}
const Xz = (e) => [
    ...[...Array(25)].map((t, n) => `--${e ? `${e}-` : ""}overlays-${n}`),
    `--${e ? `${e}-` : ""}palette-AppBar-darkBg`,
    `--${e ? `${e}-` : ""}palette-AppBar-darkColor`,
  ],
  Jz = (e) => (t, n) => {
    const r = e.rootSelector || ":root",
      o = e.colorSchemeSelector;
    let i = o;
    if (
      (o === "class" && (i = ".%s"),
      o === "data" && (i = "[data-%s]"),
      o != null &&
        o.startsWith("data-") &&
        !o.includes("%s") &&
        (i = `[${o}="%s"]`),
      e.defaultColorScheme === t)
    ) {
      if (t === "dark") {
        const s = {};
        return (
          Xz(e.cssVarPrefix).forEach((a) => {
            ((s[a] = n[a]), delete n[a]);
          }),
          i === "media"
            ? { [r]: n, "@media (prefers-color-scheme: dark)": { [r]: s } }
            : i
              ? { [i.replace("%s", t)]: s, [`${r}, ${i.replace("%s", t)}`]: n }
              : { [r]: { ...n, ...s } }
        );
      }
      if (i && i !== "media") return `${r}, ${i.replace("%s", String(t))}`;
    } else if (t) {
      if (i === "media")
        return { [`@media (prefers-color-scheme: ${String(t)})`]: { [r]: n } };
      if (i) return i.replace("%s", String(t));
    }
    return r;
  };
function Qz(e, t) {
  t.forEach((n) => {
    e[n] || (e[n] = {});
  });
}
function D(e, t, n) {
  !e[t] && n && (e[t] = n);
}
function Bi(e) {
  return typeof e != "string" || !e.startsWith("hsl") ? e : jS(e);
}
function Kn(e, t) {
  `${t}Channel` in e || (e[`${t}Channel`] = zi(Bi(e[t])));
}
function Zz(e) {
  return typeof e == "number"
    ? `${e}px`
    : typeof e == "string" || typeof e == "function" || Array.isArray(e)
      ? e
      : "8px";
}
const Tn = (e) => {
    try {
      return e();
    } catch {}
  },
  eB = (e = "mui") => xz(e);
function eu(e, t, n, r) {
  if (!t) return;
  t = t === !0 ? {} : t;
  const o = r === "dark" ? "dark" : "light";
  if (!n) {
    e[r] = qz({
      ...t,
      palette: { mode: o, ...(t == null ? void 0 : t.palette) },
    });
    return;
  }
  const { palette: i, ...s } = sd({
    ...n,
    palette: { mode: o, ...(t == null ? void 0 : t.palette) },
  });
  return (
    (e[r] = {
      ...t,
      palette: i,
      opacity: { ...KS(o), ...(t == null ? void 0 : t.opacity) },
      overlays: (t == null ? void 0 : t.overlays) || qS(o),
    }),
    s
  );
}
function tB(e = {}, ...t) {
  const {
      colorSchemes: n = { light: !0 },
      defaultColorScheme: r,
      disableCssColorScheme: o = !1,
      cssVarPrefix: i = "mui",
      shouldSkipGeneratingVar: s = Yz,
      colorSchemeSelector: a = n.light && n.dark ? "media" : void 0,
      rootSelector: l = ":root",
      ...c
    } = e,
    u = Object.keys(n)[0],
    d = r || (n.light && u !== "light" ? "light" : u),
    f = eB(i),
    { [d]: g, light: h, dark: p, ...v } = n,
    b = { ...v };
  let S = g;
  if (
    (((d === "dark" && !("dark" in n)) || (d === "light" && !("light" in n))) &&
      (S = !0),
    !S)
  )
    throw new Error(fo(21, d));
  const w = eu(b, S, c, d);
  (h && !b.light && eu(b, h, void 0, "light"),
    p && !b.dark && eu(b, p, void 0, "dark"));
  let E = {
    defaultColorScheme: d,
    ...w,
    cssVarPrefix: i,
    colorSchemeSelector: a,
    rootSelector: l,
    getCssVar: f,
    colorSchemes: b,
    font: { ...Az(w.typography), ...w.font },
    spacing: Zz(c.spacing),
  };
  (Object.keys(E.colorSchemes).forEach((k) => {
    const m = E.colorSchemes[k].palette,
      A = (V) => {
        const P = V.split("-"),
          F = P[1],
          $ = P[2];
        return f(V, m[F][$]);
      };
    if (
      (m.mode === "light" &&
        (D(m.common, "background", "#fff"),
        D(m.common, "onBackground", "#000")),
      m.mode === "dark" &&
        (D(m.common, "background", "#000"),
        D(m.common, "onBackground", "#fff")),
      Qz(m, [
        "Alert",
        "AppBar",
        "Avatar",
        "Button",
        "Chip",
        "FilledInput",
        "LinearProgress",
        "Skeleton",
        "Slider",
        "SnackbarContent",
        "SpeedDialAction",
        "StepConnector",
        "StepContent",
        "Switch",
        "TableCell",
        "Tooltip",
      ]),
      m.mode === "light")
    ) {
      (D(m.Alert, "errorColor", Ee(m.error.light, 0.6)),
        D(m.Alert, "infoColor", Ee(m.info.light, 0.6)),
        D(m.Alert, "successColor", Ee(m.success.light, 0.6)),
        D(m.Alert, "warningColor", Ee(m.warning.light, 0.6)),
        D(m.Alert, "errorFilledBg", A("palette-error-main")),
        D(m.Alert, "infoFilledBg", A("palette-info-main")),
        D(m.Alert, "successFilledBg", A("palette-success-main")),
        D(m.Alert, "warningFilledBg", A("palette-warning-main")),
        D(
          m.Alert,
          "errorFilledColor",
          Tn(() => m.getContrastText(m.error.main)),
        ),
        D(
          m.Alert,
          "infoFilledColor",
          Tn(() => m.getContrastText(m.info.main)),
        ),
        D(
          m.Alert,
          "successFilledColor",
          Tn(() => m.getContrastText(m.success.main)),
        ),
        D(
          m.Alert,
          "warningFilledColor",
          Tn(() => m.getContrastText(m.warning.main)),
        ),
        D(m.Alert, "errorStandardBg", Ie(m.error.light, 0.9)),
        D(m.Alert, "infoStandardBg", Ie(m.info.light, 0.9)),
        D(m.Alert, "successStandardBg", Ie(m.success.light, 0.9)),
        D(m.Alert, "warningStandardBg", Ie(m.warning.light, 0.9)),
        D(m.Alert, "errorIconColor", A("palette-error-main")),
        D(m.Alert, "infoIconColor", A("palette-info-main")),
        D(m.Alert, "successIconColor", A("palette-success-main")),
        D(m.Alert, "warningIconColor", A("palette-warning-main")),
        D(m.AppBar, "defaultBg", A("palette-grey-100")),
        D(m.Avatar, "defaultBg", A("palette-grey-400")),
        D(m.Button, "inheritContainedBg", A("palette-grey-300")),
        D(m.Button, "inheritContainedHoverBg", A("palette-grey-A100")),
        D(m.Chip, "defaultBorder", A("palette-grey-400")),
        D(m.Chip, "defaultAvatarColor", A("palette-grey-700")),
        D(m.Chip, "defaultIconColor", A("palette-grey-700")),
        D(m.FilledInput, "bg", "rgba(0, 0, 0, 0.06)"),
        D(m.FilledInput, "hoverBg", "rgba(0, 0, 0, 0.09)"),
        D(m.FilledInput, "disabledBg", "rgba(0, 0, 0, 0.12)"),
        D(m.LinearProgress, "primaryBg", Ie(m.primary.main, 0.62)),
        D(m.LinearProgress, "secondaryBg", Ie(m.secondary.main, 0.62)),
        D(m.LinearProgress, "errorBg", Ie(m.error.main, 0.62)),
        D(m.LinearProgress, "infoBg", Ie(m.info.main, 0.62)),
        D(m.LinearProgress, "successBg", Ie(m.success.main, 0.62)),
        D(m.LinearProgress, "warningBg", Ie(m.warning.main, 0.62)),
        D(m.Skeleton, "bg", `rgba(${A("palette-text-primaryChannel")} / 0.11)`),
        D(m.Slider, "primaryTrack", Ie(m.primary.main, 0.62)),
        D(m.Slider, "secondaryTrack", Ie(m.secondary.main, 0.62)),
        D(m.Slider, "errorTrack", Ie(m.error.main, 0.62)),
        D(m.Slider, "infoTrack", Ie(m.info.main, 0.62)),
        D(m.Slider, "successTrack", Ie(m.success.main, 0.62)),
        D(m.Slider, "warningTrack", Ie(m.warning.main, 0.62)));
      const V = ta(m.background.default, 0.8);
      (D(m.SnackbarContent, "bg", V),
        D(
          m.SnackbarContent,
          "color",
          Tn(() => m.getContrastText(V)),
        ),
        D(m.SpeedDialAction, "fabHoverBg", ta(m.background.paper, 0.15)),
        D(m.StepConnector, "border", A("palette-grey-400")),
        D(m.StepContent, "border", A("palette-grey-400")),
        D(m.Switch, "defaultColor", A("palette-common-white")),
        D(m.Switch, "defaultDisabledColor", A("palette-grey-100")),
        D(m.Switch, "primaryDisabledColor", Ie(m.primary.main, 0.62)),
        D(m.Switch, "secondaryDisabledColor", Ie(m.secondary.main, 0.62)),
        D(m.Switch, "errorDisabledColor", Ie(m.error.main, 0.62)),
        D(m.Switch, "infoDisabledColor", Ie(m.info.main, 0.62)),
        D(m.Switch, "successDisabledColor", Ie(m.success.main, 0.62)),
        D(m.Switch, "warningDisabledColor", Ie(m.warning.main, 0.62)),
        D(m.TableCell, "border", Ie(ea(m.divider, 1), 0.88)),
        D(m.Tooltip, "bg", ea(m.grey[700], 0.92)));
    }
    if (m.mode === "dark") {
      (D(m.Alert, "errorColor", Ie(m.error.light, 0.6)),
        D(m.Alert, "infoColor", Ie(m.info.light, 0.6)),
        D(m.Alert, "successColor", Ie(m.success.light, 0.6)),
        D(m.Alert, "warningColor", Ie(m.warning.light, 0.6)),
        D(m.Alert, "errorFilledBg", A("palette-error-dark")),
        D(m.Alert, "infoFilledBg", A("palette-info-dark")),
        D(m.Alert, "successFilledBg", A("palette-success-dark")),
        D(m.Alert, "warningFilledBg", A("palette-warning-dark")),
        D(
          m.Alert,
          "errorFilledColor",
          Tn(() => m.getContrastText(m.error.dark)),
        ),
        D(
          m.Alert,
          "infoFilledColor",
          Tn(() => m.getContrastText(m.info.dark)),
        ),
        D(
          m.Alert,
          "successFilledColor",
          Tn(() => m.getContrastText(m.success.dark)),
        ),
        D(
          m.Alert,
          "warningFilledColor",
          Tn(() => m.getContrastText(m.warning.dark)),
        ),
        D(m.Alert, "errorStandardBg", Ee(m.error.light, 0.9)),
        D(m.Alert, "infoStandardBg", Ee(m.info.light, 0.9)),
        D(m.Alert, "successStandardBg", Ee(m.success.light, 0.9)),
        D(m.Alert, "warningStandardBg", Ee(m.warning.light, 0.9)),
        D(m.Alert, "errorIconColor", A("palette-error-main")),
        D(m.Alert, "infoIconColor", A("palette-info-main")),
        D(m.Alert, "successIconColor", A("palette-success-main")),
        D(m.Alert, "warningIconColor", A("palette-warning-main")),
        D(m.AppBar, "defaultBg", A("palette-grey-900")),
        D(m.AppBar, "darkBg", A("palette-background-paper")),
        D(m.AppBar, "darkColor", A("palette-text-primary")),
        D(m.Avatar, "defaultBg", A("palette-grey-600")),
        D(m.Button, "inheritContainedBg", A("palette-grey-800")),
        D(m.Button, "inheritContainedHoverBg", A("palette-grey-700")),
        D(m.Chip, "defaultBorder", A("palette-grey-700")),
        D(m.Chip, "defaultAvatarColor", A("palette-grey-300")),
        D(m.Chip, "defaultIconColor", A("palette-grey-300")),
        D(m.FilledInput, "bg", "rgba(255, 255, 255, 0.09)"),
        D(m.FilledInput, "hoverBg", "rgba(255, 255, 255, 0.13)"),
        D(m.FilledInput, "disabledBg", "rgba(255, 255, 255, 0.12)"),
        D(m.LinearProgress, "primaryBg", Ee(m.primary.main, 0.5)),
        D(m.LinearProgress, "secondaryBg", Ee(m.secondary.main, 0.5)),
        D(m.LinearProgress, "errorBg", Ee(m.error.main, 0.5)),
        D(m.LinearProgress, "infoBg", Ee(m.info.main, 0.5)),
        D(m.LinearProgress, "successBg", Ee(m.success.main, 0.5)),
        D(m.LinearProgress, "warningBg", Ee(m.warning.main, 0.5)),
        D(m.Skeleton, "bg", `rgba(${A("palette-text-primaryChannel")} / 0.13)`),
        D(m.Slider, "primaryTrack", Ee(m.primary.main, 0.5)),
        D(m.Slider, "secondaryTrack", Ee(m.secondary.main, 0.5)),
        D(m.Slider, "errorTrack", Ee(m.error.main, 0.5)),
        D(m.Slider, "infoTrack", Ee(m.info.main, 0.5)),
        D(m.Slider, "successTrack", Ee(m.success.main, 0.5)),
        D(m.Slider, "warningTrack", Ee(m.warning.main, 0.5)));
      const V = ta(m.background.default, 0.98);
      (D(m.SnackbarContent, "bg", V),
        D(
          m.SnackbarContent,
          "color",
          Tn(() => m.getContrastText(V)),
        ),
        D(m.SpeedDialAction, "fabHoverBg", ta(m.background.paper, 0.15)),
        D(m.StepConnector, "border", A("palette-grey-600")),
        D(m.StepContent, "border", A("palette-grey-600")),
        D(m.Switch, "defaultColor", A("palette-grey-300")),
        D(m.Switch, "defaultDisabledColor", A("palette-grey-600")),
        D(m.Switch, "primaryDisabledColor", Ee(m.primary.main, 0.55)),
        D(m.Switch, "secondaryDisabledColor", Ee(m.secondary.main, 0.55)),
        D(m.Switch, "errorDisabledColor", Ee(m.error.main, 0.55)),
        D(m.Switch, "infoDisabledColor", Ee(m.info.main, 0.55)),
        D(m.Switch, "successDisabledColor", Ee(m.success.main, 0.55)),
        D(m.Switch, "warningDisabledColor", Ee(m.warning.main, 0.55)),
        D(m.TableCell, "border", Ee(ea(m.divider, 1), 0.68)),
        D(m.Tooltip, "bg", ea(m.grey[700], 0.92)));
    }
    (Kn(m.background, "default"),
      Kn(m.background, "paper"),
      Kn(m.common, "background"),
      Kn(m.common, "onBackground"),
      Kn(m, "divider"),
      Object.keys(m).forEach((V) => {
        const P = m[V];
        V !== "tonalOffset" &&
          P &&
          typeof P == "object" &&
          (P.main && D(m[V], "mainChannel", zi(Bi(P.main))),
          P.light && D(m[V], "lightChannel", zi(Bi(P.light))),
          P.dark && D(m[V], "darkChannel", zi(Bi(P.dark))),
          P.contrastText &&
            D(m[V], "contrastTextChannel", zi(Bi(P.contrastText))),
          V === "text" && (Kn(m[V], "primary"), Kn(m[V], "secondary")),
          V === "action" &&
            (P.active && Kn(m[V], "active"),
            P.selected && Kn(m[V], "selected")));
      }));
  }),
    (E = t.reduce((k, m) => Gt(k, m), E)));
  const R = {
      prefix: i,
      disableCssColorScheme: o,
      shouldSkipGeneratingVar: s,
      getSelector: Jz(E),
    },
    { vars: N, generateThemeVars: I, generateStyleSheets: T } = Cz(E, R);
  return (
    (E.vars = N),
    Object.entries(E.colorSchemes[E.defaultColorScheme]).forEach(([k, m]) => {
      E[k] = m;
    }),
    (E.generateThemeVars = I),
    (E.generateStyleSheets = T),
    (E.generateSpacing = function () {
      return MS(c.spacing, $f(this));
    }),
    (E.getColorSchemeSelector = Ez(a)),
    (E.spacing = E.generateSpacing()),
    (E.shouldSkipGeneratingVar = s),
    (E.unstable_sxConfig = {
      ...vc,
      ...(c == null ? void 0 : c.unstable_sxConfig),
    }),
    (E.unstable_sx = function (m) {
      return ei({ sx: m, theme: this });
    }),
    (E.toRuntimeSource = GS),
    E
  );
}
function Wm(e, t, n) {
  e.colorSchemes &&
    n &&
    (e.colorSchemes[t] = {
      ...(n !== !0 && n),
      palette: Wf({ ...(n === !0 ? {} : n.palette), mode: t }),
    });
}
function nB(e = {}, ...t) {
  const {
      palette: n,
      cssVariables: r = !1,
      colorSchemes: o = n ? void 0 : { light: !0 },
      defaultColorScheme: i = n == null ? void 0 : n.mode,
      ...s
    } = e,
    a = i || "light",
    l = o == null ? void 0 : o[a],
    c = {
      ...o,
      ...(n
        ? { [a]: { ...(typeof l != "boolean" && l), palette: n } }
        : void 0),
    };
  if (r === !1) {
    if (!("colorSchemes" in e)) return sd(e, ...t);
    let u = n;
    "palette" in e ||
      (c[a] &&
        (c[a] !== !0
          ? (u = c[a].palette)
          : a === "dark" && (u = { mode: "dark" })));
    const d = sd({ ...e, palette: u }, ...t);
    return (
      (d.defaultColorScheme = a),
      (d.colorSchemes = c),
      d.palette.mode === "light" &&
        ((d.colorSchemes.light = {
          ...(c.light !== !0 && c.light),
          palette: d.palette,
        }),
        Wm(d, "dark", c.dark)),
      d.palette.mode === "dark" &&
        ((d.colorSchemes.dark = {
          ...(c.dark !== !0 && c.dark),
          palette: d.palette,
        }),
        Wm(d, "light", c.light)),
      d
    );
  }
  return (
    !n && !("light" in c) && a === "light" && (c.light = !0),
    tB(
      {
        ...s,
        colorSchemes: c,
        defaultColorScheme: a,
        ...(typeof r != "boolean" && r),
      },
      ...t,
    )
  );
}
const rB = nB();
function oB(e) {
  return e !== "ownerState" && e !== "theme" && e !== "sx" && e !== "as";
}
const YS = (e) => oB(e) && e !== "classes",
  In = ZL({ themeId: Y5, defaultTheme: rB, rootShouldForwardProp: YS }),
  Hf = bz;
function Sc(e) {
  return yz(e);
}
function iB(e, t) {
  if (e == null) return {};
  var n = {};
  for (var r in e)
    if ({}.hasOwnProperty.call(e, r)) {
      if (t.indexOf(r) !== -1) continue;
      n[r] = e[r];
    }
  return n;
}
function ad(e, t) {
  return (
    (ad = Object.setPrototypeOf
      ? Object.setPrototypeOf.bind()
      : function (n, r) {
          return ((n.__proto__ = r), n);
        }),
    ad(e, t)
  );
}
function sB(e, t) {
  ((e.prototype = Object.create(t.prototype)),
    (e.prototype.constructor = e),
    ad(e, t));
}
const Hm = Le.createContext(null);
function aB(e) {
  if (e === void 0)
    throw new ReferenceError(
      "this hasn't been initialised - super() hasn't been called",
    );
  return e;
}
function Gf(e, t) {
  var n = function (i) {
      return t && x.isValidElement(i) ? t(i) : i;
    },
    r = Object.create(null);
  return (
    e &&
      x.Children.map(e, function (o) {
        return o;
      }).forEach(function (o) {
        r[o.key] = n(o);
      }),
    r
  );
}
function lB(e, t) {
  ((e = e || {}), (t = t || {}));
  function n(u) {
    return u in t ? t[u] : e[u];
  }
  var r = Object.create(null),
    o = [];
  for (var i in e) i in t ? o.length && ((r[i] = o), (o = [])) : o.push(i);
  var s,
    a = {};
  for (var l in t) {
    if (r[l])
      for (s = 0; s < r[l].length; s++) {
        var c = r[l][s];
        a[r[l][s]] = n(c);
      }
    a[l] = n(l);
  }
  for (s = 0; s < o.length; s++) a[o[s]] = n(o[s]);
  return a;
}
function Qr(e, t, n) {
  return n[t] != null ? n[t] : e.props[t];
}
function cB(e, t) {
  return Gf(e.children, function (n) {
    return x.cloneElement(n, {
      onExited: t.bind(null, n),
      in: !0,
      appear: Qr(n, "appear", e),
      enter: Qr(n, "enter", e),
      exit: Qr(n, "exit", e),
    });
  });
}
function uB(e, t, n) {
  var r = Gf(e.children),
    o = lB(t, r);
  return (
    Object.keys(o).forEach(function (i) {
      var s = o[i];
      if (x.isValidElement(s)) {
        var a = i in t,
          l = i in r,
          c = t[i],
          u = x.isValidElement(c) && !c.props.in;
        l && (!a || u)
          ? (o[i] = x.cloneElement(s, {
              onExited: n.bind(null, s),
              in: !0,
              exit: Qr(s, "exit", e),
              enter: Qr(s, "enter", e),
            }))
          : !l && a && !u
            ? (o[i] = x.cloneElement(s, { in: !1 }))
            : l &&
              a &&
              x.isValidElement(c) &&
              (o[i] = x.cloneElement(s, {
                onExited: n.bind(null, s),
                in: c.props.in,
                exit: Qr(s, "exit", e),
                enter: Qr(s, "enter", e),
              }));
      }
    }),
    o
  );
}
var dB =
    Object.values ||
    function (e) {
      return Object.keys(e).map(function (t) {
        return e[t];
      });
    },
  fB = {
    component: "div",
    childFactory: function (t) {
      return t;
    },
  },
  Kf = (function (e) {
    sB(t, e);
    function t(r, o) {
      var i;
      i = e.call(this, r, o) || this;
      var s = i.handleExited.bind(aB(i));
      return (
        (i.state = {
          contextValue: { isMounting: !0 },
          handleExited: s,
          firstRender: !0,
        }),
        i
      );
    }
    var n = t.prototype;
    return (
      (n.componentDidMount = function () {
        ((this.mounted = !0),
          this.setState({ contextValue: { isMounting: !1 } }));
      }),
      (n.componentWillUnmount = function () {
        this.mounted = !1;
      }),
      (t.getDerivedStateFromProps = function (o, i) {
        var s = i.children,
          a = i.handleExited,
          l = i.firstRender;
        return { children: l ? cB(o, a) : uB(o, s, a), firstRender: !1 };
      }),
      (n.handleExited = function (o, i) {
        var s = Gf(this.props.children);
        o.key in s ||
          (o.props.onExited && o.props.onExited(i),
          this.mounted &&
            this.setState(function (a) {
              var l = Cu({}, a.children);
              return (delete l[o.key], { children: l });
            }));
      }),
      (n.render = function () {
        var o = this.props,
          i = o.component,
          s = o.childFactory,
          a = iB(o, ["component", "childFactory"]),
          l = this.state.contextValue,
          c = dB(this.state.children).map(s);
        return (
          delete a.appear,
          delete a.enter,
          delete a.exit,
          i === null
            ? Le.createElement(Hm.Provider, { value: l }, c)
            : Le.createElement(
                Hm.Provider,
                { value: l },
                Le.createElement(i, a, c),
              )
        );
      }),
      t
    );
  })(Le.Component);
Kf.propTypes = {};
Kf.defaultProps = fB;
class rl {
  constructor() {
    Oe(this, "mountEffect", () => {
      this.shouldMount &&
        !this.didMount &&
        this.ref.current !== null &&
        ((this.didMount = !0), this.mounted.resolve());
    });
    ((this.ref = { current: null }),
      (this.mounted = null),
      (this.didMount = !1),
      (this.shouldMount = !1),
      (this.setShouldMount = null));
  }
  static create() {
    return new rl();
  }
  static use() {
    const t = US(rl.create).current,
      [n, r] = x.useState(!1);
    return (
      (t.shouldMount = n),
      (t.setShouldMount = r),
      x.useEffect(t.mountEffect, [n]),
      t
    );
  }
  mount() {
    return (
      this.mounted ||
        ((this.mounted = hB()),
        (this.shouldMount = !0),
        this.setShouldMount(this.shouldMount)),
      this.mounted
    );
  }
  start(...t) {
    this.mount().then(() => {
      var n;
      return (n = this.ref.current) == null ? void 0 : n.start(...t);
    });
  }
  stop(...t) {
    this.mount().then(() => {
      var n;
      return (n = this.ref.current) == null ? void 0 : n.stop(...t);
    });
  }
  pulsate(...t) {
    this.mount().then(() => {
      var n;
      return (n = this.ref.current) == null ? void 0 : n.pulsate(...t);
    });
  }
}
function gB() {
  return rl.use();
}
function hB() {
  let e, t;
  const n = new Promise((r, o) => {
    ((e = r), (t = o));
  });
  return ((n.resolve = e), (n.reject = t), n);
}
function pB(e) {
  const {
      className: t,
      classes: n,
      pulsate: r = !1,
      rippleX: o,
      rippleY: i,
      rippleSize: s,
      in: a,
      onExited: l,
      timeout: c,
    } = e,
    [u, d] = x.useState(!1),
    f = Ct(t, n.ripple, n.rippleVisible, r && n.ripplePulsate),
    g = { width: s, height: s, top: -(s / 2) + i, left: -(s / 2) + o },
    h = Ct(n.child, u && n.childLeaving, r && n.childPulsate);
  return (
    !a && !u && d(!0),
    x.useEffect(() => {
      if (!a && l != null) {
        const p = setTimeout(l, c);
        return () => {
          clearTimeout(p);
        };
      }
    }, [l, a, c]),
    y.jsx("span", {
      className: f,
      style: g,
      children: y.jsx("span", { className: h }),
    })
  );
}
const Zt = bc("MuiTouchRipple", [
    "root",
    "ripple",
    "rippleVisible",
    "ripplePulsate",
    "child",
    "childLeaving",
    "childPulsate",
  ]),
  ld = 550,
  mB = 80,
  vB = Ts`
  0% {
    transform: scale(0);
    opacity: 0.1;
  }

  100% {
    transform: scale(1);
    opacity: 0.3;
  }
`,
  yB = Ts`
  0% {
    opacity: 1;
  }

  100% {
    opacity: 0;
  }
`,
  bB = Ts`
  0% {
    transform: scale(1);
  }

  50% {
    transform: scale(0.92);
  }

  100% {
    transform: scale(1);
  }
`,
  xB = In("span", { name: "MuiTouchRipple", slot: "Root" })({
    overflow: "hidden",
    pointerEvents: "none",
    position: "absolute",
    zIndex: 0,
    top: 0,
    right: 0,
    bottom: 0,
    left: 0,
    borderRadius: "inherit",
  }),
  SB = In(pB, { name: "MuiTouchRipple", slot: "Ripple" })`
  opacity: 0;
  position: absolute;

  &.${Zt.rippleVisible} {
    opacity: 0.3;
    transform: scale(1);
    animation-name: ${vB};
    animation-duration: ${ld}ms;
    animation-timing-function: ${({ theme: e }) => e.transitions.easing.easeInOut};
  }

  &.${Zt.ripplePulsate} {
    animation-duration: ${({ theme: e }) => e.transitions.duration.shorter}ms;
  }

  & .${Zt.child} {
    opacity: 1;
    display: block;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    background-color: currentColor;
  }

  & .${Zt.childLeaving} {
    opacity: 0;
    animation-name: ${yB};
    animation-duration: ${ld}ms;
    animation-timing-function: ${({ theme: e }) => e.transitions.easing.easeInOut};
  }

  & .${Zt.childPulsate} {
    position: absolute;
    /* @noflip */
    left: 0px;
    top: 0;
    animation-name: ${bB};
    animation-duration: 2500ms;
    animation-timing-function: ${({ theme: e }) => e.transitions.easing.easeInOut};
    animation-iteration-count: infinite;
    animation-delay: 200ms;
  }
`,
  wB = x.forwardRef(function (t, n) {
    const r = Sc({ props: t, name: "MuiTouchRipple" }),
      { center: o = !1, classes: i = {}, className: s, ...a } = r,
      [l, c] = x.useState([]),
      u = x.useRef(0),
      d = x.useRef(null);
    x.useEffect(() => {
      d.current && (d.current(), (d.current = null));
    }, [l]);
    const f = x.useRef(!1),
      g = pz(),
      h = x.useRef(null),
      p = x.useRef(null),
      v = x.useCallback(
        (E) => {
          const {
            pulsate: R,
            rippleX: N,
            rippleY: I,
            rippleSize: T,
            cb: k,
          } = E;
          (c((m) => [
            ...m,
            y.jsx(
              SB,
              {
                classes: {
                  ripple: Ct(i.ripple, Zt.ripple),
                  rippleVisible: Ct(i.rippleVisible, Zt.rippleVisible),
                  ripplePulsate: Ct(i.ripplePulsate, Zt.ripplePulsate),
                  child: Ct(i.child, Zt.child),
                  childLeaving: Ct(i.childLeaving, Zt.childLeaving),
                  childPulsate: Ct(i.childPulsate, Zt.childPulsate),
                },
                timeout: ld,
                pulsate: R,
                rippleX: N,
                rippleY: I,
                rippleSize: T,
              },
              u.current,
            ),
          ]),
            (u.current += 1),
            (d.current = k));
        },
        [i],
      ),
      b = x.useCallback(
        (E = {}, R = {}, N = () => {}) => {
          const {
            pulsate: I = !1,
            center: T = o || R.pulsate,
            fakeElement: k = !1,
          } = R;
          if ((E == null ? void 0 : E.type) === "mousedown" && f.current) {
            f.current = !1;
            return;
          }
          (E == null ? void 0 : E.type) === "touchstart" && (f.current = !0);
          const m = k ? null : p.current,
            A = m
              ? m.getBoundingClientRect()
              : { width: 0, height: 0, left: 0, top: 0 };
          let V, P, F;
          if (
            T ||
            E === void 0 ||
            (E.clientX === 0 && E.clientY === 0) ||
            (!E.clientX && !E.touches)
          )
            ((V = Math.round(A.width / 2)), (P = Math.round(A.height / 2)));
          else {
            const { clientX: $, clientY: H } =
              E.touches && E.touches.length > 0 ? E.touches[0] : E;
            ((V = Math.round($ - A.left)), (P = Math.round(H - A.top)));
          }
          if (T)
            ((F = Math.sqrt((2 * A.width ** 2 + A.height ** 2) / 3)),
              F % 2 === 0 && (F += 1));
          else {
            const $ =
                Math.max(Math.abs((m ? m.clientWidth : 0) - V), V) * 2 + 2,
              H = Math.max(Math.abs((m ? m.clientHeight : 0) - P), P) * 2 + 2;
            F = Math.sqrt($ ** 2 + H ** 2);
          }
          E != null && E.touches
            ? h.current === null &&
              ((h.current = () => {
                v({ pulsate: I, rippleX: V, rippleY: P, rippleSize: F, cb: N });
              }),
              g.start(mB, () => {
                h.current && (h.current(), (h.current = null));
              }))
            : v({ pulsate: I, rippleX: V, rippleY: P, rippleSize: F, cb: N });
        },
        [o, v, g],
      ),
      S = x.useCallback(() => {
        b({}, { pulsate: !0 });
      }, [b]),
      w = x.useCallback(
        (E, R) => {
          if (
            (g.clear(),
            (E == null ? void 0 : E.type) === "touchend" && h.current)
          ) {
            (h.current(),
              (h.current = null),
              g.start(0, () => {
                w(E, R);
              }));
            return;
          }
          ((h.current = null),
            c((N) => (N.length > 0 ? N.slice(1) : N)),
            (d.current = R));
        },
        [g],
      );
    return (
      x.useImperativeHandle(n, () => ({ pulsate: S, start: b, stop: w }), [
        S,
        b,
        w,
      ]),
      y.jsx(xB, {
        className: Ct(Zt.root, i.root, s),
        ref: p,
        ...a,
        children: y.jsx(Kf, { component: null, exit: !0, children: l }),
      })
    );
  });
function CB(e) {
  return yc("MuiButtonBase", e);
}
const EB = bc("MuiButtonBase", ["root", "disabled", "focusVisible"]),
  IB = (e) => {
    const {
        disabled: t,
        focusVisible: n,
        focusVisibleClassName: r,
        classes: o,
      } = e,
      s = Uf({ root: ["root", t && "disabled", n && "focusVisible"] }, CB, o);
    return (n && r && (s.root += ` ${r}`), s);
  },
  RB = In("button", {
    name: "MuiButtonBase",
    slot: "Root",
    overridesResolver: (e, t) => t.root,
  })({
    display: "inline-flex",
    alignItems: "center",
    justifyContent: "center",
    position: "relative",
    boxSizing: "border-box",
    WebkitTapHighlightColor: "transparent",
    backgroundColor: "transparent",
    outline: 0,
    border: 0,
    margin: 0,
    borderRadius: 0,
    padding: 0,
    cursor: "pointer",
    userSelect: "none",
    verticalAlign: "middle",
    MozAppearance: "none",
    WebkitAppearance: "none",
    textDecoration: "none",
    color: "inherit",
    "&::-moz-focus-inner": { borderStyle: "none" },
    [`&.${EB.disabled}`]: { pointerEvents: "none", cursor: "default" },
    "@media print": { colorAdjust: "exact" },
  }),
  kB = x.forwardRef(function (t, n) {
    const r = Sc({ props: t, name: "MuiButtonBase" }),
      {
        action: o,
        centerRipple: i = !1,
        children: s,
        className: a,
        component: l = "button",
        disabled: c = !1,
        disableRipple: u = !1,
        disableTouchRipple: d = !1,
        focusRipple: f = !1,
        focusVisibleClassName: g,
        LinkComponent: h = "a",
        onBlur: p,
        onClick: v,
        onContextMenu: b,
        onDragLeave: S,
        onFocus: w,
        onFocusVisible: E,
        onKeyDown: R,
        onKeyUp: N,
        onMouseDown: I,
        onMouseLeave: T,
        onMouseUp: k,
        onTouchEnd: m,
        onTouchMove: A,
        onTouchStart: V,
        tabIndex: P = 0,
        TouchRippleProps: F,
        touchRippleRef: $,
        type: H,
        ...B
      } = r,
      j = x.useRef(null),
      G = gB(),
      ee = Vm(G.ref, $),
      [ae, K] = x.useState(!1);
    (c && ae && K(!1),
      x.useImperativeHandle(
        o,
        () => ({
          focusVisible: () => {
            (K(!0), j.current.focus());
          },
        }),
        [],
      ));
    const we = G.shouldMount && !u && !c;
    x.useEffect(() => {
      ae && f && !u && G.pulsate();
    }, [u, f, ae, G]);
    const Te = qn(G, "start", I, d),
      De = qn(G, "stop", b, d),
      ft = qn(G, "stop", S, d),
      ze = qn(G, "stop", k, d),
      L = qn(
        G,
        "stop",
        (O) => {
          (ae && O.preventDefault(), T && T(O));
        },
        d,
      ),
      M = qn(G, "start", V, d),
      Y = qn(G, "stop", m, d),
      ne = qn(G, "stop", A, d),
      ue = qn(
        G,
        "stop",
        (O) => {
          (Dm(O.target) || K(!1), p && p(O));
        },
        !1,
      ),
      ye = Ta((O) => {
        (j.current || (j.current = O.currentTarget),
          Dm(O.target) && (K(!0), E && E(O)),
          w && w(O));
      }),
      Ae = () => {
        const O = j.current;
        return l && l !== "button" && !(O.tagName === "A" && O.href);
      },
      et = Ta((O) => {
        (f &&
          !O.repeat &&
          ae &&
          O.key === " " &&
          G.stop(O, () => {
            G.start(O);
          }),
          O.target === O.currentTarget &&
            Ae() &&
            O.key === " " &&
            O.preventDefault(),
          R && R(O),
          O.target === O.currentTarget &&
            Ae() &&
            O.key === "Enter" &&
            !c &&
            (O.preventDefault(), v && v(O)));
      }),
      nt = Ta((O) => {
        (f &&
          O.key === " " &&
          ae &&
          !O.defaultPrevented &&
          G.stop(O, () => {
            G.pulsate(O);
          }),
          N && N(O),
          v &&
            O.target === O.currentTarget &&
            Ae() &&
            O.key === " " &&
            !O.defaultPrevented &&
            v(O));
      });
    let dn = l;
    dn === "button" && (B.href || B.to) && (dn = h);
    const Be = {};
    dn === "button"
      ? ((Be.type = H === void 0 ? "button" : H), (Be.disabled = c))
      : (!B.href && !B.to && (Be.role = "button"),
        c && (Be["aria-disabled"] = c));
    const Rt = Vm(n, j),
      C = {
        ...r,
        centerRipple: i,
        component: l,
        disabled: c,
        disableRipple: u,
        disableTouchRipple: d,
        focusRipple: f,
        tabIndex: P,
        focusVisible: ae,
      },
      _ = IB(C);
    return y.jsxs(RB, {
      as: dn,
      className: Ct(_.root, a),
      ownerState: C,
      onBlur: ue,
      onClick: v,
      onContextMenu: De,
      onFocus: ye,
      onKeyDown: et,
      onKeyUp: nt,
      onMouseDown: Te,
      onMouseLeave: L,
      onMouseUp: ze,
      onDragLeave: ft,
      onTouchEnd: Y,
      onTouchMove: ne,
      onTouchStart: M,
      ref: Rt,
      tabIndex: c ? -1 : P,
      type: H,
      ...Be,
      ...B,
      children: [s, we ? y.jsx(wB, { ref: ee, center: i, ...F }) : null],
    });
  });
function qn(e, t, n, r = !1) {
  return Ta((o) => (n && n(o), r || e[t](o), !0));
}
function PB(e) {
  return typeof e.main == "string";
}
function TB(e, t = []) {
  if (!PB(e)) return !1;
  for (const n of t)
    if (!e.hasOwnProperty(n) || typeof e[n] != "string") return !1;
  return !0;
}
function XS(e = []) {
  return ([, t]) => t && TB(t, e);
}
function OB(e) {
  return yc("MuiCircularProgress", e);
}
bc("MuiCircularProgress", [
  "root",
  "determinate",
  "indeterminate",
  "colorPrimary",
  "colorSecondary",
  "svg",
  "circle",
  "circleDeterminate",
  "circleIndeterminate",
  "circleDisableShrink",
]);
const mr = 44,
  cd = Ts`
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
`,
  ud = Ts`
  0% {
    stroke-dasharray: 1px, 200px;
    stroke-dashoffset: 0;
  }

  50% {
    stroke-dasharray: 100px, 200px;
    stroke-dashoffset: -15px;
  }

  100% {
    stroke-dasharray: 1px, 200px;
    stroke-dashoffset: -126px;
  }
`,
  _B =
    typeof cd != "string"
      ? Zl`
        animation: ${cd} 1.4s linear infinite;
      `
      : null,
  AB =
    typeof ud != "string"
      ? Zl`
        animation: ${ud} 1.4s ease-in-out infinite;
      `
      : null,
  NB = (e) => {
    const { classes: t, variant: n, color: r, disableShrink: o } = e,
      i = {
        root: ["root", n, `color${at(r)}`],
        svg: ["svg"],
        circle: ["circle", `circle${at(n)}`, o && "circleDisableShrink"],
      };
    return Uf(i, OB, t);
  },
  VB = In("span", {
    name: "MuiCircularProgress",
    slot: "Root",
    overridesResolver: (e, t) => {
      const { ownerState: n } = e;
      return [t.root, t[n.variant], t[`color${at(n.color)}`]];
    },
  })(
    Hf(({ theme: e }) => ({
      display: "inline-block",
      variants: [
        {
          props: { variant: "determinate" },
          style: { transition: e.transitions.create("transform") },
        },
        {
          props: { variant: "indeterminate" },
          style: _B || { animation: `${cd} 1.4s linear infinite` },
        },
        ...Object.entries(e.palette)
          .filter(XS())
          .map(([t]) => ({
            props: { color: t },
            style: { color: (e.vars || e).palette[t].main },
          })),
      ],
    })),
  ),
  FB = In("svg", {
    name: "MuiCircularProgress",
    slot: "Svg",
    overridesResolver: (e, t) => t.svg,
  })({ display: "block" }),
  DB = In("circle", {
    name: "MuiCircularProgress",
    slot: "Circle",
    overridesResolver: (e, t) => {
      const { ownerState: n } = e;
      return [
        t.circle,
        t[`circle${at(n.variant)}`],
        n.disableShrink && t.circleDisableShrink,
      ];
    },
  })(
    Hf(({ theme: e }) => ({
      stroke: "currentColor",
      variants: [
        {
          props: { variant: "determinate" },
          style: { transition: e.transitions.create("stroke-dashoffset") },
        },
        {
          props: { variant: "indeterminate" },
          style: { strokeDasharray: "80px, 200px", strokeDashoffset: 0 },
        },
        {
          props: ({ ownerState: t }) =>
            t.variant === "indeterminate" && !t.disableShrink,
          style: AB || { animation: `${ud} 1.4s ease-in-out infinite` },
        },
      ],
    })),
  ),
  $B = x.forwardRef(function (t, n) {
    const r = Sc({ props: t, name: "MuiCircularProgress" }),
      {
        className: o,
        color: i = "primary",
        disableShrink: s = !1,
        size: a = 40,
        style: l,
        thickness: c = 3.6,
        value: u = 0,
        variant: d = "indeterminate",
        ...f
      } = r,
      g = {
        ...r,
        color: i,
        disableShrink: s,
        size: a,
        thickness: c,
        value: u,
        variant: d,
      },
      h = NB(g),
      p = {},
      v = {},
      b = {};
    if (d === "determinate") {
      const S = 2 * Math.PI * ((mr - c) / 2);
      ((p.strokeDasharray = S.toFixed(3)),
        (b["aria-valuenow"] = Math.round(u)),
        (p.strokeDashoffset = `${(((100 - u) / 100) * S).toFixed(3)}px`),
        (v.transform = "rotate(-90deg)"));
    }
    return y.jsx(VB, {
      className: Ct(h.root, o),
      style: { width: a, height: a, ...v, ...l },
      ownerState: g,
      ref: n,
      role: "progressbar",
      ...b,
      ...f,
      children: y.jsx(FB, {
        className: h.svg,
        ownerState: g,
        viewBox: `${mr / 2} ${mr / 2} ${mr} ${mr}`,
        children: y.jsx(DB, {
          className: h.circle,
          style: p,
          ownerState: g,
          cx: mr,
          cy: mr,
          r: (mr - c) / 2,
          fill: "none",
          strokeWidth: c,
        }),
      }),
    });
  });
function MB(e) {
  return yc("MuiButton", e);
}
const Wr = bc("MuiButton", [
    "root",
    "text",
    "textInherit",
    "textPrimary",
    "textSecondary",
    "textSuccess",
    "textError",
    "textInfo",
    "textWarning",
    "outlined",
    "outlinedInherit",
    "outlinedPrimary",
    "outlinedSecondary",
    "outlinedSuccess",
    "outlinedError",
    "outlinedInfo",
    "outlinedWarning",
    "contained",
    "containedInherit",
    "containedPrimary",
    "containedSecondary",
    "containedSuccess",
    "containedError",
    "containedInfo",
    "containedWarning",
    "disableElevation",
    "focusVisible",
    "disabled",
    "colorInherit",
    "colorPrimary",
    "colorSecondary",
    "colorSuccess",
    "colorError",
    "colorInfo",
    "colorWarning",
    "textSizeSmall",
    "textSizeMedium",
    "textSizeLarge",
    "outlinedSizeSmall",
    "outlinedSizeMedium",
    "outlinedSizeLarge",
    "containedSizeSmall",
    "containedSizeMedium",
    "containedSizeLarge",
    "sizeMedium",
    "sizeSmall",
    "sizeLarge",
    "fullWidth",
    "startIcon",
    "endIcon",
    "icon",
    "iconSizeSmall",
    "iconSizeMedium",
    "iconSizeLarge",
    "loading",
    "loadingWrapper",
    "loadingIconPlaceholder",
    "loadingIndicator",
    "loadingPositionCenter",
    "loadingPositionStart",
    "loadingPositionEnd",
  ]),
  LB = x.createContext({}),
  zB = x.createContext(void 0),
  BB = (e) => {
    const {
        color: t,
        disableElevation: n,
        fullWidth: r,
        size: o,
        variant: i,
        loading: s,
        loadingPosition: a,
        classes: l,
      } = e,
      c = {
        root: [
          "root",
          s && "loading",
          i,
          `${i}${at(t)}`,
          `size${at(o)}`,
          `${i}Size${at(o)}`,
          `color${at(t)}`,
          n && "disableElevation",
          r && "fullWidth",
          s && `loadingPosition${at(a)}`,
        ],
        startIcon: ["icon", "startIcon", `iconSize${at(o)}`],
        endIcon: ["icon", "endIcon", `iconSize${at(o)}`],
        loadingIndicator: ["loadingIndicator"],
        loadingWrapper: ["loadingWrapper"],
      },
      u = Uf(c, MB, l);
    return { ...l, ...u };
  },
  JS = [
    {
      props: { size: "small" },
      style: { "& > *:nth-of-type(1)": { fontSize: 18 } },
    },
    {
      props: { size: "medium" },
      style: { "& > *:nth-of-type(1)": { fontSize: 20 } },
    },
    {
      props: { size: "large" },
      style: { "& > *:nth-of-type(1)": { fontSize: 22 } },
    },
  ],
  jB = In(kB, {
    shouldForwardProp: (e) => YS(e) || e === "classes",
    name: "MuiButton",
    slot: "Root",
    overridesResolver: (e, t) => {
      const { ownerState: n } = e;
      return [
        t.root,
        t[n.variant],
        t[`${n.variant}${at(n.color)}`],
        t[`size${at(n.size)}`],
        t[`${n.variant}Size${at(n.size)}`],
        n.color === "inherit" && t.colorInherit,
        n.disableElevation && t.disableElevation,
        n.fullWidth && t.fullWidth,
        n.loading && t.loading,
      ];
    },
  })(
    Hf(({ theme: e }) => {
      const t =
          e.palette.mode === "light"
            ? e.palette.grey[300]
            : e.palette.grey[800],
        n =
          e.palette.mode === "light"
            ? e.palette.grey.A100
            : e.palette.grey[700];
      return {
        ...e.typography.button,
        minWidth: 64,
        padding: "6px 16px",
        border: 0,
        borderRadius: (e.vars || e).shape.borderRadius,
        transition: e.transitions.create(
          ["background-color", "box-shadow", "border-color", "color"],
          { duration: e.transitions.duration.short },
        ),
        "&:hover": { textDecoration: "none" },
        [`&.${Wr.disabled}`]: { color: (e.vars || e).palette.action.disabled },
        variants: [
          {
            props: { variant: "contained" },
            style: {
              color: "var(--variant-containedColor)",
              backgroundColor: "var(--variant-containedBg)",
              boxShadow: (e.vars || e).shadows[2],
              "&:hover": {
                boxShadow: (e.vars || e).shadows[4],
                "@media (hover: none)": { boxShadow: (e.vars || e).shadows[2] },
              },
              "&:active": { boxShadow: (e.vars || e).shadows[8] },
              [`&.${Wr.focusVisible}`]: { boxShadow: (e.vars || e).shadows[6] },
              [`&.${Wr.disabled}`]: {
                color: (e.vars || e).palette.action.disabled,
                boxShadow: (e.vars || e).shadows[0],
                backgroundColor: (e.vars || e).palette.action
                  .disabledBackground,
              },
            },
          },
          {
            props: { variant: "outlined" },
            style: {
              padding: "5px 15px",
              border: "1px solid currentColor",
              borderColor: "var(--variant-outlinedBorder, currentColor)",
              backgroundColor: "var(--variant-outlinedBg)",
              color: "var(--variant-outlinedColor)",
              [`&.${Wr.disabled}`]: {
                border: `1px solid ${(e.vars || e).palette.action.disabledBackground}`,
              },
            },
          },
          {
            props: { variant: "text" },
            style: {
              padding: "6px 8px",
              color: "var(--variant-textColor)",
              backgroundColor: "var(--variant-textBg)",
            },
          },
          ...Object.entries(e.palette)
            .filter(XS())
            .map(([r]) => ({
              props: { color: r },
              style: {
                "--variant-textColor": (e.vars || e).palette[r].main,
                "--variant-outlinedColor": (e.vars || e).palette[r].main,
                "--variant-outlinedBorder": e.vars
                  ? `rgba(${e.vars.palette[r].mainChannel} / 0.5)`
                  : No(e.palette[r].main, 0.5),
                "--variant-containedColor": (e.vars || e).palette[r]
                  .contrastText,
                "--variant-containedBg": (e.vars || e).palette[r].main,
                "@media (hover: hover)": {
                  "&:hover": {
                    "--variant-containedBg": (e.vars || e).palette[r].dark,
                    "--variant-textBg": e.vars
                      ? `rgba(${e.vars.palette[r].mainChannel} / ${e.vars.palette.action.hoverOpacity})`
                      : No(e.palette[r].main, e.palette.action.hoverOpacity),
                    "--variant-outlinedBorder": (e.vars || e).palette[r].main,
                    "--variant-outlinedBg": e.vars
                      ? `rgba(${e.vars.palette[r].mainChannel} / ${e.vars.palette.action.hoverOpacity})`
                      : No(e.palette[r].main, e.palette.action.hoverOpacity),
                  },
                },
              },
            })),
          {
            props: { color: "inherit" },
            style: {
              color: "inherit",
              borderColor: "currentColor",
              "--variant-containedBg": e.vars
                ? e.vars.palette.Button.inheritContainedBg
                : t,
              "@media (hover: hover)": {
                "&:hover": {
                  "--variant-containedBg": e.vars
                    ? e.vars.palette.Button.inheritContainedHoverBg
                    : n,
                  "--variant-textBg": e.vars
                    ? `rgba(${e.vars.palette.text.primaryChannel} / ${e.vars.palette.action.hoverOpacity})`
                    : No(e.palette.text.primary, e.palette.action.hoverOpacity),
                  "--variant-outlinedBg": e.vars
                    ? `rgba(${e.vars.palette.text.primaryChannel} / ${e.vars.palette.action.hoverOpacity})`
                    : No(e.palette.text.primary, e.palette.action.hoverOpacity),
                },
              },
            },
          },
          {
            props: { size: "small", variant: "text" },
            style: { padding: "4px 5px", fontSize: e.typography.pxToRem(13) },
          },
          {
            props: { size: "large", variant: "text" },
            style: { padding: "8px 11px", fontSize: e.typography.pxToRem(15) },
          },
          {
            props: { size: "small", variant: "outlined" },
            style: { padding: "3px 9px", fontSize: e.typography.pxToRem(13) },
          },
          {
            props: { size: "large", variant: "outlined" },
            style: { padding: "7px 21px", fontSize: e.typography.pxToRem(15) },
          },
          {
            props: { size: "small", variant: "contained" },
            style: { padding: "4px 10px", fontSize: e.typography.pxToRem(13) },
          },
          {
            props: { size: "large", variant: "contained" },
            style: { padding: "8px 22px", fontSize: e.typography.pxToRem(15) },
          },
          {
            props: { disableElevation: !0 },
            style: {
              boxShadow: "none",
              "&:hover": { boxShadow: "none" },
              [`&.${Wr.focusVisible}`]: { boxShadow: "none" },
              "&:active": { boxShadow: "none" },
              [`&.${Wr.disabled}`]: { boxShadow: "none" },
            },
          },
          { props: { fullWidth: !0 }, style: { width: "100%" } },
          {
            props: { loadingPosition: "center" },
            style: {
              transition: e.transitions.create(
                ["background-color", "box-shadow", "border-color"],
                { duration: e.transitions.duration.short },
              ),
              [`&.${Wr.loading}`]: { color: "transparent" },
            },
          },
        ],
      };
    }),
  ),
  UB = In("span", {
    name: "MuiButton",
    slot: "StartIcon",
    overridesResolver: (e, t) => {
      const { ownerState: n } = e;
      return [
        t.startIcon,
        n.loading && t.startIconLoadingStart,
        t[`iconSize${at(n.size)}`],
      ];
    },
  })(({ theme: e }) => ({
    display: "inherit",
    marginRight: 8,
    marginLeft: -4,
    variants: [
      { props: { size: "small" }, style: { marginLeft: -2 } },
      {
        props: { loadingPosition: "start", loading: !0 },
        style: {
          transition: e.transitions.create(["opacity"], {
            duration: e.transitions.duration.short,
          }),
          opacity: 0,
        },
      },
      {
        props: { loadingPosition: "start", loading: !0, fullWidth: !0 },
        style: { marginRight: -8 },
      },
      ...JS,
    ],
  })),
  WB = In("span", {
    name: "MuiButton",
    slot: "EndIcon",
    overridesResolver: (e, t) => {
      const { ownerState: n } = e;
      return [
        t.endIcon,
        n.loading && t.endIconLoadingEnd,
        t[`iconSize${at(n.size)}`],
      ];
    },
  })(({ theme: e }) => ({
    display: "inherit",
    marginRight: -4,
    marginLeft: 8,
    variants: [
      { props: { size: "small" }, style: { marginRight: -2 } },
      {
        props: { loadingPosition: "end", loading: !0 },
        style: {
          transition: e.transitions.create(["opacity"], {
            duration: e.transitions.duration.short,
          }),
          opacity: 0,
        },
      },
      {
        props: { loadingPosition: "end", loading: !0, fullWidth: !0 },
        style: { marginLeft: -8 },
      },
      ...JS,
    ],
  })),
  HB = In("span", {
    name: "MuiButton",
    slot: "LoadingIndicator",
    overridesResolver: (e, t) => t.loadingIndicator,
  })(({ theme: e }) => ({
    display: "none",
    position: "absolute",
    visibility: "visible",
    variants: [
      { props: { loading: !0 }, style: { display: "flex" } },
      { props: { loadingPosition: "start" }, style: { left: 14 } },
      {
        props: { loadingPosition: "start", size: "small" },
        style: { left: 10 },
      },
      {
        props: { variant: "text", loadingPosition: "start" },
        style: { left: 6 },
      },
      {
        props: { loadingPosition: "center" },
        style: {
          left: "50%",
          transform: "translate(-50%)",
          color: (e.vars || e).palette.action.disabled,
        },
      },
      { props: { loadingPosition: "end" }, style: { right: 14 } },
      {
        props: { loadingPosition: "end", size: "small" },
        style: { right: 10 },
      },
      {
        props: { variant: "text", loadingPosition: "end" },
        style: { right: 6 },
      },
      {
        props: { loadingPosition: "start", fullWidth: !0 },
        style: { position: "relative", left: -10 },
      },
      {
        props: { loadingPosition: "end", fullWidth: !0 },
        style: { position: "relative", right: -10 },
      },
    ],
  })),
  Gm = In("span", {
    name: "MuiButton",
    slot: "LoadingIconPlaceholder",
    overridesResolver: (e, t) => t.loadingIconPlaceholder,
  })({ display: "inline-block", width: "1em", height: "1em" }),
  GB = x.forwardRef(function (t, n) {
    const r = x.useContext(LB),
      o = x.useContext(zB),
      i = nl(r, t),
      s = Sc({ props: i, name: "MuiButton" }),
      {
        children: a,
        color: l = "primary",
        component: c = "button",
        className: u,
        disabled: d = !1,
        disableElevation: f = !1,
        disableFocusRipple: g = !1,
        endIcon: h,
        focusVisibleClassName: p,
        fullWidth: v = !1,
        id: b,
        loading: S = null,
        loadingIndicator: w,
        loadingPosition: E = "center",
        size: R = "medium",
        startIcon: N,
        type: I,
        variant: T = "text",
        ...k
      } = s,
      m = fz(b),
      A = w ?? y.jsx($B, { "aria-labelledby": m, color: "inherit", size: 16 }),
      V = {
        ...s,
        color: l,
        component: c,
        disabled: d,
        disableElevation: f,
        disableFocusRipple: g,
        fullWidth: v,
        loading: S,
        loadingIndicator: A,
        loadingPosition: E,
        size: R,
        type: I,
        variant: T,
      },
      P = BB(V),
      F =
        (N || (S && E === "start")) &&
        y.jsx(UB, {
          className: P.startIcon,
          ownerState: V,
          children:
            N ||
            y.jsx(Gm, { className: P.loadingIconPlaceholder, ownerState: V }),
        }),
      $ =
        (h || (S && E === "end")) &&
        y.jsx(WB, {
          className: P.endIcon,
          ownerState: V,
          children:
            h ||
            y.jsx(Gm, { className: P.loadingIconPlaceholder, ownerState: V }),
        }),
      H = o || "",
      B =
        typeof S == "boolean"
          ? y.jsx("span", {
              className: P.loadingWrapper,
              style: { display: "contents" },
              children:
                S &&
                y.jsx(HB, {
                  className: P.loadingIndicator,
                  ownerState: V,
                  children: A,
                }),
            })
          : null;
    return y.jsxs(jB, {
      ownerState: V,
      className: Ct(r.className, P.root, u, H),
      component: c,
      disabled: d || S,
      focusRipple: !g,
      focusVisibleClassName: Ct(P.focusVisible, p),
      ref: n,
      type: I,
      id: S ? m : b,
      ...k,
      classes: P,
      children: [F, E !== "end" && B, a, E === "end" && B, $],
    });
  });
function Km({
  onClick: e,
  children: t,
  className: n,
  disabled: r,
  color: o = "primary",
  variant: i = "contained",
  type: s = "button",
}) {
  return y.jsx(GB, {
    onClick: e,
    className: n,
    disabled: r,
    variant: i,
    color: o,
    type: s,
    sx: {
      textTransform: "none",
      borderRadius: "8px",
      padding: "8px 16px",
      fontSize: "14px",
      fontWeight: 500,
      boxShadow: i === "contained" ? "0 2px 4px rgba(0,0,0,0.1)" : "none",
      "&:hover": {
        boxShadow: i === "contained" ? "0 4px 8px rgba(0,0,0,0.15)" : "none",
      },
      "&:disabled": { opacity: 0.6 },
    },
    children: t,
  });
}
function KB({
  pmEmail: e,
  onProjectSelect: t,
  selectedProjectId: n,
  isAdminMode: r = !1,
  isAdminView: o = !1,
}) {
  const [i, s] = x.useState([]),
    [a, l] = x.useState(!1),
    [c, u] = x.useState(!1);
  x.useEffect(() => {
    (console.log("PMProjectManager effect triggered:", {
      pmEmail: e,
      isAdminView: o,
      isAdminMode: r,
      shouldLoadAll: o || r,
    }),
      o || r ? f() : e && d());
  }, [e, o, r]);
  async function d() {
    if (e) {
      l(!0);
      try {
        console.log(`Loading projects for PM: ${e}`);
        const b = (await ml(e)).map((S) => ({
          project_id: S.project_id,
          project_name: S.project_name,
          pm_email: S.pm || S.project_manager || e,
          project_status: "active",
          has_acta_document: !1,
          last_updated: new Date().toISOString(),
        }));
        (s(b),
          b.length > 0
            ? ce.success(
                `Found ${b.length} projects${r ? " (admin access)" : " assigned to you"}`,
              )
            : ce(
                r
                  ? "No projects found in the system. Backend may not be configured yet."
                  : "No projects found for your email. You can still enter Project IDs manually.",
                { icon: r ? "⚠️" : "💡", duration: 5e3 },
              ));
      } catch (v) {
        console.error("Error loading PM projects:", v);
        const b = r
          ? "Could not load projects. Backend endpoints may not be implemented yet."
          : "Could not load your assigned projects. You can still enter Project IDs manually.";
        ce.error(b);
      } finally {
        l(!1);
      }
    }
  }
  async function f() {
    l(!0);
    try {
      console.log("Loading all projects for admin view");
      const b = (await p0()).map((w) => ({
        project_id: w.project_id,
        project_name: w.project_name,
        pm_email: w.pm || w.project_manager || "unknown@example.com",
        project_status: "active",
        has_acta_document: !1,
        last_updated: new Date().toISOString(),
      }));
      s(b);
      const S = o ? "(admin dashboard)" : "(admin access)";
      ce.success(`Loaded ${b.length} projects ${S}`);
    } catch (v) {
      (console.error("Error loading all projects:", v),
        ce.error(
          "Could not load projects. Backend endpoints may not be implemented yet.",
        ));
    } finally {
      l(!1);
    }
  }
  async function g() {
    if (!e) {
      ce.error("Email address required for bulk generation");
      return;
    }
    if (i.length === 0) {
      ce.error(
        "No projects available for bulk generation. Please load projects first or use manual entry.",
        { duration: 6e3 },
      );
      return;
    }
    u(!0);
    try {
      ce(
        "Starting bulk Acta generation for all your projects... This may take several minutes.",
        { icon: "⚡", duration: 6e3 },
      );
      const v = await wR(e);
      (ce.success(
        `Bulk generation complete! Success: ${v.success.length}, Failed: ${v.failed.length}`,
        { duration: 8e3 },
      ),
        v.failed.length > 0 &&
          (console.warn("Failed projects:", v.failed),
          ce.error(`Some projects failed: ${v.failed.join(", ")}`, {
            duration: 1e4,
          })),
        o || r ? f() : d());
    } catch (v) {
      (console.error("Bulk generation error:", v),
        ce.error(
          "Bulk generation failed. Backend API may not be available. You can still generate Actas individually using manual entry.",
          { duration: 8e3 },
        ));
    } finally {
      u(!1);
    }
  }
  const h = (v) =>
      v.has_acta_document
        ? y.jsx(by, { className: "h-4 w-4 text-green-500" })
        : y.jsx(xy, { className: "h-4 w-4 text-yellow-500" }),
    p = (v) =>
      v.has_acta_document
        ? `Acta available (${v.acta_last_generated ? new Date(v.acta_last_generated).toLocaleDateString() : "Unknown"})`
        : "No Acta document";
  return y.jsxs("div", {
    className: "bg-white rounded-2xl shadow-xl border border-gray-200 p-6",
    children: [
      y.jsxs("div", {
        className: "flex items-center justify-between mb-6",
        children: [
          y.jsxs("div", {
            className: "flex items-center gap-3",
            children: [
              y.jsx(uu, { className: "h-6 w-6 text-blue-500" }),
              y.jsx("h2", {
                className: "text-xl font-bold text-gray-800",
                children: o ? "All Projects" : "Your Projects",
              }),
              i.length > 0 &&
                y.jsxs("span", {
                  className:
                    "bg-blue-100 text-blue-800 text-sm font-medium px-2 py-1 rounded-full",
                  children: [i.length, " projects"],
                }),
            ],
          }),
          y.jsxs("div", {
            className: "flex gap-2",
            children: [
              y.jsxs(Km, {
                onClick: o ? f : d,
                disabled: a,
                className:
                  "flex items-center gap-2 bg-gray-500 hover:bg-gray-600 text-white px-4 py-2 rounded-xl",
                children: [
                  y.jsx(Qi, {
                    className: `h-4 w-4 ${a ? "animate-spin" : ""}`,
                  }),
                  "Refresh",
                ],
              }),
              i.length > 0 &&
                y.jsxs(Km, {
                  onClick: g,
                  disabled: c || a,
                  className:
                    "flex items-center gap-2 bg-purple-500 hover:bg-purple-600 text-white px-4 py-2 rounded-xl",
                  children: [
                    y.jsx(du, {
                      className: `h-4 w-4 ${c ? "animate-pulse" : ""}`,
                    }),
                    c ? "Generating All..." : "Generate All Actas",
                  ],
                }),
            ],
          }),
        ],
      }),
      a
        ? y.jsx("div", {
            className: "flex items-center justify-center py-8",
            children: y.jsxs("div", {
              className: "flex items-center gap-3 text-gray-500",
              children: [
                y.jsx(Qi, { className: "h-5 w-5 animate-spin" }),
                y.jsx("span", { children: "Loading your projects..." }),
              ],
            }),
          })
        : i.length === 0
          ? y.jsxs("div", {
              className: "text-center py-8",
              children: [
                y.jsx(uu, {
                  className: "h-12 w-12 text-gray-300 mx-auto mb-4",
                }),
                y.jsx("h3", {
                  className: "text-lg font-medium text-gray-700 mb-2",
                  children: "No Projects Found",
                }),
                y.jsxs("p", {
                  className: "text-gray-500 mb-4",
                  children: [
                    "No projects found for ",
                    y.jsx("strong", { children: e }),
                    " in the DynamoDB table.",
                  ],
                }),
                y.jsx("p", {
                  className: "text-sm text-gray-400",
                  children:
                    "You can still enter Project IDs manually in the section above.",
                }),
              ],
            })
          : y.jsx("div", {
              className: "space-y-3",
              children: i.map((v) =>
                y.jsx(
                  "div",
                  {
                    className: `
                p-4 rounded-xl border-2 cursor-pointer transition-all duration-200
                hover:shadow-md hover:scale-[1.01]
                ${n === v.project_id ? "border-blue-500 bg-blue-50" : "border-gray-200 hover:border-blue-300"}
              `,
                    onClick: () => (t == null ? void 0 : t(v.project_id)),
                    children: y.jsxs("div", {
                      className: "flex items-center justify-between",
                      children: [
                        y.jsxs("div", {
                          className: "flex-1",
                          children: [
                            y.jsxs("div", {
                              className: "flex items-center gap-2 mb-1",
                              children: [
                                y.jsx("span", {
                                  className: "font-medium text-gray-800",
                                  children:
                                    v.project_name || `Project ${v.project_id}`,
                                }),
                                y.jsxs("span", {
                                  className:
                                    "text-sm text-gray-500 bg-gray-100 px-2 py-1 rounded",
                                  children: ["ID: ", v.project_id],
                                }),
                              ],
                            }),
                            y.jsxs("div", {
                              className: "flex items-center gap-2 text-sm",
                              children: [
                                h(v),
                                y.jsx("span", {
                                  className: v.has_acta_document
                                    ? "text-green-600"
                                    : "text-yellow-600",
                                  children: p(v),
                                }),
                              ],
                            }),
                            v.last_updated &&
                              y.jsxs("div", {
                                className: "text-xs text-gray-400 mt-1",
                                children: [
                                  "Updated:",
                                  " ",
                                  new Date(v.last_updated).toLocaleDateString(),
                                ],
                              }),
                          ],
                        }),
                        n === v.project_id &&
                          y.jsx("div", {
                            className: "ml-4",
                            children: y.jsx("div", {
                              className:
                                "bg-blue-500 text-white text-xs px-2 py-1 rounded-full",
                              children: "Selected",
                            }),
                          }),
                      ],
                    }),
                  },
                  v.project_id,
                ),
              ),
            }),
      i.length > 0 &&
        y.jsx("div", {
          className: "mt-6 p-4 bg-blue-50 rounded-xl",
          children: y.jsxs("div", {
            className: "flex items-start gap-3",
            children: [
              y.jsx(du, { className: "h-5 w-5 text-blue-500 mt-0.5" }),
              y.jsxs("div", {
                children: [
                  y.jsx("h4", {
                    className: "font-medium text-blue-800 mb-1",
                    children: "Quick Actions",
                  }),
                  y.jsxs("ul", {
                    className: "text-sm text-blue-600 space-y-1",
                    children: [
                      y.jsx("li", {
                        children:
                          "• Click any project to select it for individual actions",
                      }),
                      y.jsx("li", {
                        children:
                          '• Use "Generate All Actas" to create documents for all projects',
                      }),
                      y.jsx("li", {
                        children:
                          "• Individual project actions will appear in the section above",
                      }),
                    ],
                  }),
                ],
              }),
            ],
          }),
        }),
    ],
  });
}
async function QS() {
  console.log("🔍 Quick Backend Diagnostic...");
  const e = "https://q2b9avfwv5.execute-api.us-east-2.amazonaws.com/prod";
  (console.log(`🌐 API Base URL: ${e}`),
    e.includes("localhost") &&
      (console.warn("⚠️ Using localhost API - this is OK for development"),
      console.log(
        "🔧 If localhost backend is not running, some features will be disabled",
      )));
  try {
    const t = new AbortController(),
      n = setTimeout(() => t.abort(), 5e3),
      r = await fetch(`${e}/health`, { method: "GET", signal: t.signal });
    return (
      clearTimeout(n),
      console.log(`🏥 Health check: ${r.status}`),
      r.ok
        ? (console.log("✅ Backend API is responsive"), !0)
        : (console.warn(`⚠️ Backend API returned status ${r.status}`), !1)
    );
  } catch (t) {
    return (
      t.name === "AbortError"
        ? console.error(
            "❌ Backend API timeout - connection is too slow or unavailable",
          )
        : console.error("❌ Cannot reach backend API:", t.message),
      console.log(
        "💡 You can still use manual project entry and generate individual Actas",
      ),
      !1
    );
  }
}
typeof window < "u" && (window.quickBackendDiagnostic = QS);
function na({ label: e, value: t, icon: n, bg: r, color: o }) {
  return y.jsx("div", {
    className: "bg-white rounded-2xl shadow-lg p-6 border border-gray-200",
    children: y.jsxs("div", {
      className: "flex items-center",
      children: [
        y.jsx("div", { className: `p-3 ${r} rounded-xl`, children: n }),
        y.jsxs("div", {
          className: "ml-4",
          children: [
            y.jsx("p", {
              className: "text-sm font-medium text-gray-600",
              children: e,
            }),
            y.jsx("p", { className: `text-2xl font-bold ${o}`, children: t }),
          ],
        }),
      ],
    }),
  });
}
function qB() {
  var s, a, l, c;
  const { user: e, loading: t } = $d(),
    [n, r] = x.useState({
      totalProjects: 0,
      activeUsers: 0,
      completedActas: 0,
      pendingApprovals: 0,
    }),
    o =
      ((s = e == null ? void 0 : e.email) == null
        ? void 0
        : s.includes("admin")) ||
      ((a = e == null ? void 0 : e.email) == null
        ? void 0
        : a.includes("valencia94")) ||
      ((l = e == null ? void 0 : e.email) == null
        ? void 0
        : l.endsWith("@ikusi.com")) ||
      ((c = e == null ? void 0 : e.email) == null
        ? void 0
        : c.endsWith("@company.com"));
  (x.useEffect(() => {
    if (t) return;
    if (!o) {
      (ce.error("Access denied. Admin privileges required."),
        (window.location.href = "/dashboard"));
      return;
    }
    (async () => {
      try {
        (await QS()) ||
          ce.error(
            "Backend API connectivity issues detected. Check system status.",
            { duration: 8e3 },
          );
      } catch (d) {
        (console.error("Diagnostic error:", d),
          ce.error("Failed to run backend diagnostic"));
      }
    })();
  }, [o, t]),
    x.useEffect(() => {
      o &&
        (async () => {
          try {
            const g = Math.floor(101.4),
              h = Math.floor(156 * 0.15);
            r({
              totalProjects: 156,
              activeUsers: 12,
              completedActas: g,
              pendingApprovals: h,
            });
          } catch (d) {
            (console.error("Error fetching admin stats:", d),
              ce.error("Failed to load admin statistics"));
          }
        })();
    }, [o]));
  const i = (u) => {
    (ce.success(`${u} initiated - Check console for details`),
      console.log(`Admin action: ${u}`));
  };
  return t
    ? y.jsx("div", {
        className:
          "min-h-screen bg-gradient-to-br from-slate-100 via-blue-50 to-indigo-100 flex items-center justify-center",
        children: y.jsxs("div", {
          className: "text-center",
          children: [
            y.jsx("div", {
              className:
                "animate-spin rounded-full h-12 w-12 border-b-2 border-indigo-500 mx-auto mb-4",
            }),
            y.jsx("p", {
              className: "text-indigo-600 font-medium",
              children: "Loading Admin Dashboard...",
            }),
          ],
        }),
      })
    : o
      ? y.jsxs("div", {
          className:
            "min-h-screen bg-gradient-to-br from-slate-100 via-blue-50 to-indigo-100",
          children: [
            y.jsx(kf, {}),
            y.jsxs("main", {
              className: "max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8",
              children: [
                y.jsxs(pn.div, {
                  initial: { opacity: 0, y: 20 },
                  animate: { opacity: 1, y: 0 },
                  className: "mb-8",
                  children: [
                    y.jsxs("div", {
                      className: "flex items-center mb-4",
                      children: [
                        y.jsx(Aa, {
                          className: "h-8 w-8 text-indigo-600 mr-3",
                        }),
                        y.jsxs("div", {
                          children: [
                            y.jsx("h1", {
                              className: "text-3xl font-bold text-gray-900",
                              children: "Admin Dashboard",
                            }),
                            y.jsx("p", {
                              className: "text-gray-600",
                              children:
                                "System administration and project management",
                            }),
                          ],
                        }),
                      ],
                    }),
                    y.jsxs("div", {
                      className:
                        "flex items-center bg-indigo-50 border border-indigo-200 rounded-lg px-4 py-2",
                      children: [
                        y.jsx(Aa, {
                          className: "h-5 w-5 text-indigo-600 mr-2",
                        }),
                        y.jsxs("span", {
                          className: "text-sm font-medium text-indigo-800",
                          children: [
                            "Admin Access: ",
                            e == null ? void 0 : e.email,
                          ],
                        }),
                      ],
                    }),
                  ],
                }),
                y.jsxs(pn.div, {
                  initial: { opacity: 0, y: 20 },
                  animate: { opacity: 1, y: 0 },
                  transition: { delay: 0.1 },
                  className:
                    "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8",
                  children: [
                    y.jsx(na, {
                      label: "Total Projects",
                      value: n.totalProjects,
                      icon: y.jsx(Na, { className: "h-6 w-6 text-indigo-600" }),
                      bg: "bg-indigo-100",
                      color: "text-indigo-600",
                    }),
                    y.jsx(na, {
                      label: "Active Users",
                      value: n.activeUsers,
                      icon: y.jsx(uu, {
                        className: "h-6 w-6 text-emerald-600",
                      }),
                      bg: "bg-emerald-100",
                      color: "text-emerald-600",
                    }),
                    y.jsx(na, {
                      label: "Completed Actas",
                      value: n.completedActas,
                      icon: y.jsx(du, { className: "h-6 w-6 text-green-600" }),
                      bg: "bg-green-100",
                      color: "text-green-600",
                    }),
                    y.jsx(na, {
                      label: "Pending Approvals",
                      value: n.pendingApprovals,
                      icon: y.jsx(Rw, { className: "h-6 w-6 text-amber-600" }),
                      bg: "bg-amber-100",
                      color: "text-amber-600",
                    }),
                  ],
                }),
                y.jsxs(pn.div, {
                  initial: { opacity: 0, y: 20 },
                  animate: { opacity: 1, y: 0 },
                  transition: { delay: 0.2 },
                  className:
                    "bg-white rounded-3xl shadow-2xl p-8 border border-gray-200 mb-8",
                  children: [
                    y.jsxs("div", {
                      className: "flex items-center mb-6",
                      children: [
                        y.jsx(kw, { className: "h-7 w-7 text-indigo-600" }),
                        y.jsx("h2", {
                          className: "text-2xl font-bold text-gray-900 ml-3",
                          children: "System Actions",
                        }),
                      ],
                    }),
                    y.jsxs("div", {
                      className:
                        "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4",
                      children: [
                        y.jsxs("button", {
                          onClick: () => i("Backend Diagnostic"),
                          className:
                            "flex items-center p-4 bg-blue-50 hover:bg-blue-100 rounded-xl transition-colors border border-blue-200",
                          children: [
                            y.jsx(Pw, {
                              className: "h-5 w-5 text-blue-600 mr-3",
                            }),
                            y.jsx("span", {
                              className: "font-medium text-blue-800",
                              children: "Run Diagnostic",
                            }),
                          ],
                        }),
                        y.jsxs("button", {
                          onClick: () => i("Refresh Cache"),
                          className:
                            "flex items-center p-4 bg-green-50 hover:bg-green-100 rounded-xl transition-colors border border-green-200",
                          children: [
                            y.jsx(Qi, {
                              className: "h-5 w-5 text-green-600 mr-3",
                            }),
                            y.jsx("span", {
                              className: "font-medium text-green-800",
                              children: "Refresh Cache",
                            }),
                          ],
                        }),
                        y.jsxs("button", {
                          onClick: () => i("Export Logs"),
                          className:
                            "flex items-center p-4 bg-purple-50 hover:bg-purple-100 rounded-xl transition-colors border border-purple-200",
                          children: [
                            y.jsx(Tw, {
                              className: "h-5 w-5 text-purple-600 mr-3",
                            }),
                            y.jsx("span", {
                              className: "font-medium text-purple-800",
                              children: "Export Logs",
                            }),
                          ],
                        }),
                      ],
                    }),
                  ],
                }),
                y.jsxs(pn.div, {
                  initial: { opacity: 0, y: 20 },
                  animate: { opacity: 1, y: 0 },
                  transition: { delay: 0.3 },
                  className:
                    "bg-white rounded-3xl shadow-2xl p-8 border border-gray-200",
                  children: [
                    y.jsxs("div", {
                      className: "flex items-center mb-6",
                      children: [
                        y.jsx(Na, { className: "h-7 w-7 text-indigo-600" }),
                        y.jsx("h2", {
                          className: "text-2xl font-bold text-gray-900 ml-3",
                          children: "All Projects Management",
                        }),
                      ],
                    }),
                    y.jsx(KB, { isAdminView: !0 }),
                  ],
                }),
              ],
            }),
          ],
        })
      : null;
}
/**
 * table-core
 *
 * Copyright (c) TanStack
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */ function Ir(e, t) {
  return typeof e == "function" ? e(t) : e;
}
function qt(e, t) {
  return (n) => {
    t.setState((r) => ({ ...r, [e]: Ir(n, r[e]) }));
  };
}
function wc(e) {
  return e instanceof Function;
}
function YB(e) {
  return Array.isArray(e) && e.every((t) => typeof t == "number");
}
function XB(e, t) {
  const n = [],
    r = (o) => {
      o.forEach((i) => {
        n.push(i);
        const s = t(i);
        s != null && s.length && r(s);
      });
    };
  return (r(e), n);
}
function re(e, t, n) {
  let r = [],
    o;
  return (i) => {
    let s;
    n.key && n.debug && (s = Date.now());
    const a = e(i);
    if (!(a.length !== r.length || a.some((u, d) => r[d] !== u))) return o;
    r = a;
    let c;
    if (
      (n.key && n.debug && (c = Date.now()),
      (o = t(...a)),
      n == null || n.onChange == null || n.onChange(o),
      n.key && n.debug && n != null && n.debug())
    ) {
      const u = Math.round((Date.now() - s) * 100) / 100,
        d = Math.round((Date.now() - c) * 100) / 100,
        f = d / 16,
        g = (h, p) => {
          for (h = String(h); h.length < p; ) h = " " + h;
          return h;
        };
      console.info(
        `%c⏱ ${g(d, 5)} /${g(u, 5)} ms`,
        `
            font-size: .6rem;
            font-weight: bold;
            color: hsl(${Math.max(0, Math.min(120 - 120 * f, 120))}deg 100% 31%);`,
        n == null ? void 0 : n.key,
      );
    }
    return o;
  };
}
function oe(e, t, n, r) {
  return {
    debug: () => {
      var o;
      return (o = e == null ? void 0 : e.debugAll) != null ? o : e[t];
    },
    key: !1,
    onChange: r,
  };
}
function JB(e, t, n, r) {
  const o = () => {
      var s;
      return (s = i.getValue()) != null ? s : e.options.renderFallbackValue;
    },
    i = {
      id: `${t.id}_${n.id}`,
      row: t,
      column: n,
      getValue: () => t.getValue(r),
      renderValue: o,
      getContext: re(
        () => [e, n, t, i],
        (s, a, l, c) => ({
          table: s,
          column: a,
          row: l,
          cell: c,
          getValue: c.getValue,
          renderValue: c.renderValue,
        }),
        oe(e.options, "debugCells"),
      ),
    };
  return (
    e._features.forEach((s) => {
      s.createCell == null || s.createCell(i, n, t, e);
    }, {}),
    i
  );
}
function QB(e, t, n, r) {
  var o, i;
  const a = { ...e._getDefaultColumnDef(), ...t },
    l = a.accessorKey;
  let c =
      (o =
        (i = a.id) != null
          ? i
          : l
            ? typeof String.prototype.replaceAll == "function"
              ? l.replaceAll(".", "_")
              : l.replace(/\./g, "_")
            : void 0) != null
        ? o
        : typeof a.header == "string"
          ? a.header
          : void 0,
    u;
  if (
    (a.accessorFn
      ? (u = a.accessorFn)
      : l &&
        (l.includes(".")
          ? (u = (f) => {
              let g = f;
              for (const p of l.split(".")) {
                var h;
                g = (h = g) == null ? void 0 : h[p];
              }
              return g;
            })
          : (u = (f) => f[a.accessorKey])),
    !c)
  )
    throw new Error();
  let d = {
    id: `${String(c)}`,
    accessorFn: u,
    parent: r,
    depth: n,
    columnDef: a,
    columns: [],
    getFlatColumns: re(
      () => [!0],
      () => {
        var f;
        return [
          d,
          ...((f = d.columns) == null
            ? void 0
            : f.flatMap((g) => g.getFlatColumns())),
        ];
      },
      oe(e.options, "debugColumns"),
    ),
    getLeafColumns: re(
      () => [e._getOrderColumnsFn()],
      (f) => {
        var g;
        if ((g = d.columns) != null && g.length) {
          let h = d.columns.flatMap((p) => p.getLeafColumns());
          return f(h);
        }
        return [d];
      },
      oe(e.options, "debugColumns"),
    ),
  };
  for (const f of e._features) f.createColumn == null || f.createColumn(d, e);
  return d;
}
const bt = "debugHeaders";
function qm(e, t, n) {
  var r;
  let i = {
    id: (r = n.id) != null ? r : t.id,
    column: t,
    index: n.index,
    isPlaceholder: !!n.isPlaceholder,
    placeholderId: n.placeholderId,
    depth: n.depth,
    subHeaders: [],
    colSpan: 0,
    rowSpan: 0,
    headerGroup: null,
    getLeafHeaders: () => {
      const s = [],
        a = (l) => {
          (l.subHeaders && l.subHeaders.length && l.subHeaders.map(a),
            s.push(l));
        };
      return (a(i), s);
    },
    getContext: () => ({ table: e, header: i, column: t }),
  };
  return (
    e._features.forEach((s) => {
      s.createHeader == null || s.createHeader(i, e);
    }),
    i
  );
}
const ZB = {
  createTable: (e) => {
    ((e.getHeaderGroups = re(
      () => [
        e.getAllColumns(),
        e.getVisibleLeafColumns(),
        e.getState().columnPinning.left,
        e.getState().columnPinning.right,
      ],
      (t, n, r, o) => {
        var i, s;
        const a =
            (i =
              r == null
                ? void 0
                : r.map((d) => n.find((f) => f.id === d)).filter(Boolean)) !=
            null
              ? i
              : [],
          l =
            (s =
              o == null
                ? void 0
                : o.map((d) => n.find((f) => f.id === d)).filter(Boolean)) !=
            null
              ? s
              : [],
          c = n.filter(
            (d) =>
              !(r != null && r.includes(d.id)) &&
              !(o != null && o.includes(d.id)),
          );
        return ra(t, [...a, ...c, ...l], e);
      },
      oe(e.options, bt),
    )),
      (e.getCenterHeaderGroups = re(
        () => [
          e.getAllColumns(),
          e.getVisibleLeafColumns(),
          e.getState().columnPinning.left,
          e.getState().columnPinning.right,
        ],
        (t, n, r, o) => (
          (n = n.filter(
            (i) =>
              !(r != null && r.includes(i.id)) &&
              !(o != null && o.includes(i.id)),
          )),
          ra(t, n, e, "center")
        ),
        oe(e.options, bt),
      )),
      (e.getLeftHeaderGroups = re(
        () => [
          e.getAllColumns(),
          e.getVisibleLeafColumns(),
          e.getState().columnPinning.left,
        ],
        (t, n, r) => {
          var o;
          const i =
            (o =
              r == null
                ? void 0
                : r.map((s) => n.find((a) => a.id === s)).filter(Boolean)) !=
            null
              ? o
              : [];
          return ra(t, i, e, "left");
        },
        oe(e.options, bt),
      )),
      (e.getRightHeaderGroups = re(
        () => [
          e.getAllColumns(),
          e.getVisibleLeafColumns(),
          e.getState().columnPinning.right,
        ],
        (t, n, r) => {
          var o;
          const i =
            (o =
              r == null
                ? void 0
                : r.map((s) => n.find((a) => a.id === s)).filter(Boolean)) !=
            null
              ? o
              : [];
          return ra(t, i, e, "right");
        },
        oe(e.options, bt),
      )),
      (e.getFooterGroups = re(
        () => [e.getHeaderGroups()],
        (t) => [...t].reverse(),
        oe(e.options, bt),
      )),
      (e.getLeftFooterGroups = re(
        () => [e.getLeftHeaderGroups()],
        (t) => [...t].reverse(),
        oe(e.options, bt),
      )),
      (e.getCenterFooterGroups = re(
        () => [e.getCenterHeaderGroups()],
        (t) => [...t].reverse(),
        oe(e.options, bt),
      )),
      (e.getRightFooterGroups = re(
        () => [e.getRightHeaderGroups()],
        (t) => [...t].reverse(),
        oe(e.options, bt),
      )),
      (e.getFlatHeaders = re(
        () => [e.getHeaderGroups()],
        (t) => t.map((n) => n.headers).flat(),
        oe(e.options, bt),
      )),
      (e.getLeftFlatHeaders = re(
        () => [e.getLeftHeaderGroups()],
        (t) => t.map((n) => n.headers).flat(),
        oe(e.options, bt),
      )),
      (e.getCenterFlatHeaders = re(
        () => [e.getCenterHeaderGroups()],
        (t) => t.map((n) => n.headers).flat(),
        oe(e.options, bt),
      )),
      (e.getRightFlatHeaders = re(
        () => [e.getRightHeaderGroups()],
        (t) => t.map((n) => n.headers).flat(),
        oe(e.options, bt),
      )),
      (e.getCenterLeafHeaders = re(
        () => [e.getCenterFlatHeaders()],
        (t) =>
          t.filter((n) => {
            var r;
            return !((r = n.subHeaders) != null && r.length);
          }),
        oe(e.options, bt),
      )),
      (e.getLeftLeafHeaders = re(
        () => [e.getLeftFlatHeaders()],
        (t) =>
          t.filter((n) => {
            var r;
            return !((r = n.subHeaders) != null && r.length);
          }),
        oe(e.options, bt),
      )),
      (e.getRightLeafHeaders = re(
        () => [e.getRightFlatHeaders()],
        (t) =>
          t.filter((n) => {
            var r;
            return !((r = n.subHeaders) != null && r.length);
          }),
        oe(e.options, bt),
      )),
      (e.getLeafHeaders = re(
        () => [
          e.getLeftHeaderGroups(),
          e.getCenterHeaderGroups(),
          e.getRightHeaderGroups(),
        ],
        (t, n, r) => {
          var o, i, s, a, l, c;
          return [
            ...((o = (i = t[0]) == null ? void 0 : i.headers) != null ? o : []),
            ...((s = (a = n[0]) == null ? void 0 : a.headers) != null ? s : []),
            ...((l = (c = r[0]) == null ? void 0 : c.headers) != null ? l : []),
          ]
            .map((u) => u.getLeafHeaders())
            .flat();
        },
        oe(e.options, bt),
      )));
  },
};
function ra(e, t, n, r) {
  var o, i;
  let s = 0;
  const a = function (f, g) {
    (g === void 0 && (g = 1),
      (s = Math.max(s, g)),
      f
        .filter((h) => h.getIsVisible())
        .forEach((h) => {
          var p;
          (p = h.columns) != null && p.length && a(h.columns, g + 1);
        }, 0));
  };
  a(e);
  let l = [];
  const c = (f, g) => {
      const h = {
          depth: g,
          id: [r, `${g}`].filter(Boolean).join("_"),
          headers: [],
        },
        p = [];
      (f.forEach((v) => {
        const b = [...p].reverse()[0],
          S = v.column.depth === h.depth;
        let w,
          E = !1;
        if (
          (S && v.column.parent
            ? (w = v.column.parent)
            : ((w = v.column), (E = !0)),
          b && (b == null ? void 0 : b.column) === w)
        )
          b.subHeaders.push(v);
        else {
          const R = qm(n, w, {
            id: [r, g, w.id, v == null ? void 0 : v.id]
              .filter(Boolean)
              .join("_"),
            isPlaceholder: E,
            placeholderId: E
              ? `${p.filter((N) => N.column === w).length}`
              : void 0,
            depth: g,
            index: p.length,
          });
          (R.subHeaders.push(v), p.push(R));
        }
        (h.headers.push(v), (v.headerGroup = h));
      }),
        l.push(h),
        g > 0 && c(p, g - 1));
    },
    u = t.map((f, g) => qm(n, f, { depth: s, index: g }));
  (c(u, s - 1), l.reverse());
  const d = (f) =>
    f
      .filter((h) => h.column.getIsVisible())
      .map((h) => {
        let p = 0,
          v = 0,
          b = [0];
        h.subHeaders && h.subHeaders.length
          ? ((b = []),
            d(h.subHeaders).forEach((w) => {
              let { colSpan: E, rowSpan: R } = w;
              ((p += E), b.push(R));
            }))
          : (p = 1);
        const S = Math.min(...b);
        return (
          (v = v + S),
          (h.colSpan = p),
          (h.rowSpan = v),
          { colSpan: p, rowSpan: v }
        );
      });
  return (d((o = (i = l[0]) == null ? void 0 : i.headers) != null ? o : []), l);
}
const ej = (e, t, n, r, o, i, s) => {
    let a = {
      id: t,
      index: r,
      original: n,
      depth: o,
      parentId: s,
      _valuesCache: {},
      _uniqueValuesCache: {},
      getValue: (l) => {
        if (a._valuesCache.hasOwnProperty(l)) return a._valuesCache[l];
        const c = e.getColumn(l);
        if (c != null && c.accessorFn)
          return (
            (a._valuesCache[l] = c.accessorFn(a.original, r)),
            a._valuesCache[l]
          );
      },
      getUniqueValues: (l) => {
        if (a._uniqueValuesCache.hasOwnProperty(l))
          return a._uniqueValuesCache[l];
        const c = e.getColumn(l);
        if (c != null && c.accessorFn)
          return c.columnDef.getUniqueValues
            ? ((a._uniqueValuesCache[l] = c.columnDef.getUniqueValues(
                a.original,
                r,
              )),
              a._uniqueValuesCache[l])
            : ((a._uniqueValuesCache[l] = [a.getValue(l)]),
              a._uniqueValuesCache[l]);
      },
      renderValue: (l) => {
        var c;
        return (c = a.getValue(l)) != null ? c : e.options.renderFallbackValue;
      },
      subRows: [],
      getLeafRows: () => XB(a.subRows, (l) => l.subRows),
      getParentRow: () => (a.parentId ? e.getRow(a.parentId, !0) : void 0),
      getParentRows: () => {
        let l = [],
          c = a;
        for (;;) {
          const u = c.getParentRow();
          if (!u) break;
          (l.push(u), (c = u));
        }
        return l.reverse();
      },
      getAllCells: re(
        () => [e.getAllLeafColumns()],
        (l) => l.map((c) => JB(e, a, c, c.id)),
        oe(e.options, "debugRows"),
      ),
      _getAllCellsByColumnId: re(
        () => [a.getAllCells()],
        (l) => l.reduce((c, u) => ((c[u.column.id] = u), c), {}),
        oe(e.options, "debugRows"),
      ),
    };
    for (let l = 0; l < e._features.length; l++) {
      const c = e._features[l];
      c == null || c.createRow == null || c.createRow(a, e);
    }
    return a;
  },
  tj = {
    createColumn: (e, t) => {
      ((e._getFacetedRowModel =
        t.options.getFacetedRowModel && t.options.getFacetedRowModel(t, e.id)),
        (e.getFacetedRowModel = () =>
          e._getFacetedRowModel
            ? e._getFacetedRowModel()
            : t.getPreFilteredRowModel()),
        (e._getFacetedUniqueValues =
          t.options.getFacetedUniqueValues &&
          t.options.getFacetedUniqueValues(t, e.id)),
        (e.getFacetedUniqueValues = () =>
          e._getFacetedUniqueValues ? e._getFacetedUniqueValues() : new Map()),
        (e._getFacetedMinMaxValues =
          t.options.getFacetedMinMaxValues &&
          t.options.getFacetedMinMaxValues(t, e.id)),
        (e.getFacetedMinMaxValues = () => {
          if (e._getFacetedMinMaxValues) return e._getFacetedMinMaxValues();
        }));
    },
  },
  ZS = (e, t, n) => {
    var r, o;
    const i =
      n == null || (r = n.toString()) == null ? void 0 : r.toLowerCase();
    return !!(
      !(
        (o = e.getValue(t)) == null ||
        (o = o.toString()) == null ||
        (o = o.toLowerCase()) == null
      ) && o.includes(i)
    );
  };
ZS.autoRemove = (e) => xn(e);
const ew = (e, t, n) => {
  var r;
  return !!(
    !((r = e.getValue(t)) == null || (r = r.toString()) == null) &&
    r.includes(n)
  );
};
ew.autoRemove = (e) => xn(e);
const tw = (e, t, n) => {
  var r;
  return (
    ((r = e.getValue(t)) == null || (r = r.toString()) == null
      ? void 0
      : r.toLowerCase()) === (n == null ? void 0 : n.toLowerCase())
  );
};
tw.autoRemove = (e) => xn(e);
const nw = (e, t, n) => {
  var r;
  return (r = e.getValue(t)) == null ? void 0 : r.includes(n);
};
nw.autoRemove = (e) => xn(e);
const rw = (e, t, n) =>
  !n.some((r) => {
    var o;
    return !((o = e.getValue(t)) != null && o.includes(r));
  });
rw.autoRemove = (e) => xn(e) || !(e != null && e.length);
const ow = (e, t, n) =>
  n.some((r) => {
    var o;
    return (o = e.getValue(t)) == null ? void 0 : o.includes(r);
  });
ow.autoRemove = (e) => xn(e) || !(e != null && e.length);
const iw = (e, t, n) => e.getValue(t) === n;
iw.autoRemove = (e) => xn(e);
const sw = (e, t, n) => e.getValue(t) == n;
sw.autoRemove = (e) => xn(e);
const qf = (e, t, n) => {
  let [r, o] = n;
  const i = e.getValue(t);
  return i >= r && i <= o;
};
qf.resolveFilterValue = (e) => {
  let [t, n] = e,
    r = typeof t != "number" ? parseFloat(t) : t,
    o = typeof n != "number" ? parseFloat(n) : n,
    i = t === null || Number.isNaN(r) ? -1 / 0 : r,
    s = n === null || Number.isNaN(o) ? 1 / 0 : o;
  if (i > s) {
    const a = i;
    ((i = s), (s = a));
  }
  return [i, s];
};
qf.autoRemove = (e) => xn(e) || (xn(e[0]) && xn(e[1]));
const er = {
  includesString: ZS,
  includesStringSensitive: ew,
  equalsString: tw,
  arrIncludes: nw,
  arrIncludesAll: rw,
  arrIncludesSome: ow,
  equals: iw,
  weakEquals: sw,
  inNumberRange: qf,
};
function xn(e) {
  return e == null || e === "";
}
const nj = {
  getDefaultColumnDef: () => ({ filterFn: "auto" }),
  getInitialState: (e) => ({ columnFilters: [], ...e }),
  getDefaultOptions: (e) => ({
    onColumnFiltersChange: qt("columnFilters", e),
    filterFromLeafRows: !1,
    maxLeafRowFilterDepth: 100,
  }),
  createColumn: (e, t) => {
    ((e.getAutoFilterFn = () => {
      const n = t.getCoreRowModel().flatRows[0],
        r = n == null ? void 0 : n.getValue(e.id);
      return typeof r == "string"
        ? er.includesString
        : typeof r == "number"
          ? er.inNumberRange
          : typeof r == "boolean" || (r !== null && typeof r == "object")
            ? er.equals
            : Array.isArray(r)
              ? er.arrIncludes
              : er.weakEquals;
    }),
      (e.getFilterFn = () => {
        var n, r;
        return wc(e.columnDef.filterFn)
          ? e.columnDef.filterFn
          : e.columnDef.filterFn === "auto"
            ? e.getAutoFilterFn()
            : (n =
                  (r = t.options.filterFns) == null
                    ? void 0
                    : r[e.columnDef.filterFn]) != null
              ? n
              : er[e.columnDef.filterFn];
      }),
      (e.getCanFilter = () => {
        var n, r, o;
        return (
          ((n = e.columnDef.enableColumnFilter) != null ? n : !0) &&
          ((r = t.options.enableColumnFilters) != null ? r : !0) &&
          ((o = t.options.enableFilters) != null ? o : !0) &&
          !!e.accessorFn
        );
      }),
      (e.getIsFiltered = () => e.getFilterIndex() > -1),
      (e.getFilterValue = () => {
        var n;
        return (n = t.getState().columnFilters) == null ||
          (n = n.find((r) => r.id === e.id)) == null
          ? void 0
          : n.value;
      }),
      (e.getFilterIndex = () => {
        var n, r;
        return (n =
          (r = t.getState().columnFilters) == null
            ? void 0
            : r.findIndex((o) => o.id === e.id)) != null
          ? n
          : -1;
      }),
      (e.setFilterValue = (n) => {
        t.setColumnFilters((r) => {
          const o = e.getFilterFn(),
            i = r == null ? void 0 : r.find((u) => u.id === e.id),
            s = Ir(n, i ? i.value : void 0);
          if (Ym(o, s, e)) {
            var a;
            return (a = r == null ? void 0 : r.filter((u) => u.id !== e.id)) !=
              null
              ? a
              : [];
          }
          const l = { id: e.id, value: s };
          if (i) {
            var c;
            return (c =
              r == null ? void 0 : r.map((u) => (u.id === e.id ? l : u))) !=
              null
              ? c
              : [];
          }
          return r != null && r.length ? [...r, l] : [l];
        });
      }));
  },
  createRow: (e, t) => {
    ((e.columnFilters = {}), (e.columnFiltersMeta = {}));
  },
  createTable: (e) => {
    ((e.setColumnFilters = (t) => {
      const n = e.getAllLeafColumns(),
        r = (o) => {
          var i;
          return (i = Ir(t, o)) == null
            ? void 0
            : i.filter((s) => {
                const a = n.find((l) => l.id === s.id);
                if (a) {
                  const l = a.getFilterFn();
                  if (Ym(l, s.value, a)) return !1;
                }
                return !0;
              });
        };
      e.options.onColumnFiltersChange == null ||
        e.options.onColumnFiltersChange(r);
    }),
      (e.resetColumnFilters = (t) => {
        var n, r;
        e.setColumnFilters(
          t
            ? []
            : (n = (r = e.initialState) == null ? void 0 : r.columnFilters) !=
                null
              ? n
              : [],
        );
      }),
      (e.getPreFilteredRowModel = () => e.getCoreRowModel()),
      (e.getFilteredRowModel = () => (
        !e._getFilteredRowModel &&
          e.options.getFilteredRowModel &&
          (e._getFilteredRowModel = e.options.getFilteredRowModel(e)),
        e.options.manualFiltering || !e._getFilteredRowModel
          ? e.getPreFilteredRowModel()
          : e._getFilteredRowModel()
      )));
  },
};
function Ym(e, t, n) {
  return (
    (e && e.autoRemove ? e.autoRemove(t, n) : !1) ||
    typeof t > "u" ||
    (typeof t == "string" && !t)
  );
}
const rj = (e, t, n) =>
    n.reduce((r, o) => {
      const i = o.getValue(e);
      return r + (typeof i == "number" ? i : 0);
    }, 0),
  oj = (e, t, n) => {
    let r;
    return (
      n.forEach((o) => {
        const i = o.getValue(e);
        i != null && (r > i || (r === void 0 && i >= i)) && (r = i);
      }),
      r
    );
  },
  ij = (e, t, n) => {
    let r;
    return (
      n.forEach((o) => {
        const i = o.getValue(e);
        i != null && (r < i || (r === void 0 && i >= i)) && (r = i);
      }),
      r
    );
  },
  sj = (e, t, n) => {
    let r, o;
    return (
      n.forEach((i) => {
        const s = i.getValue(e);
        s != null &&
          (r === void 0
            ? s >= s && (r = o = s)
            : (r > s && (r = s), o < s && (o = s)));
      }),
      [r, o]
    );
  },
  aj = (e, t) => {
    let n = 0,
      r = 0;
    if (
      (t.forEach((o) => {
        let i = o.getValue(e);
        i != null && (i = +i) >= i && (++n, (r += i));
      }),
      n)
    )
      return r / n;
  },
  lj = (e, t) => {
    if (!t.length) return;
    const n = t.map((i) => i.getValue(e));
    if (!YB(n)) return;
    if (n.length === 1) return n[0];
    const r = Math.floor(n.length / 2),
      o = n.sort((i, s) => i - s);
    return n.length % 2 !== 0 ? o[r] : (o[r - 1] + o[r]) / 2;
  },
  cj = (e, t) => Array.from(new Set(t.map((n) => n.getValue(e))).values()),
  uj = (e, t) => new Set(t.map((n) => n.getValue(e))).size,
  dj = (e, t) => t.length,
  tu = {
    sum: rj,
    min: oj,
    max: ij,
    extent: sj,
    mean: aj,
    median: lj,
    unique: cj,
    uniqueCount: uj,
    count: dj,
  },
  fj = {
    getDefaultColumnDef: () => ({
      aggregatedCell: (e) => {
        var t, n;
        return (t =
          (n = e.getValue()) == null || n.toString == null
            ? void 0
            : n.toString()) != null
          ? t
          : null;
      },
      aggregationFn: "auto",
    }),
    getInitialState: (e) => ({ grouping: [], ...e }),
    getDefaultOptions: (e) => ({
      onGroupingChange: qt("grouping", e),
      groupedColumnMode: "reorder",
    }),
    createColumn: (e, t) => {
      ((e.toggleGrouping = () => {
        t.setGrouping((n) =>
          n != null && n.includes(e.id)
            ? n.filter((r) => r !== e.id)
            : [...(n ?? []), e.id],
        );
      }),
        (e.getCanGroup = () => {
          var n, r;
          return (
            ((n = e.columnDef.enableGrouping) != null ? n : !0) &&
            ((r = t.options.enableGrouping) != null ? r : !0) &&
            (!!e.accessorFn || !!e.columnDef.getGroupingValue)
          );
        }),
        (e.getIsGrouped = () => {
          var n;
          return (n = t.getState().grouping) == null
            ? void 0
            : n.includes(e.id);
        }),
        (e.getGroupedIndex = () => {
          var n;
          return (n = t.getState().grouping) == null ? void 0 : n.indexOf(e.id);
        }),
        (e.getToggleGroupingHandler = () => {
          const n = e.getCanGroup();
          return () => {
            n && e.toggleGrouping();
          };
        }),
        (e.getAutoAggregationFn = () => {
          const n = t.getCoreRowModel().flatRows[0],
            r = n == null ? void 0 : n.getValue(e.id);
          if (typeof r == "number") return tu.sum;
          if (Object.prototype.toString.call(r) === "[object Date]")
            return tu.extent;
        }),
        (e.getAggregationFn = () => {
          var n, r;
          if (!e) throw new Error();
          return wc(e.columnDef.aggregationFn)
            ? e.columnDef.aggregationFn
            : e.columnDef.aggregationFn === "auto"
              ? e.getAutoAggregationFn()
              : (n =
                    (r = t.options.aggregationFns) == null
                      ? void 0
                      : r[e.columnDef.aggregationFn]) != null
                ? n
                : tu[e.columnDef.aggregationFn];
        }));
    },
    createTable: (e) => {
      ((e.setGrouping = (t) =>
        e.options.onGroupingChange == null
          ? void 0
          : e.options.onGroupingChange(t)),
        (e.resetGrouping = (t) => {
          var n, r;
          e.setGrouping(
            t
              ? []
              : (n = (r = e.initialState) == null ? void 0 : r.grouping) != null
                ? n
                : [],
          );
        }),
        (e.getPreGroupedRowModel = () => e.getFilteredRowModel()),
        (e.getGroupedRowModel = () => (
          !e._getGroupedRowModel &&
            e.options.getGroupedRowModel &&
            (e._getGroupedRowModel = e.options.getGroupedRowModel(e)),
          e.options.manualGrouping || !e._getGroupedRowModel
            ? e.getPreGroupedRowModel()
            : e._getGroupedRowModel()
        )));
    },
    createRow: (e, t) => {
      ((e.getIsGrouped = () => !!e.groupingColumnId),
        (e.getGroupingValue = (n) => {
          if (e._groupingValuesCache.hasOwnProperty(n))
            return e._groupingValuesCache[n];
          const r = t.getColumn(n);
          return r != null && r.columnDef.getGroupingValue
            ? ((e._groupingValuesCache[n] = r.columnDef.getGroupingValue(
                e.original,
              )),
              e._groupingValuesCache[n])
            : e.getValue(n);
        }),
        (e._groupingValuesCache = {}));
    },
    createCell: (e, t, n, r) => {
      ((e.getIsGrouped = () => t.getIsGrouped() && t.id === n.groupingColumnId),
        (e.getIsPlaceholder = () => !e.getIsGrouped() && t.getIsGrouped()),
        (e.getIsAggregated = () => {
          var o;
          return (
            !e.getIsGrouped() &&
            !e.getIsPlaceholder() &&
            !!((o = n.subRows) != null && o.length)
          );
        }));
    },
  };
function gj(e, t, n) {
  if (!(t != null && t.length) || !n) return e;
  const r = e.filter((i) => !t.includes(i.id));
  return n === "remove"
    ? r
    : [...t.map((i) => e.find((s) => s.id === i)).filter(Boolean), ...r];
}
const hj = {
    getInitialState: (e) => ({ columnOrder: [], ...e }),
    getDefaultOptions: (e) => ({ onColumnOrderChange: qt("columnOrder", e) }),
    createColumn: (e, t) => {
      ((e.getIndex = re(
        (n) => [Yi(t, n)],
        (n) => n.findIndex((r) => r.id === e.id),
        oe(t.options, "debugColumns"),
      )),
        (e.getIsFirstColumn = (n) => {
          var r;
          return ((r = Yi(t, n)[0]) == null ? void 0 : r.id) === e.id;
        }),
        (e.getIsLastColumn = (n) => {
          var r;
          const o = Yi(t, n);
          return ((r = o[o.length - 1]) == null ? void 0 : r.id) === e.id;
        }));
    },
    createTable: (e) => {
      ((e.setColumnOrder = (t) =>
        e.options.onColumnOrderChange == null
          ? void 0
          : e.options.onColumnOrderChange(t)),
        (e.resetColumnOrder = (t) => {
          var n;
          e.setColumnOrder(
            t ? [] : (n = e.initialState.columnOrder) != null ? n : [],
          );
        }),
        (e._getOrderColumnsFn = re(
          () => [
            e.getState().columnOrder,
            e.getState().grouping,
            e.options.groupedColumnMode,
          ],
          (t, n, r) => (o) => {
            let i = [];
            if (!(t != null && t.length)) i = o;
            else {
              const s = [...t],
                a = [...o];
              for (; a.length && s.length; ) {
                const l = s.shift(),
                  c = a.findIndex((u) => u.id === l);
                c > -1 && i.push(a.splice(c, 1)[0]);
              }
              i = [...i, ...a];
            }
            return gj(i, n, r);
          },
          oe(e.options, "debugTable"),
        )));
    },
  },
  nu = () => ({ left: [], right: [] }),
  pj = {
    getInitialState: (e) => ({ columnPinning: nu(), ...e }),
    getDefaultOptions: (e) => ({
      onColumnPinningChange: qt("columnPinning", e),
    }),
    createColumn: (e, t) => {
      ((e.pin = (n) => {
        const r = e
          .getLeafColumns()
          .map((o) => o.id)
          .filter(Boolean);
        t.setColumnPinning((o) => {
          var i, s;
          if (n === "right") {
            var a, l;
            return {
              left: ((a = o == null ? void 0 : o.left) != null ? a : []).filter(
                (d) => !(r != null && r.includes(d)),
              ),
              right: [
                ...((l = o == null ? void 0 : o.right) != null ? l : []).filter(
                  (d) => !(r != null && r.includes(d)),
                ),
                ...r,
              ],
            };
          }
          if (n === "left") {
            var c, u;
            return {
              left: [
                ...((c = o == null ? void 0 : o.left) != null ? c : []).filter(
                  (d) => !(r != null && r.includes(d)),
                ),
                ...r,
              ],
              right: ((u = o == null ? void 0 : o.right) != null
                ? u
                : []
              ).filter((d) => !(r != null && r.includes(d))),
            };
          }
          return {
            left: ((i = o == null ? void 0 : o.left) != null ? i : []).filter(
              (d) => !(r != null && r.includes(d)),
            ),
            right: ((s = o == null ? void 0 : o.right) != null ? s : []).filter(
              (d) => !(r != null && r.includes(d)),
            ),
          };
        });
      }),
        (e.getCanPin = () =>
          e.getLeafColumns().some((r) => {
            var o, i, s;
            return (
              ((o = r.columnDef.enablePinning) != null ? o : !0) &&
              ((i =
                (s = t.options.enableColumnPinning) != null
                  ? s
                  : t.options.enablePinning) != null
                ? i
                : !0)
            );
          })),
        (e.getIsPinned = () => {
          const n = e.getLeafColumns().map((a) => a.id),
            { left: r, right: o } = t.getState().columnPinning,
            i = n.some((a) => (r == null ? void 0 : r.includes(a))),
            s = n.some((a) => (o == null ? void 0 : o.includes(a)));
          return i ? "left" : s ? "right" : !1;
        }),
        (e.getPinnedIndex = () => {
          var n, r;
          const o = e.getIsPinned();
          return o
            ? (n =
                (r = t.getState().columnPinning) == null || (r = r[o]) == null
                  ? void 0
                  : r.indexOf(e.id)) != null
              ? n
              : -1
            : 0;
        }));
    },
    createRow: (e, t) => {
      ((e.getCenterVisibleCells = re(
        () => [
          e._getAllVisibleCells(),
          t.getState().columnPinning.left,
          t.getState().columnPinning.right,
        ],
        (n, r, o) => {
          const i = [...(r ?? []), ...(o ?? [])];
          return n.filter((s) => !i.includes(s.column.id));
        },
        oe(t.options, "debugRows"),
      )),
        (e.getLeftVisibleCells = re(
          () => [e._getAllVisibleCells(), t.getState().columnPinning.left],
          (n, r) =>
            (r ?? [])
              .map((i) => n.find((s) => s.column.id === i))
              .filter(Boolean)
              .map((i) => ({ ...i, position: "left" })),
          oe(t.options, "debugRows"),
        )),
        (e.getRightVisibleCells = re(
          () => [e._getAllVisibleCells(), t.getState().columnPinning.right],
          (n, r) =>
            (r ?? [])
              .map((i) => n.find((s) => s.column.id === i))
              .filter(Boolean)
              .map((i) => ({ ...i, position: "right" })),
          oe(t.options, "debugRows"),
        )));
    },
    createTable: (e) => {
      ((e.setColumnPinning = (t) =>
        e.options.onColumnPinningChange == null
          ? void 0
          : e.options.onColumnPinningChange(t)),
        (e.resetColumnPinning = (t) => {
          var n, r;
          return e.setColumnPinning(
            t
              ? nu()
              : (n = (r = e.initialState) == null ? void 0 : r.columnPinning) !=
                  null
                ? n
                : nu(),
          );
        }),
        (e.getIsSomeColumnsPinned = (t) => {
          var n;
          const r = e.getState().columnPinning;
          if (!t) {
            var o, i;
            return !!(
              ((o = r.left) != null && o.length) ||
              ((i = r.right) != null && i.length)
            );
          }
          return !!((n = r[t]) != null && n.length);
        }),
        (e.getLeftLeafColumns = re(
          () => [e.getAllLeafColumns(), e.getState().columnPinning.left],
          (t, n) =>
            (n ?? []).map((r) => t.find((o) => o.id === r)).filter(Boolean),
          oe(e.options, "debugColumns"),
        )),
        (e.getRightLeafColumns = re(
          () => [e.getAllLeafColumns(), e.getState().columnPinning.right],
          (t, n) =>
            (n ?? []).map((r) => t.find((o) => o.id === r)).filter(Boolean),
          oe(e.options, "debugColumns"),
        )),
        (e.getCenterLeafColumns = re(
          () => [
            e.getAllLeafColumns(),
            e.getState().columnPinning.left,
            e.getState().columnPinning.right,
          ],
          (t, n, r) => {
            const o = [...(n ?? []), ...(r ?? [])];
            return t.filter((i) => !o.includes(i.id));
          },
          oe(e.options, "debugColumns"),
        )));
    },
  };
function mj(e) {
  return e || (typeof document < "u" ? document : null);
}
const oa = { size: 150, minSize: 20, maxSize: Number.MAX_SAFE_INTEGER },
  ru = () => ({
    startOffset: null,
    startSize: null,
    deltaOffset: null,
    deltaPercentage: null,
    isResizingColumn: !1,
    columnSizingStart: [],
  }),
  vj = {
    getDefaultColumnDef: () => oa,
    getInitialState: (e) => ({
      columnSizing: {},
      columnSizingInfo: ru(),
      ...e,
    }),
    getDefaultOptions: (e) => ({
      columnResizeMode: "onEnd",
      columnResizeDirection: "ltr",
      onColumnSizingChange: qt("columnSizing", e),
      onColumnSizingInfoChange: qt("columnSizingInfo", e),
    }),
    createColumn: (e, t) => {
      ((e.getSize = () => {
        var n, r, o;
        const i = t.getState().columnSizing[e.id];
        return Math.min(
          Math.max(
            (n = e.columnDef.minSize) != null ? n : oa.minSize,
            (r = i ?? e.columnDef.size) != null ? r : oa.size,
          ),
          (o = e.columnDef.maxSize) != null ? o : oa.maxSize,
        );
      }),
        (e.getStart = re(
          (n) => [n, Yi(t, n), t.getState().columnSizing],
          (n, r) =>
            r.slice(0, e.getIndex(n)).reduce((o, i) => o + i.getSize(), 0),
          oe(t.options, "debugColumns"),
        )),
        (e.getAfter = re(
          (n) => [n, Yi(t, n), t.getState().columnSizing],
          (n, r) =>
            r.slice(e.getIndex(n) + 1).reduce((o, i) => o + i.getSize(), 0),
          oe(t.options, "debugColumns"),
        )),
        (e.resetSize = () => {
          t.setColumnSizing((n) => {
            let { [e.id]: r, ...o } = n;
            return o;
          });
        }),
        (e.getCanResize = () => {
          var n, r;
          return (
            ((n = e.columnDef.enableResizing) != null ? n : !0) &&
            ((r = t.options.enableColumnResizing) != null ? r : !0)
          );
        }),
        (e.getIsResizing = () =>
          t.getState().columnSizingInfo.isResizingColumn === e.id));
    },
    createHeader: (e, t) => {
      ((e.getSize = () => {
        let n = 0;
        const r = (o) => {
          if (o.subHeaders.length) o.subHeaders.forEach(r);
          else {
            var i;
            n += (i = o.column.getSize()) != null ? i : 0;
          }
        };
        return (r(e), n);
      }),
        (e.getStart = () => {
          if (e.index > 0) {
            const n = e.headerGroup.headers[e.index - 1];
            return n.getStart() + n.getSize();
          }
          return 0;
        }),
        (e.getResizeHandler = (n) => {
          const r = t.getColumn(e.column.id),
            o = r == null ? void 0 : r.getCanResize();
          return (i) => {
            if (
              !r ||
              !o ||
              (i.persist == null || i.persist(),
              ou(i) && i.touches && i.touches.length > 1)
            )
              return;
            const s = e.getSize(),
              a = e
                ? e
                    .getLeafHeaders()
                    .map((b) => [b.column.id, b.column.getSize()])
                : [[r.id, r.getSize()]],
              l = ou(i) ? Math.round(i.touches[0].clientX) : i.clientX,
              c = {},
              u = (b, S) => {
                typeof S == "number" &&
                  (t.setColumnSizingInfo((w) => {
                    var E, R;
                    const N =
                        t.options.columnResizeDirection === "rtl" ? -1 : 1,
                      I =
                        (S -
                          ((E = w == null ? void 0 : w.startOffset) != null
                            ? E
                            : 0)) *
                        N,
                      T = Math.max(
                        I /
                          ((R = w == null ? void 0 : w.startSize) != null
                            ? R
                            : 0),
                        -0.999999,
                      );
                    return (
                      w.columnSizingStart.forEach((k) => {
                        let [m, A] = k;
                        c[m] = Math.round(Math.max(A + A * T, 0) * 100) / 100;
                      }),
                      { ...w, deltaOffset: I, deltaPercentage: T }
                    );
                  }),
                  (t.options.columnResizeMode === "onChange" || b === "end") &&
                    t.setColumnSizing((w) => ({ ...w, ...c })));
              },
              d = (b) => u("move", b),
              f = (b) => {
                (u("end", b),
                  t.setColumnSizingInfo((S) => ({
                    ...S,
                    isResizingColumn: !1,
                    startOffset: null,
                    startSize: null,
                    deltaOffset: null,
                    deltaPercentage: null,
                    columnSizingStart: [],
                  })));
              },
              g = mj(n),
              h = {
                moveHandler: (b) => d(b.clientX),
                upHandler: (b) => {
                  (g == null ||
                    g.removeEventListener("mousemove", h.moveHandler),
                    g == null || g.removeEventListener("mouseup", h.upHandler),
                    f(b.clientX));
                },
              },
              p = {
                moveHandler: (b) => (
                  b.cancelable && (b.preventDefault(), b.stopPropagation()),
                  d(b.touches[0].clientX),
                  !1
                ),
                upHandler: (b) => {
                  var S;
                  (g == null ||
                    g.removeEventListener("touchmove", p.moveHandler),
                    g == null || g.removeEventListener("touchend", p.upHandler),
                    b.cancelable && (b.preventDefault(), b.stopPropagation()),
                    f((S = b.touches[0]) == null ? void 0 : S.clientX));
                },
              },
              v = yj() ? { passive: !1 } : !1;
            (ou(i)
              ? (g == null || g.addEventListener("touchmove", p.moveHandler, v),
                g == null || g.addEventListener("touchend", p.upHandler, v))
              : (g == null || g.addEventListener("mousemove", h.moveHandler, v),
                g == null || g.addEventListener("mouseup", h.upHandler, v)),
              t.setColumnSizingInfo((b) => ({
                ...b,
                startOffset: l,
                startSize: s,
                deltaOffset: 0,
                deltaPercentage: 0,
                columnSizingStart: a,
                isResizingColumn: r.id,
              })));
          };
        }));
    },
    createTable: (e) => {
      ((e.setColumnSizing = (t) =>
        e.options.onColumnSizingChange == null
          ? void 0
          : e.options.onColumnSizingChange(t)),
        (e.setColumnSizingInfo = (t) =>
          e.options.onColumnSizingInfoChange == null
            ? void 0
            : e.options.onColumnSizingInfoChange(t)),
        (e.resetColumnSizing = (t) => {
          var n;
          e.setColumnSizing(
            t ? {} : (n = e.initialState.columnSizing) != null ? n : {},
          );
        }),
        (e.resetHeaderSizeInfo = (t) => {
          var n;
          e.setColumnSizingInfo(
            t ? ru() : (n = e.initialState.columnSizingInfo) != null ? n : ru(),
          );
        }),
        (e.getTotalSize = () => {
          var t, n;
          return (t =
            (n = e.getHeaderGroups()[0]) == null
              ? void 0
              : n.headers.reduce((r, o) => r + o.getSize(), 0)) != null
            ? t
            : 0;
        }),
        (e.getLeftTotalSize = () => {
          var t, n;
          return (t =
            (n = e.getLeftHeaderGroups()[0]) == null
              ? void 0
              : n.headers.reduce((r, o) => r + o.getSize(), 0)) != null
            ? t
            : 0;
        }),
        (e.getCenterTotalSize = () => {
          var t, n;
          return (t =
            (n = e.getCenterHeaderGroups()[0]) == null
              ? void 0
              : n.headers.reduce((r, o) => r + o.getSize(), 0)) != null
            ? t
            : 0;
        }),
        (e.getRightTotalSize = () => {
          var t, n;
          return (t =
            (n = e.getRightHeaderGroups()[0]) == null
              ? void 0
              : n.headers.reduce((r, o) => r + o.getSize(), 0)) != null
            ? t
            : 0;
        }));
    },
  };
let ia = null;
function yj() {
  if (typeof ia == "boolean") return ia;
  let e = !1;
  try {
    const t = {
        get passive() {
          return ((e = !0), !1);
        },
      },
      n = () => {};
    (window.addEventListener("test", n, t),
      window.removeEventListener("test", n));
  } catch {
    e = !1;
  }
  return ((ia = e), ia);
}
function ou(e) {
  return e.type === "touchstart";
}
const bj = {
  getInitialState: (e) => ({ columnVisibility: {}, ...e }),
  getDefaultOptions: (e) => ({
    onColumnVisibilityChange: qt("columnVisibility", e),
  }),
  createColumn: (e, t) => {
    ((e.toggleVisibility = (n) => {
      e.getCanHide() &&
        t.setColumnVisibility((r) => ({
          ...r,
          [e.id]: n ?? !e.getIsVisible(),
        }));
    }),
      (e.getIsVisible = () => {
        var n, r;
        const o = e.columns;
        return (n = o.length
          ? o.some((i) => i.getIsVisible())
          : (r = t.getState().columnVisibility) == null
            ? void 0
            : r[e.id]) != null
          ? n
          : !0;
      }),
      (e.getCanHide = () => {
        var n, r;
        return (
          ((n = e.columnDef.enableHiding) != null ? n : !0) &&
          ((r = t.options.enableHiding) != null ? r : !0)
        );
      }),
      (e.getToggleVisibilityHandler = () => (n) => {
        e.toggleVisibility == null || e.toggleVisibility(n.target.checked);
      }));
  },
  createRow: (e, t) => {
    ((e._getAllVisibleCells = re(
      () => [e.getAllCells(), t.getState().columnVisibility],
      (n) => n.filter((r) => r.column.getIsVisible()),
      oe(t.options, "debugRows"),
    )),
      (e.getVisibleCells = re(
        () => [
          e.getLeftVisibleCells(),
          e.getCenterVisibleCells(),
          e.getRightVisibleCells(),
        ],
        (n, r, o) => [...n, ...r, ...o],
        oe(t.options, "debugRows"),
      )));
  },
  createTable: (e) => {
    const t = (n, r) =>
      re(
        () => [
          r(),
          r()
            .filter((o) => o.getIsVisible())
            .map((o) => o.id)
            .join("_"),
        ],
        (o) =>
          o.filter((i) => (i.getIsVisible == null ? void 0 : i.getIsVisible())),
        oe(e.options, "debugColumns"),
      );
    ((e.getVisibleFlatColumns = t("getVisibleFlatColumns", () =>
      e.getAllFlatColumns(),
    )),
      (e.getVisibleLeafColumns = t("getVisibleLeafColumns", () =>
        e.getAllLeafColumns(),
      )),
      (e.getLeftVisibleLeafColumns = t("getLeftVisibleLeafColumns", () =>
        e.getLeftLeafColumns(),
      )),
      (e.getRightVisibleLeafColumns = t("getRightVisibleLeafColumns", () =>
        e.getRightLeafColumns(),
      )),
      (e.getCenterVisibleLeafColumns = t("getCenterVisibleLeafColumns", () =>
        e.getCenterLeafColumns(),
      )),
      (e.setColumnVisibility = (n) =>
        e.options.onColumnVisibilityChange == null
          ? void 0
          : e.options.onColumnVisibilityChange(n)),
      (e.resetColumnVisibility = (n) => {
        var r;
        e.setColumnVisibility(
          n ? {} : (r = e.initialState.columnVisibility) != null ? r : {},
        );
      }),
      (e.toggleAllColumnsVisible = (n) => {
        var r;
        ((n = (r = n) != null ? r : !e.getIsAllColumnsVisible()),
          e.setColumnVisibility(
            e
              .getAllLeafColumns()
              .reduce(
                (o, i) => ({
                  ...o,
                  [i.id]: n || !(i.getCanHide != null && i.getCanHide()),
                }),
                {},
              ),
          ));
      }),
      (e.getIsAllColumnsVisible = () =>
        !e
          .getAllLeafColumns()
          .some((n) => !(n.getIsVisible != null && n.getIsVisible()))),
      (e.getIsSomeColumnsVisible = () =>
        e
          .getAllLeafColumns()
          .some((n) => (n.getIsVisible == null ? void 0 : n.getIsVisible()))),
      (e.getToggleAllColumnsVisibilityHandler = () => (n) => {
        var r;
        e.toggleAllColumnsVisible((r = n.target) == null ? void 0 : r.checked);
      }));
  },
};
function Yi(e, t) {
  return t
    ? t === "center"
      ? e.getCenterVisibleLeafColumns()
      : t === "left"
        ? e.getLeftVisibleLeafColumns()
        : e.getRightVisibleLeafColumns()
    : e.getVisibleLeafColumns();
}
const xj = {
    createTable: (e) => {
      ((e._getGlobalFacetedRowModel =
        e.options.getFacetedRowModel &&
        e.options.getFacetedRowModel(e, "__global__")),
        (e.getGlobalFacetedRowModel = () =>
          e.options.manualFiltering || !e._getGlobalFacetedRowModel
            ? e.getPreFilteredRowModel()
            : e._getGlobalFacetedRowModel()),
        (e._getGlobalFacetedUniqueValues =
          e.options.getFacetedUniqueValues &&
          e.options.getFacetedUniqueValues(e, "__global__")),
        (e.getGlobalFacetedUniqueValues = () =>
          e._getGlobalFacetedUniqueValues
            ? e._getGlobalFacetedUniqueValues()
            : new Map()),
        (e._getGlobalFacetedMinMaxValues =
          e.options.getFacetedMinMaxValues &&
          e.options.getFacetedMinMaxValues(e, "__global__")),
        (e.getGlobalFacetedMinMaxValues = () => {
          if (e._getGlobalFacetedMinMaxValues)
            return e._getGlobalFacetedMinMaxValues();
        }));
    },
  },
  Sj = {
    getInitialState: (e) => ({ globalFilter: void 0, ...e }),
    getDefaultOptions: (e) => ({
      onGlobalFilterChange: qt("globalFilter", e),
      globalFilterFn: "auto",
      getColumnCanGlobalFilter: (t) => {
        var n;
        const r =
          (n = e.getCoreRowModel().flatRows[0]) == null ||
          (n = n._getAllCellsByColumnId()[t.id]) == null
            ? void 0
            : n.getValue();
        return typeof r == "string" || typeof r == "number";
      },
    }),
    createColumn: (e, t) => {
      e.getCanGlobalFilter = () => {
        var n, r, o, i;
        return (
          ((n = e.columnDef.enableGlobalFilter) != null ? n : !0) &&
          ((r = t.options.enableGlobalFilter) != null ? r : !0) &&
          ((o = t.options.enableFilters) != null ? o : !0) &&
          ((i =
            t.options.getColumnCanGlobalFilter == null
              ? void 0
              : t.options.getColumnCanGlobalFilter(e)) != null
            ? i
            : !0) &&
          !!e.accessorFn
        );
      };
    },
    createTable: (e) => {
      ((e.getGlobalAutoFilterFn = () => er.includesString),
        (e.getGlobalFilterFn = () => {
          var t, n;
          const { globalFilterFn: r } = e.options;
          return wc(r)
            ? r
            : r === "auto"
              ? e.getGlobalAutoFilterFn()
              : (t = (n = e.options.filterFns) == null ? void 0 : n[r]) != null
                ? t
                : er[r];
        }),
        (e.setGlobalFilter = (t) => {
          e.options.onGlobalFilterChange == null ||
            e.options.onGlobalFilterChange(t);
        }),
        (e.resetGlobalFilter = (t) => {
          e.setGlobalFilter(t ? void 0 : e.initialState.globalFilter);
        }));
    },
  },
  wj = {
    getInitialState: (e) => ({ expanded: {}, ...e }),
    getDefaultOptions: (e) => ({
      onExpandedChange: qt("expanded", e),
      paginateExpandedRows: !0,
    }),
    createTable: (e) => {
      let t = !1,
        n = !1;
      ((e._autoResetExpanded = () => {
        var r, o;
        if (!t) {
          e._queue(() => {
            t = !0;
          });
          return;
        }
        if (
          (r =
            (o = e.options.autoResetAll) != null
              ? o
              : e.options.autoResetExpanded) != null
            ? r
            : !e.options.manualExpanding
        ) {
          if (n) return;
          ((n = !0),
            e._queue(() => {
              (e.resetExpanded(), (n = !1));
            }));
        }
      }),
        (e.setExpanded = (r) =>
          e.options.onExpandedChange == null
            ? void 0
            : e.options.onExpandedChange(r)),
        (e.toggleAllRowsExpanded = (r) => {
          (r ?? !e.getIsAllRowsExpanded())
            ? e.setExpanded(!0)
            : e.setExpanded({});
        }),
        (e.resetExpanded = (r) => {
          var o, i;
          e.setExpanded(
            r
              ? {}
              : (o = (i = e.initialState) == null ? void 0 : i.expanded) != null
                ? o
                : {},
          );
        }),
        (e.getCanSomeRowsExpand = () =>
          e.getPrePaginationRowModel().flatRows.some((r) => r.getCanExpand())),
        (e.getToggleAllRowsExpandedHandler = () => (r) => {
          (r.persist == null || r.persist(), e.toggleAllRowsExpanded());
        }),
        (e.getIsSomeRowsExpanded = () => {
          const r = e.getState().expanded;
          return r === !0 || Object.values(r).some(Boolean);
        }),
        (e.getIsAllRowsExpanded = () => {
          const r = e.getState().expanded;
          return typeof r == "boolean"
            ? r === !0
            : !(
                !Object.keys(r).length ||
                e.getRowModel().flatRows.some((o) => !o.getIsExpanded())
              );
        }),
        (e.getExpandedDepth = () => {
          let r = 0;
          return (
            (e.getState().expanded === !0
              ? Object.keys(e.getRowModel().rowsById)
              : Object.keys(e.getState().expanded)
            ).forEach((i) => {
              const s = i.split(".");
              r = Math.max(r, s.length);
            }),
            r
          );
        }),
        (e.getPreExpandedRowModel = () => e.getSortedRowModel()),
        (e.getExpandedRowModel = () => (
          !e._getExpandedRowModel &&
            e.options.getExpandedRowModel &&
            (e._getExpandedRowModel = e.options.getExpandedRowModel(e)),
          e.options.manualExpanding || !e._getExpandedRowModel
            ? e.getPreExpandedRowModel()
            : e._getExpandedRowModel()
        )));
    },
    createRow: (e, t) => {
      ((e.toggleExpanded = (n) => {
        t.setExpanded((r) => {
          var o;
          const i = r === !0 ? !0 : !!(r != null && r[e.id]);
          let s = {};
          if (
            (r === !0
              ? Object.keys(t.getRowModel().rowsById).forEach((a) => {
                  s[a] = !0;
                })
              : (s = r),
            (n = (o = n) != null ? o : !i),
            !i && n)
          )
            return { ...s, [e.id]: !0 };
          if (i && !n) {
            const { [e.id]: a, ...l } = s;
            return l;
          }
          return r;
        });
      }),
        (e.getIsExpanded = () => {
          var n;
          const r = t.getState().expanded;
          return !!((n =
            t.options.getIsRowExpanded == null
              ? void 0
              : t.options.getIsRowExpanded(e)) != null
            ? n
            : r === !0 || (r != null && r[e.id]));
        }),
        (e.getCanExpand = () => {
          var n, r, o;
          return (n =
            t.options.getRowCanExpand == null
              ? void 0
              : t.options.getRowCanExpand(e)) != null
            ? n
            : ((r = t.options.enableExpanding) != null ? r : !0) &&
                !!((o = e.subRows) != null && o.length);
        }),
        (e.getIsAllParentsExpanded = () => {
          let n = !0,
            r = e;
          for (; n && r.parentId; )
            ((r = t.getRow(r.parentId, !0)), (n = r.getIsExpanded()));
          return n;
        }),
        (e.getToggleExpandedHandler = () => {
          const n = e.getCanExpand();
          return () => {
            n && e.toggleExpanded();
          };
        }));
    },
  },
  dd = 0,
  fd = 10,
  iu = () => ({ pageIndex: dd, pageSize: fd }),
  Cj = {
    getInitialState: (e) => ({
      ...e,
      pagination: { ...iu(), ...(e == null ? void 0 : e.pagination) },
    }),
    getDefaultOptions: (e) => ({ onPaginationChange: qt("pagination", e) }),
    createTable: (e) => {
      let t = !1,
        n = !1;
      ((e._autoResetPageIndex = () => {
        var r, o;
        if (!t) {
          e._queue(() => {
            t = !0;
          });
          return;
        }
        if (
          (r =
            (o = e.options.autoResetAll) != null
              ? o
              : e.options.autoResetPageIndex) != null
            ? r
            : !e.options.manualPagination
        ) {
          if (n) return;
          ((n = !0),
            e._queue(() => {
              (e.resetPageIndex(), (n = !1));
            }));
        }
      }),
        (e.setPagination = (r) => {
          const o = (i) => Ir(r, i);
          return e.options.onPaginationChange == null
            ? void 0
            : e.options.onPaginationChange(o);
        }),
        (e.resetPagination = (r) => {
          var o;
          e.setPagination(
            r ? iu() : (o = e.initialState.pagination) != null ? o : iu(),
          );
        }),
        (e.setPageIndex = (r) => {
          e.setPagination((o) => {
            let i = Ir(r, o.pageIndex);
            const s =
              typeof e.options.pageCount > "u" || e.options.pageCount === -1
                ? Number.MAX_SAFE_INTEGER
                : e.options.pageCount - 1;
            return ((i = Math.max(0, Math.min(i, s))), { ...o, pageIndex: i });
          });
        }),
        (e.resetPageIndex = (r) => {
          var o, i;
          e.setPageIndex(
            r
              ? dd
              : (o =
                    (i = e.initialState) == null || (i = i.pagination) == null
                      ? void 0
                      : i.pageIndex) != null
                ? o
                : dd,
          );
        }),
        (e.resetPageSize = (r) => {
          var o, i;
          e.setPageSize(
            r
              ? fd
              : (o =
                    (i = e.initialState) == null || (i = i.pagination) == null
                      ? void 0
                      : i.pageSize) != null
                ? o
                : fd,
          );
        }),
        (e.setPageSize = (r) => {
          e.setPagination((o) => {
            const i = Math.max(1, Ir(r, o.pageSize)),
              s = o.pageSize * o.pageIndex,
              a = Math.floor(s / i);
            return { ...o, pageIndex: a, pageSize: i };
          });
        }),
        (e.setPageCount = (r) =>
          e.setPagination((o) => {
            var i;
            let s = Ir(r, (i = e.options.pageCount) != null ? i : -1);
            return (
              typeof s == "number" && (s = Math.max(-1, s)),
              { ...o, pageCount: s }
            );
          })),
        (e.getPageOptions = re(
          () => [e.getPageCount()],
          (r) => {
            let o = [];
            return (
              r && r > 0 && (o = [...new Array(r)].fill(null).map((i, s) => s)),
              o
            );
          },
          oe(e.options, "debugTable"),
        )),
        (e.getCanPreviousPage = () => e.getState().pagination.pageIndex > 0),
        (e.getCanNextPage = () => {
          const { pageIndex: r } = e.getState().pagination,
            o = e.getPageCount();
          return o === -1 ? !0 : o === 0 ? !1 : r < o - 1;
        }),
        (e.previousPage = () => e.setPageIndex((r) => r - 1)),
        (e.nextPage = () => e.setPageIndex((r) => r + 1)),
        (e.firstPage = () => e.setPageIndex(0)),
        (e.lastPage = () => e.setPageIndex(e.getPageCount() - 1)),
        (e.getPrePaginationRowModel = () => e.getExpandedRowModel()),
        (e.getPaginationRowModel = () => (
          !e._getPaginationRowModel &&
            e.options.getPaginationRowModel &&
            (e._getPaginationRowModel = e.options.getPaginationRowModel(e)),
          e.options.manualPagination || !e._getPaginationRowModel
            ? e.getPrePaginationRowModel()
            : e._getPaginationRowModel()
        )),
        (e.getPageCount = () => {
          var r;
          return (r = e.options.pageCount) != null
            ? r
            : Math.ceil(e.getRowCount() / e.getState().pagination.pageSize);
        }),
        (e.getRowCount = () => {
          var r;
          return (r = e.options.rowCount) != null
            ? r
            : e.getPrePaginationRowModel().rows.length;
        }));
    },
  },
  su = () => ({ top: [], bottom: [] }),
  Ej = {
    getInitialState: (e) => ({ rowPinning: su(), ...e }),
    getDefaultOptions: (e) => ({ onRowPinningChange: qt("rowPinning", e) }),
    createRow: (e, t) => {
      ((e.pin = (n, r, o) => {
        const i = r
            ? e.getLeafRows().map((l) => {
                let { id: c } = l;
                return c;
              })
            : [],
          s = o
            ? e.getParentRows().map((l) => {
                let { id: c } = l;
                return c;
              })
            : [],
          a = new Set([...s, e.id, ...i]);
        t.setRowPinning((l) => {
          var c, u;
          if (n === "bottom") {
            var d, f;
            return {
              top: ((d = l == null ? void 0 : l.top) != null ? d : []).filter(
                (p) => !(a != null && a.has(p)),
              ),
              bottom: [
                ...((f = l == null ? void 0 : l.bottom) != null
                  ? f
                  : []
                ).filter((p) => !(a != null && a.has(p))),
                ...Array.from(a),
              ],
            };
          }
          if (n === "top") {
            var g, h;
            return {
              top: [
                ...((g = l == null ? void 0 : l.top) != null ? g : []).filter(
                  (p) => !(a != null && a.has(p)),
                ),
                ...Array.from(a),
              ],
              bottom: ((h = l == null ? void 0 : l.bottom) != null
                ? h
                : []
              ).filter((p) => !(a != null && a.has(p))),
            };
          }
          return {
            top: ((c = l == null ? void 0 : l.top) != null ? c : []).filter(
              (p) => !(a != null && a.has(p)),
            ),
            bottom: ((u = l == null ? void 0 : l.bottom) != null
              ? u
              : []
            ).filter((p) => !(a != null && a.has(p))),
          };
        });
      }),
        (e.getCanPin = () => {
          var n;
          const { enableRowPinning: r, enablePinning: o } = t.options;
          return typeof r == "function" ? r(e) : (n = r ?? o) != null ? n : !0;
        }),
        (e.getIsPinned = () => {
          const n = [e.id],
            { top: r, bottom: o } = t.getState().rowPinning,
            i = n.some((a) => (r == null ? void 0 : r.includes(a))),
            s = n.some((a) => (o == null ? void 0 : o.includes(a)));
          return i ? "top" : s ? "bottom" : !1;
        }),
        (e.getPinnedIndex = () => {
          var n, r;
          const o = e.getIsPinned();
          if (!o) return -1;
          const i =
            (n = o === "top" ? t.getTopRows() : t.getBottomRows()) == null
              ? void 0
              : n.map((s) => {
                  let { id: a } = s;
                  return a;
                });
          return (r = i == null ? void 0 : i.indexOf(e.id)) != null ? r : -1;
        }));
    },
    createTable: (e) => {
      ((e.setRowPinning = (t) =>
        e.options.onRowPinningChange == null
          ? void 0
          : e.options.onRowPinningChange(t)),
        (e.resetRowPinning = (t) => {
          var n, r;
          return e.setRowPinning(
            t
              ? su()
              : (n = (r = e.initialState) == null ? void 0 : r.rowPinning) !=
                  null
                ? n
                : su(),
          );
        }),
        (e.getIsSomeRowsPinned = (t) => {
          var n;
          const r = e.getState().rowPinning;
          if (!t) {
            var o, i;
            return !!(
              ((o = r.top) != null && o.length) ||
              ((i = r.bottom) != null && i.length)
            );
          }
          return !!((n = r[t]) != null && n.length);
        }),
        (e._getPinnedRows = (t, n, r) => {
          var o;
          return (
            (o = e.options.keepPinnedRows) == null || o
              ? (n ?? []).map((s) => {
                  const a = e.getRow(s, !0);
                  return a.getIsAllParentsExpanded() ? a : null;
                })
              : (n ?? []).map((s) => t.find((a) => a.id === s))
          )
            .filter(Boolean)
            .map((s) => ({ ...s, position: r }));
        }),
        (e.getTopRows = re(
          () => [e.getRowModel().rows, e.getState().rowPinning.top],
          (t, n) => e._getPinnedRows(t, n, "top"),
          oe(e.options, "debugRows"),
        )),
        (e.getBottomRows = re(
          () => [e.getRowModel().rows, e.getState().rowPinning.bottom],
          (t, n) => e._getPinnedRows(t, n, "bottom"),
          oe(e.options, "debugRows"),
        )),
        (e.getCenterRows = re(
          () => [
            e.getRowModel().rows,
            e.getState().rowPinning.top,
            e.getState().rowPinning.bottom,
          ],
          (t, n, r) => {
            const o = new Set([...(n ?? []), ...(r ?? [])]);
            return t.filter((i) => !o.has(i.id));
          },
          oe(e.options, "debugRows"),
        )));
    },
  },
  Ij = {
    getInitialState: (e) => ({ rowSelection: {}, ...e }),
    getDefaultOptions: (e) => ({
      onRowSelectionChange: qt("rowSelection", e),
      enableRowSelection: !0,
      enableMultiRowSelection: !0,
      enableSubRowSelection: !0,
    }),
    createTable: (e) => {
      ((e.setRowSelection = (t) =>
        e.options.onRowSelectionChange == null
          ? void 0
          : e.options.onRowSelectionChange(t)),
        (e.resetRowSelection = (t) => {
          var n;
          return e.setRowSelection(
            t ? {} : (n = e.initialState.rowSelection) != null ? n : {},
          );
        }),
        (e.toggleAllRowsSelected = (t) => {
          e.setRowSelection((n) => {
            t = typeof t < "u" ? t : !e.getIsAllRowsSelected();
            const r = { ...n },
              o = e.getPreGroupedRowModel().flatRows;
            return (
              t
                ? o.forEach((i) => {
                    i.getCanSelect() && (r[i.id] = !0);
                  })
                : o.forEach((i) => {
                    delete r[i.id];
                  }),
              r
            );
          });
        }),
        (e.toggleAllPageRowsSelected = (t) =>
          e.setRowSelection((n) => {
            const r = typeof t < "u" ? t : !e.getIsAllPageRowsSelected(),
              o = { ...n };
            return (
              e.getRowModel().rows.forEach((i) => {
                gd(o, i.id, r, !0, e);
              }),
              o
            );
          })),
        (e.getPreSelectedRowModel = () => e.getCoreRowModel()),
        (e.getSelectedRowModel = re(
          () => [e.getState().rowSelection, e.getCoreRowModel()],
          (t, n) =>
            Object.keys(t).length
              ? au(e, n)
              : { rows: [], flatRows: [], rowsById: {} },
          oe(e.options, "debugTable"),
        )),
        (e.getFilteredSelectedRowModel = re(
          () => [e.getState().rowSelection, e.getFilteredRowModel()],
          (t, n) =>
            Object.keys(t).length
              ? au(e, n)
              : { rows: [], flatRows: [], rowsById: {} },
          oe(e.options, "debugTable"),
        )),
        (e.getGroupedSelectedRowModel = re(
          () => [e.getState().rowSelection, e.getSortedRowModel()],
          (t, n) =>
            Object.keys(t).length
              ? au(e, n)
              : { rows: [], flatRows: [], rowsById: {} },
          oe(e.options, "debugTable"),
        )),
        (e.getIsAllRowsSelected = () => {
          const t = e.getFilteredRowModel().flatRows,
            { rowSelection: n } = e.getState();
          let r = !!(t.length && Object.keys(n).length);
          return (
            r && t.some((o) => o.getCanSelect() && !n[o.id]) && (r = !1),
            r
          );
        }),
        (e.getIsAllPageRowsSelected = () => {
          const t = e
              .getPaginationRowModel()
              .flatRows.filter((o) => o.getCanSelect()),
            { rowSelection: n } = e.getState();
          let r = !!t.length;
          return (r && t.some((o) => !n[o.id]) && (r = !1), r);
        }),
        (e.getIsSomeRowsSelected = () => {
          var t;
          const n = Object.keys(
            (t = e.getState().rowSelection) != null ? t : {},
          ).length;
          return n > 0 && n < e.getFilteredRowModel().flatRows.length;
        }),
        (e.getIsSomePageRowsSelected = () => {
          const t = e.getPaginationRowModel().flatRows;
          return e.getIsAllPageRowsSelected()
            ? !1
            : t
                .filter((n) => n.getCanSelect())
                .some((n) => n.getIsSelected() || n.getIsSomeSelected());
        }),
        (e.getToggleAllRowsSelectedHandler = () => (t) => {
          e.toggleAllRowsSelected(t.target.checked);
        }),
        (e.getToggleAllPageRowsSelectedHandler = () => (t) => {
          e.toggleAllPageRowsSelected(t.target.checked);
        }));
    },
    createRow: (e, t) => {
      ((e.toggleSelected = (n, r) => {
        const o = e.getIsSelected();
        t.setRowSelection((i) => {
          var s;
          if (((n = typeof n < "u" ? n : !o), e.getCanSelect() && o === n))
            return i;
          const a = { ...i };
          return (
            gd(
              a,
              e.id,
              n,
              (s = r == null ? void 0 : r.selectChildren) != null ? s : !0,
              t,
            ),
            a
          );
        });
      }),
        (e.getIsSelected = () => {
          const { rowSelection: n } = t.getState();
          return Yf(e, n);
        }),
        (e.getIsSomeSelected = () => {
          const { rowSelection: n } = t.getState();
          return hd(e, n) === "some";
        }),
        (e.getIsAllSubRowsSelected = () => {
          const { rowSelection: n } = t.getState();
          return hd(e, n) === "all";
        }),
        (e.getCanSelect = () => {
          var n;
          return typeof t.options.enableRowSelection == "function"
            ? t.options.enableRowSelection(e)
            : (n = t.options.enableRowSelection) != null
              ? n
              : !0;
        }),
        (e.getCanSelectSubRows = () => {
          var n;
          return typeof t.options.enableSubRowSelection == "function"
            ? t.options.enableSubRowSelection(e)
            : (n = t.options.enableSubRowSelection) != null
              ? n
              : !0;
        }),
        (e.getCanMultiSelect = () => {
          var n;
          return typeof t.options.enableMultiRowSelection == "function"
            ? t.options.enableMultiRowSelection(e)
            : (n = t.options.enableMultiRowSelection) != null
              ? n
              : !0;
        }),
        (e.getToggleSelectedHandler = () => {
          const n = e.getCanSelect();
          return (r) => {
            var o;
            n && e.toggleSelected((o = r.target) == null ? void 0 : o.checked);
          };
        }));
    },
  },
  gd = (e, t, n, r, o) => {
    var i;
    const s = o.getRow(t, !0);
    (n
      ? (s.getCanMultiSelect() || Object.keys(e).forEach((a) => delete e[a]),
        s.getCanSelect() && (e[t] = !0))
      : delete e[t],
      r &&
        (i = s.subRows) != null &&
        i.length &&
        s.getCanSelectSubRows() &&
        s.subRows.forEach((a) => gd(e, a.id, n, r, o)));
  };
function au(e, t) {
  const n = e.getState().rowSelection,
    r = [],
    o = {},
    i = function (s, a) {
      return s
        .map((l) => {
          var c;
          const u = Yf(l, n);
          if (
            (u && (r.push(l), (o[l.id] = l)),
            (c = l.subRows) != null &&
              c.length &&
              (l = { ...l, subRows: i(l.subRows) }),
            u)
          )
            return l;
        })
        .filter(Boolean);
    };
  return { rows: i(t.rows), flatRows: r, rowsById: o };
}
function Yf(e, t) {
  var n;
  return (n = t[e.id]) != null ? n : !1;
}
function hd(e, t, n) {
  var r;
  if (!((r = e.subRows) != null && r.length)) return !1;
  let o = !0,
    i = !1;
  return (
    e.subRows.forEach((s) => {
      if (
        !(i && !o) &&
        (s.getCanSelect() && (Yf(s, t) ? (i = !0) : (o = !1)),
        s.subRows && s.subRows.length)
      ) {
        const a = hd(s, t);
        a === "all" ? (i = !0) : (a === "some" && (i = !0), (o = !1));
      }
    }),
    o ? "all" : i ? "some" : !1
  );
}
const pd = /([0-9]+)/gm,
  Rj = (e, t, n) =>
    aw(Nr(e.getValue(n)).toLowerCase(), Nr(t.getValue(n)).toLowerCase()),
  kj = (e, t, n) => aw(Nr(e.getValue(n)), Nr(t.getValue(n))),
  Pj = (e, t, n) =>
    Xf(Nr(e.getValue(n)).toLowerCase(), Nr(t.getValue(n)).toLowerCase()),
  Tj = (e, t, n) => Xf(Nr(e.getValue(n)), Nr(t.getValue(n))),
  Oj = (e, t, n) => {
    const r = e.getValue(n),
      o = t.getValue(n);
    return r > o ? 1 : r < o ? -1 : 0;
  },
  _j = (e, t, n) => Xf(e.getValue(n), t.getValue(n));
function Xf(e, t) {
  return e === t ? 0 : e > t ? 1 : -1;
}
function Nr(e) {
  return typeof e == "number"
    ? isNaN(e) || e === 1 / 0 || e === -1 / 0
      ? ""
      : String(e)
    : typeof e == "string"
      ? e
      : "";
}
function aw(e, t) {
  const n = e.split(pd).filter(Boolean),
    r = t.split(pd).filter(Boolean);
  for (; n.length && r.length; ) {
    const o = n.shift(),
      i = r.shift(),
      s = parseInt(o, 10),
      a = parseInt(i, 10),
      l = [s, a].sort();
    if (isNaN(l[0])) {
      if (o > i) return 1;
      if (i > o) return -1;
      continue;
    }
    if (isNaN(l[1])) return isNaN(s) ? -1 : 1;
    if (s > a) return 1;
    if (a > s) return -1;
  }
  return n.length - r.length;
}
const Oi = {
    alphanumeric: Rj,
    alphanumericCaseSensitive: kj,
    text: Pj,
    textCaseSensitive: Tj,
    datetime: Oj,
    basic: _j,
  },
  Aj = {
    getInitialState: (e) => ({ sorting: [], ...e }),
    getDefaultColumnDef: () => ({ sortingFn: "auto", sortUndefined: 1 }),
    getDefaultOptions: (e) => ({
      onSortingChange: qt("sorting", e),
      isMultiSortEvent: (t) => t.shiftKey,
    }),
    createColumn: (e, t) => {
      ((e.getAutoSortingFn = () => {
        const n = t.getFilteredRowModel().flatRows.slice(10);
        let r = !1;
        for (const o of n) {
          const i = o == null ? void 0 : o.getValue(e.id);
          if (Object.prototype.toString.call(i) === "[object Date]")
            return Oi.datetime;
          if (typeof i == "string" && ((r = !0), i.split(pd).length > 1))
            return Oi.alphanumeric;
        }
        return r ? Oi.text : Oi.basic;
      }),
        (e.getAutoSortDir = () => {
          const n = t.getFilteredRowModel().flatRows[0];
          return typeof (n == null ? void 0 : n.getValue(e.id)) == "string"
            ? "asc"
            : "desc";
        }),
        (e.getSortingFn = () => {
          var n, r;
          if (!e) throw new Error();
          return wc(e.columnDef.sortingFn)
            ? e.columnDef.sortingFn
            : e.columnDef.sortingFn === "auto"
              ? e.getAutoSortingFn()
              : (n =
                    (r = t.options.sortingFns) == null
                      ? void 0
                      : r[e.columnDef.sortingFn]) != null
                ? n
                : Oi[e.columnDef.sortingFn];
        }),
        (e.toggleSorting = (n, r) => {
          const o = e.getNextSortingOrder(),
            i = typeof n < "u" && n !== null;
          t.setSorting((s) => {
            const a = s == null ? void 0 : s.find((g) => g.id === e.id),
              l = s == null ? void 0 : s.findIndex((g) => g.id === e.id);
            let c = [],
              u,
              d = i ? n : o === "desc";
            if (
              (s != null && s.length && e.getCanMultiSort() && r
                ? a
                  ? (u = "toggle")
                  : (u = "add")
                : s != null && s.length && l !== s.length - 1
                  ? (u = "replace")
                  : a
                    ? (u = "toggle")
                    : (u = "replace"),
              u === "toggle" && (i || o || (u = "remove")),
              u === "add")
            ) {
              var f;
              ((c = [...s, { id: e.id, desc: d }]),
                c.splice(
                  0,
                  c.length -
                    ((f = t.options.maxMultiSortColCount) != null
                      ? f
                      : Number.MAX_SAFE_INTEGER),
                ));
            } else
              u === "toggle"
                ? (c = s.map((g) => (g.id === e.id ? { ...g, desc: d } : g)))
                : u === "remove"
                  ? (c = s.filter((g) => g.id !== e.id))
                  : (c = [{ id: e.id, desc: d }]);
            return c;
          });
        }),
        (e.getFirstSortDir = () => {
          var n, r;
          return (
            (n =
              (r = e.columnDef.sortDescFirst) != null
                ? r
                : t.options.sortDescFirst) != null
              ? n
              : e.getAutoSortDir() === "desc"
          )
            ? "desc"
            : "asc";
        }),
        (e.getNextSortingOrder = (n) => {
          var r, o;
          const i = e.getFirstSortDir(),
            s = e.getIsSorted();
          return s
            ? s !== i &&
              ((r = t.options.enableSortingRemoval) == null || r) &&
              (!(n && (o = t.options.enableMultiRemove) != null) || o)
              ? !1
              : s === "desc"
                ? "asc"
                : "desc"
            : i;
        }),
        (e.getCanSort = () => {
          var n, r;
          return (
            ((n = e.columnDef.enableSorting) != null ? n : !0) &&
            ((r = t.options.enableSorting) != null ? r : !0) &&
            !!e.accessorFn
          );
        }),
        (e.getCanMultiSort = () => {
          var n, r;
          return (n =
            (r = e.columnDef.enableMultiSort) != null
              ? r
              : t.options.enableMultiSort) != null
            ? n
            : !!e.accessorFn;
        }),
        (e.getIsSorted = () => {
          var n;
          const r =
            (n = t.getState().sorting) == null
              ? void 0
              : n.find((o) => o.id === e.id);
          return r ? (r.desc ? "desc" : "asc") : !1;
        }),
        (e.getSortIndex = () => {
          var n, r;
          return (n =
            (r = t.getState().sorting) == null
              ? void 0
              : r.findIndex((o) => o.id === e.id)) != null
            ? n
            : -1;
        }),
        (e.clearSorting = () => {
          t.setSorting((n) =>
            n != null && n.length ? n.filter((r) => r.id !== e.id) : [],
          );
        }),
        (e.getToggleSortingHandler = () => {
          const n = e.getCanSort();
          return (r) => {
            n &&
              (r.persist == null || r.persist(),
              e.toggleSorting == null ||
                e.toggleSorting(
                  void 0,
                  e.getCanMultiSort()
                    ? t.options.isMultiSortEvent == null
                      ? void 0
                      : t.options.isMultiSortEvent(r)
                    : !1,
                ));
          };
        }));
    },
    createTable: (e) => {
      ((e.setSorting = (t) =>
        e.options.onSortingChange == null
          ? void 0
          : e.options.onSortingChange(t)),
        (e.resetSorting = (t) => {
          var n, r;
          e.setSorting(
            t
              ? []
              : (n = (r = e.initialState) == null ? void 0 : r.sorting) != null
                ? n
                : [],
          );
        }),
        (e.getPreSortedRowModel = () => e.getGroupedRowModel()),
        (e.getSortedRowModel = () => (
          !e._getSortedRowModel &&
            e.options.getSortedRowModel &&
            (e._getSortedRowModel = e.options.getSortedRowModel(e)),
          e.options.manualSorting || !e._getSortedRowModel
            ? e.getPreSortedRowModel()
            : e._getSortedRowModel()
        )));
    },
  },
  Nj = [ZB, bj, hj, pj, tj, nj, xj, Sj, Aj, fj, wj, Cj, Ej, Ij, vj];
function Vj(e) {
  var t, n;
  const r = [...Nj, ...((t = e._features) != null ? t : [])];
  let o = { _features: r };
  const i = o._features.reduce(
      (f, g) =>
        Object.assign(
          f,
          g.getDefaultOptions == null ? void 0 : g.getDefaultOptions(o),
        ),
      {},
    ),
    s = (f) =>
      o.options.mergeOptions ? o.options.mergeOptions(i, f) : { ...i, ...f };
  let l = { ...{}, ...((n = e.initialState) != null ? n : {}) };
  o._features.forEach((f) => {
    var g;
    l =
      (g = f.getInitialState == null ? void 0 : f.getInitialState(l)) != null
        ? g
        : l;
  });
  const c = [];
  let u = !1;
  const d = {
    _features: r,
    options: { ...i, ...e },
    initialState: l,
    _queue: (f) => {
      (c.push(f),
        u ||
          ((u = !0),
          Promise.resolve()
            .then(() => {
              for (; c.length; ) c.shift()();
              u = !1;
            })
            .catch((g) =>
              setTimeout(() => {
                throw g;
              }),
            )));
    },
    reset: () => {
      o.setState(o.initialState);
    },
    setOptions: (f) => {
      const g = Ir(f, o.options);
      o.options = s(g);
    },
    getState: () => o.options.state,
    setState: (f) => {
      o.options.onStateChange == null || o.options.onStateChange(f);
    },
    _getRowId: (f, g, h) => {
      var p;
      return (p =
        o.options.getRowId == null ? void 0 : o.options.getRowId(f, g, h)) !=
        null
        ? p
        : `${h ? [h.id, g].join(".") : g}`;
    },
    getCoreRowModel: () => (
      o._getCoreRowModel || (o._getCoreRowModel = o.options.getCoreRowModel(o)),
      o._getCoreRowModel()
    ),
    getRowModel: () => o.getPaginationRowModel(),
    getRow: (f, g) => {
      let h = (g ? o.getPrePaginationRowModel() : o.getRowModel()).rowsById[f];
      if (!h && ((h = o.getCoreRowModel().rowsById[f]), !h)) throw new Error();
      return h;
    },
    _getDefaultColumnDef: re(
      () => [o.options.defaultColumn],
      (f) => {
        var g;
        return (
          (f = (g = f) != null ? g : {}),
          {
            header: (h) => {
              const p = h.header.column.columnDef;
              return p.accessorKey ? p.accessorKey : p.accessorFn ? p.id : null;
            },
            cell: (h) => {
              var p, v;
              return (p =
                (v = h.renderValue()) == null || v.toString == null
                  ? void 0
                  : v.toString()) != null
                ? p
                : null;
            },
            ...o._features.reduce(
              (h, p) =>
                Object.assign(
                  h,
                  p.getDefaultColumnDef == null
                    ? void 0
                    : p.getDefaultColumnDef(),
                ),
              {},
            ),
            ...f,
          }
        );
      },
      oe(e, "debugColumns"),
    ),
    _getColumnDefs: () => o.options.columns,
    getAllColumns: re(
      () => [o._getColumnDefs()],
      (f) => {
        const g = function (h, p, v) {
          return (
            v === void 0 && (v = 0),
            h.map((b) => {
              const S = QB(o, b, v, p),
                w = b;
              return ((S.columns = w.columns ? g(w.columns, S, v + 1) : []), S);
            })
          );
        };
        return g(f);
      },
      oe(e, "debugColumns"),
    ),
    getAllFlatColumns: re(
      () => [o.getAllColumns()],
      (f) => f.flatMap((g) => g.getFlatColumns()),
      oe(e, "debugColumns"),
    ),
    _getAllFlatColumnsById: re(
      () => [o.getAllFlatColumns()],
      (f) => f.reduce((g, h) => ((g[h.id] = h), g), {}),
      oe(e, "debugColumns"),
    ),
    getAllLeafColumns: re(
      () => [o.getAllColumns(), o._getOrderColumnsFn()],
      (f, g) => {
        let h = f.flatMap((p) => p.getLeafColumns());
        return g(h);
      },
      oe(e, "debugColumns"),
    ),
    getColumn: (f) => o._getAllFlatColumnsById()[f],
  };
  Object.assign(o, d);
  for (let f = 0; f < o._features.length; f++) {
    const g = o._features[f];
    g == null || g.createTable == null || g.createTable(o);
  }
  return o;
}
function Fj() {
  return (e) =>
    re(
      () => [e.options.data],
      (t) => {
        const n = { rows: [], flatRows: [], rowsById: {} },
          r = function (o, i, s) {
            i === void 0 && (i = 0);
            const a = [];
            for (let c = 0; c < o.length; c++) {
              const u = ej(
                e,
                e._getRowId(o[c], c, s),
                o[c],
                c,
                i,
                void 0,
                s == null ? void 0 : s.id,
              );
              if (
                (n.flatRows.push(u),
                (n.rowsById[u.id] = u),
                a.push(u),
                e.options.getSubRows)
              ) {
                var l;
                ((u.originalSubRows = e.options.getSubRows(o[c], c)),
                  (l = u.originalSubRows) != null &&
                    l.length &&
                    (u.subRows = r(u.originalSubRows, i + 1, u)));
              }
            }
            return a;
          };
        return ((n.rows = r(t)), n);
      },
      oe(e.options, "debugTable", "getRowModel", () => e._autoResetPageIndex()),
    );
}
/**
 * react-table
 *
 * Copyright (c) TanStack
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */ function Xm(e, t) {
  return e ? (Dj(e) ? x.createElement(e, t) : e) : null;
}
function Dj(e) {
  return $j(e) || typeof e == "function" || Mj(e);
}
function $j(e) {
  return (
    typeof e == "function" &&
    (() => {
      const t = Object.getPrototypeOf(e);
      return t.prototype && t.prototype.isReactComponent;
    })()
  );
}
function Mj(e) {
  return (
    typeof e == "object" &&
    typeof e.$$typeof == "symbol" &&
    ["react.memo", "react.forward_ref"].includes(e.$$typeof.description)
  );
}
function Lj(e) {
  const t = {
      state: {},
      onStateChange: () => {},
      renderFallbackValue: null,
      ...e,
    },
    [n] = x.useState(() => ({ current: Vj(t) })),
    [r, o] = x.useState(() => n.current.initialState);
  return (
    n.current.setOptions((i) => ({
      ...i,
      ...e,
      state: { ...r, ...e.state },
      onStateChange: (s) => {
        (o(s), e.onStateChange == null || e.onStateChange(s));
      },
    })),
    n.current
  );
}
function zj({ status: e }) {
  const t = {
      READY: "bg-green-100 text-green-700",
      "IN PROGRESS": "bg-amber-100 text-amber-700 animate-pulse",
      BLOCKED: "bg-red-100 text-red-700",
    },
    n =
      "px-3 py-1 rounded-full text-xs font-semibold inline-flex items-center gap-1",
    r = t[e] ?? "bg-gray-100 text-gray-700";
  return y.jsxs("span", {
    className: Ct(n, r),
    children: [
      y.jsx("span", { className: "h-1.5 w-1.5 rounded-full bg-current" }),
      e,
    ],
  });
}
const Bj = [
  { accessorKey: "id", header: "ID" },
  { accessorKey: "name", header: "Name" },
  { accessorKey: "pm", header: "PM" },
  {
    accessorKey: "status",
    header: "Status",
    cell: ({ getValue: e }) => y.jsx(zj, { status: e() }),
  },
];
function jj({ data: e }) {
  const t = Lj({ data: e, columns: Bj, getCoreRowModel: Fj() });
  return y.jsx("div", {
    className: "rounded-2xl shadow-lg overflow-auto",
    children: y.jsxs("table", {
      className: "min-w-full divide-y divide-neutral-light text-sm",
      children: [
        y.jsx("thead", {
          className: "bg-white sticky top-0",
          children: t
            .getHeaderGroups()
            .map((n) =>
              y.jsx(
                "tr",
                {
                  children: n.headers.map((r) =>
                    y.jsx(
                      "th",
                      {
                        className: "px-6 py-3 text-left font-semibold",
                        children: Xm(r.column.columnDef.header, r.getContext()),
                      },
                      r.id,
                    ),
                  ),
                },
                n.id,
              ),
            ),
        }),
        y.jsx("tbody", {
          className: "bg-white divide-y divide-neutral-light",
          children: t
            .getRowModel()
            .rows.map((n) =>
              y.jsx(
                "tr",
                {
                  className: "rounded-lg shadow hover:bg-gray-50",
                  children: n
                    .getVisibleCells()
                    .map((r) =>
                      y.jsx(
                        "td",
                        {
                          className: "px-6 py-4",
                          children: Xm(r.column.columnDef.cell, r.getContext()),
                        },
                        r.id,
                      ),
                    ),
                },
                n.id,
              ),
            ),
        }),
      ],
    }),
  });
}
function Uj({
  userEmail: e,
  isAdmin: t = !1,
  onProjectSelect: n,
  selectedProjectId: r,
  isAdminMode: o = !1,
}) {
  const [i, s] = x.useState([]),
    [a, l] = x.useState(!1),
    [c, u] = x.useState(null),
    [d, f] = x.useState(null);
  x.useEffect(() => {
    async function h() {
      try {
        const p = await Fd();
        (f(p), console.log("🔐 Cognito user loaded:", p));
      } catch (p) {
        console.warn("⚠️ Could not load Cognito user:", p);
      }
    }
    h();
  }, []);
  const g = async () => {
    if (e) {
      (l(!0), u(null));
      try {
        (console.log("📋 Fetching projects with Cognito authentication..."),
          console.log("👤 User email:", e),
          console.log("🔐 Cognito user:", d),
          console.log("🛡️ Admin mode:", t));
        const h = await ml(e, t);
        console.log("✅ Projects loaded:", h);
        const p = h.map((v, b) => ({
          id: parseInt(v.project_id) || b + 1,
          name: v.project_name,
          pm: v.pm || v.project_manager || "Unknown",
          status: "Active",
        }));
        s(p);
      } catch (h) {
        (console.error("❌ Failed to load projects:", h),
          u("Failed to load projects. Please check your authentication."));
      } finally {
        l(!1);
      }
    }
  };
  return (
    x.useEffect(() => {
      g();
    }, [e, t, d]),
    a
      ? y.jsxs("div", {
          className:
            "bg-white rounded-2xl shadow-sm p-6 border border-gray-200 flex items-center justify-center gap-3",
          children: [
            y.jsx("div", {
              className:
                "h-6 w-6 border-b-2 border-blue-500 rounded-full animate-spin",
            }),
            y.jsx("span", {
              className: "text-gray-600",
              children: "Loading projects…",
            }),
          ],
        })
      : c
        ? y.jsxs("div", {
            className:
              "bg-white rounded-2xl shadow-sm p-6 border border-red-200 text-center space-y-2",
            children: [
              y.jsx("p", {
                className: "text-red-600 font-semibold",
                children: c,
              }),
              y.jsx("p", {
                className: "text-sm text-gray-500",
                children: d ? `Signed in as ${d.email}` : "Not authenticated",
              }),
              y.jsx("button", {
                onClick: g,
                className:
                  "mt-2 px-3 py-1.5 text-sm bg-blue-600 text-white rounded-md hover:bg-blue-700",
                children: "Retry",
              }),
            ],
          })
        : i.length
          ? y.jsxs("div", {
              className:
                "bg-white rounded-2xl shadow-lg border border-gray-200",
              children: [
                y.jsx("div", {
                  className: "p-6 border-b border-gray-200",
                  children: y.jsxs("div", {
                    className: "flex items-center justify-between",
                    children: [
                      y.jsxs("div", {
                        children: [
                          y.jsx("h3", {
                            className: "text-lg font-semibold text-gray-900",
                            children: o
                              ? "All Projects (Admin)"
                              : "Your Projects",
                          }),
                          y.jsx("p", {
                            className: "text-sm text-gray-500",
                            children: d
                              ? y.jsxs(y.Fragment, {
                                  children: ["✅ Authenticated as ", d.email],
                                })
                              : y.jsx(y.Fragment, {
                                  children: "⚠️ Authentication status unknown",
                                }),
                          }),
                        ],
                      }),
                      y.jsxs("div", {
                        className: "text-sm text-gray-500",
                        children: [
                          i.length,
                          " project",
                          i.length !== 1 ? "s" : "",
                          " found",
                        ],
                      }),
                    ],
                  }),
                }),
                y.jsx("div", {
                  className: "p-6",
                  children: y.jsx(jj, { data: i }),
                }),
              ],
            })
          : y.jsx("div", {
              className:
                "bg-white rounded-2xl shadow-sm p-6 border border-gray-200 text-center text-gray-500",
              children: y.jsx("p", { children: "No projects found." }),
            })
  );
}
const Wj = x.lazy(() =>
  Sy(() => import("./PDFPreview-BSAO70O6.js"), __vite__mapDeps([0, 1, 2])),
);
function Hj() {
  const { user: e, loading: t } = $d(),
    n =
      (e == null ? void 0 : e.email) === "admin@ikusi.com" ||
      (e == null ? void 0 : e.email) === "christian.valencia@ikusi.com" ||
      (e == null ? void 0 : e.email) === "valencia942003@gmail.com",
    [r, o] = x.useState([]),
    [i, s] = x.useState(!1),
    [a, l] = x.useState(null),
    [c, u] = x.useState(""),
    [d, f] = x.useState({ total: 0, pending: 0, inProgress: 0, completed: 0 }),
    [g, h] = x.useState({}),
    [p, v] = x.useState(null),
    [b, S] = x.useState(""),
    [w, E] = x.useState(!1),
    [R, N] = x.useState(null);
  x.useEffect(() => {
    (async () => {
      if (e != null && e.email)
        try {
          const F = await Fd();
          (console.log("🔐 Cognito user initialized:", F), await I());
        } catch (F) {
          console.error("❌ Error initializing Cognito user:", F);
        }
    })();
  }, [e]);
  const I = async () => {
      var P, F, $, H;
      if (e != null && e.email) {
        (s(!0), l(null));
        try {
          (console.log(
            "📋 Fetching projects from API using /projects endpoint...",
          ),
            console.log("🔐 User email:", e.email, "Admin access:", n));
          const B = await ml(e.email, n);
          if (
            (console.log("📊 Raw project data received:", B), !Array.isArray(B))
          )
            throw (
              console.warn("⚠️ Project data is not an array:", B),
              new Error("Invalid project data format received from API")
            );
          o(B);
          const j = B.length,
            G = B.filter((K) =>
              String(K.project_status || "")
                .toLowerCase()
                .includes("pending"),
            ).length,
            ee = B.filter((K) =>
              String(K.project_status || "")
                .toLowerCase()
                .includes("progress"),
            ).length,
            ae = B.filter((K) =>
              String(K.project_status || "")
                .toLowerCase()
                .includes("completed"),
            ).length;
          (f({ total: j, pending: G, inProgress: ee, completed: ae }),
            u(new Date().toLocaleTimeString()),
            console.log(
              "✅ Projects loaded successfully:",
              B.length,
              "projects",
            ),
            B.length === 0 &&
              console.log(
                "ℹ️ No projects found for user. This might be expected for new users.",
              ));
        } catch (B) {
          console.error("❌ Error fetching projects:", B);
          let j = "Failed to load projects from API";
          ((P = B.message) != null && P.includes("Failed to fetch")
            ? (j =
                "Network error: Unable to connect to the API. Please check your connection and try again.")
            : (F = B.message) != null && F.includes("401")
              ? (j = "Authentication error: Please log out and log back in.")
              : ($ = B.message) != null && $.includes("403")
                ? (j =
                    "Access denied: You don't have permission to view projects.")
                : (H = B.message) != null && H.includes("500")
                  ? (j =
                      "Server error: The API is experiencing issues. Please try again later.")
                  : B.message && (j = `API Error: ${B.message}`),
            l(j),
            ce.error(j));
        } finally {
          s(!1);
        }
      }
    },
    T = async (P) => {
      if (e != null && e.email) {
        h((F) => ({ ...F, [`generate-${P}`]: !0 }));
        try {
          const F = await SR(P, e.email, "pm");
          F.success
            ? ce.success("Document generated successfully!")
            : ce.error(F.message || "Failed to generate document");
        } catch (F) {
          (console.error("❌ Error generating document:", F),
            ce.error("Failed to generate document"));
        } finally {
          h((F) => ({ ...F, [`generate-${P}`]: !1 }));
        }
      }
    },
    k = async (P, F) => {
      if (e != null && e.email) {
        h(($) => ({ ...$, [`download-${P}-${F}`]: !0 }));
        try {
          const $ = await xh(P, F);
          if ($.success && $.downloadUrl) {
            const H = document.createElement("a");
            ((H.href = $.downloadUrl),
              (H.download = `acta-${P}.${F}`),
              H.click(),
              ce.success(`${F.toUpperCase()} downloaded successfully!`));
          } else ce.error($.error || "Failed to download document");
        } catch ($) {
          (console.error("❌ Error downloading document:", $),
            ce.error("Failed to download document"));
        } finally {
          h(($) => ({ ...$, [`download-${P}-${F}`]: !1 }));
        }
      }
    },
    m = async (P, F) => {
      if (e != null && e.email)
        try {
          const $ = await xh(P, "pdf");
          $.success && $.downloadUrl
            ? (N({ projectId: P, projectName: F, documentUrl: $.downloadUrl }),
              E(!0))
            : ce.error("Document not found. Generate document first.");
        } catch ($) {
          (console.error("❌ Error preparing email:", $),
            ce.error("Failed to prepare email"));
        }
    },
    A = async (P) => {
      if (R)
        try {
          (await Dd(R.projectId, P),
            ce.success("Approval email sent successfully!"),
            E(!1),
            N(null));
        } catch (F) {
          (console.error("❌ Error sending email:", F),
            ce.error("Failed to send approval email"));
        }
    },
    V = (P) => {
      (navigator.clipboard.writeText(P), ce.success("Copied to clipboard!"));
    };
  return t
    ? y.jsx("div", {
        className: "min-h-screen bg-gray-50 flex items-center justify-center",
        children: y.jsx("div", {
          className:
            "animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600",
        }),
      })
    : y.jsxs("div", {
        className: "min-h-screen bg-gray-50",
        children: [
          y.jsx(kf, {}),
          y.jsxs("div", {
            className: "max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8",
            children: [
              y.jsx(pn.div, {
                initial: { opacity: 0, y: 20 },
                animate: { opacity: 1, y: 0 },
                className: "bg-white rounded-2xl shadow-sm p-6 mb-8",
                children: y.jsxs("div", {
                  className: "flex items-center justify-between",
                  children: [
                    y.jsxs("div", {
                      children: [
                        y.jsx("h1", {
                          className: "text-2xl font-bold text-gray-900 mb-2",
                          children: "Welcome back! 👋",
                        }),
                        y.jsxs("p", {
                          className: "text-gray-600",
                          children: [
                            e == null ? void 0 : e.email,
                            " • Ready to manage your projects",
                          ],
                        }),
                      ],
                    }),
                    y.jsxs("button", {
                      onClick: I,
                      disabled: i,
                      className:
                        "flex items-center gap-2 px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 disabled:opacity-50",
                      children: [
                        y.jsx(Qi, {
                          className: `h-4 w-4 ${i ? "animate-spin" : ""}`,
                        }),
                        "Refresh",
                      ],
                    }),
                  ],
                }),
              }),
              y.jsxs(pn.div, {
                initial: { opacity: 0, y: 20 },
                animate: { opacity: 1, y: 0 },
                transition: { delay: 0.1 },
                className: "grid grid-cols-1 md:grid-cols-4 gap-6 mb-8",
                children: [
                  y.jsx("div", {
                    className: "bg-white rounded-xl shadow-sm p-6",
                    children: y.jsxs("div", {
                      className: "flex items-center justify-between",
                      children: [
                        y.jsxs("div", {
                          children: [
                            y.jsx("p", {
                              className: "text-sm text-gray-600",
                              children: "Total Projects",
                            }),
                            y.jsx("p", {
                              className: "text-2xl font-bold text-gray-900",
                              children: d.total,
                            }),
                          ],
                        }),
                        y.jsx(Na, { className: "h-8 w-8 text-blue-600" }),
                      ],
                    }),
                  }),
                  y.jsx("div", {
                    className: "bg-white rounded-xl shadow-sm p-6",
                    children: y.jsxs("div", {
                      className: "flex items-center justify-between",
                      children: [
                        y.jsxs("div", {
                          children: [
                            y.jsx("p", {
                              className: "text-sm text-gray-600",
                              children: "Pending Approval",
                            }),
                            y.jsx("p", {
                              className: "text-2xl font-bold text-gray-900",
                              children: d.pending,
                            }),
                          ],
                        }),
                        y.jsx(Ow, { className: "h-8 w-8 text-orange-600" }),
                      ],
                    }),
                  }),
                  y.jsx("div", {
                    className: "bg-white rounded-xl shadow-sm p-6",
                    children: y.jsxs("div", {
                      className: "flex items-center justify-between",
                      children: [
                        y.jsxs("div", {
                          children: [
                            y.jsx("p", {
                              className: "text-sm text-gray-600",
                              children: "In Progress",
                            }),
                            y.jsx("p", {
                              className: "text-2xl font-bold text-gray-900",
                              children: d.inProgress,
                            }),
                          ],
                        }),
                        y.jsx(xy, { className: "h-8 w-8 text-blue-600" }),
                      ],
                    }),
                  }),
                  y.jsx("div", {
                    className: "bg-white rounded-xl shadow-sm p-6",
                    children: y.jsxs("div", {
                      className: "flex items-center justify-between",
                      children: [
                        y.jsxs("div", {
                          children: [
                            y.jsx("p", {
                              className: "text-sm text-gray-600",
                              children: "Completed",
                            }),
                            y.jsx("p", {
                              className: "text-2xl font-bold text-gray-900",
                              children: d.completed,
                            }),
                          ],
                        }),
                        y.jsx(by, { className: "h-8 w-8 text-green-600" }),
                      ],
                    }),
                  }),
                ],
              }),
              y.jsxs(pn.div, {
                initial: { opacity: 0, y: 20 },
                animate: { opacity: 1, y: 0 },
                transition: { delay: 0.2 },
                className: "bg-white rounded-2xl shadow-sm overflow-hidden",
                children: [
                  y.jsx("div", {
                    className: "px-6 py-4 border-b border-gray-200",
                    children: y.jsxs("div", {
                      className: "flex items-center justify-between",
                      children: [
                        y.jsxs("div", {
                          className: "flex items-center gap-3",
                          children: [
                            y.jsx(Na, { className: "h-5 w-5 text-blue-600" }),
                            y.jsx("h2", {
                              className: "text-lg font-semibold text-gray-900",
                              children: "All Projects (Direct from DynamoDB)",
                            }),
                          ],
                        }),
                        y.jsxs("div", {
                          className: "flex items-center gap-4",
                          children: [
                            y.jsxs("span", {
                              className: "text-sm text-gray-500",
                              children: ["Last updated: ", c],
                            }),
                            y.jsxs("button", {
                              onClick: I,
                              disabled: i,
                              className:
                                "flex items-center gap-2 px-3 py-1.5 text-sm bg-blue-50 text-blue-600 rounded-lg hover:bg-blue-100 disabled:opacity-50",
                              children: [
                                y.jsx(Qi, {
                                  className: `h-4 w-4 ${i ? "animate-spin" : ""}`,
                                }),
                                "Refresh Source",
                              ],
                            }),
                          ],
                        }),
                      ],
                    }),
                  }),
                  i &&
                    y.jsxs("div", {
                      className: "p-8 text-center",
                      children: [
                        y.jsx("div", {
                          className:
                            "animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto mb-4",
                        }),
                        y.jsx("p", {
                          className: "text-gray-600",
                          children: "Loading projects from DynamoDB...",
                        }),
                      ],
                    }),
                  a &&
                    y.jsxs("div", {
                      className: "p-8 text-center",
                      children: [
                        y.jsxs("div", {
                          className: "text-red-600 mb-4",
                          children: ["❌ ", a],
                        }),
                        y.jsx("button", {
                          onClick: I,
                          className:
                            "px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700",
                          children: "Retry",
                        }),
                      ],
                    }),
                  !i &&
                    !a &&
                    r.length === 0 &&
                    y.jsx("div", {
                      className: "p-8 text-center text-gray-500",
                      children:
                        "No projects found. Check your DynamoDB connection.",
                    }),
                  !i &&
                    !a &&
                    r.length > 0 &&
                    y.jsx("div", {
                      className: "overflow-x-auto",
                      children: y.jsxs("table", {
                        className: "w-full",
                        children: [
                          y.jsx("thead", {
                            className: "bg-gray-50",
                            children: y.jsxs("tr", {
                              children: [
                                y.jsx("th", {
                                  className:
                                    "px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider",
                                  children: "Project ID",
                                }),
                                y.jsx("th", {
                                  className:
                                    "px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider",
                                  children: "Project",
                                }),
                                y.jsx("th", {
                                  className:
                                    "px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider",
                                  children: "PM Name",
                                }),
                                y.jsx("th", {
                                  className:
                                    "px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider",
                                  children: "Planet",
                                }),
                                y.jsx("th", {
                                  className:
                                    "px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider",
                                  children: "Title",
                                }),
                                y.jsx("th", {
                                  className:
                                    "px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider",
                                  children: "Actions",
                                }),
                              ],
                            }),
                          }),
                          y.jsx("tbody", {
                            className: "bg-white divide-y divide-gray-200",
                            children: r.map((P) =>
                              y.jsxs(
                                "tr",
                                {
                                  className: "hover:bg-gray-50",
                                  children: [
                                    y.jsx("td", {
                                      className:
                                        "px-6 py-4 whitespace-nowrap text-sm font-mono text-gray-900",
                                      children: P.project_id,
                                    }),
                                    y.jsx("td", {
                                      className:
                                        "px-6 py-4 whitespace-nowrap text-sm text-gray-900",
                                      children: P.project_name,
                                    }),
                                    y.jsxs("td", {
                                      className:
                                        "px-6 py-4 whitespace-nowrap text-sm text-gray-900",
                                      children: [
                                        P.pm || P.project_manager,
                                        y.jsx("br", {}),
                                        y.jsx("span", {
                                          className: "text-xs text-gray-500",
                                          children:
                                            e == null ? void 0 : e.email,
                                        }),
                                      ],
                                    }),
                                    y.jsx("td", {
                                      className:
                                        "px-6 py-4 whitespace-nowrap text-sm text-gray-900",
                                      children: String(
                                        P.planet || "Test Planet",
                                      ),
                                    }),
                                    y.jsx("td", {
                                      className:
                                        "px-6 py-4 whitespace-nowrap text-sm text-gray-900",
                                      children: String(
                                        P.title || P.project_name,
                                      ),
                                    }),
                                    y.jsx("td", {
                                      className:
                                        "px-6 py-4 whitespace-nowrap text-sm text-gray-900",
                                      children: y.jsxs("div", {
                                        className: "flex items-center gap-2",
                                        children: [
                                          y.jsx("button", {
                                            onClick: () => V(P.project_id),
                                            className:
                                              "px-2 py-1 text-xs bg-blue-50 text-blue-600 rounded hover:bg-blue-100",
                                            children: "Copy ID",
                                          }),
                                          y.jsx("button", {
                                            onClick: () => T(P.project_id),
                                            disabled:
                                              g[`generate-${P.project_id}`],
                                            className:
                                              "px-2 py-1 text-xs bg-green-50 text-green-600 rounded hover:bg-green-100 disabled:opacity-50",
                                            children: g[
                                              `generate-${P.project_id}`
                                            ]
                                              ? "Generating..."
                                              : "Generate",
                                          }),
                                          y.jsx("button", {
                                            onClick: () =>
                                              k(P.project_id, "pdf"),
                                            disabled:
                                              g[`download-${P.project_id}-pdf`],
                                            className:
                                              "px-2 py-1 text-xs bg-red-50 text-red-600 rounded hover:bg-red-100 disabled:opacity-50",
                                            children: "PDF",
                                          }),
                                          y.jsx("button", {
                                            onClick: () =>
                                              k(P.project_id, "docx"),
                                            disabled:
                                              g[
                                                `download-${P.project_id}-docx`
                                              ],
                                            className:
                                              "px-2 py-1 text-xs bg-blue-50 text-blue-600 rounded hover:bg-blue-100 disabled:opacity-50",
                                            children: "DOCX",
                                          }),
                                          y.jsx("button", {
                                            onClick: () =>
                                              m(P.project_id, P.project_name),
                                            className:
                                              "px-2 py-1 text-xs bg-orange-50 text-orange-600 rounded hover:bg-orange-100",
                                            children: "Send",
                                          }),
                                        ],
                                      }),
                                    }),
                                  ],
                                },
                                P.project_id,
                              ),
                            ),
                          }),
                        ],
                      }),
                    }),
                ],
              }),
              y.jsx("div", {
                className: "my-10",
                children: y.jsx(Uj, {
                  userEmail: (e == null ? void 0 : e.email) || "",
                  isAdmin: n,
                }),
              }),
            ],
          }),
          p &&
            y.jsx(x.Suspense, {
              fallback: y.jsx("div", { children: "Loading PDF preview..." }),
              children: y.jsx(Wj, {
                isOpen: !!p,
                pdfUrl: p,
                fileName: b,
                onClose: () => {
                  (v(null), S(""));
                },
              }),
            }),
          w &&
            R &&
            y.jsx("div", {
              className:
                "fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50",
              children: y.jsxs("div", {
                className: "bg-white rounded-2xl p-6 max-w-md w-full mx-4",
                children: [
                  y.jsx("h3", {
                    className: "text-lg font-semibold mb-4",
                    children: "Send Approval Email",
                  }),
                  y.jsxs("p", {
                    className: "text-gray-600 mb-4",
                    children: [
                      "Send approval email for project: ",
                      R.projectName,
                    ],
                  }),
                  y.jsxs("form", {
                    onSubmit: (P) => {
                      P.preventDefault();
                      const $ = new FormData(P.currentTarget).get("email");
                      A($);
                    },
                    children: [
                      y.jsx("input", {
                        type: "email",
                        name: "email",
                        placeholder: "Enter recipient email",
                        required: !0,
                        className:
                          "w-full px-4 py-2 border border-gray-300 rounded-lg mb-4 focus:outline-none focus:ring-2 focus:ring-blue-500",
                      }),
                      y.jsxs("div", {
                        className: "flex justify-end gap-3",
                        children: [
                          y.jsx("button", {
                            type: "button",
                            onClick: () => {
                              (E(!1), N(null));
                            },
                            className:
                              "px-4 py-2 text-gray-600 hover:text-gray-800",
                            children: "Cancel",
                          }),
                          y.jsx("button", {
                            type: "submit",
                            className:
                              "px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700",
                            children: "Send Email",
                          }),
                        ],
                      }),
                    ],
                  }),
                ],
              }),
            }),
        ],
      });
}
var As = (e) => e.type === "checkbox",
  Zr = (e) => e instanceof Date,
  wt = (e) => e == null;
const lw = (e) => typeof e == "object";
var Ue = (e) => !wt(e) && !Array.isArray(e) && lw(e) && !Zr(e),
  Gj = (e) =>
    Ue(e) && e.target ? (As(e.target) ? e.target.checked : e.target.value) : e,
  Kj = (e) => e.substring(0, e.search(/\.\d+(\.|$)/)) || e,
  qj = (e, t) => e.has(Kj(t)),
  Yj = (e) => {
    const t = e.constructor && e.constructor.prototype;
    return Ue(t) && t.hasOwnProperty("isPrototypeOf");
  },
  Jf =
    typeof window < "u" &&
    typeof window.HTMLElement < "u" &&
    typeof document < "u";
function it(e) {
  let t;
  const n = Array.isArray(e),
    r = typeof FileList < "u" ? e instanceof FileList : !1;
  if (e instanceof Date) t = new Date(e);
  else if (!(Jf && (e instanceof Blob || r)) && (n || Ue(e)))
    if (((t = n ? [] : {}), !n && !Yj(e))) t = e;
    else for (const o in e) e.hasOwnProperty(o) && (t[o] = it(e[o]));
  else return e;
  return t;
}
var Cc = (e) => /^\w*$/.test(e),
  Ye = (e) => e === void 0,
  Qf = (e) => (Array.isArray(e) ? e.filter(Boolean) : []),
  Zf = (e) => Qf(e.replace(/["|']|\]/g, "").split(/\.|\[/)),
  Z = (e, t, n) => {
    if (!t || !Ue(e)) return n;
    const r = (Cc(t) ? [t] : Zf(t)).reduce((o, i) => (wt(o) ? o : o[i]), e);
    return Ye(r) || r === e ? (Ye(e[t]) ? n : e[t]) : r;
  },
  On = (e) => typeof e == "boolean",
  Ve = (e, t, n) => {
    let r = -1;
    const o = Cc(t) ? [t] : Zf(t),
      i = o.length,
      s = i - 1;
    for (; ++r < i; ) {
      const a = o[r];
      let l = n;
      if (r !== s) {
        const c = e[a];
        l = Ue(c) || Array.isArray(c) ? c : isNaN(+o[r + 1]) ? {} : [];
      }
      if (a === "__proto__" || a === "constructor" || a === "prototype") return;
      ((e[a] = l), (e = e[a]));
    }
  };
const Jm = { BLUR: "blur", FOCUS_OUT: "focusout" },
  gn = {
    onBlur: "onBlur",
    onChange: "onChange",
    onSubmit: "onSubmit",
    onTouched: "onTouched",
    all: "all",
  },
  Yn = {
    max: "max",
    min: "min",
    maxLength: "maxLength",
    minLength: "minLength",
    pattern: "pattern",
    required: "required",
    validate: "validate",
  },
  Xj = Le.createContext(null);
Xj.displayName = "HookFormContext";
var Jj = (e, t, n, r = !0) => {
  const o = { defaultValues: t._defaultValues };
  for (const i in e)
    Object.defineProperty(o, i, {
      get: () => {
        const s = i;
        return (
          t._proxyFormState[s] !== gn.all &&
            (t._proxyFormState[s] = !r || gn.all),
          e[s]
        );
      },
    });
  return o;
};
const Qj = typeof window < "u" ? x.useLayoutEffect : x.useEffect;
var Dn = (e) => typeof e == "string",
  Zj = (e, t, n, r, o) =>
    Dn(e)
      ? (r && t.watch.add(e), Z(n, e, o))
      : Array.isArray(e)
        ? e.map((i) => (r && t.watch.add(i), Z(n, i)))
        : (r && (t.watchAll = !0), n),
  e6 = (e, t, n, r, o) =>
    t
      ? {
          ...n[e],
          types: { ...(n[e] && n[e].types ? n[e].types : {}), [r]: o || !0 },
        }
      : {},
  Xi = (e) => (Array.isArray(e) ? e : [e]),
  Qm = () => {
    let e = [];
    return {
      get observers() {
        return e;
      },
      next: (o) => {
        for (const i of e) i.next && i.next(o);
      },
      subscribe: (o) => (
        e.push(o),
        {
          unsubscribe: () => {
            e = e.filter((i) => i !== o);
          },
        }
      ),
      unsubscribe: () => {
        e = [];
      },
    };
  },
  md = (e) => wt(e) || !lw(e);
function Sr(e, t, n = new WeakSet()) {
  if (md(e) || md(t)) return e === t;
  if (Zr(e) && Zr(t)) return e.getTime() === t.getTime();
  const r = Object.keys(e),
    o = Object.keys(t);
  if (r.length !== o.length) return !1;
  if (n.has(e) || n.has(t)) return !0;
  (n.add(e), n.add(t));
  for (const i of r) {
    const s = e[i];
    if (!o.includes(i)) return !1;
    if (i !== "ref") {
      const a = t[i];
      if (
        (Zr(s) && Zr(a)) ||
        (Ue(s) && Ue(a)) ||
        (Array.isArray(s) && Array.isArray(a))
          ? !Sr(s, a, n)
          : s !== a
      )
        return !1;
    }
  }
  return !0;
}
var Pt = (e) => Ue(e) && !Object.keys(e).length,
  eg = (e) => e.type === "file",
  hn = (e) => typeof e == "function",
  ol = (e) => {
    if (!Jf) return !1;
    const t = e ? e.ownerDocument : 0;
    return (
      e instanceof
      (t && t.defaultView ? t.defaultView.HTMLElement : HTMLElement)
    );
  },
  cw = (e) => e.type === "select-multiple",
  tg = (e) => e.type === "radio",
  t6 = (e) => tg(e) || As(e),
  lu = (e) => ol(e) && e.isConnected;
function n6(e, t) {
  const n = t.slice(0, -1).length;
  let r = 0;
  for (; r < n; ) e = Ye(e) ? r++ : e[t[r++]];
  return e;
}
function r6(e) {
  for (const t in e) if (e.hasOwnProperty(t) && !Ye(e[t])) return !1;
  return !0;
}
function Ge(e, t) {
  const n = Array.isArray(t) ? t : Cc(t) ? [t] : Zf(t),
    r = n.length === 1 ? e : n6(e, n),
    o = n.length - 1,
    i = n[o];
  return (
    r && delete r[i],
    o !== 0 &&
      ((Ue(r) && Pt(r)) || (Array.isArray(r) && r6(r))) &&
      Ge(e, n.slice(0, -1)),
    e
  );
}
var uw = (e) => {
  for (const t in e) if (hn(e[t])) return !0;
  return !1;
};
function il(e, t = {}) {
  const n = Array.isArray(e);
  if (Ue(e) || n)
    for (const r in e)
      Array.isArray(e[r]) || (Ue(e[r]) && !uw(e[r]))
        ? ((t[r] = Array.isArray(e[r]) ? [] : {}), il(e[r], t[r]))
        : wt(e[r]) || (t[r] = !0);
  return t;
}
function dw(e, t, n) {
  const r = Array.isArray(e);
  if (Ue(e) || r)
    for (const o in e)
      Array.isArray(e[o]) || (Ue(e[o]) && !uw(e[o]))
        ? Ye(t) || md(n[o])
          ? (n[o] = Array.isArray(e[o]) ? il(e[o], []) : { ...il(e[o]) })
          : dw(e[o], wt(t) ? {} : t[o], n[o])
        : (n[o] = !Sr(e[o], t[o]));
  return n;
}
var _i = (e, t) => dw(e, t, il(t));
const Zm = { value: !1, isValid: !1 },
  ev = { value: !0, isValid: !0 };
var fw = (e) => {
    if (Array.isArray(e)) {
      if (e.length > 1) {
        const t = e
          .filter((n) => n && n.checked && !n.disabled)
          .map((n) => n.value);
        return { value: t, isValid: !!t.length };
      }
      return e[0].checked && !e[0].disabled
        ? e[0].attributes && !Ye(e[0].attributes.value)
          ? Ye(e[0].value) || e[0].value === ""
            ? ev
            : { value: e[0].value, isValid: !0 }
          : ev
        : Zm;
    }
    return Zm;
  },
  gw = (e, { valueAsNumber: t, valueAsDate: n, setValueAs: r }) =>
    Ye(e)
      ? e
      : t
        ? e === ""
          ? NaN
          : e && +e
        : n && Dn(e)
          ? new Date(e)
          : r
            ? r(e)
            : e;
const tv = { isValid: !1, value: null };
var hw = (e) =>
  Array.isArray(e)
    ? e.reduce(
        (t, n) =>
          n && n.checked && !n.disabled ? { isValid: !0, value: n.value } : t,
        tv,
      )
    : tv;
function nv(e) {
  const t = e.ref;
  return eg(t)
    ? t.files
    : tg(t)
      ? hw(e.refs).value
      : cw(t)
        ? [...t.selectedOptions].map(({ value: n }) => n)
        : As(t)
          ? fw(e.refs).value
          : gw(Ye(t.value) ? e.ref.value : t.value, e);
}
var o6 = (e, t, n, r) => {
    const o = {};
    for (const i of e) {
      const s = Z(t, i);
      s && Ve(o, i, s._f);
    }
    return {
      criteriaMode: n,
      names: [...e],
      fields: o,
      shouldUseNativeValidation: r,
    };
  },
  sl = (e) => e instanceof RegExp,
  Ai = (e) =>
    Ye(e)
      ? e
      : sl(e)
        ? e.source
        : Ue(e)
          ? sl(e.value)
            ? e.value.source
            : e.value
          : e,
  rv = (e) => ({
    isOnSubmit: !e || e === gn.onSubmit,
    isOnBlur: e === gn.onBlur,
    isOnChange: e === gn.onChange,
    isOnAll: e === gn.all,
    isOnTouch: e === gn.onTouched,
  });
const ov = "AsyncFunction";
var i6 = (e) =>
    !!e &&
    !!e.validate &&
    !!(
      (hn(e.validate) && e.validate.constructor.name === ov) ||
      (Ue(e.validate) &&
        Object.values(e.validate).find((t) => t.constructor.name === ov))
    ),
  s6 = (e) =>
    e.mount &&
    (e.required ||
      e.min ||
      e.max ||
      e.maxLength ||
      e.minLength ||
      e.pattern ||
      e.validate),
  iv = (e, t, n) =>
    !n &&
    (t.watchAll ||
      t.watch.has(e) ||
      [...t.watch].some(
        (r) => e.startsWith(r) && /^\.\w+/.test(e.slice(r.length)),
      ));
const Ji = (e, t, n, r) => {
  for (const o of n || Object.keys(e)) {
    const i = Z(e, o);
    if (i) {
      const { _f: s, ...a } = i;
      if (s) {
        if (s.refs && s.refs[0] && t(s.refs[0], o) && !r) return !0;
        if (s.ref && t(s.ref, s.name) && !r) return !0;
        if (Ji(a, t)) break;
      } else if (Ue(a) && Ji(a, t)) break;
    }
  }
};
function sv(e, t, n) {
  const r = Z(e, n);
  if (r || Cc(n)) return { error: r, name: n };
  const o = n.split(".");
  for (; o.length; ) {
    const i = o.join("."),
      s = Z(t, i),
      a = Z(e, i);
    if (s && !Array.isArray(s) && n !== i) return { name: n };
    if (a && a.type) return { name: i, error: a };
    if (a && a.root && a.root.type) return { name: `${i}.root`, error: a.root };
    o.pop();
  }
  return { name: n };
}
var a6 = (e, t, n, r) => {
    n(e);
    const { name: o, ...i } = e;
    return (
      Pt(i) ||
      Object.keys(i).length >= Object.keys(t).length ||
      Object.keys(i).find((s) => t[s] === (!r || gn.all))
    );
  },
  l6 = (e, t, n) =>
    !e ||
    !t ||
    e === t ||
    Xi(e).some((r) => r && (n ? r === t : r.startsWith(t) || t.startsWith(r))),
  c6 = (e, t, n, r, o) =>
    o.isOnAll
      ? !1
      : !n && o.isOnTouch
        ? !(t || e)
        : (n ? r.isOnBlur : o.isOnBlur)
          ? !e
          : (n ? r.isOnChange : o.isOnChange)
            ? e
            : !0,
  u6 = (e, t) => !Qf(Z(e, t)).length && Ge(e, t),
  d6 = (e, t, n) => {
    const r = Xi(Z(e, n));
    return (Ve(r, "root", t[n]), Ve(e, n, r), e);
  },
  Oa = (e) => Dn(e);
function av(e, t, n = "validate") {
  if (Oa(e) || (Array.isArray(e) && e.every(Oa)) || (On(e) && !e))
    return { type: n, message: Oa(e) ? e : "", ref: t };
}
var Po = (e) => (Ue(e) && !sl(e) ? e : { value: e, message: "" }),
  lv = async (e, t, n, r, o, i) => {
    const {
        ref: s,
        refs: a,
        required: l,
        maxLength: c,
        minLength: u,
        min: d,
        max: f,
        pattern: g,
        validate: h,
        name: p,
        valueAsNumber: v,
        mount: b,
      } = e._f,
      S = Z(n, p);
    if (!b || t.has(p)) return {};
    const w = a ? a[0] : s,
      E = (V) => {
        o &&
          w.reportValidity &&
          (w.setCustomValidity(On(V) ? "" : V || ""), w.reportValidity());
      },
      R = {},
      N = tg(s),
      I = As(s),
      T = N || I,
      k =
        ((v || eg(s)) && Ye(s.value) && Ye(S)) ||
        (ol(s) && s.value === "") ||
        S === "" ||
        (Array.isArray(S) && !S.length),
      m = e6.bind(null, p, r, R),
      A = (V, P, F, $ = Yn.maxLength, H = Yn.minLength) => {
        const B = V ? P : F;
        R[p] = { type: V ? $ : H, message: B, ref: s, ...m(V ? $ : H, B) };
      };
    if (
      i
        ? !Array.isArray(S) || !S.length
        : l &&
          ((!T && (k || wt(S))) ||
            (On(S) && !S) ||
            (I && !fw(a).isValid) ||
            (N && !hw(a).isValid))
    ) {
      const { value: V, message: P } = Oa(l)
        ? { value: !!l, message: l }
        : Po(l);
      if (
        V &&
        ((R[p] = {
          type: Yn.required,
          message: P,
          ref: w,
          ...m(Yn.required, P),
        }),
        !r)
      )
        return (E(P), R);
    }
    if (!k && (!wt(d) || !wt(f))) {
      let V, P;
      const F = Po(f),
        $ = Po(d);
      if (!wt(S) && !isNaN(S)) {
        const H = s.valueAsNumber || (S && +S);
        (wt(F.value) || (V = H > F.value), wt($.value) || (P = H < $.value));
      } else {
        const H = s.valueAsDate || new Date(S),
          B = (ee) => new Date(new Date().toDateString() + " " + ee),
          j = s.type == "time",
          G = s.type == "week";
        (Dn(F.value) &&
          S &&
          (V = j ? B(S) > B(F.value) : G ? S > F.value : H > new Date(F.value)),
          Dn($.value) &&
            S &&
            (P = j
              ? B(S) < B($.value)
              : G
                ? S < $.value
                : H < new Date($.value)));
      }
      if ((V || P) && (A(!!V, F.message, $.message, Yn.max, Yn.min), !r))
        return (E(R[p].message), R);
    }
    if ((c || u) && !k && (Dn(S) || (i && Array.isArray(S)))) {
      const V = Po(c),
        P = Po(u),
        F = !wt(V.value) && S.length > +V.value,
        $ = !wt(P.value) && S.length < +P.value;
      if ((F || $) && (A(F, V.message, P.message), !r))
        return (E(R[p].message), R);
    }
    if (g && !k && Dn(S)) {
      const { value: V, message: P } = Po(g);
      if (
        sl(V) &&
        !S.match(V) &&
        ((R[p] = { type: Yn.pattern, message: P, ref: s, ...m(Yn.pattern, P) }),
        !r)
      )
        return (E(P), R);
    }
    if (h) {
      if (hn(h)) {
        const V = await h(S, n),
          P = av(V, w);
        if (P && ((R[p] = { ...P, ...m(Yn.validate, P.message) }), !r))
          return (E(P.message), R);
      } else if (Ue(h)) {
        let V = {};
        for (const P in h) {
          if (!Pt(V) && !r) break;
          const F = av(await h[P](S, n), w, P);
          F &&
            ((V = { ...F, ...m(P, F.message) }), E(F.message), r && (R[p] = V));
        }
        if (!Pt(V) && ((R[p] = { ref: w, ...V }), !r)) return R;
      }
    }
    return (E(!0), R);
  };
const f6 = {
  mode: gn.onSubmit,
  reValidateMode: gn.onChange,
  shouldFocusError: !0,
};
function g6(e = {}) {
  let t = { ...f6, ...e },
    n = {
      submitCount: 0,
      isDirty: !1,
      isReady: !1,
      isLoading: hn(t.defaultValues),
      isValidating: !1,
      isSubmitted: !1,
      isSubmitting: !1,
      isSubmitSuccessful: !1,
      isValid: !1,
      touchedFields: {},
      dirtyFields: {},
      validatingFields: {},
      errors: t.errors || {},
      disabled: t.disabled || !1,
    },
    r = {},
    o =
      Ue(t.defaultValues) || Ue(t.values)
        ? it(t.defaultValues || t.values) || {}
        : {},
    i = t.shouldUnregister ? {} : it(o),
    s = { action: !1, mount: !1, watch: !1 },
    a = {
      mount: new Set(),
      disabled: new Set(),
      unMount: new Set(),
      array: new Set(),
      watch: new Set(),
    },
    l,
    c = 0;
  const u = {
    isDirty: !1,
    dirtyFields: !1,
    validatingFields: !1,
    touchedFields: !1,
    isValidating: !1,
    isValid: !1,
    errors: !1,
  };
  let d = { ...u };
  const f = { array: Qm(), state: Qm() },
    g = t.criteriaMode === gn.all,
    h = (C) => (_) => {
      (clearTimeout(c), (c = setTimeout(C, _)));
    },
    p = async (C) => {
      if (!t.disabled && (u.isValid || d.isValid || C)) {
        const _ = t.resolver ? Pt((await I()).errors) : await k(r, !0);
        _ !== n.isValid && f.state.next({ isValid: _ });
      }
    },
    v = (C, _) => {
      !t.disabled &&
        (u.isValidating ||
          u.validatingFields ||
          d.isValidating ||
          d.validatingFields) &&
        ((C || Array.from(a.mount)).forEach((O) => {
          O && (_ ? Ve(n.validatingFields, O, _) : Ge(n.validatingFields, O));
        }),
        f.state.next({
          validatingFields: n.validatingFields,
          isValidating: !Pt(n.validatingFields),
        }));
    },
    b = (C, _ = [], O, q, W = !0, U = !0) => {
      if (q && O && !t.disabled) {
        if (((s.action = !0), U && Array.isArray(Z(r, C)))) {
          const Q = O(Z(r, C), q.argA, q.argB);
          W && Ve(r, C, Q);
        }
        if (U && Array.isArray(Z(n.errors, C))) {
          const Q = O(Z(n.errors, C), q.argA, q.argB);
          (W && Ve(n.errors, C, Q), u6(n.errors, C));
        }
        if (
          (u.touchedFields || d.touchedFields) &&
          U &&
          Array.isArray(Z(n.touchedFields, C))
        ) {
          const Q = O(Z(n.touchedFields, C), q.argA, q.argB);
          W && Ve(n.touchedFields, C, Q);
        }
        ((u.dirtyFields || d.dirtyFields) && (n.dirtyFields = _i(o, i)),
          f.state.next({
            name: C,
            isDirty: A(C, _),
            dirtyFields: n.dirtyFields,
            errors: n.errors,
            isValid: n.isValid,
          }));
      } else Ve(i, C, _);
    },
    S = (C, _) => {
      (Ve(n.errors, C, _), f.state.next({ errors: n.errors }));
    },
    w = (C) => {
      ((n.errors = C), f.state.next({ errors: n.errors, isValid: !1 }));
    },
    E = (C, _, O, q) => {
      const W = Z(r, C);
      if (W) {
        const U = Z(i, C, Ye(O) ? Z(o, C) : O);
        (Ye(U) || (q && q.defaultChecked) || _
          ? Ve(i, C, _ ? U : nv(W._f))
          : F(C, U),
          s.mount && p());
      }
    },
    R = (C, _, O, q, W) => {
      let U = !1,
        Q = !1;
      const ge = { name: C };
      if (!t.disabled) {
        if (!O || q) {
          (u.isDirty || d.isDirty) &&
            ((Q = n.isDirty),
            (n.isDirty = ge.isDirty = A()),
            (U = Q !== ge.isDirty));
          const he = Sr(Z(o, C), _);
          ((Q = !!Z(n.dirtyFields, C)),
            he ? Ge(n.dirtyFields, C) : Ve(n.dirtyFields, C, !0),
            (ge.dirtyFields = n.dirtyFields),
            (U = U || ((u.dirtyFields || d.dirtyFields) && Q !== !he)));
        }
        if (O) {
          const he = Z(n.touchedFields, C);
          he ||
            (Ve(n.touchedFields, C, O),
            (ge.touchedFields = n.touchedFields),
            (U = U || ((u.touchedFields || d.touchedFields) && he !== O)));
        }
        U && W && f.state.next(ge);
      }
      return U ? ge : {};
    },
    N = (C, _, O, q) => {
      const W = Z(n.errors, C),
        U = (u.isValid || d.isValid) && On(_) && n.isValid !== _;
      if (
        (t.delayError && O
          ? ((l = h(() => S(C, O))), l(t.delayError))
          : (clearTimeout(c),
            (l = null),
            O ? Ve(n.errors, C, O) : Ge(n.errors, C)),
        (O ? !Sr(W, O) : W) || !Pt(q) || U)
      ) {
        const Q = {
          ...q,
          ...(U && On(_) ? { isValid: _ } : {}),
          errors: n.errors,
          name: C,
        };
        ((n = { ...n, ...Q }), f.state.next(Q));
      }
    },
    I = async (C) => {
      v(C, !0);
      const _ = await t.resolver(
        i,
        t.context,
        o6(C || a.mount, r, t.criteriaMode, t.shouldUseNativeValidation),
      );
      return (v(C), _);
    },
    T = async (C) => {
      const { errors: _ } = await I(C);
      if (C)
        for (const O of C) {
          const q = Z(_, O);
          q ? Ve(n.errors, O, q) : Ge(n.errors, O);
        }
      else n.errors = _;
      return _;
    },
    k = async (C, _, O = { valid: !0 }) => {
      for (const q in C) {
        const W = C[q];
        if (W) {
          const { _f: U, ...Q } = W;
          if (U) {
            const ge = a.array.has(U.name),
              he = W._f && i6(W._f);
            he && u.validatingFields && v([q], !0);
            const yt = await lv(
              W,
              a.disabled,
              i,
              g,
              t.shouldUseNativeValidation && !_,
              ge,
            );
            if (
              (he && u.validatingFields && v([q]),
              yt[U.name] && ((O.valid = !1), _))
            )
              break;
            !_ &&
              (Z(yt, U.name)
                ? ge
                  ? d6(n.errors, yt, U.name)
                  : Ve(n.errors, U.name, yt[U.name])
                : Ge(n.errors, U.name));
          }
          !Pt(Q) && (await k(Q, _, O));
        }
      }
      return O.valid;
    },
    m = () => {
      for (const C of a.unMount) {
        const _ = Z(r, C);
        _ &&
          (_._f.refs ? _._f.refs.every((O) => !lu(O)) : !lu(_._f.ref)) &&
          ze(C);
      }
      a.unMount = new Set();
    },
    A = (C, _) => !t.disabled && (C && _ && Ve(i, C, _), !Sr(ee(), o)),
    V = (C, _, O) =>
      Zj(C, a, { ...(s.mount ? i : Ye(_) ? o : Dn(C) ? { [C]: _ } : _) }, O, _),
    P = (C) => Qf(Z(s.mount ? i : o, C, t.shouldUnregister ? Z(o, C, []) : [])),
    F = (C, _, O = {}) => {
      const q = Z(r, C);
      let W = _;
      if (q) {
        const U = q._f;
        U &&
          (!U.disabled && Ve(i, C, gw(_, U)),
          (W = ol(U.ref) && wt(_) ? "" : _),
          cw(U.ref)
            ? [...U.ref.options].forEach(
                (Q) => (Q.selected = W.includes(Q.value)),
              )
            : U.refs
              ? As(U.ref)
                ? U.refs.forEach((Q) => {
                    (!Q.defaultChecked || !Q.disabled) &&
                      (Array.isArray(W)
                        ? (Q.checked = !!W.find((ge) => ge === Q.value))
                        : (Q.checked = W === Q.value || !!W));
                  })
                : U.refs.forEach((Q) => (Q.checked = Q.value === W))
              : eg(U.ref)
                ? (U.ref.value = "")
                : ((U.ref.value = W),
                  U.ref.type || f.state.next({ name: C, values: it(i) })));
      }
      ((O.shouldDirty || O.shouldTouch) &&
        R(C, W, O.shouldTouch, O.shouldDirty, !0),
        O.shouldValidate && G(C));
    },
    $ = (C, _, O) => {
      for (const q in _) {
        if (!_.hasOwnProperty(q)) return;
        const W = _[q],
          U = C + "." + q,
          Q = Z(r, U);
        (a.array.has(C) || Ue(W) || (Q && !Q._f)) && !Zr(W)
          ? $(U, W, O)
          : F(U, W, O);
      }
    },
    H = (C, _, O = {}) => {
      const q = Z(r, C),
        W = a.array.has(C),
        U = it(_);
      (Ve(i, C, U),
        W
          ? (f.array.next({ name: C, values: it(i) }),
            (u.isDirty || u.dirtyFields || d.isDirty || d.dirtyFields) &&
              O.shouldDirty &&
              f.state.next({
                name: C,
                dirtyFields: _i(o, i),
                isDirty: A(C, U),
              }))
          : q && !q._f && !wt(U)
            ? $(C, U, O)
            : F(C, U, O),
        iv(C, a) && f.state.next({ ...n }),
        f.state.next({ name: s.mount ? C : void 0, values: it(i) }));
    },
    B = async (C) => {
      s.mount = !0;
      const _ = C.target;
      let O = _.name,
        q = !0;
      const W = Z(r, O),
        U = (he) => {
          q =
            Number.isNaN(he) ||
            (Zr(he) && isNaN(he.getTime())) ||
            Sr(he, Z(i, O, he));
        },
        Q = rv(t.mode),
        ge = rv(t.reValidateMode);
      if (W) {
        let he, yt;
        const $r = _.type ? nv(W._f) : Gj(C),
          Ft = C.type === Jm.BLUR || C.type === Jm.FOCUS_OUT,
          yi =
            (!s6(W._f) && !t.resolver && !Z(n.errors, O) && !W._f.deps) ||
            c6(Ft, Z(n.touchedFields, O), n.isSubmitted, ge, Q),
          bi = iv(O, a, Ft);
        (Ve(i, O, $r),
          Ft
            ? (W._f.onBlur && W._f.onBlur(C), l && l(0))
            : W._f.onChange && W._f.onChange(C));
        const xi = R(O, $r, Ft),
          Ec = !Pt(xi) || bi;
        if ((!Ft && f.state.next({ name: O, type: C.type, values: it(i) }), yi))
          return (
            (u.isValid || d.isValid) &&
              (t.mode === "onBlur" ? Ft && p() : Ft || p()),
            Ec && f.state.next({ name: O, ...(bi ? {} : xi) })
          );
        if ((!Ft && bi && f.state.next({ ...n }), t.resolver)) {
          const { errors: Ns } = await I([O]);
          if ((U($r), q)) {
            const Ic = sv(n.errors, r, O),
              Vs = sv(Ns, r, Ic.name || O);
            ((he = Vs.error), (O = Vs.name), (yt = Pt(Ns)));
          }
        } else
          (v([O], !0),
            (he = (await lv(W, a.disabled, i, g, t.shouldUseNativeValidation))[
              O
            ]),
            v([O]),
            U($r),
            q &&
              (he
                ? (yt = !1)
                : (u.isValid || d.isValid) && (yt = await k(r, !0))));
        q && (W._f.deps && G(W._f.deps), N(O, yt, he, xi));
      }
    },
    j = (C, _) => {
      if (Z(n.errors, _) && C.focus) return (C.focus(), 1);
    },
    G = async (C, _ = {}) => {
      let O, q;
      const W = Xi(C);
      if (t.resolver) {
        const U = await T(Ye(C) ? C : W);
        ((O = Pt(U)), (q = C ? !W.some((Q) => Z(U, Q)) : O));
      } else
        C
          ? ((q = (
              await Promise.all(
                W.map(async (U) => {
                  const Q = Z(r, U);
                  return await k(Q && Q._f ? { [U]: Q } : Q);
                }),
              )
            ).every(Boolean)),
            !(!q && !n.isValid) && p())
          : (q = O = await k(r));
      return (
        f.state.next({
          ...(!Dn(C) || ((u.isValid || d.isValid) && O !== n.isValid)
            ? {}
            : { name: C }),
          ...(t.resolver || !C ? { isValid: O } : {}),
          errors: n.errors,
        }),
        _.shouldFocus && !q && Ji(r, j, C ? W : a.mount),
        q
      );
    },
    ee = (C) => {
      const _ = { ...(s.mount ? i : o) };
      return Ye(C) ? _ : Dn(C) ? Z(_, C) : C.map((O) => Z(_, O));
    },
    ae = (C, _) => ({
      invalid: !!Z((_ || n).errors, C),
      isDirty: !!Z((_ || n).dirtyFields, C),
      error: Z((_ || n).errors, C),
      isValidating: !!Z(n.validatingFields, C),
      isTouched: !!Z((_ || n).touchedFields, C),
    }),
    K = (C) => {
      (C && Xi(C).forEach((_) => Ge(n.errors, _)),
        f.state.next({ errors: C ? n.errors : {} }));
    },
    we = (C, _, O) => {
      const q = (Z(r, C, { _f: {} })._f || {}).ref,
        W = Z(n.errors, C) || {},
        { ref: U, message: Q, type: ge, ...he } = W;
      (Ve(n.errors, C, { ...he, ..._, ref: q }),
        f.state.next({ name: C, errors: n.errors, isValid: !1 }),
        O && O.shouldFocus && q && q.focus && q.focus());
    },
    Te = (C, _) =>
      hn(C)
        ? f.state.subscribe({ next: (O) => C(V(void 0, _), O) })
        : V(C, _, !0),
    De = (C) =>
      f.state.subscribe({
        next: (_) => {
          l6(C.name, _.name, C.exact) &&
            a6(_, C.formState || u, dn, C.reRenderRoot) &&
            C.callback({ values: { ...i }, ...n, ..._ });
        },
      }).unsubscribe,
    ft = (C) => (
      (s.mount = !0),
      (d = { ...d, ...C.formState }),
      De({ ...C, formState: d })
    ),
    ze = (C, _ = {}) => {
      for (const O of C ? Xi(C) : a.mount)
        (a.mount.delete(O),
          a.array.delete(O),
          _.keepValue || (Ge(r, O), Ge(i, O)),
          !_.keepError && Ge(n.errors, O),
          !_.keepDirty && Ge(n.dirtyFields, O),
          !_.keepTouched && Ge(n.touchedFields, O),
          !_.keepIsValidating && Ge(n.validatingFields, O),
          !t.shouldUnregister && !_.keepDefaultValue && Ge(o, O));
      (f.state.next({ values: it(i) }),
        f.state.next({ ...n, ...(_.keepDirty ? { isDirty: A() } : {}) }),
        !_.keepIsValid && p());
    },
    L = ({ disabled: C, name: _ }) => {
      ((On(C) && s.mount) || C || a.disabled.has(_)) &&
        (C ? a.disabled.add(_) : a.disabled.delete(_));
    },
    M = (C, _ = {}) => {
      let O = Z(r, C);
      const q = On(_.disabled) || On(t.disabled);
      return (
        Ve(r, C, {
          ...(O || {}),
          _f: {
            ...(O && O._f ? O._f : { ref: { name: C } }),
            name: C,
            mount: !0,
            ..._,
          },
        }),
        a.mount.add(C),
        O
          ? L({ disabled: On(_.disabled) ? _.disabled : t.disabled, name: C })
          : E(C, !0, _.value),
        {
          ...(q ? { disabled: _.disabled || t.disabled } : {}),
          ...(t.progressive
            ? {
                required: !!_.required,
                min: Ai(_.min),
                max: Ai(_.max),
                minLength: Ai(_.minLength),
                maxLength: Ai(_.maxLength),
                pattern: Ai(_.pattern),
              }
            : {}),
          name: C,
          onChange: B,
          onBlur: B,
          ref: (W) => {
            if (W) {
              (M(C, _), (O = Z(r, C)));
              const U =
                  (Ye(W.value) &&
                    W.querySelectorAll &&
                    W.querySelectorAll("input,select,textarea")[0]) ||
                  W,
                Q = t6(U),
                ge = O._f.refs || [];
              if (Q ? ge.find((he) => he === U) : U === O._f.ref) return;
              (Ve(r, C, {
                _f: {
                  ...O._f,
                  ...(Q
                    ? {
                        refs: [
                          ...ge.filter(lu),
                          U,
                          ...(Array.isArray(Z(o, C)) ? [{}] : []),
                        ],
                        ref: { type: U.type, name: C },
                      }
                    : { ref: U }),
                },
              }),
                E(C, !1, void 0, U));
            } else
              ((O = Z(r, C, {})),
                O._f && (O._f.mount = !1),
                (t.shouldUnregister || _.shouldUnregister) &&
                  !(qj(a.array, C) && s.action) &&
                  a.unMount.add(C));
          },
        }
      );
    },
    Y = () => t.shouldFocusError && Ji(r, j, a.mount),
    ne = (C) => {
      On(C) &&
        (f.state.next({ disabled: C }),
        Ji(
          r,
          (_, O) => {
            const q = Z(r, O);
            q &&
              ((_.disabled = q._f.disabled || C),
              Array.isArray(q._f.refs) &&
                q._f.refs.forEach((W) => {
                  W.disabled = q._f.disabled || C;
                }));
          },
          0,
          !1,
        ));
    },
    ue = (C, _) => async (O) => {
      let q;
      O && (O.preventDefault && O.preventDefault(), O.persist && O.persist());
      let W = it(i);
      if ((f.state.next({ isSubmitting: !0 }), t.resolver)) {
        const { errors: U, values: Q } = await I();
        ((n.errors = U), (W = it(Q)));
      } else await k(r);
      if (a.disabled.size) for (const U of a.disabled) Ge(W, U);
      if ((Ge(n.errors, "root"), Pt(n.errors))) {
        f.state.next({ errors: {} });
        try {
          await C(W, O);
        } catch (U) {
          q = U;
        }
      } else (_ && (await _({ ...n.errors }, O)), Y(), setTimeout(Y));
      if (
        (f.state.next({
          isSubmitted: !0,
          isSubmitting: !1,
          isSubmitSuccessful: Pt(n.errors) && !q,
          submitCount: n.submitCount + 1,
          errors: n.errors,
        }),
        q)
      )
        throw q;
    },
    ye = (C, _ = {}) => {
      Z(r, C) &&
        (Ye(_.defaultValue)
          ? H(C, it(Z(o, C)))
          : (H(C, _.defaultValue), Ve(o, C, it(_.defaultValue))),
        _.keepTouched || Ge(n.touchedFields, C),
        _.keepDirty ||
          (Ge(n.dirtyFields, C),
          (n.isDirty = _.defaultValue ? A(C, it(Z(o, C))) : A())),
        _.keepError || (Ge(n.errors, C), u.isValid && p()),
        f.state.next({ ...n }));
    },
    Ae = (C, _ = {}) => {
      const O = C ? it(C) : o,
        q = it(O),
        W = Pt(C),
        U = W ? o : q;
      if ((_.keepDefaultValues || (o = O), !_.keepValues)) {
        if (_.keepDirtyValues) {
          const Q = new Set([...a.mount, ...Object.keys(_i(o, i))]);
          for (const ge of Array.from(Q))
            Z(n.dirtyFields, ge) ? Ve(U, ge, Z(i, ge)) : H(ge, Z(U, ge));
        } else {
          if (Jf && Ye(C))
            for (const Q of a.mount) {
              const ge = Z(r, Q);
              if (ge && ge._f) {
                const he = Array.isArray(ge._f.refs)
                  ? ge._f.refs[0]
                  : ge._f.ref;
                if (ol(he)) {
                  const yt = he.closest("form");
                  if (yt) {
                    yt.reset();
                    break;
                  }
                }
              }
            }
          if (_.keepFieldsRef) for (const Q of a.mount) H(Q, Z(U, Q));
          else r = {};
        }
        ((i = t.shouldUnregister ? (_.keepDefaultValues ? it(o) : {}) : it(U)),
          f.array.next({ values: { ...U } }),
          f.state.next({ values: { ...U } }));
      }
      ((a = {
        mount: _.keepDirtyValues ? a.mount : new Set(),
        unMount: new Set(),
        array: new Set(),
        disabled: new Set(),
        watch: new Set(),
        watchAll: !1,
        focus: "",
      }),
        (s.mount = !u.isValid || !!_.keepIsValid || !!_.keepDirtyValues),
        (s.watch = !!t.shouldUnregister),
        f.state.next({
          submitCount: _.keepSubmitCount ? n.submitCount : 0,
          isDirty: W
            ? !1
            : _.keepDirty
              ? n.isDirty
              : !!(_.keepDefaultValues && !Sr(C, o)),
          isSubmitted: _.keepIsSubmitted ? n.isSubmitted : !1,
          dirtyFields: W
            ? {}
            : _.keepDirtyValues
              ? _.keepDefaultValues && i
                ? _i(o, i)
                : n.dirtyFields
              : _.keepDefaultValues && C
                ? _i(o, C)
                : _.keepDirty
                  ? n.dirtyFields
                  : {},
          touchedFields: _.keepTouched ? n.touchedFields : {},
          errors: _.keepErrors ? n.errors : {},
          isSubmitSuccessful: _.keepIsSubmitSuccessful
            ? n.isSubmitSuccessful
            : !1,
          isSubmitting: !1,
        }));
    },
    et = (C, _) => Ae(hn(C) ? C(i) : C, _),
    nt = (C, _ = {}) => {
      const O = Z(r, C),
        q = O && O._f;
      if (q) {
        const W = q.refs ? q.refs[0] : q.ref;
        W.focus && (W.focus(), _.shouldSelect && hn(W.select) && W.select());
      }
    },
    dn = (C) => {
      n = { ...n, ...C };
    },
    Rt = {
      control: {
        register: M,
        unregister: ze,
        getFieldState: ae,
        handleSubmit: ue,
        setError: we,
        _subscribe: De,
        _runSchema: I,
        _focusError: Y,
        _getWatch: V,
        _getDirty: A,
        _setValid: p,
        _setFieldArray: b,
        _setDisabledField: L,
        _setErrors: w,
        _getFieldArray: P,
        _reset: Ae,
        _resetDefaultValues: () =>
          hn(t.defaultValues) &&
          t.defaultValues().then((C) => {
            (et(C, t.resetOptions), f.state.next({ isLoading: !1 }));
          }),
        _removeUnmounted: m,
        _disableForm: ne,
        _subjects: f,
        _proxyFormState: u,
        get _fields() {
          return r;
        },
        get _formValues() {
          return i;
        },
        get _state() {
          return s;
        },
        set _state(C) {
          s = C;
        },
        get _defaultValues() {
          return o;
        },
        get _names() {
          return a;
        },
        set _names(C) {
          a = C;
        },
        get _formState() {
          return n;
        },
        get _options() {
          return t;
        },
        set _options(C) {
          t = { ...t, ...C };
        },
      },
      subscribe: ft,
      trigger: G,
      register: M,
      handleSubmit: ue,
      watch: Te,
      setValue: H,
      getValues: ee,
      reset: et,
      resetField: ye,
      clearErrors: K,
      unregister: ze,
      setError: we,
      setFocus: nt,
      getFieldState: ae,
    };
  return { ...Rt, formControl: Rt };
}
function h6(e = {}) {
  const t = Le.useRef(void 0),
    n = Le.useRef(void 0),
    [r, o] = Le.useState({
      isDirty: !1,
      isValidating: !1,
      isLoading: hn(e.defaultValues),
      isSubmitted: !1,
      isSubmitting: !1,
      isSubmitSuccessful: !1,
      isValid: !1,
      submitCount: 0,
      dirtyFields: {},
      touchedFields: {},
      validatingFields: {},
      errors: e.errors || {},
      disabled: e.disabled || !1,
      isReady: !1,
      defaultValues: hn(e.defaultValues) ? void 0 : e.defaultValues,
    });
  if (!t.current)
    if (e.formControl)
      ((t.current = { ...e.formControl, formState: r }),
        e.defaultValues &&
          !hn(e.defaultValues) &&
          e.formControl.reset(e.defaultValues, e.resetOptions));
    else {
      const { formControl: s, ...a } = g6(e);
      t.current = { ...a, formState: r };
    }
  const i = t.current.control;
  return (
    (i._options = e),
    Qj(() => {
      const s = i._subscribe({
        formState: i._proxyFormState,
        callback: () => o({ ...i._formState }),
        reRenderRoot: !0,
      });
      return (
        o((a) => ({ ...a, isReady: !0 })),
        (i._formState.isReady = !0),
        s
      );
    }, [i]),
    Le.useEffect(() => i._disableForm(e.disabled), [i, e.disabled]),
    Le.useEffect(() => {
      (e.mode && (i._options.mode = e.mode),
        e.reValidateMode && (i._options.reValidateMode = e.reValidateMode));
    }, [i, e.mode, e.reValidateMode]),
    Le.useEffect(() => {
      e.errors && (i._setErrors(e.errors), i._focusError());
    }, [i, e.errors]),
    Le.useEffect(() => {
      e.shouldUnregister && i._subjects.state.next({ values: i._getWatch() });
    }, [i, e.shouldUnregister]),
    Le.useEffect(() => {
      if (i._proxyFormState.isDirty) {
        const s = i._getDirty();
        s !== r.isDirty && i._subjects.state.next({ isDirty: s });
      }
    }, [i, r.isDirty]),
    Le.useEffect(() => {
      e.values && !Sr(e.values, n.current)
        ? (i._reset(e.values, {
            keepFieldsRef: !0,
            ...i._options.resetOptions,
          }),
          (n.current = e.values),
          o((s) => ({ ...s })))
        : i._resetDefaultValues();
    }, [i, e.values]),
    Le.useEffect(() => {
      (i._state.mount || (i._setValid(), (i._state.mount = !0)),
        i._state.watch &&
          ((i._state.watch = !1), i._subjects.state.next({ ...i._formState })),
        i._removeUnmounted());
    }),
    (t.current.formState = Jj(r, i)),
    t.current
  );
}
const Jn = (window == null ? void 0 : window.awsmobile) || {
    aws_project_region: "us-east-2",
    aws_cognito_region: "us-east-2",
    aws_user_pools_id: "us-east-2_FyHLtOhiY",
    aws_user_pools_web_client_id: "dshos5iou44tuach7ta3ici5m",
    aws_cognito_identity_pool_id:
      "us-east-2:1d50fa9e-c72f-4a3d-acfd-7b36ea065f35",
    oauth: {
      domain: "us-east-2-fyhltohiy.auth.us-east-2.amazoncognito.com",
      scope: ["email", "openid", "profile"],
      redirectSignIn: "https://d7t9x3j66yd8k.cloudfront.net/",
      redirectSignOut: "https://d7t9x3j66yd8k.cloudfront.net/login",
      responseType: "code",
    },
    aws_cloud_logic_custom: [
      {
        name: "ActaAPI",
        endpoint: "https://q2b9avfwv5.execute-api.us-east-2.amazonaws.com/prod",
        region: "us-east-2",
      },
    ],
    aws_user_files_s3_bucket: "projectplace-dv-2025-x9a7b",
    aws_user_files_s3_bucket_region: "us-east-2",
    Auth: {
      region: "us-east-2",
      userPoolId: "us-east-2_FyHLtOhiY",
      userPoolWebClientId: "dshos5iou44tuach7ta3ici5m",
      identityPoolId: "us-east-2:1d50fa9e-c72f-4a3d-acfd-7b36ea065f35",
      identityPoolRegion: "us-east-2",
      authenticationFlowType: "USER_SRP_AUTH",
      mandatorySignIn: !0,
      Cognito: {
        userPoolId: "us-east-2_FyHLtOhiY",
        userPoolClientId: "dshos5iou44tuach7ta3ici5m",
        identityPoolId: "us-east-2:1d50fa9e-c72f-4a3d-acfd-7b36ea065f35",
        signUpVerificationMethod: "code",
        loginWith: {
          email: !0,
          phone: !1,
          username: !1,
          oauth: {
            domain: "us-east-2-fyhltohiy.auth.us-east-2.amazoncognito.com",
            scopes: ["email", "openid", "profile"],
            redirectSignIn: ["https://d7t9x3j66yd8k.cloudfront.net/"],
            redirectSignOut: ["https://d7t9x3j66yd8k.cloudfront.net/login"],
            responseType: "code",
          },
        },
        userAttributes: { email: { required: !0 } },
        passwordFormat: {
          minLength: 8,
          requireLowercase: !0,
          requireUppercase: !0,
          requireNumbers: !0,
          requireSpecialCharacters: !0,
        },
      },
    },
    API: {
      REST: {
        ActaAPI: {
          endpoint:
            "https://q2b9avfwv5.execute-api.us-east-2.amazonaws.com/prod",
          region: "us-east-2",
        },
      },
    },
    Storage: {
      S3: { bucket: "projectplace-dv-2025-x9a7b", region: "us-east-2" },
    },
  },
  p6 = Object.freeze(
    Object.defineProperty(
      { __proto__: null, default: Jn },
      Symbol.toStringTag,
      { value: "Module" },
    ),
  ),
  cv = "/assets/ikusi-logo.png";
function m6() {
  const e = Rf(),
    { register: t, handleSubmit: n, watch: r, reset: o } = h6(),
    [i, s] = x.useState("signin"),
    [a, l] = x.useState(!1),
    [c, u] = x.useState(null),
    [d, f] = x.useState(null),
    [g, h] = x.useState("");
  (x.useEffect(() => {
    document.title = "Ikusi · Acta Platform";
  }, []),
    x.useEffect(() => {
      pl().catch(() => {});
    }, []));
  const p = () => {
    (u(null), f(null));
  };
  async function v(T) {
    (l(!0), p());
    try {
      switch (i) {
        case "signin":
          await b(T);
          break;
        case "signup":
          await S(T);
          break;
        case "confirm":
          await w(T);
          break;
        case "forgot":
          await E(T);
          break;
        case "reset":
          await R(T);
          break;
      }
    } catch (k) {
      console.error("Auth error:", k);
      const m =
        k instanceof Error
          ? k.message
          : "An error occurred during authentication";
      u(m);
    } finally {
      l(!1);
    }
  }
  async function b({ email: T, password: k }) {
    var m, A, V, P;
    console.log("🔐 Starting sign-in process...");
    try {
      if (!Jn || !Jn.aws_user_pools_id || !Jn.aws_user_pools_web_client_id) {
        (console.error(
          "❌ AWS Amplify configuration not found or incomplete!",
          Jn,
        ),
          u(
            "Authentication configuration not loaded. Please refresh the page or contact support.",
          ));
        return;
      }
      console.log("📋 AWS Configuration:", {
        region: Jn.aws_project_region,
        userPoolId: Jn.aws_user_pools_id,
        identityPoolId: Jn.aws_cognito_identity_pool_id,
        oauth:
          (m = Jn.oauth) != null && m.domain ? "Configured" : "Not configured",
      });
      const F = await U1({ username: T, password: k });
      if ((console.log("🔐 Sign-in result:", F), F.isSignedIn)) {
        console.log("✅ User is signed in, fetching session...");
        const $ = await hs({ forceRefresh: !0 });
        if (
          (console.log("🎫 Session data:", {
            hasTokens: !!$.tokens,
            hasIdToken: !!((A = $.tokens) != null && A.idToken),
            hasAccessToken: !!((V = $.tokens) != null && V.accessToken),
            hasCredentials: !!$.credentials,
          }),
          $.credentials ||
            console.warn(
              "⚠️ No AWS credentials in session - Identity Pool may not be configured correctly",
            ),
          !((P = $.tokens) != null && P.idToken))
        ) {
          (console.error("❌ No ID token in session after login!"),
            u("Login successful but no token received. Please try again."));
          return;
        }
        const H = $.tokens.idToken.toString();
        console.log("🎫 Token received, length:", H.length);
        try {
          const B = H.split(".");
          if (B.length === 3) {
            const j = JSON.parse(atob(B[1]));
            console.log("🔍 Token payload:", {
              sub: j.sub,
              email: j.email,
              exp: new Date(j.exp * 1e3).toISOString(),
              groups: j["cognito:groups"] || "None",
            });
          }
        } catch {
          console.log("⚠️ Could not parse token parts");
        }
        (localStorage.setItem("ikusi.jwt", H),
          console.log("💾 Token saved to localStorage"),
          window.dispatchEvent(
            new CustomEvent("auth-success", { detail: { user: T } }),
          ),
          console.log("📢 Auth success event dispatched"),
          console.log("🔄 Navigating to dashboard..."),
          e("/dashboard"));
      } else
        (console.log("❌ Sign-in failed or incomplete"),
          u("Login was not completed. Please try again."));
    } catch (F) {
      console.error("❌ Login error:", F);
      let $ = "Login failed: Unknown error";
      (F instanceof Error &&
        (F.message.includes("UserPool")
          ? ($ =
              "Authentication service not configured correctly. Please try again later or contact support.")
          : F.message.includes("UserNotConfirmed")
            ? (($ =
                "Email not verified. Please check your email for a verification code."),
              s("confirm"),
              h(T))
            : F.message.includes("NotAuthorizedException")
              ? ($ = "Incorrect username or password.")
              : F.message.includes("UserNotFoundException")
                ? ($ = "Account not found. Please check your email address.")
                : F.message.includes("TooManyRequestsException")
                  ? ($ = "Too many attempts. Please try again later.")
                  : ($ = `Login failed: ${F.message}`)),
        u($));
    }
  }
  async function S({ email: T, password: k }) {
    (
      await q1({
        username: T,
        password: k,
        options: { userAttributes: { email: T } },
      })
    ).nextStep.signUpStep === "CONFIRM_SIGN_UP" &&
      (h(T),
      s("confirm"),
      f("Account created! Please check your email for a confirmation code."),
      o());
  }
  async function w({ confirmationCode: T }) {
    (await eR({ username: g, confirmationCode: T }),
      f("Account confirmed! You can now sign in."),
      s("signin"),
      o());
  }
  async function E({ email: T }) {
    (await X1({ username: T }),
      h(T),
      s("reset"),
      f("Password reset code sent to your email."),
      o());
  }
  async function R({ confirmationCode: T, newPassword: k }) {
    (await Q1({ username: g, confirmationCode: T, newPassword: k }),
      f(
        "Password reset successfully! You can now sign in with your new password.",
      ),
      s("signin"),
      o());
  }
  const N = pn.button,
    I = () => {
      if (a) return "Please wait...";
      switch (i) {
        case "signin":
          return "Sign In";
        case "signup":
          return "Create Account";
        case "confirm":
          return "Confirm Account";
        case "forgot":
          return "Send Reset Code";
        case "reset":
          return "Reset Password";
        default:
          return "Sign In";
      }
    };
  return y.jsx("div", {
    className:
      "min-h-screen bg-gradient-to-br from-green-100 via-teal-50 to-emerald-100 flex items-center justify-center p-6",
    children: y.jsx(pn.div, {
      initial: { opacity: 0, y: 20 },
      animate: { opacity: 1, y: 0 },
      className: "w-full max-w-md",
      children: y.jsxs("div", {
        className: "bg-white shadow-2xl rounded-3xl p-8 border border-gray-200",
        children: [
          y.jsxs("div", {
            className: "text-center mb-8",
            children: [
              y.jsx("img", {
                src: cv,
                alt: "Ikusi logo",
                className: "mx-auto h-20 w-auto mb-4 drop-shadow-sm",
                onError: (T) => {
                  (console.error("Logo failed to load:", cv),
                    (T.currentTarget.style.display = "none"));
                },
              }),
              y.jsx("h1", {
                className: "text-3xl font-bold text-gray-900 mb-2",
                children: "Acta Platform",
              }),
              y.jsx("p", {
                className: "text-sm text-teal-600 font-medium",
                children:
                  i === "confirm"
                    ? "Enter the code sent to your email"
                    : i === "forgot"
                      ? "Enter your email to reset password"
                      : i === "reset"
                        ? "Enter new password and confirmation code"
                        : "invisible technology, visible transformation",
              }),
            ],
          }),
          c &&
            y.jsx(pn.div, {
              initial: { opacity: 0, y: -10 },
              animate: { opacity: 1, y: 0 },
              className:
                "mb-4 p-3 bg-red-50 border border-red-200 text-red-700 rounded-lg text-sm",
              children: c,
            }),
          d &&
            y.jsx(pn.div, {
              initial: { opacity: 0, y: -10 },
              animate: { opacity: 1, y: 0 },
              className:
                "mb-4 p-3 bg-green-50 border border-green-200 text-green-700 rounded-lg text-sm",
              children: d,
            }),
          y.jsxs("form", {
            onSubmit: n(v),
            className: "space-y-6",
            children: [
              (i === "signin" || i === "signup" || i === "forgot") &&
                y.jsxs("div", {
                  className: "relative",
                  children: [
                    y.jsx("input", {
                      id: "email",
                      type: "email",
                      placeholder: " ",
                      required: !0,
                      ...t("email"),
                      className: `
                    peer h-12 w-full px-4 pt-4 pb-2
                    border-2 border-gray-300 rounded-xl
                    bg-white focus:border-green-500 focus:outline-none focus:ring-2 focus:ring-green-200
                    transition-all duration-200
                    text-gray-900 placeholder-transparent
                  `,
                    }),
                    y.jsx("label", {
                      htmlFor: "email",
                      className: `
                    absolute left-4 top-4 text-gray-600 text-sm font-medium
                    transition-all duration-200 pointer-events-none
                    peer-focus:top-2 peer-focus:text-xs peer-focus:text-green-600
                    peer-[:not(:placeholder-shown)]:top-2 peer-[:not(:placeholder-shown)]:text-xs
                  `,
                      children: "Email Address",
                    }),
                  ],
                }),
              (i === "signin" || i === "signup") &&
                y.jsxs("div", {
                  className: "relative",
                  children: [
                    y.jsx("input", {
                      id: "password",
                      type: "password",
                      placeholder: " ",
                      required: !0,
                      ...t("password"),
                      className: `
                    peer h-12 w-full px-4 pt-4 pb-2
                    border-2 border-gray-300 rounded-xl
                    bg-white focus:border-green-500 focus:outline-none focus:ring-2 focus:ring-green-200
                    transition-all duration-200
                    text-gray-900 placeholder-transparent
                  `,
                    }),
                    y.jsx("label", {
                      htmlFor: "password",
                      className: `
                    absolute left-4 top-4 text-gray-600 text-sm font-medium
                    transition-all duration-200 pointer-events-none
                    peer-focus:top-2 peer-focus:text-xs peer-focus:text-green-600
                    peer-[:not(:placeholder-shown)]:top-2 peer-[:not(:placeholder-shown)]:text-xs
                  `,
                      children: "Password",
                    }),
                  ],
                }),
              i === "signup" &&
                y.jsxs("div", {
                  className: "relative",
                  children: [
                    y.jsx("input", {
                      id: "confirmPassword",
                      type: "password",
                      placeholder: " ",
                      required: !0,
                      ...t("confirmPassword", {
                        validate: (T) => {
                          const k = r("password");
                          return T === k || "Passwords do not match";
                        },
                      }),
                      className: `
                    peer h-12 w-full px-4 pt-4 pb-2
                    border-2 border-gray-300 rounded-xl
                    bg-white focus:border-green-500 focus:outline-none focus:ring-2 focus:ring-green-200
                    transition-all duration-200
                    text-gray-900 placeholder-transparent
                  `,
                    }),
                    y.jsx("label", {
                      htmlFor: "confirmPassword",
                      className: `
                    absolute left-4 top-4 text-gray-600 text-sm font-medium
                    transition-all duration-200 pointer-events-none
                    peer-focus:top-2 peer-focus:text-xs peer-focus:text-green-600
                    peer-[:not(:placeholder-shown)]:top-2 peer-[:not(:placeholder-shown)]:text-xs
                  `,
                      children: "Confirm Password",
                    }),
                  ],
                }),
              (i === "confirm" || i === "reset") &&
                y.jsxs("div", {
                  className: "relative",
                  children: [
                    y.jsx("input", {
                      id: "confirmationCode",
                      type: "text",
                      placeholder: " ",
                      required: !0,
                      ...t("confirmationCode"),
                      className: `
                    peer h-12 w-full px-4 pt-4 pb-2
                    border-2 border-gray-300 rounded-xl
                    bg-white focus:border-green-500 focus:outline-none focus:ring-2 focus:ring-green-200
                    transition-all duration-200
                    text-gray-900 placeholder-transparent
                  `,
                    }),
                    y.jsx("label", {
                      htmlFor: "confirmationCode",
                      className: `
                    absolute left-4 top-4 text-gray-600 text-sm font-medium
                    transition-all duration-200 pointer-events-none
                    peer-focus:top-2 peer-focus:text-xs peer-focus:text-green-600
                    peer-[:not(:placeholder-shown)]:top-2 peer-[:not(:placeholder-shown)]:text-xs
                  `,
                      children: "Confirmation Code",
                    }),
                  ],
                }),
              i === "reset" &&
                y.jsxs("div", {
                  className: "relative",
                  children: [
                    y.jsx("input", {
                      id: "newPassword",
                      type: "password",
                      placeholder: " ",
                      required: !0,
                      ...t("newPassword"),
                      className: `
                    peer h-12 w-full px-4 pt-4 pb-2
                    border-2 border-gray-300 rounded-xl
                    bg-white focus:border-green-500 focus:outline-none focus:ring-2 focus:ring-green-200
                    transition-all duration-200
                    text-gray-900 placeholder-transparent
                  `,
                    }),
                    y.jsx("label", {
                      htmlFor: "newPassword",
                      className: `
                    absolute left-4 top-4 text-gray-600 text-sm font-medium
                    transition-all duration-200 pointer-events-none
                    peer-focus:top-2 peer-focus:text-xs peer-focus:text-green-600
                    peer-[:not(:placeholder-shown)]:top-2 peer-[:not(:placeholder-shown)]:text-xs
                  `,
                      children: "New Password",
                    }),
                  ],
                }),
              y.jsx(N, {
                whileHover: { scale: 1.02, y: -2 },
                whileTap: { scale: 0.98 },
                type: "submit",
                disabled: a,
                className: `
                w-full h-12 
                bg-gradient-to-r from-green-500 to-teal-500
                hover:from-green-600 hover:to-teal-600
                disabled:from-gray-400 disabled:to-gray-500
                disabled:cursor-not-allowed
                text-white font-semibold rounded-xl
                focus:outline-none focus:ring-2 focus:ring-green-300 focus:ring-offset-2
                transition-all duration-200
                shadow-lg hover:shadow-xl
              `,
                children: I(),
              }),
            ],
          }),
          y.jsxs("div", {
            className: "mt-6 space-y-4",
            children: [
              i === "signin" &&
                y.jsxs("div", {
                  className: "flex flex-col space-y-2 text-sm text-center",
                  children: [
                    y.jsx("button", {
                      type: "button",
                      onClick: () => {
                        (s("forgot"), p(), o());
                      },
                      className:
                        "text-teal-600 hover:text-teal-800 font-medium transition-colors",
                      children: "Forgot your password?",
                    }),
                    y.jsxs("div", {
                      className: "text-gray-600",
                      children: [
                        "Don't have an account?",
                        " ",
                        y.jsx("button", {
                          type: "button",
                          onClick: () => {
                            (s("signup"), p(), o());
                          },
                          className:
                            "text-teal-600 hover:text-teal-800 font-medium transition-colors",
                          children: "Create Account",
                        }),
                      ],
                    }),
                  ],
                }),
              i === "signup" &&
                y.jsxs("div", {
                  className: "text-sm text-center text-gray-600",
                  children: [
                    "Already have an account?",
                    " ",
                    y.jsx("button", {
                      type: "button",
                      onClick: () => {
                        (s("signin"), p(), o());
                      },
                      className:
                        "text-teal-600 hover:text-teal-800 font-medium transition-colors",
                      children: "Sign In",
                    }),
                  ],
                }),
              (i === "confirm" || i === "forgot" || i === "reset") &&
                y.jsx("div", {
                  className: "text-sm text-center text-gray-600",
                  children: y.jsx("button", {
                    type: "button",
                    onClick: () => {
                      (s("signin"), p(), o());
                    },
                    className:
                      "text-teal-600 hover:text-teal-800 font-medium transition-colors",
                    children: "← Back to Sign In",
                  }),
                }),
            ],
          }),
          y.jsx("div", {
            className: "mt-6 text-center",
            children: y.jsx("p", {
              className: "text-xs text-gray-500",
              children:
                i === "signin"
                  ? "🔐 Enter your credentials to continue"
                  : i === "signup"
                    ? "✨ Create your account to get started"
                    : i === "confirm"
                      ? "📧 Check your email for the confirmation code"
                      : i === "forgot"
                        ? "🔑 We will send you a password reset code"
                        : "🛡️ Enter your new password",
            }),
          }),
        ],
      }),
    }),
  });
}
const v6 = {
  BASE_URL: "/",
  DEV: !1,
  MODE: "production",
  PROD: !0,
  SSR: !1,
  VITE_API_BASE_URL:
    "https://q2b9avfwv5.execute-api.us-east-2.amazonaws.com/prod",
  VITE_API_GATEWAY_ID: "q2b9avfwv5",
  VITE_API_STAGE: "prod",
  VITE_APP_DOMAIN: "d7t9x3j66yd8k.cloudfront.net",
  VITE_APP_NAME: "Ikusi · Acta Platform",
  VITE_AUTH_DEBUG: "false",
  VITE_CLOUDFRONT_DISTRIBUTION_ID: "EPQU7PVDLQXUA",
  VITE_CLOUDFRONT_DOMAIN: "d7t9x3j66yd8k.cloudfront.net",
  VITE_CLOUDFRONT_URL: "https://d7t9x3j66yd8k.cloudfront.net",
  VITE_COGNITO_CLIENT_ID: "dshos5iou44tuach7ta3ici5m",
  VITE_COGNITO_DOMAIN: "us-east-2fyhltohiy.auth.us-east-2.amazoncognito.com",
  VITE_COGNITO_POOL_ID: "us-east-2_FyHLtOhiY",
  VITE_COGNITO_REGION: "us-east-2",
  VITE_COGNITO_USER_POOL_ID: "us-east-2_FyHLtOhiY",
  VITE_COGNITO_WEB_CLIENT: "dshos5iou44tuach7ta3ici5m",
  VITE_COGNITO_WEB_CLIENT_ID: "dshos5iou44tuach7ta3ici5m",
  VITE_COUNTER: "3",
  VITE_S3_BUCKET: "projectplace-dv-2025-x9a7b",
  VITE_S3_REGION: "us-east-2",
  VITE_SKIP_AUTH: "false",
  VITE_USE_MOCK_API: "false",
};
console.log("VITE ENV:", v6);
function y6() {
  (HR(), WR(30));
  const [e, t] = x.useState(!1),
    [n, r] = x.useState(!1);
  if (
    (x.useEffect(() => {
      document.title = "Ikusi · Acta Platform";
    }, []),
    x.useEffect(() => {
      const i = async () => {
        var l;
        console.log("🔍 App: Verifying auth status...");
        try {
          const c = localStorage.getItem("ikusi.jwt");
          if ((console.log("🔍 App: Local token exists:", !!c), !c)) {
            (console.log("🔍 App: No local token, setting auth to false"),
              r(!1),
              t(!0));
            return;
          }
          console.log("🔍 App: Fetching AWS session...");
          const { tokens: u } = await hs(),
            d =
              ((l = u == null ? void 0 : u.idToken) == null
                ? void 0
                : l.toString()) ?? "";
          (console.log("🔍 App: AWS token exists:", !!d),
            d
              ? (localStorage.setItem("ikusi.jwt", d),
                console.log("✅ App: Setting auth to true"),
                r(!0))
              : (console.log("❌ App: No AWS token, clearing auth"),
                localStorage.removeItem("ikusi.jwt"),
                r(!1)));
        } catch (c) {
          (console.log("❌ App: Auth verification failed:", c),
            localStorage.removeItem("ikusi.jwt"),
            r(!1));
        } finally {
          (console.log("🔍 App: Auth check complete, setting checked to true"),
            t(!0));
        }
      };
      i();
      const s = () => {
          localStorage.getItem("ikusi.jwt") || r(!1);
        },
        a = () => {
          (console.log("📢 App: Received auth-success event, re-verifying..."),
            i());
        };
      return (
        window.addEventListener("storage", s),
        window.addEventListener("auth-success", a),
        () => {
          (window.removeEventListener("storage", s),
            window.removeEventListener("auth-success", a));
        }
      );
    }, []),
    !e)
  )
    return null;
  const o = y.jsx(G5, {
    children: y.jsxs(U5, {
      children: [
        y.jsx(Ao, {
          path: "/",
          element: y.jsx(Pi, { to: n ? "/dashboard" : "/login" }),
        }),
        y.jsx(Ao, {
          path: "/login",
          element: n ? y.jsx(Pi, { to: "/dashboard" }) : y.jsx(m6, {}),
        }),
        y.jsx(Ao, {
          path: "/dashboard",
          element: n ? y.jsx(Hj, {}) : y.jsx(Pi, { to: "/login" }),
        }),
        y.jsx(Ao, {
          path: "/admin",
          element: n ? y.jsx(qB, {}) : y.jsx(Pi, { to: "/login" }),
        }),
        y.jsx(Ao, {
          path: "/profile",
          element: n
            ? y.jsxs("div", {
                className:
                  "min-h-screen bg-gradient-to-br from-green-100 via-teal-50 to-emerald-100",
                children: [
                  y.jsx(kf, {}),
                  y.jsx("div", {
                    className: "py-12 px-4",
                    children: y.jsxs("div", {
                      className:
                        "max-w-md mx-auto bg-white rounded-lg shadow-md p-6",
                      children: [
                        y.jsx("h1", {
                          className: "text-2xl font-bold text-gray-900 mb-4",
                          children: "Profile",
                        }),
                        y.jsx("p", {
                          className: "text-gray-600 mb-4",
                          children: "User profile page (Coming soon)",
                        }),
                        y.jsx("button", {
                          onClick: () => window.history.back(),
                          className:
                            "px-4 py-2 bg-green-500 text-white rounded hover:bg-green-600 transition-colors",
                          children: "Go Back",
                        }),
                      ],
                    }),
                  }),
                ],
              })
            : y.jsx(Pi, { to: "/login" }),
        }),
      ],
    }),
  });
  return y.jsxs(qk, {
    value: c$,
    children: [
      o,
      y.jsx(Z$, {
        position: "top-right",
        toastOptions: {
          duration: 4e3,
          style: { background: "#363636", color: "#fff" },
          success: {
            duration: 3e3,
            iconTheme: { primary: "#10b981", secondary: "#fff" },
          },
          error: {
            duration: 5e3,
            iconTheme: { primary: "#ef4444", secondary: "#fff" },
          },
        },
      }),
      !1,
    ],
  });
}
let cu = !1;
const b6 = async () => {
  var t;
  if (cu) {
    console.log("ℹ️ Amplify already configured");
    return;
  }
  console.log("🔧 Attempting to configure Amplify...");
  let e = 0;
  for (; !window.awsmobile && e < 50; )
    (await new Promise((n) => setTimeout(n, 100)), e++);
  if (window.awsmobile) {
    (console.log("✅ AWS config found, configuring Amplify:", window.awsmobile),
      !((t = window.awsmobile.Auth) != null && t.identityPoolId) &&
        !window.awsmobile.aws_cognito_identity_pool_id &&
        console.warn(
          "⚠️ Identity Pool ID not found in window.awsmobile, might affect DynamoDB access",
        ),
      (!window.awsmobile.Auth || !window.awsmobile.Auth.Cognito) &&
        console.warn("⚠️ Auth configuration incomplete in window.awsmobile"));
    try {
      (Sh.configure(window.awsmobile),
        (cu = !0),
        console.log(
          "✅ Amplify configured successfully with both User Pool and Identity Pool",
        ));
    } catch (n) {
      console.error("❌ Failed to configure Amplify:", n);
    }
  } else {
    console.error("❌ aws-exports.js failed to load after 5 seconds");
    try {
      console.log("⚠️ Falling back to imported aws-exports.js...");
      const n = await Sy(() => Promise.resolve().then(() => p6), void 0);
      (Sh.configure(n.default),
        (cu = !0),
        console.log("✅ Amplify configured with imported aws-exports.js"));
    } catch (n) {
      console.error("❌ Failed to configure Amplify:", n);
    }
  }
};
b6().then(() => {
  xu.createRoot(document.getElementById("root")).render(
    y.jsx(Le.StrictMode, { children: y.jsx(y6, {}) }),
  );
});
window.getSummary = f0;
window.getTimeline = g0;
window.getDownloadUrl = h0;
window.sendApprovalEmail = Dd;
window.getProjectsByPM = ml;
window.getAllProjects = p0;
window.fetchWrapper = xR;
window.getAuthToken = Nd;
